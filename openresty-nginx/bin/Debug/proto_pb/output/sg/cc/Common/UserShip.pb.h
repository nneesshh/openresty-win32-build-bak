// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserShip.proto

#ifndef PROTOBUF_INCLUDED_UserShip_2eproto
#define PROTOBUF_INCLUDED_UserShip_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "BaseStruct.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_UserShip_2eproto 

namespace protobuf_UserShip_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_UserShip_2eproto
namespace sg {
class Archive;
class ArchiveDefaultTypeInternal;
extern ArchiveDefaultTypeInternal _Archive_default_instance_;
class Region;
class RegionDefaultTypeInternal;
extern RegionDefaultTypeInternal _Region_default_instance_;
class UserRegionService;
class UserRegionServiceDefaultTypeInternal;
extern UserRegionServiceDefaultTypeInternal _UserRegionService_default_instance_;
class UserRegionService_UserRegionRequest;
class UserRegionService_UserRegionRequestDefaultTypeInternal;
extern UserRegionService_UserRegionRequestDefaultTypeInternal _UserRegionService_UserRegionRequest_default_instance_;
class UserRegionService_UserRegionResponse;
class UserRegionService_UserRegionResponseDefaultTypeInternal;
extern UserRegionService_UserRegionResponseDefaultTypeInternal _UserRegionService_UserRegionResponse_default_instance_;
}  // namespace sg
namespace google {
namespace protobuf {
template<> ::sg::Archive* Arena::CreateMaybeMessage<::sg::Archive>(Arena*);
template<> ::sg::Region* Arena::CreateMaybeMessage<::sg::Region>(Arena*);
template<> ::sg::UserRegionService* Arena::CreateMaybeMessage<::sg::UserRegionService>(Arena*);
template<> ::sg::UserRegionService_UserRegionRequest* Arena::CreateMaybeMessage<::sg::UserRegionService_UserRegionRequest>(Arena*);
template<> ::sg::UserRegionService_UserRegionResponse* Arena::CreateMaybeMessage<::sg::UserRegionService_UserRegionResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sg {

enum UserRegionService_SHIP_CMD {
  UserRegionService_SHIP_CMD_QUERY = 1,
  UserRegionService_SHIP_CMD_CHANGE = 2,
  UserRegionService_SHIP_CMD_REBUILD = 3,
  UserRegionService_SHIP_CMD_QUERY_MODEL = 4,
  UserRegionService_SHIP_CMD_QUERY_SAVED = 5,
  UserRegionService_SHIP_CMD_ARCHIVE = 6,
  UserRegionService_SHIP_CMD_UNLOCK_ROOM = 7,
  UserRegionService_SHIP_CMD_UNLOCK_MODEL = 8,
  UserRegionService_SHIP_CMD_QUERY_REACH_TIME = 9,
  UserRegionService_SHIP_CMD_SET_REACH_TIME = 10,
  UserRegionService_SHIP_CMD_BATCH_QUERY = 11,
  UserRegionService_SHIP_CMD_QUERY_ROOM_MODEL = 12,
  UserRegionService_SHIP_CMD_UNLOCK_ROOM_MODEL = 13
};
bool UserRegionService_SHIP_CMD_IsValid(int value);
const UserRegionService_SHIP_CMD UserRegionService_SHIP_CMD_SHIP_CMD_MIN = UserRegionService_SHIP_CMD_QUERY;
const UserRegionService_SHIP_CMD UserRegionService_SHIP_CMD_SHIP_CMD_MAX = UserRegionService_SHIP_CMD_UNLOCK_ROOM_MODEL;
const int UserRegionService_SHIP_CMD_SHIP_CMD_ARRAYSIZE = UserRegionService_SHIP_CMD_SHIP_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserRegionService_SHIP_CMD_descriptor();
inline const ::std::string& UserRegionService_SHIP_CMD_Name(UserRegionService_SHIP_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserRegionService_SHIP_CMD_descriptor(), value);
}
inline bool UserRegionService_SHIP_CMD_Parse(
    const ::std::string& name, UserRegionService_SHIP_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserRegionService_SHIP_CMD>(
    UserRegionService_SHIP_CMD_descriptor(), name, value);
}
// ===================================================================

class Archive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.Archive) */ {
 public:
  Archive();
  virtual ~Archive();

  Archive(const Archive& from);

  inline Archive& operator=(const Archive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Archive(Archive&& from) noexcept
    : Archive() {
    *this = ::std::move(from);
  }

  inline Archive& operator=(Archive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Archive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Archive* internal_default_instance() {
    return reinterpret_cast<const Archive*>(
               &_Archive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Archive* other);
  void Swap(Archive* other);
  friend void swap(Archive& a, Archive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Archive* New() const final {
    return CreateMaybeMessage<Archive>(NULL);
  }

  Archive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Archive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Archive& from);
  void MergeFrom(const Archive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Archive* other);
  protected:
  explicit Archive(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes ship_tiles = 6;
  bool has_ship_tiles() const;
  void clear_ship_tiles();
  static const int kShipTilesFieldNumber = 6;
  const ::std::string& ship_tiles() const;
  void set_ship_tiles(const ::std::string& value);
  #if LANG_CXX11
  void set_ship_tiles(::std::string&& value);
  #endif
  void set_ship_tiles(const char* value);
  void set_ship_tiles(const void* value, size_t size);
  ::std::string* mutable_ship_tiles();
  ::std::string* release_ship_tiles();
  void set_allocated_ship_tiles(::std::string* ship_tiles);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ship_tiles();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ship_tiles(
      ::std::string* ship_tiles);

  // required bytes facilitys = 7;
  bool has_facilitys() const;
  void clear_facilitys();
  static const int kFacilitysFieldNumber = 7;
  const ::std::string& facilitys() const;
  void set_facilitys(const ::std::string& value);
  #if LANG_CXX11
  void set_facilitys(::std::string&& value);
  #endif
  void set_facilitys(const char* value);
  void set_facilitys(const void* value, size_t size);
  ::std::string* mutable_facilitys();
  ::std::string* release_facilitys();
  void set_allocated_facilitys(::std::string* facilitys);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_facilitys();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_facilitys(
      ::std::string* facilitys);

  // required bytes devices = 8;
  bool has_devices() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 8;
  const ::std::string& devices() const;
  void set_devices(const ::std::string& value);
  #if LANG_CXX11
  void set_devices(::std::string&& value);
  #endif
  void set_devices(const char* value);
  void set_devices(const void* value, size_t size);
  ::std::string* mutable_devices();
  ::std::string* release_devices();
  void set_allocated_devices(::std::string* devices);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_devices();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_devices(
      ::std::string* devices);

  // required int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required int32 ship_model = 5;
  bool has_ship_model() const;
  void clear_ship_model();
  static const int kShipModelFieldNumber = 5;
  ::google::protobuf::int32 ship_model() const;
  void set_ship_model(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.Archive)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_state();
  void clear_has_state();
  void set_has_name();
  void clear_has_name();
  void set_has_ship_model();
  void clear_has_ship_model();
  void set_has_ship_tiles();
  void clear_has_ship_tiles();
  void set_has_facilitys();
  void clear_has_facilitys();
  void set_has_devices();
  void clear_has_devices();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ship_tiles_;
  ::google::protobuf::internal::ArenaStringPtr facilitys_;
  ::google::protobuf::internal::ArenaStringPtr devices_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 ship_model_;
  friend struct ::protobuf_UserShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Region : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.Region) */ {
 public:
  Region();
  virtual ~Region();

  Region(const Region& from);

  inline Region& operator=(const Region& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Region(Region&& from) noexcept
    : Region() {
    *this = ::std::move(from);
  }

  inline Region& operator=(Region&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Region& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Region* internal_default_instance() {
    return reinterpret_cast<const Region*>(
               &_Region_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(Region* other);
  void Swap(Region* other);
  friend void swap(Region& a, Region& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Region* New() const final {
    return CreateMaybeMessage<Region>(NULL);
  }

  Region* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Region>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Region& from);
  void MergeFrom(const Region& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Region* other);
  protected:
  explicit Region(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.UserRoom rooms = 7;
  int rooms_size() const;
  void clear_rooms();
  static const int kRoomsFieldNumber = 7;
  ::sg::UserRoom* mutable_rooms(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::UserRoom >*
      mutable_rooms();
  const ::sg::UserRoom& rooms(int index) const;
  ::sg::UserRoom* add_rooms();
  const ::google::protobuf::RepeatedPtrField< ::sg::UserRoom >&
      rooms() const;

  // optional bytes id_str = 8;
  bool has_id_str() const;
  void clear_id_str();
  static const int kIdStrFieldNumber = 8;
  const ::std::string& id_str() const;
  void set_id_str(const ::std::string& value);
  #if LANG_CXX11
  void set_id_str(::std::string&& value);
  #endif
  void set_id_str(const char* value);
  void set_id_str(const void* value, size_t size);
  ::std::string* mutable_id_str();
  ::std::string* release_id_str();
  void set_allocated_id_str(::std::string* id_str);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_id_str();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id_str(
      ::std::string* id_str);

  // optional bytes type_str = 9;
  bool has_type_str() const;
  void clear_type_str();
  static const int kTypeStrFieldNumber = 9;
  const ::std::string& type_str() const;
  void set_type_str(const ::std::string& value);
  #if LANG_CXX11
  void set_type_str(::std::string&& value);
  #endif
  void set_type_str(const char* value);
  void set_type_str(const void* value, size_t size);
  ::std::string* mutable_type_str();
  ::std::string* release_type_str();
  void set_allocated_type_str(::std::string* type_str);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_type_str();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_type_str(
      ::std::string* type_str);

  // optional .sg.RegionState region_state = 6;
  bool has_region_state() const;
  void clear_region_state();
  static const int kRegionStateFieldNumber = 6;
  private:
  const ::sg::RegionState& _internal_region_state() const;
  public:
  const ::sg::RegionState& region_state() const;
  ::sg::RegionState* release_region_state();
  ::sg::RegionState* mutable_region_state();
  void set_allocated_region_state(::sg::RegionState* region_state);
  void unsafe_arena_set_allocated_region_state(
      ::sg::RegionState* region_state);
  ::sg::RegionState* unsafe_arena_release_region_state();

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 model_id = 2;
  bool has_model_id() const;
  void clear_model_id();
  static const int kModelIdFieldNumber = 2;
  ::google::protobuf::int32 model_id() const;
  void set_model_id(::google::protobuf::int32 value);

  // optional int32 fast_finish_times = 3;
  bool has_fast_finish_times() const;
  void clear_fast_finish_times();
  static const int kFastFinishTimesFieldNumber = 3;
  ::google::protobuf::int32 fast_finish_times() const;
  void set_fast_finish_times(::google::protobuf::int32 value);

  // optional int32 max_fast_finish_times = 4;
  bool has_max_fast_finish_times() const;
  void clear_max_fast_finish_times();
  static const int kMaxFastFinishTimesFieldNumber = 4;
  ::google::protobuf::int32 max_fast_finish_times() const;
  void set_max_fast_finish_times(::google::protobuf::int32 value);

  // optional sfixed64 first_reach_time = 10;
  bool has_first_reach_time() const;
  void clear_first_reach_time();
  static const int kFirstReachTimeFieldNumber = 10;
  ::google::protobuf::int64 first_reach_time() const;
  void set_first_reach_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sg.Region)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_model_id();
  void clear_has_model_id();
  void set_has_fast_finish_times();
  void clear_has_fast_finish_times();
  void set_has_max_fast_finish_times();
  void clear_has_max_fast_finish_times();
  void set_has_region_state();
  void clear_has_region_state();
  void set_has_id_str();
  void clear_has_id_str();
  void set_has_type_str();
  void clear_has_type_str();
  void set_has_first_reach_time();
  void clear_has_first_reach_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::UserRoom > rooms_;
  ::google::protobuf::internal::ArenaStringPtr id_str_;
  ::google::protobuf::internal::ArenaStringPtr type_str_;
  ::sg::RegionState* region_state_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 model_id_;
  ::google::protobuf::int32 fast_finish_times_;
  ::google::protobuf::int32 max_fast_finish_times_;
  ::google::protobuf::int64 first_reach_time_;
  friend struct ::protobuf_UserShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserRegionService_UserRegionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserRegionService.UserRegionRequest) */ {
 public:
  UserRegionService_UserRegionRequest();
  virtual ~UserRegionService_UserRegionRequest();

  UserRegionService_UserRegionRequest(const UserRegionService_UserRegionRequest& from);

  inline UserRegionService_UserRegionRequest& operator=(const UserRegionService_UserRegionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserRegionService_UserRegionRequest(UserRegionService_UserRegionRequest&& from) noexcept
    : UserRegionService_UserRegionRequest() {
    *this = ::std::move(from);
  }

  inline UserRegionService_UserRegionRequest& operator=(UserRegionService_UserRegionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRegionService_UserRegionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserRegionService_UserRegionRequest* internal_default_instance() {
    return reinterpret_cast<const UserRegionService_UserRegionRequest*>(
               &_UserRegionService_UserRegionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(UserRegionService_UserRegionRequest* other);
  void Swap(UserRegionService_UserRegionRequest* other);
  friend void swap(UserRegionService_UserRegionRequest& a, UserRegionService_UserRegionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserRegionService_UserRegionRequest* New() const final {
    return CreateMaybeMessage<UserRegionService_UserRegionRequest>(NULL);
  }

  UserRegionService_UserRegionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserRegionService_UserRegionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserRegionService_UserRegionRequest& from);
  void MergeFrom(const UserRegionService_UserRegionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserRegionService_UserRegionRequest* other);
  protected:
  explicit UserRegionService_UserRegionRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.Facility devices = 9;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 9;
  ::sg::Facility* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Facility >*
      mutable_devices();
  const ::sg::Facility& devices(int index) const;
  ::sg::Facility* add_devices();
  const ::google::protobuf::RepeatedPtrField< ::sg::Facility >&
      devices() const;

  // repeated int32 regions = 15;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 15;
  ::google::protobuf::int32 regions(int index) const;
  void set_regions(int index, ::google::protobuf::int32 value);
  void add_regions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      regions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_regions();

  // optional bytes tiles = 4;
  bool has_tiles() const;
  void clear_tiles();
  static const int kTilesFieldNumber = 4;
  const ::std::string& tiles() const;
  void set_tiles(const ::std::string& value);
  #if LANG_CXX11
  void set_tiles(::std::string&& value);
  #endif
  void set_tiles(const char* value);
  void set_tiles(const void* value, size_t size);
  ::std::string* mutable_tiles();
  ::std::string* release_tiles();
  void set_allocated_tiles(::std::string* tiles);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_tiles();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_tiles(
      ::std::string* tiles);

  // optional bytes facility = 5;
  bool has_facility() const;
  void clear_facility();
  static const int kFacilityFieldNumber = 5;
  const ::std::string& facility() const;
  void set_facility(const ::std::string& value);
  #if LANG_CXX11
  void set_facility(::std::string&& value);
  #endif
  void set_facility(const char* value);
  void set_facility(const void* value, size_t size);
  ::std::string* mutable_facility();
  ::std::string* release_facility();
  void set_allocated_facility(::std::string* facility);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_facility();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_facility(
      ::std::string* facility);

  // optional bytes archive_name = 12;
  bool has_archive_name() const;
  void clear_archive_name();
  static const int kArchiveNameFieldNumber = 12;
  const ::std::string& archive_name() const;
  void set_archive_name(const ::std::string& value);
  #if LANG_CXX11
  void set_archive_name(::std::string&& value);
  #endif
  void set_archive_name(const char* value);
  void set_archive_name(const void* value, size_t size);
  ::std::string* mutable_archive_name();
  ::std::string* release_archive_name();
  void set_allocated_archive_name(::std::string* archive_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_archive_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_archive_name(
      ::std::string* archive_name);

  // optional int32 region = 2;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 2;
  ::google::protobuf::int32 region() const;
  void set_region(::google::protobuf::int32 value);

  // optional int32 ship_model = 3;
  bool has_ship_model() const;
  void clear_ship_model();
  static const int kShipModelFieldNumber = 3;
  ::google::protobuf::int32 ship_model() const;
  void set_ship_model(::google::protobuf::int32 value);

  // optional int32 archive_id = 11;
  bool has_archive_id() const;
  void clear_archive_id();
  static const int kArchiveIdFieldNumber = 11;
  ::google::protobuf::int32 archive_id() const;
  void set_archive_id(::google::protobuf::int32 value);

  // optional int32 unlock_room = 13;
  bool has_unlock_room() const;
  void clear_unlock_room();
  static const int kUnlockRoomFieldNumber = 13;
  ::google::protobuf::int32 unlock_room() const;
  void set_unlock_room(::google::protobuf::int32 value);

  // optional int32 unlock_room_model = 17;
  bool has_unlock_room_model() const;
  void clear_unlock_room_model();
  static const int kUnlockRoomModelFieldNumber = 17;
  ::google::protobuf::int32 unlock_room_model() const;
  void set_unlock_room_model(::google::protobuf::int32 value);

  // optional int32 unlock_model = 14;
  bool has_unlock_model() const;
  void clear_unlock_model();
  static const int kUnlockModelFieldNumber = 14;
  ::google::protobuf::int32 unlock_model() const;
  void set_unlock_model(::google::protobuf::int32 value);

  // optional bool simple = 16;
  bool has_simple() const;
  void clear_simple();
  static const int kSimpleFieldNumber = 16;
  bool simple() const;
  void set_simple(bool value);

  // required .sg.UserRegionService.SHIP_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserRegionService_SHIP_CMD cmd() const;
  void set_cmd(::sg::UserRegionService_SHIP_CMD value);

  // @@protoc_insertion_point(class_scope:sg.UserRegionService.UserRegionRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_region();
  void clear_has_region();
  void set_has_ship_model();
  void clear_has_ship_model();
  void set_has_tiles();
  void clear_has_tiles();
  void set_has_facility();
  void clear_has_facility();
  void set_has_archive_id();
  void clear_has_archive_id();
  void set_has_archive_name();
  void clear_has_archive_name();
  void set_has_unlock_room();
  void clear_has_unlock_room();
  void set_has_unlock_model();
  void clear_has_unlock_model();
  void set_has_simple();
  void clear_has_simple();
  void set_has_unlock_room_model();
  void clear_has_unlock_room_model();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::Facility > devices_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > regions_;
  ::google::protobuf::internal::ArenaStringPtr tiles_;
  ::google::protobuf::internal::ArenaStringPtr facility_;
  ::google::protobuf::internal::ArenaStringPtr archive_name_;
  ::google::protobuf::int32 region_;
  ::google::protobuf::int32 ship_model_;
  ::google::protobuf::int32 archive_id_;
  ::google::protobuf::int32 unlock_room_;
  ::google::protobuf::int32 unlock_room_model_;
  ::google::protobuf::int32 unlock_model_;
  bool simple_;
  int cmd_;
  friend struct ::protobuf_UserShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserRegionService_UserRegionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserRegionService.UserRegionResponse) */ {
 public:
  UserRegionService_UserRegionResponse();
  virtual ~UserRegionService_UserRegionResponse();

  UserRegionService_UserRegionResponse(const UserRegionService_UserRegionResponse& from);

  inline UserRegionService_UserRegionResponse& operator=(const UserRegionService_UserRegionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserRegionService_UserRegionResponse(UserRegionService_UserRegionResponse&& from) noexcept
    : UserRegionService_UserRegionResponse() {
    *this = ::std::move(from);
  }

  inline UserRegionService_UserRegionResponse& operator=(UserRegionService_UserRegionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRegionService_UserRegionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserRegionService_UserRegionResponse* internal_default_instance() {
    return reinterpret_cast<const UserRegionService_UserRegionResponse*>(
               &_UserRegionService_UserRegionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(UserRegionService_UserRegionResponse* other);
  void Swap(UserRegionService_UserRegionResponse* other);
  friend void swap(UserRegionService_UserRegionResponse& a, UserRegionService_UserRegionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserRegionService_UserRegionResponse* New() const final {
    return CreateMaybeMessage<UserRegionService_UserRegionResponse>(NULL);
  }

  UserRegionService_UserRegionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserRegionService_UserRegionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserRegionService_UserRegionResponse& from);
  void MergeFrom(const UserRegionService_UserRegionResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserRegionService_UserRegionResponse* other);
  protected:
  explicit UserRegionService_UserRegionResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.Facility devices = 9;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 9;
  ::sg::Facility* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Facility >*
      mutable_devices();
  const ::sg::Facility& devices(int index) const;
  ::sg::Facility* add_devices();
  const ::google::protobuf::RepeatedPtrField< ::sg::Facility >&
      devices() const;

  // repeated int32 model_list = 10;
  int model_list_size() const;
  void clear_model_list();
  static const int kModelListFieldNumber = 10;
  ::google::protobuf::int32 model_list(int index) const;
  void set_model_list(int index, ::google::protobuf::int32 value);
  void add_model_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      model_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_model_list();

  // repeated .sg.Archive archive_list = 11;
  int archive_list_size() const;
  void clear_archive_list();
  static const int kArchiveListFieldNumber = 11;
  ::sg::Archive* mutable_archive_list(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Archive >*
      mutable_archive_list();
  const ::sg::Archive& archive_list(int index) const;
  ::sg::Archive* add_archive_list();
  const ::google::protobuf::RepeatedPtrField< ::sg::Archive >&
      archive_list() const;

  // repeated .sg.Region regions = 14;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 14;
  ::sg::Region* mutable_regions(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Region >*
      mutable_regions();
  const ::sg::Region& regions(int index) const;
  ::sg::Region* add_regions();
  const ::google::protobuf::RepeatedPtrField< ::sg::Region >&
      regions() const;

  // repeated int32 unlock_room = 15;
  int unlock_room_size() const;
  void clear_unlock_room();
  static const int kUnlockRoomFieldNumber = 15;
  ::google::protobuf::int32 unlock_room(int index) const;
  void set_unlock_room(int index, ::google::protobuf::int32 value);
  void add_unlock_room(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unlock_room() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unlock_room();

  // repeated .sg.pb_pair_int_time reach_time_list = 16;
  int reach_time_list_size() const;
  void clear_reach_time_list();
  static const int kReachTimeListFieldNumber = 16;
  ::sg::pb_pair_int_time* mutable_reach_time_list(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_time >*
      mutable_reach_time_list();
  const ::sg::pb_pair_int_time& reach_time_list(int index) const;
  ::sg::pb_pair_int_time* add_reach_time_list();
  const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_time >&
      reach_time_list() const;

  // repeated int32 unlock_room_model = 17;
  int unlock_room_model_size() const;
  void clear_unlock_room_model();
  static const int kUnlockRoomModelFieldNumber = 17;
  ::google::protobuf::int32 unlock_room_model(int index) const;
  void set_unlock_room_model(int index, ::google::protobuf::int32 value);
  void add_unlock_room_model(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unlock_room_model() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unlock_room_model();

  // optional bytes facility = 6;
  bool has_facility() const;
  void clear_facility();
  static const int kFacilityFieldNumber = 6;
  const ::std::string& facility() const;
  void set_facility(const ::std::string& value);
  #if LANG_CXX11
  void set_facility(::std::string&& value);
  #endif
  void set_facility(const char* value);
  void set_facility(const void* value, size_t size);
  ::std::string* mutable_facility();
  ::std::string* release_facility();
  void set_allocated_facility(::std::string* facility);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_facility();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_facility(
      ::std::string* facility);

  // optional .sg.Reward reward = 13;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 13;
  private:
  const ::sg::Reward& _internal_reward() const;
  public:
  const ::sg::Reward& reward() const;
  ::sg::Reward* release_reward();
  ::sg::Reward* mutable_reward();
  void set_allocated_reward(::sg::Reward* reward);
  void unsafe_arena_set_allocated_reward(
      ::sg::Reward* reward);
  ::sg::Reward* unsafe_arena_release_reward();

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserRegionService.UserRegionResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_facility();
  void clear_has_facility();
  void set_has_reward();
  void clear_has_reward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::Facility > devices_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > model_list_;
  ::google::protobuf::RepeatedPtrField< ::sg::Archive > archive_list_;
  ::google::protobuf::RepeatedPtrField< ::sg::Region > regions_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unlock_room_;
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_time > reach_time_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unlock_room_model_;
  ::google::protobuf::internal::ArenaStringPtr facility_;
  ::sg::Reward* reward_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_UserShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserRegionService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserRegionService) */ {
 public:
  UserRegionService();
  virtual ~UserRegionService();

  UserRegionService(const UserRegionService& from);

  inline UserRegionService& operator=(const UserRegionService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserRegionService(UserRegionService&& from) noexcept
    : UserRegionService() {
    *this = ::std::move(from);
  }

  inline UserRegionService& operator=(UserRegionService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRegionService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserRegionService* internal_default_instance() {
    return reinterpret_cast<const UserRegionService*>(
               &_UserRegionService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(UserRegionService* other);
  void Swap(UserRegionService* other);
  friend void swap(UserRegionService& a, UserRegionService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserRegionService* New() const final {
    return CreateMaybeMessage<UserRegionService>(NULL);
  }

  UserRegionService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserRegionService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserRegionService& from);
  void MergeFrom(const UserRegionService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserRegionService* other);
  protected:
  explicit UserRegionService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserRegionService_UserRegionRequest UserRegionRequest;
  typedef UserRegionService_UserRegionResponse UserRegionResponse;

  typedef UserRegionService_SHIP_CMD SHIP_CMD;
  static const SHIP_CMD QUERY =
    UserRegionService_SHIP_CMD_QUERY;
  static const SHIP_CMD CHANGE =
    UserRegionService_SHIP_CMD_CHANGE;
  static const SHIP_CMD REBUILD =
    UserRegionService_SHIP_CMD_REBUILD;
  static const SHIP_CMD QUERY_MODEL =
    UserRegionService_SHIP_CMD_QUERY_MODEL;
  static const SHIP_CMD QUERY_SAVED =
    UserRegionService_SHIP_CMD_QUERY_SAVED;
  static const SHIP_CMD ARCHIVE =
    UserRegionService_SHIP_CMD_ARCHIVE;
  static const SHIP_CMD UNLOCK_ROOM =
    UserRegionService_SHIP_CMD_UNLOCK_ROOM;
  static const SHIP_CMD UNLOCK_MODEL =
    UserRegionService_SHIP_CMD_UNLOCK_MODEL;
  static const SHIP_CMD QUERY_REACH_TIME =
    UserRegionService_SHIP_CMD_QUERY_REACH_TIME;
  static const SHIP_CMD SET_REACH_TIME =
    UserRegionService_SHIP_CMD_SET_REACH_TIME;
  static const SHIP_CMD BATCH_QUERY =
    UserRegionService_SHIP_CMD_BATCH_QUERY;
  static const SHIP_CMD QUERY_ROOM_MODEL =
    UserRegionService_SHIP_CMD_QUERY_ROOM_MODEL;
  static const SHIP_CMD UNLOCK_ROOM_MODEL =
    UserRegionService_SHIP_CMD_UNLOCK_ROOM_MODEL;
  static inline bool SHIP_CMD_IsValid(int value) {
    return UserRegionService_SHIP_CMD_IsValid(value);
  }
  static const SHIP_CMD SHIP_CMD_MIN =
    UserRegionService_SHIP_CMD_SHIP_CMD_MIN;
  static const SHIP_CMD SHIP_CMD_MAX =
    UserRegionService_SHIP_CMD_SHIP_CMD_MAX;
  static const int SHIP_CMD_ARRAYSIZE =
    UserRegionService_SHIP_CMD_SHIP_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SHIP_CMD_descriptor() {
    return UserRegionService_SHIP_CMD_descriptor();
  }
  static inline const ::std::string& SHIP_CMD_Name(SHIP_CMD value) {
    return UserRegionService_SHIP_CMD_Name(value);
  }
  static inline bool SHIP_CMD_Parse(const ::std::string& name,
      SHIP_CMD* value) {
    return UserRegionService_SHIP_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserRegionService.UserRegionRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserRegionService_UserRegionRequest& _internal_req() const;
  public:
  const ::sg::UserRegionService_UserRegionRequest& req() const;
  ::sg::UserRegionService_UserRegionRequest* release_req();
  ::sg::UserRegionService_UserRegionRequest* mutable_req();
  void set_allocated_req(::sg::UserRegionService_UserRegionRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserRegionService_UserRegionRequest* req);
  ::sg::UserRegionService_UserRegionRequest* unsafe_arena_release_req();

  // optional .sg.UserRegionService.UserRegionResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserRegionService_UserRegionResponse& _internal_resp() const;
  public:
  const ::sg::UserRegionService_UserRegionResponse& resp() const;
  ::sg::UserRegionService_UserRegionResponse* release_resp();
  ::sg::UserRegionService_UserRegionResponse* mutable_resp();
  void set_allocated_resp(::sg::UserRegionService_UserRegionResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserRegionService_UserRegionResponse* resp);
  ::sg::UserRegionService_UserRegionResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserRegionService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserRegionService_UserRegionRequest* req_;
  ::sg::UserRegionService_UserRegionResponse* resp_;
  friend struct ::protobuf_UserShip_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Archive

// required int32 id = 2;
inline bool Archive::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Archive::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Archive::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Archive::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Archive::id() const {
  // @@protoc_insertion_point(field_get:sg.Archive.id)
  return id_;
}
inline void Archive::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:sg.Archive.id)
}

// required int32 state = 3;
inline bool Archive::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Archive::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Archive::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Archive::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 Archive::state() const {
  // @@protoc_insertion_point(field_get:sg.Archive.state)
  return state_;
}
inline void Archive::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:sg.Archive.state)
}

// required bytes name = 4;
inline bool Archive::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Archive::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Archive::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Archive::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& Archive::name() const {
  // @@protoc_insertion_point(field_get:sg.Archive.name)
  return name_.Get();
}
inline void Archive::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.Archive.name)
}
#if LANG_CXX11
inline void Archive::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.Archive.name)
}
#endif
inline void Archive::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.Archive.name)
}
inline void Archive::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.Archive.name)
}
inline ::std::string* Archive::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:sg.Archive.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Archive::release_name() {
  // @@protoc_insertion_point(field_release:sg.Archive.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Archive::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.Archive.name)
}
inline ::std::string* Archive::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.Archive.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Archive::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.Archive.name)
}

// required int32 ship_model = 5;
inline bool Archive::has_ship_model() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Archive::set_has_ship_model() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Archive::clear_has_ship_model() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Archive::clear_ship_model() {
  ship_model_ = 0;
  clear_has_ship_model();
}
inline ::google::protobuf::int32 Archive::ship_model() const {
  // @@protoc_insertion_point(field_get:sg.Archive.ship_model)
  return ship_model_;
}
inline void Archive::set_ship_model(::google::protobuf::int32 value) {
  set_has_ship_model();
  ship_model_ = value;
  // @@protoc_insertion_point(field_set:sg.Archive.ship_model)
}

// required bytes ship_tiles = 6;
inline bool Archive::has_ship_tiles() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Archive::set_has_ship_tiles() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Archive::clear_has_ship_tiles() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Archive::clear_ship_tiles() {
  ship_tiles_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_ship_tiles();
}
inline const ::std::string& Archive::ship_tiles() const {
  // @@protoc_insertion_point(field_get:sg.Archive.ship_tiles)
  return ship_tiles_.Get();
}
inline void Archive::set_ship_tiles(const ::std::string& value) {
  set_has_ship_tiles();
  ship_tiles_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.Archive.ship_tiles)
}
#if LANG_CXX11
inline void Archive::set_ship_tiles(::std::string&& value) {
  set_has_ship_tiles();
  ship_tiles_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.Archive.ship_tiles)
}
#endif
inline void Archive::set_ship_tiles(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ship_tiles();
  ship_tiles_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.Archive.ship_tiles)
}
inline void Archive::set_ship_tiles(const void* value,
    size_t size) {
  set_has_ship_tiles();
  ship_tiles_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.Archive.ship_tiles)
}
inline ::std::string* Archive::mutable_ship_tiles() {
  set_has_ship_tiles();
  // @@protoc_insertion_point(field_mutable:sg.Archive.ship_tiles)
  return ship_tiles_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Archive::release_ship_tiles() {
  // @@protoc_insertion_point(field_release:sg.Archive.ship_tiles)
  if (!has_ship_tiles()) {
    return NULL;
  }
  clear_has_ship_tiles();
  return ship_tiles_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Archive::set_allocated_ship_tiles(::std::string* ship_tiles) {
  if (ship_tiles != NULL) {
    set_has_ship_tiles();
  } else {
    clear_has_ship_tiles();
  }
  ship_tiles_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ship_tiles,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.Archive.ship_tiles)
}
inline ::std::string* Archive::unsafe_arena_release_ship_tiles() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.Archive.ship_tiles)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_ship_tiles();
  return ship_tiles_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Archive::unsafe_arena_set_allocated_ship_tiles(
    ::std::string* ship_tiles) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ship_tiles != NULL) {
    set_has_ship_tiles();
  } else {
    clear_has_ship_tiles();
  }
  ship_tiles_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ship_tiles, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.Archive.ship_tiles)
}

// required bytes facilitys = 7;
inline bool Archive::has_facilitys() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Archive::set_has_facilitys() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Archive::clear_has_facilitys() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Archive::clear_facilitys() {
  facilitys_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_facilitys();
}
inline const ::std::string& Archive::facilitys() const {
  // @@protoc_insertion_point(field_get:sg.Archive.facilitys)
  return facilitys_.Get();
}
inline void Archive::set_facilitys(const ::std::string& value) {
  set_has_facilitys();
  facilitys_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.Archive.facilitys)
}
#if LANG_CXX11
inline void Archive::set_facilitys(::std::string&& value) {
  set_has_facilitys();
  facilitys_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.Archive.facilitys)
}
#endif
inline void Archive::set_facilitys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_facilitys();
  facilitys_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.Archive.facilitys)
}
inline void Archive::set_facilitys(const void* value,
    size_t size) {
  set_has_facilitys();
  facilitys_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.Archive.facilitys)
}
inline ::std::string* Archive::mutable_facilitys() {
  set_has_facilitys();
  // @@protoc_insertion_point(field_mutable:sg.Archive.facilitys)
  return facilitys_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Archive::release_facilitys() {
  // @@protoc_insertion_point(field_release:sg.Archive.facilitys)
  if (!has_facilitys()) {
    return NULL;
  }
  clear_has_facilitys();
  return facilitys_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Archive::set_allocated_facilitys(::std::string* facilitys) {
  if (facilitys != NULL) {
    set_has_facilitys();
  } else {
    clear_has_facilitys();
  }
  facilitys_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), facilitys,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.Archive.facilitys)
}
inline ::std::string* Archive::unsafe_arena_release_facilitys() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.Archive.facilitys)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_facilitys();
  return facilitys_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Archive::unsafe_arena_set_allocated_facilitys(
    ::std::string* facilitys) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (facilitys != NULL) {
    set_has_facilitys();
  } else {
    clear_has_facilitys();
  }
  facilitys_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      facilitys, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.Archive.facilitys)
}

// required bytes devices = 8;
inline bool Archive::has_devices() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Archive::set_has_devices() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Archive::clear_has_devices() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Archive::clear_devices() {
  devices_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_devices();
}
inline const ::std::string& Archive::devices() const {
  // @@protoc_insertion_point(field_get:sg.Archive.devices)
  return devices_.Get();
}
inline void Archive::set_devices(const ::std::string& value) {
  set_has_devices();
  devices_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.Archive.devices)
}
#if LANG_CXX11
inline void Archive::set_devices(::std::string&& value) {
  set_has_devices();
  devices_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.Archive.devices)
}
#endif
inline void Archive::set_devices(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devices();
  devices_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.Archive.devices)
}
inline void Archive::set_devices(const void* value,
    size_t size) {
  set_has_devices();
  devices_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.Archive.devices)
}
inline ::std::string* Archive::mutable_devices() {
  set_has_devices();
  // @@protoc_insertion_point(field_mutable:sg.Archive.devices)
  return devices_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Archive::release_devices() {
  // @@protoc_insertion_point(field_release:sg.Archive.devices)
  if (!has_devices()) {
    return NULL;
  }
  clear_has_devices();
  return devices_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Archive::set_allocated_devices(::std::string* devices) {
  if (devices != NULL) {
    set_has_devices();
  } else {
    clear_has_devices();
  }
  devices_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devices,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.Archive.devices)
}
inline ::std::string* Archive::unsafe_arena_release_devices() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.Archive.devices)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_devices();
  return devices_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Archive::unsafe_arena_set_allocated_devices(
    ::std::string* devices) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (devices != NULL) {
    set_has_devices();
  } else {
    clear_has_devices();
  }
  devices_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      devices, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.Archive.devices)
}

// -------------------------------------------------------------------

// Region

// required int32 id = 1;
inline bool Region::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Region::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Region::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Region::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Region::id() const {
  // @@protoc_insertion_point(field_get:sg.Region.id)
  return id_;
}
inline void Region::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:sg.Region.id)
}

// optional int32 model_id = 2;
inline bool Region::has_model_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Region::set_has_model_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Region::clear_has_model_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Region::clear_model_id() {
  model_id_ = 0;
  clear_has_model_id();
}
inline ::google::protobuf::int32 Region::model_id() const {
  // @@protoc_insertion_point(field_get:sg.Region.model_id)
  return model_id_;
}
inline void Region::set_model_id(::google::protobuf::int32 value) {
  set_has_model_id();
  model_id_ = value;
  // @@protoc_insertion_point(field_set:sg.Region.model_id)
}

// optional int32 fast_finish_times = 3;
inline bool Region::has_fast_finish_times() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Region::set_has_fast_finish_times() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Region::clear_has_fast_finish_times() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Region::clear_fast_finish_times() {
  fast_finish_times_ = 0;
  clear_has_fast_finish_times();
}
inline ::google::protobuf::int32 Region::fast_finish_times() const {
  // @@protoc_insertion_point(field_get:sg.Region.fast_finish_times)
  return fast_finish_times_;
}
inline void Region::set_fast_finish_times(::google::protobuf::int32 value) {
  set_has_fast_finish_times();
  fast_finish_times_ = value;
  // @@protoc_insertion_point(field_set:sg.Region.fast_finish_times)
}

// optional int32 max_fast_finish_times = 4;
inline bool Region::has_max_fast_finish_times() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Region::set_has_max_fast_finish_times() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Region::clear_has_max_fast_finish_times() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Region::clear_max_fast_finish_times() {
  max_fast_finish_times_ = 0;
  clear_has_max_fast_finish_times();
}
inline ::google::protobuf::int32 Region::max_fast_finish_times() const {
  // @@protoc_insertion_point(field_get:sg.Region.max_fast_finish_times)
  return max_fast_finish_times_;
}
inline void Region::set_max_fast_finish_times(::google::protobuf::int32 value) {
  set_has_max_fast_finish_times();
  max_fast_finish_times_ = value;
  // @@protoc_insertion_point(field_set:sg.Region.max_fast_finish_times)
}

// optional .sg.RegionState region_state = 6;
inline bool Region::has_region_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Region::set_has_region_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Region::clear_has_region_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::sg::RegionState& Region::_internal_region_state() const {
  return *region_state_;
}
inline const ::sg::RegionState& Region::region_state() const {
  const ::sg::RegionState* p = region_state_;
  // @@protoc_insertion_point(field_get:sg.Region.region_state)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::RegionState*>(
      &::sg::_RegionState_default_instance_);
}
inline ::sg::RegionState* Region::release_region_state() {
  // @@protoc_insertion_point(field_release:sg.Region.region_state)
  clear_has_region_state();
  ::sg::RegionState* temp = region_state_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  region_state_ = NULL;
  return temp;
}
inline ::sg::RegionState* Region::unsafe_arena_release_region_state() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.Region.region_state)
  clear_has_region_state();
  ::sg::RegionState* temp = region_state_;
  region_state_ = NULL;
  return temp;
}
inline ::sg::RegionState* Region::mutable_region_state() {
  set_has_region_state();
  if (region_state_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::RegionState>(GetArenaNoVirtual());
    region_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.Region.region_state)
  return region_state_;
}
inline void Region::set_allocated_region_state(::sg::RegionState* region_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(region_state_);
  }
  if (region_state) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(region_state)->GetArena();
    if (message_arena != submessage_arena) {
      region_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, region_state, submessage_arena);
    }
    set_has_region_state();
  } else {
    clear_has_region_state();
  }
  region_state_ = region_state;
  // @@protoc_insertion_point(field_set_allocated:sg.Region.region_state)
}

// repeated .sg.UserRoom rooms = 7;
inline int Region::rooms_size() const {
  return rooms_.size();
}
inline ::sg::UserRoom* Region::mutable_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:sg.Region.rooms)
  return rooms_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::UserRoom >*
Region::mutable_rooms() {
  // @@protoc_insertion_point(field_mutable_list:sg.Region.rooms)
  return &rooms_;
}
inline const ::sg::UserRoom& Region::rooms(int index) const {
  // @@protoc_insertion_point(field_get:sg.Region.rooms)
  return rooms_.Get(index);
}
inline ::sg::UserRoom* Region::add_rooms() {
  // @@protoc_insertion_point(field_add:sg.Region.rooms)
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::UserRoom >&
Region::rooms() const {
  // @@protoc_insertion_point(field_list:sg.Region.rooms)
  return rooms_;
}

// optional bytes id_str = 8;
inline bool Region::has_id_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Region::set_has_id_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Region::clear_has_id_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Region::clear_id_str() {
  id_str_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_id_str();
}
inline const ::std::string& Region::id_str() const {
  // @@protoc_insertion_point(field_get:sg.Region.id_str)
  return id_str_.Get();
}
inline void Region::set_id_str(const ::std::string& value) {
  set_has_id_str();
  id_str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.Region.id_str)
}
#if LANG_CXX11
inline void Region::set_id_str(::std::string&& value) {
  set_has_id_str();
  id_str_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.Region.id_str)
}
#endif
inline void Region::set_id_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id_str();
  id_str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.Region.id_str)
}
inline void Region::set_id_str(const void* value,
    size_t size) {
  set_has_id_str();
  id_str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.Region.id_str)
}
inline ::std::string* Region::mutable_id_str() {
  set_has_id_str();
  // @@protoc_insertion_point(field_mutable:sg.Region.id_str)
  return id_str_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Region::release_id_str() {
  // @@protoc_insertion_point(field_release:sg.Region.id_str)
  if (!has_id_str()) {
    return NULL;
  }
  clear_has_id_str();
  return id_str_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Region::set_allocated_id_str(::std::string* id_str) {
  if (id_str != NULL) {
    set_has_id_str();
  } else {
    clear_has_id_str();
  }
  id_str_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id_str,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.Region.id_str)
}
inline ::std::string* Region::unsafe_arena_release_id_str() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.Region.id_str)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_id_str();
  return id_str_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Region::unsafe_arena_set_allocated_id_str(
    ::std::string* id_str) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id_str != NULL) {
    set_has_id_str();
  } else {
    clear_has_id_str();
  }
  id_str_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id_str, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.Region.id_str)
}

// optional bytes type_str = 9;
inline bool Region::has_type_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Region::set_has_type_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Region::clear_has_type_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Region::clear_type_str() {
  type_str_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_type_str();
}
inline const ::std::string& Region::type_str() const {
  // @@protoc_insertion_point(field_get:sg.Region.type_str)
  return type_str_.Get();
}
inline void Region::set_type_str(const ::std::string& value) {
  set_has_type_str();
  type_str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.Region.type_str)
}
#if LANG_CXX11
inline void Region::set_type_str(::std::string&& value) {
  set_has_type_str();
  type_str_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.Region.type_str)
}
#endif
inline void Region::set_type_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type_str();
  type_str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.Region.type_str)
}
inline void Region::set_type_str(const void* value,
    size_t size) {
  set_has_type_str();
  type_str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.Region.type_str)
}
inline ::std::string* Region::mutable_type_str() {
  set_has_type_str();
  // @@protoc_insertion_point(field_mutable:sg.Region.type_str)
  return type_str_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Region::release_type_str() {
  // @@protoc_insertion_point(field_release:sg.Region.type_str)
  if (!has_type_str()) {
    return NULL;
  }
  clear_has_type_str();
  return type_str_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Region::set_allocated_type_str(::std::string* type_str) {
  if (type_str != NULL) {
    set_has_type_str();
  } else {
    clear_has_type_str();
  }
  type_str_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_str,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.Region.type_str)
}
inline ::std::string* Region::unsafe_arena_release_type_str() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.Region.type_str)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_type_str();
  return type_str_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Region::unsafe_arena_set_allocated_type_str(
    ::std::string* type_str) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type_str != NULL) {
    set_has_type_str();
  } else {
    clear_has_type_str();
  }
  type_str_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type_str, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.Region.type_str)
}

// optional sfixed64 first_reach_time = 10;
inline bool Region::has_first_reach_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Region::set_has_first_reach_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Region::clear_has_first_reach_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Region::clear_first_reach_time() {
  first_reach_time_ = GOOGLE_LONGLONG(0);
  clear_has_first_reach_time();
}
inline ::google::protobuf::int64 Region::first_reach_time() const {
  // @@protoc_insertion_point(field_get:sg.Region.first_reach_time)
  return first_reach_time_;
}
inline void Region::set_first_reach_time(::google::protobuf::int64 value) {
  set_has_first_reach_time();
  first_reach_time_ = value;
  // @@protoc_insertion_point(field_set:sg.Region.first_reach_time)
}

// -------------------------------------------------------------------

// UserRegionService_UserRegionRequest

// required .sg.UserRegionService.SHIP_CMD cmd = 1;
inline bool UserRegionService_UserRegionRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserRegionService_UserRegionRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserRegionService_UserRegionRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserRegionService_SHIP_CMD UserRegionService_UserRegionRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.cmd)
  return static_cast< ::sg::UserRegionService_SHIP_CMD >(cmd_);
}
inline void UserRegionService_UserRegionRequest::set_cmd(::sg::UserRegionService_SHIP_CMD value) {
  assert(::sg::UserRegionService_SHIP_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.cmd)
}

// optional int32 region = 2;
inline bool UserRegionService_UserRegionRequest::has_region() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_region() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserRegionService_UserRegionRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserRegionService_UserRegionRequest::clear_region() {
  region_ = 0;
  clear_has_region();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionRequest::region() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.region)
  return region_;
}
inline void UserRegionService_UserRegionRequest::set_region(::google::protobuf::int32 value) {
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.region)
}

// optional int32 ship_model = 3;
inline bool UserRegionService_UserRegionRequest::has_ship_model() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_ship_model() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserRegionService_UserRegionRequest::clear_has_ship_model() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserRegionService_UserRegionRequest::clear_ship_model() {
  ship_model_ = 0;
  clear_has_ship_model();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionRequest::ship_model() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.ship_model)
  return ship_model_;
}
inline void UserRegionService_UserRegionRequest::set_ship_model(::google::protobuf::int32 value) {
  set_has_ship_model();
  ship_model_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.ship_model)
}

// optional bytes tiles = 4;
inline bool UserRegionService_UserRegionRequest::has_tiles() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_tiles() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRegionService_UserRegionRequest::clear_has_tiles() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRegionService_UserRegionRequest::clear_tiles() {
  tiles_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_tiles();
}
inline const ::std::string& UserRegionService_UserRegionRequest::tiles() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.tiles)
  return tiles_.Get();
}
inline void UserRegionService_UserRegionRequest::set_tiles(const ::std::string& value) {
  set_has_tiles();
  tiles_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.tiles)
}
#if LANG_CXX11
inline void UserRegionService_UserRegionRequest::set_tiles(::std::string&& value) {
  set_has_tiles();
  tiles_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.UserRegionService.UserRegionRequest.tiles)
}
#endif
inline void UserRegionService_UserRegionRequest::set_tiles(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tiles();
  tiles_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.UserRegionService.UserRegionRequest.tiles)
}
inline void UserRegionService_UserRegionRequest::set_tiles(const void* value,
    size_t size) {
  set_has_tiles();
  tiles_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.UserRegionService.UserRegionRequest.tiles)
}
inline ::std::string* UserRegionService_UserRegionRequest::mutable_tiles() {
  set_has_tiles();
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionRequest.tiles)
  return tiles_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserRegionService_UserRegionRequest::release_tiles() {
  // @@protoc_insertion_point(field_release:sg.UserRegionService.UserRegionRequest.tiles)
  if (!has_tiles()) {
    return NULL;
  }
  clear_has_tiles();
  return tiles_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserRegionService_UserRegionRequest::set_allocated_tiles(::std::string* tiles) {
  if (tiles != NULL) {
    set_has_tiles();
  } else {
    clear_has_tiles();
  }
  tiles_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tiles,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.UserRegionService.UserRegionRequest.tiles)
}
inline ::std::string* UserRegionService_UserRegionRequest::unsafe_arena_release_tiles() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserRegionService.UserRegionRequest.tiles)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_tiles();
  return tiles_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserRegionService_UserRegionRequest::unsafe_arena_set_allocated_tiles(
    ::std::string* tiles) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (tiles != NULL) {
    set_has_tiles();
  } else {
    clear_has_tiles();
  }
  tiles_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      tiles, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRegionService.UserRegionRequest.tiles)
}

// optional bytes facility = 5;
inline bool UserRegionService_UserRegionRequest::has_facility() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_facility() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserRegionService_UserRegionRequest::clear_has_facility() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserRegionService_UserRegionRequest::clear_facility() {
  facility_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_facility();
}
inline const ::std::string& UserRegionService_UserRegionRequest::facility() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.facility)
  return facility_.Get();
}
inline void UserRegionService_UserRegionRequest::set_facility(const ::std::string& value) {
  set_has_facility();
  facility_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.facility)
}
#if LANG_CXX11
inline void UserRegionService_UserRegionRequest::set_facility(::std::string&& value) {
  set_has_facility();
  facility_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.UserRegionService.UserRegionRequest.facility)
}
#endif
inline void UserRegionService_UserRegionRequest::set_facility(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_facility();
  facility_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.UserRegionService.UserRegionRequest.facility)
}
inline void UserRegionService_UserRegionRequest::set_facility(const void* value,
    size_t size) {
  set_has_facility();
  facility_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.UserRegionService.UserRegionRequest.facility)
}
inline ::std::string* UserRegionService_UserRegionRequest::mutable_facility() {
  set_has_facility();
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionRequest.facility)
  return facility_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserRegionService_UserRegionRequest::release_facility() {
  // @@protoc_insertion_point(field_release:sg.UserRegionService.UserRegionRequest.facility)
  if (!has_facility()) {
    return NULL;
  }
  clear_has_facility();
  return facility_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserRegionService_UserRegionRequest::set_allocated_facility(::std::string* facility) {
  if (facility != NULL) {
    set_has_facility();
  } else {
    clear_has_facility();
  }
  facility_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), facility,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.UserRegionService.UserRegionRequest.facility)
}
inline ::std::string* UserRegionService_UserRegionRequest::unsafe_arena_release_facility() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserRegionService.UserRegionRequest.facility)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_facility();
  return facility_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserRegionService_UserRegionRequest::unsafe_arena_set_allocated_facility(
    ::std::string* facility) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (facility != NULL) {
    set_has_facility();
  } else {
    clear_has_facility();
  }
  facility_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      facility, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRegionService.UserRegionRequest.facility)
}

// repeated .sg.Facility devices = 9;
inline int UserRegionService_UserRegionRequest::devices_size() const {
  return devices_.size();
}
inline ::sg::Facility* UserRegionService_UserRegionRequest::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionRequest.devices)
  return devices_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Facility >*
UserRegionService_UserRegionRequest::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionRequest.devices)
  return &devices_;
}
inline const ::sg::Facility& UserRegionService_UserRegionRequest::devices(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.devices)
  return devices_.Get(index);
}
inline ::sg::Facility* UserRegionService_UserRegionRequest::add_devices() {
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionRequest.devices)
  return devices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Facility >&
UserRegionService_UserRegionRequest::devices() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionRequest.devices)
  return devices_;
}

// optional int32 archive_id = 11;
inline bool UserRegionService_UserRegionRequest::has_archive_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_archive_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserRegionService_UserRegionRequest::clear_has_archive_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserRegionService_UserRegionRequest::clear_archive_id() {
  archive_id_ = 0;
  clear_has_archive_id();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionRequest::archive_id() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.archive_id)
  return archive_id_;
}
inline void UserRegionService_UserRegionRequest::set_archive_id(::google::protobuf::int32 value) {
  set_has_archive_id();
  archive_id_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.archive_id)
}

// optional bytes archive_name = 12;
inline bool UserRegionService_UserRegionRequest::has_archive_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_archive_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserRegionService_UserRegionRequest::clear_has_archive_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserRegionService_UserRegionRequest::clear_archive_name() {
  archive_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_archive_name();
}
inline const ::std::string& UserRegionService_UserRegionRequest::archive_name() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.archive_name)
  return archive_name_.Get();
}
inline void UserRegionService_UserRegionRequest::set_archive_name(const ::std::string& value) {
  set_has_archive_name();
  archive_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.archive_name)
}
#if LANG_CXX11
inline void UserRegionService_UserRegionRequest::set_archive_name(::std::string&& value) {
  set_has_archive_name();
  archive_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.UserRegionService.UserRegionRequest.archive_name)
}
#endif
inline void UserRegionService_UserRegionRequest::set_archive_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_archive_name();
  archive_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.UserRegionService.UserRegionRequest.archive_name)
}
inline void UserRegionService_UserRegionRequest::set_archive_name(const void* value,
    size_t size) {
  set_has_archive_name();
  archive_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.UserRegionService.UserRegionRequest.archive_name)
}
inline ::std::string* UserRegionService_UserRegionRequest::mutable_archive_name() {
  set_has_archive_name();
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionRequest.archive_name)
  return archive_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserRegionService_UserRegionRequest::release_archive_name() {
  // @@protoc_insertion_point(field_release:sg.UserRegionService.UserRegionRequest.archive_name)
  if (!has_archive_name()) {
    return NULL;
  }
  clear_has_archive_name();
  return archive_name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserRegionService_UserRegionRequest::set_allocated_archive_name(::std::string* archive_name) {
  if (archive_name != NULL) {
    set_has_archive_name();
  } else {
    clear_has_archive_name();
  }
  archive_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), archive_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.UserRegionService.UserRegionRequest.archive_name)
}
inline ::std::string* UserRegionService_UserRegionRequest::unsafe_arena_release_archive_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserRegionService.UserRegionRequest.archive_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_archive_name();
  return archive_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserRegionService_UserRegionRequest::unsafe_arena_set_allocated_archive_name(
    ::std::string* archive_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (archive_name != NULL) {
    set_has_archive_name();
  } else {
    clear_has_archive_name();
  }
  archive_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      archive_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRegionService.UserRegionRequest.archive_name)
}

// optional int32 unlock_room = 13;
inline bool UserRegionService_UserRegionRequest::has_unlock_room() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_unlock_room() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserRegionService_UserRegionRequest::clear_has_unlock_room() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserRegionService_UserRegionRequest::clear_unlock_room() {
  unlock_room_ = 0;
  clear_has_unlock_room();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionRequest::unlock_room() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.unlock_room)
  return unlock_room_;
}
inline void UserRegionService_UserRegionRequest::set_unlock_room(::google::protobuf::int32 value) {
  set_has_unlock_room();
  unlock_room_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.unlock_room)
}

// optional int32 unlock_model = 14;
inline bool UserRegionService_UserRegionRequest::has_unlock_model() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_unlock_model() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserRegionService_UserRegionRequest::clear_has_unlock_model() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserRegionService_UserRegionRequest::clear_unlock_model() {
  unlock_model_ = 0;
  clear_has_unlock_model();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionRequest::unlock_model() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.unlock_model)
  return unlock_model_;
}
inline void UserRegionService_UserRegionRequest::set_unlock_model(::google::protobuf::int32 value) {
  set_has_unlock_model();
  unlock_model_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.unlock_model)
}

// repeated int32 regions = 15;
inline int UserRegionService_UserRegionRequest::regions_size() const {
  return regions_.size();
}
inline void UserRegionService_UserRegionRequest::clear_regions() {
  regions_.Clear();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionRequest::regions(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.regions)
  return regions_.Get(index);
}
inline void UserRegionService_UserRegionRequest::set_regions(int index, ::google::protobuf::int32 value) {
  regions_.Set(index, value);
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.regions)
}
inline void UserRegionService_UserRegionRequest::add_regions(::google::protobuf::int32 value) {
  regions_.Add(value);
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionRequest.regions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserRegionService_UserRegionRequest::regions() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionRequest.regions)
  return regions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserRegionService_UserRegionRequest::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionRequest.regions)
  return &regions_;
}

// optional bool simple = 16;
inline bool UserRegionService_UserRegionRequest::has_simple() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_simple() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserRegionService_UserRegionRequest::clear_has_simple() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserRegionService_UserRegionRequest::clear_simple() {
  simple_ = false;
  clear_has_simple();
}
inline bool UserRegionService_UserRegionRequest::simple() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.simple)
  return simple_;
}
inline void UserRegionService_UserRegionRequest::set_simple(bool value) {
  set_has_simple();
  simple_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.simple)
}

// optional int32 unlock_room_model = 17;
inline bool UserRegionService_UserRegionRequest::has_unlock_room_model() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserRegionService_UserRegionRequest::set_has_unlock_room_model() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserRegionService_UserRegionRequest::clear_has_unlock_room_model() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserRegionService_UserRegionRequest::clear_unlock_room_model() {
  unlock_room_model_ = 0;
  clear_has_unlock_room_model();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionRequest::unlock_room_model() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionRequest.unlock_room_model)
  return unlock_room_model_;
}
inline void UserRegionService_UserRegionRequest::set_unlock_room_model(::google::protobuf::int32 value) {
  set_has_unlock_room_model();
  unlock_room_model_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionRequest.unlock_room_model)
}

// -------------------------------------------------------------------

// UserRegionService_UserRegionResponse

// required int32 result = 1;
inline bool UserRegionService_UserRegionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserRegionService_UserRegionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserRegionService_UserRegionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserRegionService_UserRegionResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.result)
  return result_;
}
inline void UserRegionService_UserRegionResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionResponse.result)
}

// optional bytes facility = 6;
inline bool UserRegionService_UserRegionResponse::has_facility() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRegionService_UserRegionResponse::set_has_facility() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRegionService_UserRegionResponse::clear_has_facility() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRegionService_UserRegionResponse::clear_facility() {
  facility_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_facility();
}
inline const ::std::string& UserRegionService_UserRegionResponse::facility() const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.facility)
  return facility_.Get();
}
inline void UserRegionService_UserRegionResponse::set_facility(const ::std::string& value) {
  set_has_facility();
  facility_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionResponse.facility)
}
#if LANG_CXX11
inline void UserRegionService_UserRegionResponse::set_facility(::std::string&& value) {
  set_has_facility();
  facility_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.UserRegionService.UserRegionResponse.facility)
}
#endif
inline void UserRegionService_UserRegionResponse::set_facility(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_facility();
  facility_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.UserRegionService.UserRegionResponse.facility)
}
inline void UserRegionService_UserRegionResponse::set_facility(const void* value,
    size_t size) {
  set_has_facility();
  facility_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.UserRegionService.UserRegionResponse.facility)
}
inline ::std::string* UserRegionService_UserRegionResponse::mutable_facility() {
  set_has_facility();
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionResponse.facility)
  return facility_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserRegionService_UserRegionResponse::release_facility() {
  // @@protoc_insertion_point(field_release:sg.UserRegionService.UserRegionResponse.facility)
  if (!has_facility()) {
    return NULL;
  }
  clear_has_facility();
  return facility_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserRegionService_UserRegionResponse::set_allocated_facility(::std::string* facility) {
  if (facility != NULL) {
    set_has_facility();
  } else {
    clear_has_facility();
  }
  facility_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), facility,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.UserRegionService.UserRegionResponse.facility)
}
inline ::std::string* UserRegionService_UserRegionResponse::unsafe_arena_release_facility() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserRegionService.UserRegionResponse.facility)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_facility();
  return facility_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserRegionService_UserRegionResponse::unsafe_arena_set_allocated_facility(
    ::std::string* facility) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (facility != NULL) {
    set_has_facility();
  } else {
    clear_has_facility();
  }
  facility_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      facility, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRegionService.UserRegionResponse.facility)
}

// repeated .sg.Facility devices = 9;
inline int UserRegionService_UserRegionResponse::devices_size() const {
  return devices_.size();
}
inline ::sg::Facility* UserRegionService_UserRegionResponse::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionResponse.devices)
  return devices_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Facility >*
UserRegionService_UserRegionResponse::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionResponse.devices)
  return &devices_;
}
inline const ::sg::Facility& UserRegionService_UserRegionResponse::devices(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.devices)
  return devices_.Get(index);
}
inline ::sg::Facility* UserRegionService_UserRegionResponse::add_devices() {
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionResponse.devices)
  return devices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Facility >&
UserRegionService_UserRegionResponse::devices() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionResponse.devices)
  return devices_;
}

// repeated int32 model_list = 10;
inline int UserRegionService_UserRegionResponse::model_list_size() const {
  return model_list_.size();
}
inline void UserRegionService_UserRegionResponse::clear_model_list() {
  model_list_.Clear();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionResponse::model_list(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.model_list)
  return model_list_.Get(index);
}
inline void UserRegionService_UserRegionResponse::set_model_list(int index, ::google::protobuf::int32 value) {
  model_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionResponse.model_list)
}
inline void UserRegionService_UserRegionResponse::add_model_list(::google::protobuf::int32 value) {
  model_list_.Add(value);
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionResponse.model_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserRegionService_UserRegionResponse::model_list() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionResponse.model_list)
  return model_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserRegionService_UserRegionResponse::mutable_model_list() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionResponse.model_list)
  return &model_list_;
}

// repeated .sg.Archive archive_list = 11;
inline int UserRegionService_UserRegionResponse::archive_list_size() const {
  return archive_list_.size();
}
inline void UserRegionService_UserRegionResponse::clear_archive_list() {
  archive_list_.Clear();
}
inline ::sg::Archive* UserRegionService_UserRegionResponse::mutable_archive_list(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionResponse.archive_list)
  return archive_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Archive >*
UserRegionService_UserRegionResponse::mutable_archive_list() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionResponse.archive_list)
  return &archive_list_;
}
inline const ::sg::Archive& UserRegionService_UserRegionResponse::archive_list(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.archive_list)
  return archive_list_.Get(index);
}
inline ::sg::Archive* UserRegionService_UserRegionResponse::add_archive_list() {
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionResponse.archive_list)
  return archive_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Archive >&
UserRegionService_UserRegionResponse::archive_list() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionResponse.archive_list)
  return archive_list_;
}

// optional .sg.Reward reward = 13;
inline bool UserRegionService_UserRegionResponse::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserRegionService_UserRegionResponse::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserRegionService_UserRegionResponse::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::sg::Reward& UserRegionService_UserRegionResponse::_internal_reward() const {
  return *reward_;
}
inline const ::sg::Reward& UserRegionService_UserRegionResponse::reward() const {
  const ::sg::Reward* p = reward_;
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.reward)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::Reward*>(
      &::sg::_Reward_default_instance_);
}
inline ::sg::Reward* UserRegionService_UserRegionResponse::release_reward() {
  // @@protoc_insertion_point(field_release:sg.UserRegionService.UserRegionResponse.reward)
  clear_has_reward();
  ::sg::Reward* temp = reward_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  reward_ = NULL;
  return temp;
}
inline ::sg::Reward* UserRegionService_UserRegionResponse::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserRegionService.UserRegionResponse.reward)
  clear_has_reward();
  ::sg::Reward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline ::sg::Reward* UserRegionService_UserRegionResponse::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::Reward>(GetArenaNoVirtual());
    reward_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionResponse.reward)
  return reward_;
}
inline void UserRegionService_UserRegionResponse::set_allocated_reward(::sg::Reward* reward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reward_);
  }
  if (reward) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(reward)->GetArena();
    if (message_arena != submessage_arena) {
      reward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reward, submessage_arena);
    }
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_ = reward;
  // @@protoc_insertion_point(field_set_allocated:sg.UserRegionService.UserRegionResponse.reward)
}

// repeated .sg.Region regions = 14;
inline int UserRegionService_UserRegionResponse::regions_size() const {
  return regions_.size();
}
inline void UserRegionService_UserRegionResponse::clear_regions() {
  regions_.Clear();
}
inline ::sg::Region* UserRegionService_UserRegionResponse::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionResponse.regions)
  return regions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Region >*
UserRegionService_UserRegionResponse::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionResponse.regions)
  return &regions_;
}
inline const ::sg::Region& UserRegionService_UserRegionResponse::regions(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.regions)
  return regions_.Get(index);
}
inline ::sg::Region* UserRegionService_UserRegionResponse::add_regions() {
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionResponse.regions)
  return regions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Region >&
UserRegionService_UserRegionResponse::regions() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionResponse.regions)
  return regions_;
}

// repeated int32 unlock_room = 15;
inline int UserRegionService_UserRegionResponse::unlock_room_size() const {
  return unlock_room_.size();
}
inline void UserRegionService_UserRegionResponse::clear_unlock_room() {
  unlock_room_.Clear();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionResponse::unlock_room(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.unlock_room)
  return unlock_room_.Get(index);
}
inline void UserRegionService_UserRegionResponse::set_unlock_room(int index, ::google::protobuf::int32 value) {
  unlock_room_.Set(index, value);
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionResponse.unlock_room)
}
inline void UserRegionService_UserRegionResponse::add_unlock_room(::google::protobuf::int32 value) {
  unlock_room_.Add(value);
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionResponse.unlock_room)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserRegionService_UserRegionResponse::unlock_room() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionResponse.unlock_room)
  return unlock_room_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserRegionService_UserRegionResponse::mutable_unlock_room() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionResponse.unlock_room)
  return &unlock_room_;
}

// repeated .sg.pb_pair_int_time reach_time_list = 16;
inline int UserRegionService_UserRegionResponse::reach_time_list_size() const {
  return reach_time_list_.size();
}
inline ::sg::pb_pair_int_time* UserRegionService_UserRegionResponse::mutable_reach_time_list(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.UserRegionResponse.reach_time_list)
  return reach_time_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_time >*
UserRegionService_UserRegionResponse::mutable_reach_time_list() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionResponse.reach_time_list)
  return &reach_time_list_;
}
inline const ::sg::pb_pair_int_time& UserRegionService_UserRegionResponse::reach_time_list(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.reach_time_list)
  return reach_time_list_.Get(index);
}
inline ::sg::pb_pair_int_time* UserRegionService_UserRegionResponse::add_reach_time_list() {
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionResponse.reach_time_list)
  return reach_time_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_time >&
UserRegionService_UserRegionResponse::reach_time_list() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionResponse.reach_time_list)
  return reach_time_list_;
}

// repeated int32 unlock_room_model = 17;
inline int UserRegionService_UserRegionResponse::unlock_room_model_size() const {
  return unlock_room_model_.size();
}
inline void UserRegionService_UserRegionResponse::clear_unlock_room_model() {
  unlock_room_model_.Clear();
}
inline ::google::protobuf::int32 UserRegionService_UserRegionResponse::unlock_room_model(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserRegionService.UserRegionResponse.unlock_room_model)
  return unlock_room_model_.Get(index);
}
inline void UserRegionService_UserRegionResponse::set_unlock_room_model(int index, ::google::protobuf::int32 value) {
  unlock_room_model_.Set(index, value);
  // @@protoc_insertion_point(field_set:sg.UserRegionService.UserRegionResponse.unlock_room_model)
}
inline void UserRegionService_UserRegionResponse::add_unlock_room_model(::google::protobuf::int32 value) {
  unlock_room_model_.Add(value);
  // @@protoc_insertion_point(field_add:sg.UserRegionService.UserRegionResponse.unlock_room_model)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserRegionService_UserRegionResponse::unlock_room_model() const {
  // @@protoc_insertion_point(field_list:sg.UserRegionService.UserRegionResponse.unlock_room_model)
  return unlock_room_model_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserRegionService_UserRegionResponse::mutable_unlock_room_model() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserRegionService.UserRegionResponse.unlock_room_model)
  return &unlock_room_model_;
}

// -------------------------------------------------------------------

// UserRegionService

// optional .sg.UserRegionService.UserRegionRequest req = 1;
inline bool UserRegionService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRegionService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRegionService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRegionService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserRegionService_UserRegionRequest& UserRegionService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserRegionService_UserRegionRequest& UserRegionService::req() const {
  const ::sg::UserRegionService_UserRegionRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserRegionService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserRegionService_UserRegionRequest*>(
      &::sg::_UserRegionService_UserRegionRequest_default_instance_);
}
inline ::sg::UserRegionService_UserRegionRequest* UserRegionService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserRegionService.req)
  clear_has_req();
  ::sg::UserRegionService_UserRegionRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserRegionService_UserRegionRequest* UserRegionService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserRegionService.req)
  clear_has_req();
  ::sg::UserRegionService_UserRegionRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserRegionService_UserRegionRequest* UserRegionService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserRegionService_UserRegionRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.req)
  return req_;
}
inline void UserRegionService::set_allocated_req(::sg::UserRegionService_UserRegionRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserRegionService.req)
}

// optional .sg.UserRegionService.UserRegionResponse resp = 2;
inline bool UserRegionService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserRegionService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserRegionService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserRegionService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserRegionService_UserRegionResponse& UserRegionService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserRegionService_UserRegionResponse& UserRegionService::resp() const {
  const ::sg::UserRegionService_UserRegionResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserRegionService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserRegionService_UserRegionResponse*>(
      &::sg::_UserRegionService_UserRegionResponse_default_instance_);
}
inline ::sg::UserRegionService_UserRegionResponse* UserRegionService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserRegionService.resp)
  clear_has_resp();
  ::sg::UserRegionService_UserRegionResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserRegionService_UserRegionResponse* UserRegionService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserRegionService.resp)
  clear_has_resp();
  ::sg::UserRegionService_UserRegionResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserRegionService_UserRegionResponse* UserRegionService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserRegionService_UserRegionResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserRegionService.resp)
  return resp_;
}
inline void UserRegionService::set_allocated_resp(::sg::UserRegionService_UserRegionResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserRegionService.resp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sg::UserRegionService_SHIP_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserRegionService_SHIP_CMD>() {
  return ::sg::UserRegionService_SHIP_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_UserShip_2eproto
