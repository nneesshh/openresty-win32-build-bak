// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserFarmSkill.proto

#include "UserFarmSkill.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace sg {
}  // namespace sg
namespace protobuf_UserFarmSkill_2eproto {
void InitDefaults() {
}

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserFarmSkill.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023UserFarmSkill.proto\022\002sg*\360\002\n\017FARM_SKILL"
      "_TYPE\022\033\n\027FARM_SKILL_TYPE_UNKNOWN\020\000\022\031\n\025FA"
      "RM_SKILL_TYPE_MINER\020\001\022\036\n\032FARM_SKILL_TYPE"
      "_WOODCUTTER\020\002\022\032\n\026FARM_SKILL_TYPE_FISHER\020"
      "\003\022\032\n\026FARM_SKILL_TYPE_HUNTER\020\004\022\032\n\026FARM_SK"
      "ILL_TYPE_FARMER\020\005\022\032\n\026FARM_SKILL_TYPE_FEE"
      "DER\020\006\022\035\n\031FARM_SKILL_TYPE_CARPENTER\020\013\022\036\n\032"
      "FARM_SKILL_TYPE_STONEMASON\020\014\022\036\n\032FARM_SKI"
      "LL_TYPE_BLACKSMITH\020\r\022\032\n\026FARM_SKILL_TYPE_"
      "COOKER\020\016\022\032\n\026FARM_SKILL_TYPE_BREWER\020\017*\217\002\n"
      "\027FARM_SKILL_TRIGGER_TYPE\022\"\n\036FARM_SKILL_T"
      "RIGGER_TYPE_GATHER\020\001\022#\n\037FARM_SKILL_TRIGG"
      "ER_TYPE_FORMULA\020\002\022!\n\035FARM_SKILL_TRIGGER_"
      "TYPE_EQUIP\020\003\022 \n\034FARM_SKILL_TRIGGER_TYPE_"
      "HUNT\020\004\022 \n\034FARM_SKILL_TRIGGER_TYPE_FISH\020\005"
      "\022!\n\035FARM_SKILL_TRIGGER_TYPE_PLANT\020\006\022!\n\035F"
      "ARM_SKILL_TRIGGER_TYPE_BREED\020\007B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 675);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserFarmSkill.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserFarmSkill_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* FARM_SKILL_TYPE_descriptor() {
  protobuf_UserFarmSkill_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserFarmSkill_2eproto::file_level_enum_descriptors[0];
}
bool FARM_SKILL_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FARM_SKILL_TRIGGER_TYPE_descriptor() {
  protobuf_UserFarmSkill_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserFarmSkill_2eproto::file_level_enum_descriptors[1];
}
bool FARM_SKILL_TRIGGER_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
