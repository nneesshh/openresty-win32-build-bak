// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mail.proto

#include "Mail.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Reward;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_Mail_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Mail_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ItemAny;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Mail_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ItemDrop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Mail_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MailboxService_MailboxRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Mail_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ItemAnyList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Mail_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MailData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Mail_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MailDataList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Mail_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MailboxService_MailboxResponse;
}  // namespace protobuf_Mail_2eproto
namespace sg {
class ItemAnyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemAny>
      _instance;
} _ItemAny_default_instance_;
class ItemAnyListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemAnyList>
      _instance;
} _ItemAnyList_default_instance_;
class ItemDropDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemDrop>
      _instance;
} _ItemDrop_default_instance_;
class ItemDropListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemDropList>
      _instance;
} _ItemDropList_default_instance_;
class MailDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailData>
      _instance;
} _MailData_default_instance_;
class MailDataListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailDataList>
      _instance;
} _MailDataList_default_instance_;
class MailboxService_MailboxRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailboxService_MailboxRequest>
      _instance;
} _MailboxService_MailboxRequest_default_instance_;
class MailboxService_MailboxResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailboxService_MailboxResponse>
      _instance;
} _MailboxService_MailboxResponse_default_instance_;
class MailboxServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MailboxService>
      _instance;
} _MailboxService_default_instance_;
class NewMailNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewMailNotify>
      _instance;
} _NewMailNotify_default_instance_;
}  // namespace sg
namespace protobuf_Mail_2eproto {
static void InitDefaultsItemAny() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ItemAny_default_instance_;
    new (ptr) ::sg::ItemAny();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ItemAny::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ItemAny =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsItemAny}, {}};

static void InitDefaultsItemAnyList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ItemAnyList_default_instance_;
    new (ptr) ::sg::ItemAnyList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ItemAnyList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ItemAnyList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsItemAnyList}, {
      &protobuf_Mail_2eproto::scc_info_ItemAny.base,}};

static void InitDefaultsItemDrop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ItemDrop_default_instance_;
    new (ptr) ::sg::ItemDrop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ItemDrop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ItemDrop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsItemDrop}, {}};

static void InitDefaultsItemDropList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ItemDropList_default_instance_;
    new (ptr) ::sg::ItemDropList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ItemDropList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ItemDropList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsItemDropList}, {
      &protobuf_Mail_2eproto::scc_info_ItemDrop.base,}};

static void InitDefaultsMailData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_MailData_default_instance_;
    new (ptr) ::sg::MailData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::MailData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MailData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMailData}, {
      &protobuf_Mail_2eproto::scc_info_ItemAnyList.base,}};

static void InitDefaultsMailDataList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_MailDataList_default_instance_;
    new (ptr) ::sg::MailDataList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::MailDataList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MailDataList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMailDataList}, {
      &protobuf_Mail_2eproto::scc_info_MailData.base,}};

static void InitDefaultsMailboxService_MailboxRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_MailboxService_MailboxRequest_default_instance_;
    new (ptr) ::sg::MailboxService_MailboxRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::MailboxService_MailboxRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MailboxService_MailboxRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMailboxService_MailboxRequest}, {}};

static void InitDefaultsMailboxService_MailboxResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_MailboxService_MailboxResponse_default_instance_;
    new (ptr) ::sg::MailboxService_MailboxResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::MailboxService_MailboxResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MailboxService_MailboxResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMailboxService_MailboxResponse}, {
      &protobuf_Mail_2eproto::scc_info_MailDataList.base,
      &protobuf_BaseStruct_2eproto::scc_info_Reward.base,}};

static void InitDefaultsMailboxService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_MailboxService_default_instance_;
    new (ptr) ::sg::MailboxService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::MailboxService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MailboxService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMailboxService}, {
      &protobuf_Mail_2eproto::scc_info_MailboxService_MailboxRequest.base,
      &protobuf_Mail_2eproto::scc_info_MailboxService_MailboxResponse.base,}};

static void InitDefaultsNewMailNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_NewMailNotify_default_instance_;
    new (ptr) ::sg::NewMailNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::NewMailNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NewMailNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNewMailNotify}, {
      &protobuf_Mail_2eproto::scc_info_MailDataList.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ItemAny.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemAnyList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemDrop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemDropList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MailData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MailDataList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MailboxService_MailboxRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MailboxService_MailboxResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MailboxService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NewMailNotify.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAny, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAny, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAny, item_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAny, item_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAny, val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAny, probability_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAnyList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAnyList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemAnyList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemDrop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemDrop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemDrop, drop_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemDrop, drop_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemDropList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemDropList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ItemDropList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, attachment_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailData, burntime_),
  3,
  4,
  7,
  0,
  1,
  2,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailDataList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailDataList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailDataList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxRequest, mailid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxResponse, mail_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService_MailboxResponse, out_drop_list_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::MailboxService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::NewMailNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::NewMailNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::NewMailNotify, mail_list_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::sg::ItemAny)},
  { 13, 19, sizeof(::sg::ItemAnyList)},
  { 20, 27, sizeof(::sg::ItemDrop)},
  { 29, 35, sizeof(::sg::ItemDropList)},
  { 36, 49, sizeof(::sg::MailData)},
  { 57, 63, sizeof(::sg::MailDataList)},
  { 64, 71, sizeof(::sg::MailboxService_MailboxRequest)},
  { 73, 81, sizeof(::sg::MailboxService_MailboxResponse)},
  { 84, 91, sizeof(::sg::MailboxService)},
  { 93, 99, sizeof(::sg::NewMailNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ItemAny_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ItemAnyList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ItemDrop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ItemDropList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_MailData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_MailDataList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_MailboxService_MailboxRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_MailboxService_MailboxResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_MailboxService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_NewMailNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Mail.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nMail.proto\022\002sg\032\020BaseStruct.proto\"\202\001\n\007I"
      "temAny\022\021\n\titem_type\030\001 \002(\r\022\023\n\013item_typeid"
      "\030\002 \002(\004\022\013\n\003val\030\003 \001(\005\022\023\n\013probability\030\004 \001(\002"
      "\"-\n\tITEM_TYPE\022\r\n\tITEM_NONE\020\000\022\021\n\rITEM_RES"
      "OURCE\020\001\"(\n\013ItemAnyList\022\031\n\004list\030\001 \003(\0132\013.s"
      "g.ItemAny\"1\n\010ItemDrop\022\023\n\013drop_typeid\030\001 \002"
      "(\004\022\020\n\010drop_num\030\002 \001(\005\"*\n\014ItemDropList\022\032\n\004"
      "list\030\001 \003(\0132\014.sg.ItemDrop\"\355\003\n\010MailData\022\016\n"
      "\006mailid\030\001 \002(\003\022$\n\004type\030\002 \002(\0162\026.sg.MailDat"
      "a.MAIL_TYPE\022&\n\005state\030\003 \002(\0162\027.sg.MailData"
      ".MAIL_STATE\022\017\n\007subject\030\013 \002(\014\022\017\n\007content\030"
      "\014 \002(\014\022(\n\017attachment_list\030\025 \002(\0132\017.sg.Item"
      "AnyList\022\022\n\ncreatetime\030\037 \002(\020\022\020\n\010burntime\030"
      "  \002(\020\"\300\001\n\tMAIL_TYPE\022\025\n\021MAIL_TYPE_UNKNOWN"
      "\020\000\022\030\n\024MAIL_TYPE_COMPENSATE\020\001\022\032\n\026MAIL_TYP"
      "E_FIRST_CHARGE\020\002\022\030\n\024MAIL_TYPE_MONTH_CARD"
      "\020\003\022\034\n\030MAIL_TYPE_RANKING_REWARD\020\004\022\023\n\017MAIL"
      "_TYPE_GUILD\020\005\022\031\n\025MAIL_TYPE_LV_SHOPPING\020\006"
      "\"N\n\nMAIL_STATE\022\021\n\004BURN\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007INV"
      "ALID\020\000\022\n\n\006UNREAD\020\001\022\010\n\004READ\020\002\022\n\n\006ACCEPT\020\003"
      "\"*\n\014MailDataList\022\032\n\004list\030\001 \003(\0132\014.sg.Mail"
      "Data\"\214\003\n\016MailboxService\022.\n\003req\030\001 \001(\0132!.s"
      "g.MailboxService.MailboxRequest\0220\n\004resp\030"
      "\002 \001(\0132\".sg.MailboxService.MailboxRespons"
      "e\032Q\n\016MailboxRequest\022/\n\003cmd\030\001 \002(\0162\".sg.Ma"
      "ilboxService.MAILBOX_COMMAND\022\016\n\006mailid\030\002"
      " \001(\004\032i\n\017MailboxResponse\022\016\n\006result\030\001 \001(\005\022"
      "#\n\tmail_list\030\002 \001(\0132\020.sg.MailDataList\022!\n\r"
      "out_drop_list\030\013 \003(\0132\n.sg.Reward\"Z\n\017MAILB"
      "OX_COMMAND\022\t\n\005QUERY\020\001\022\010\n\004READ\020\002\022\n\n\006ACCEP"
      "T\020\003\022\010\n\004BURN\020\004\022\016\n\nACCEPT_ALL\020\005\022\014\n\010BURN_AL"
      "L\020\006\"4\n\rNewMailNotify\022#\n\tmail_list\030\001 \001(\0132"
      "\020.sg.MailDataListB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1302);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Mail.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Mail_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* ItemAny_ITEM_TYPE_descriptor() {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Mail_2eproto::file_level_enum_descriptors[0];
}
bool ItemAny_ITEM_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ItemAny_ITEM_TYPE ItemAny::ITEM_NONE;
const ItemAny_ITEM_TYPE ItemAny::ITEM_RESOURCE;
const ItemAny_ITEM_TYPE ItemAny::ITEM_TYPE_MIN;
const ItemAny_ITEM_TYPE ItemAny::ITEM_TYPE_MAX;
const int ItemAny::ITEM_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MailData_MAIL_TYPE_descriptor() {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Mail_2eproto::file_level_enum_descriptors[1];
}
bool MailData_MAIL_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MailData_MAIL_TYPE MailData::MAIL_TYPE_UNKNOWN;
const MailData_MAIL_TYPE MailData::MAIL_TYPE_COMPENSATE;
const MailData_MAIL_TYPE MailData::MAIL_TYPE_FIRST_CHARGE;
const MailData_MAIL_TYPE MailData::MAIL_TYPE_MONTH_CARD;
const MailData_MAIL_TYPE MailData::MAIL_TYPE_RANKING_REWARD;
const MailData_MAIL_TYPE MailData::MAIL_TYPE_GUILD;
const MailData_MAIL_TYPE MailData::MAIL_TYPE_LV_SHOPPING;
const MailData_MAIL_TYPE MailData::MAIL_TYPE_MIN;
const MailData_MAIL_TYPE MailData::MAIL_TYPE_MAX;
const int MailData::MAIL_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MailData_MAIL_STATE_descriptor() {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Mail_2eproto::file_level_enum_descriptors[2];
}
bool MailData_MAIL_STATE_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MailData_MAIL_STATE MailData::BURN;
const MailData_MAIL_STATE MailData::INVALID;
const MailData_MAIL_STATE MailData::UNREAD;
const MailData_MAIL_STATE MailData::READ;
const MailData_MAIL_STATE MailData::ACCEPT;
const MailData_MAIL_STATE MailData::MAIL_STATE_MIN;
const MailData_MAIL_STATE MailData::MAIL_STATE_MAX;
const int MailData::MAIL_STATE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MailboxService_MAILBOX_COMMAND_descriptor() {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Mail_2eproto::file_level_enum_descriptors[3];
}
bool MailboxService_MAILBOX_COMMAND_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MailboxService_MAILBOX_COMMAND MailboxService::QUERY;
const MailboxService_MAILBOX_COMMAND MailboxService::READ;
const MailboxService_MAILBOX_COMMAND MailboxService::ACCEPT;
const MailboxService_MAILBOX_COMMAND MailboxService::BURN;
const MailboxService_MAILBOX_COMMAND MailboxService::ACCEPT_ALL;
const MailboxService_MAILBOX_COMMAND MailboxService::BURN_ALL;
const MailboxService_MAILBOX_COMMAND MailboxService::MAILBOX_COMMAND_MIN;
const MailboxService_MAILBOX_COMMAND MailboxService::MAILBOX_COMMAND_MAX;
const int MailboxService::MAILBOX_COMMAND_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ItemAny::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemAny::kItemTypeFieldNumber;
const int ItemAny::kItemTypeidFieldNumber;
const int ItemAny::kValFieldNumber;
const int ItemAny::kProbabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemAny::ItemAny()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_ItemAny.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ItemAny)
}
ItemAny::ItemAny(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_ItemAny.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ItemAny)
}
ItemAny::ItemAny(const ItemAny& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_typeid_, &from.item_typeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&probability_) -
    reinterpret_cast<char*>(&item_typeid_)) + sizeof(probability_));
  // @@protoc_insertion_point(copy_constructor:sg.ItemAny)
}

void ItemAny::SharedCtor() {
  ::memset(&item_typeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&item_typeid_)) + sizeof(probability_));
}

ItemAny::~ItemAny() {
  // @@protoc_insertion_point(destructor:sg.ItemAny)
  SharedDtor();
}

void ItemAny::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ItemAny::ArenaDtor(void* object) {
  ItemAny* _this = reinterpret_cast< ItemAny* >(object);
  (void)_this;
}
void ItemAny::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ItemAny::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItemAny::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemAny& ItemAny::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_ItemAny.base);
  return *internal_default_instance();
}


void ItemAny::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ItemAny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&item_typeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&probability_) -
        reinterpret_cast<char*>(&item_typeid_)) + sizeof(probability_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemAny::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ItemAny)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 item_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 item_typeid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float probability = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_probability();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ItemAny)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ItemAny)
  return false;
#undef DO_
}

void ItemAny::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ItemAny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 item_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_type(), output);
  }

  // required uint64 item_typeid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_typeid(), output);
  }

  // optional int32 val = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->val(), output);
  }

  // optional float probability = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->probability(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ItemAny)
}

::google::protobuf::uint8* ItemAny::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ItemAny)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 item_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_type(), target);
  }

  // required uint64 item_typeid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_typeid(), target);
  }

  // optional int32 val = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->val(), target);
  }

  // optional float probability = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->probability(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ItemAny)
  return target;
}

size_t ItemAny::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.ItemAny)
  size_t total_size = 0;

  if (has_item_typeid()) {
    // required uint64 item_typeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());
  }

  if (has_item_type()) {
    // required uint32 item_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_type());
  }

  return total_size;
}
size_t ItemAny::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ItemAny)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 item_typeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());

    // required uint32 item_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional int32 val = 3;
    if (has_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val());
    }

    // optional float probability = 4;
    if (has_probability()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemAny::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ItemAny)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemAny* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemAny>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ItemAny)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ItemAny)
    MergeFrom(*source);
  }
}

void ItemAny::MergeFrom(const ItemAny& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ItemAny)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_typeid_ = from.item_typeid_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_type_ = from.item_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      val_ = from.val_;
    }
    if (cached_has_bits & 0x00000008u) {
      probability_ = from.probability_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ItemAny::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ItemAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemAny::CopyFrom(const ItemAny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ItemAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemAny::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ItemAny::Swap(ItemAny* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ItemAny* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ItemAny::UnsafeArenaSwap(ItemAny* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ItemAny::InternalSwap(ItemAny* other) {
  using std::swap;
  swap(item_typeid_, other->item_typeid_);
  swap(item_type_, other->item_type_);
  swap(val_, other->val_);
  swap(probability_, other->probability_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItemAny::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemAnyList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemAnyList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemAnyList::ItemAnyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_ItemAnyList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ItemAnyList)
}
ItemAnyList::ItemAnyList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_ItemAnyList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ItemAnyList)
}
ItemAnyList::ItemAnyList(const ItemAnyList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sg.ItemAnyList)
}

void ItemAnyList::SharedCtor() {
}

ItemAnyList::~ItemAnyList() {
  // @@protoc_insertion_point(destructor:sg.ItemAnyList)
  SharedDtor();
}

void ItemAnyList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ItemAnyList::ArenaDtor(void* object) {
  ItemAnyList* _this = reinterpret_cast< ItemAnyList* >(object);
  (void)_this;
}
void ItemAnyList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ItemAnyList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItemAnyList::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemAnyList& ItemAnyList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_ItemAnyList.base);
  return *internal_default_instance();
}


void ItemAnyList::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ItemAnyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemAnyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ItemAnyList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sg.ItemAny list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ItemAnyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ItemAnyList)
  return false;
#undef DO_
}

void ItemAnyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ItemAnyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sg.ItemAny list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ItemAnyList)
}

::google::protobuf::uint8* ItemAnyList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ItemAnyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sg.ItemAny list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ItemAnyList)
  return target;
}

size_t ItemAnyList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ItemAnyList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .sg.ItemAny list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemAnyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ItemAnyList)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemAnyList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemAnyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ItemAnyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ItemAnyList)
    MergeFrom(*source);
  }
}

void ItemAnyList::MergeFrom(const ItemAnyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ItemAnyList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ItemAnyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ItemAnyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemAnyList::CopyFrom(const ItemAnyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ItemAnyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemAnyList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ItemAnyList::Swap(ItemAnyList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ItemAnyList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ItemAnyList::UnsafeArenaSwap(ItemAnyList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ItemAnyList::InternalSwap(ItemAnyList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItemAnyList::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemDrop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemDrop::kDropTypeidFieldNumber;
const int ItemDrop::kDropNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemDrop::ItemDrop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_ItemDrop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ItemDrop)
}
ItemDrop::ItemDrop(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_ItemDrop.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ItemDrop)
}
ItemDrop::ItemDrop(const ItemDrop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&drop_typeid_, &from.drop_typeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&drop_num_) -
    reinterpret_cast<char*>(&drop_typeid_)) + sizeof(drop_num_));
  // @@protoc_insertion_point(copy_constructor:sg.ItemDrop)
}

void ItemDrop::SharedCtor() {
  ::memset(&drop_typeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drop_num_) -
      reinterpret_cast<char*>(&drop_typeid_)) + sizeof(drop_num_));
}

ItemDrop::~ItemDrop() {
  // @@protoc_insertion_point(destructor:sg.ItemDrop)
  SharedDtor();
}

void ItemDrop::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ItemDrop::ArenaDtor(void* object) {
  ItemDrop* _this = reinterpret_cast< ItemDrop* >(object);
  (void)_this;
}
void ItemDrop::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ItemDrop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItemDrop::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemDrop& ItemDrop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_ItemDrop.base);
  return *internal_default_instance();
}


void ItemDrop::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ItemDrop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&drop_typeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&drop_num_) -
        reinterpret_cast<char*>(&drop_typeid_)) + sizeof(drop_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemDrop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ItemDrop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 drop_typeid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_drop_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &drop_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 drop_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_drop_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drop_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ItemDrop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ItemDrop)
  return false;
#undef DO_
}

void ItemDrop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ItemDrop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 drop_typeid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->drop_typeid(), output);
  }

  // optional int32 drop_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->drop_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ItemDrop)
}

::google::protobuf::uint8* ItemDrop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ItemDrop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 drop_typeid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->drop_typeid(), target);
  }

  // optional int32 drop_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->drop_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ItemDrop)
  return target;
}

size_t ItemDrop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ItemDrop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 drop_typeid = 1;
  if (has_drop_typeid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->drop_typeid());
  }
  // optional int32 drop_num = 2;
  if (has_drop_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->drop_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemDrop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ItemDrop)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemDrop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemDrop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ItemDrop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ItemDrop)
    MergeFrom(*source);
  }
}

void ItemDrop::MergeFrom(const ItemDrop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ItemDrop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      drop_typeid_ = from.drop_typeid_;
    }
    if (cached_has_bits & 0x00000002u) {
      drop_num_ = from.drop_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ItemDrop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ItemDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemDrop::CopyFrom(const ItemDrop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ItemDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemDrop::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ItemDrop::Swap(ItemDrop* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ItemDrop* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ItemDrop::UnsafeArenaSwap(ItemDrop* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ItemDrop::InternalSwap(ItemDrop* other) {
  using std::swap;
  swap(drop_typeid_, other->drop_typeid_);
  swap(drop_num_, other->drop_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItemDrop::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemDropList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemDropList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemDropList::ItemDropList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_ItemDropList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ItemDropList)
}
ItemDropList::ItemDropList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_ItemDropList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ItemDropList)
}
ItemDropList::ItemDropList(const ItemDropList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sg.ItemDropList)
}

void ItemDropList::SharedCtor() {
}

ItemDropList::~ItemDropList() {
  // @@protoc_insertion_point(destructor:sg.ItemDropList)
  SharedDtor();
}

void ItemDropList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ItemDropList::ArenaDtor(void* object) {
  ItemDropList* _this = reinterpret_cast< ItemDropList* >(object);
  (void)_this;
}
void ItemDropList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ItemDropList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItemDropList::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemDropList& ItemDropList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_ItemDropList.base);
  return *internal_default_instance();
}


void ItemDropList::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ItemDropList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemDropList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ItemDropList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sg.ItemDrop list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ItemDropList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ItemDropList)
  return false;
#undef DO_
}

void ItemDropList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ItemDropList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sg.ItemDrop list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ItemDropList)
}

::google::protobuf::uint8* ItemDropList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ItemDropList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sg.ItemDrop list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ItemDropList)
  return target;
}

size_t ItemDropList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ItemDropList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .sg.ItemDrop list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemDropList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ItemDropList)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemDropList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemDropList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ItemDropList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ItemDropList)
    MergeFrom(*source);
  }
}

void ItemDropList::MergeFrom(const ItemDropList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ItemDropList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ItemDropList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ItemDropList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemDropList::CopyFrom(const ItemDropList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ItemDropList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemDropList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ItemDropList::Swap(ItemDropList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ItemDropList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ItemDropList::UnsafeArenaSwap(ItemDropList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ItemDropList::InternalSwap(ItemDropList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItemDropList::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MailData::InitAsDefaultInstance() {
  ::sg::_MailData_default_instance_._instance.get_mutable()->attachment_list_ = const_cast< ::sg::ItemAnyList*>(
      ::sg::ItemAnyList::internal_default_instance());
}
void MailData::unsafe_arena_set_allocated_attachment_list(
    ::sg::ItemAnyList* attachment_list) {
  if (GetArenaNoVirtual() == NULL) {
    delete attachment_list_;
  }
  attachment_list_ = attachment_list;
  if (attachment_list) {
    set_has_attachment_list();
  } else {
    clear_has_attachment_list();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.MailData.attachment_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailData::kMailidFieldNumber;
const int MailData::kTypeFieldNumber;
const int MailData::kStateFieldNumber;
const int MailData::kSubjectFieldNumber;
const int MailData::kContentFieldNumber;
const int MailData::kAttachmentListFieldNumber;
const int MailData::kCreatetimeFieldNumber;
const int MailData::kBurntimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailData::MailData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_MailData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.MailData)
}
MailData::MailData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailData.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.MailData)
}
MailData::MailData(const MailData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_subject()) {
    subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject(),
      GetArenaNoVirtual());
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content(),
      GetArenaNoVirtual());
  }
  if (from.has_attachment_list()) {
    attachment_list_ = new ::sg::ItemAnyList(*from.attachment_list_);
  } else {
    attachment_list_ = NULL;
  }
  ::memcpy(&mailid_, &from.mailid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&mailid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:sg.MailData)
}

void MailData::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&attachment_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&burntime_) -
      reinterpret_cast<char*>(&attachment_list_)) + sizeof(burntime_));
  state_ = -1;
}

MailData::~MailData() {
  // @@protoc_insertion_point(destructor:sg.MailData)
  SharedDtor();
}

void MailData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete attachment_list_;
}

void MailData::ArenaDtor(void* object) {
  MailData* _this = reinterpret_cast< MailData* >(object);
  (void)_this;
}
void MailData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MailData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MailData::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailData& MailData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailData.base);
  return *internal_default_instance();
}


void MailData::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      subject_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      content_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(attachment_list_ != NULL);
      attachment_list_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&mailid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&burntime_) -
        reinterpret_cast<char*>(&mailid_)) + sizeof(burntime_));
    state_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.MailData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 mailid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .sg.MailData.MAIL_TYPE type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::MailData_MAIL_TYPE_IsValid(value)) {
            set_type(static_cast< ::sg::MailData_MAIL_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .sg.MailData.MAIL_STATE state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::MailData_MAIL_STATE_IsValid(value)) {
            set_state(static_cast< ::sg::MailData_MAIL_STATE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes subject = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes content = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .sg.ItemAnyList attachment_list = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 createtime = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 burntime = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1u /* 257 & 0xFF */)) {
          set_has_burntime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &burntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.MailData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.MailData)
  return false;
#undef DO_
}

void MailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 mailid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mailid(), output);
  }

  // required .sg.MailData.MAIL_TYPE type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required .sg.MailData.MAIL_STATE state = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // required bytes subject = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->subject(), output);
  }

  // required bytes content = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->content(), output);
  }

  // required .sg.ItemAnyList attachment_list = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_attachment_list(), output);
  }

  // required sfixed64 createtime = 31;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(31, this->createtime(), output);
  }

  // required sfixed64 burntime = 32;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(32, this->burntime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.MailData)
}

::google::protobuf::uint8* MailData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 mailid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mailid(), target);
  }

  // required .sg.MailData.MAIL_TYPE type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required .sg.MailData.MAIL_STATE state = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // required bytes subject = 11;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->subject(), target);
  }

  // required bytes content = 12;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->content(), target);
  }

  // required .sg.ItemAnyList attachment_list = 21;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_attachment_list(), deterministic, target);
  }

  // required sfixed64 createtime = 31;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(31, this->createtime(), target);
  }

  // required sfixed64 burntime = 32;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(32, this->burntime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.MailData)
  return target;
}

size_t MailData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.MailData)
  size_t total_size = 0;

  if (has_subject()) {
    // required bytes subject = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->subject());
  }

  if (has_content()) {
    // required bytes content = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  if (has_attachment_list()) {
    // required .sg.ItemAnyList attachment_list = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attachment_list_);
  }

  if (has_mailid()) {
    // required int64 mailid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->mailid());
  }

  if (has_type()) {
    // required .sg.MailData.MAIL_TYPE type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_createtime()) {
    // required sfixed64 createtime = 31;
    total_size += 2 + 8;
  }

  if (has_burntime()) {
    // required sfixed64 burntime = 32;
    total_size += 2 + 8;
  }

  if (has_state()) {
    // required .sg.MailData.MAIL_STATE state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  return total_size;
}
size_t MailData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.MailData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required bytes subject = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->subject());

    // required bytes content = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());

    // required .sg.ItemAnyList attachment_list = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attachment_list_);

    // required int64 mailid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->mailid());

    // required .sg.MailData.MAIL_TYPE type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required sfixed64 createtime = 31;
    total_size += 2 + 8;

    // required sfixed64 burntime = 32;
    total_size += 2 + 8;

    // required .sg.MailData.MAIL_STATE state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MailData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.MailData)
  GOOGLE_DCHECK_NE(&from, this);
  const MailData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.MailData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.MailData)
    MergeFrom(*source);
  }
}

void MailData::MergeFrom(const MailData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.MailData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_subject(from.subject());
    }
    if (cached_has_bits & 0x00000002u) {
      set_content(from.content());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_attachment_list()->::sg::ItemAnyList::MergeFrom(from.attachment_list());
    }
    if (cached_has_bits & 0x00000008u) {
      mailid_ = from.mailid_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00000040u) {
      burntime_ = from.burntime_;
    }
    if (cached_has_bits & 0x00000080u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MailData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.MailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailData::CopyFrom(const MailData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.MailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailData::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  if (has_attachment_list()) {
    if (!this->attachment_list_->IsInitialized()) return false;
  }
  return true;
}

void MailData::Swap(MailData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MailData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MailData::UnsafeArenaSwap(MailData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MailData::InternalSwap(MailData* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(attachment_list_, other->attachment_list_);
  swap(mailid_, other->mailid_);
  swap(type_, other->type_);
  swap(createtime_, other->createtime_);
  swap(burntime_, other->burntime_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MailData::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MailDataList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailDataList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailDataList::MailDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_MailDataList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.MailDataList)
}
MailDataList::MailDataList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailDataList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.MailDataList)
}
MailDataList::MailDataList(const MailDataList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sg.MailDataList)
}

void MailDataList::SharedCtor() {
}

MailDataList::~MailDataList() {
  // @@protoc_insertion_point(destructor:sg.MailDataList)
  SharedDtor();
}

void MailDataList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MailDataList::ArenaDtor(void* object) {
  MailDataList* _this = reinterpret_cast< MailDataList* >(object);
  (void)_this;
}
void MailDataList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MailDataList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MailDataList::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailDataList& MailDataList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailDataList.base);
  return *internal_default_instance();
}


void MailDataList::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.MailDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.MailDataList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sg.MailData list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.MailDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.MailDataList)
  return false;
#undef DO_
}

void MailDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.MailDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sg.MailData list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.MailDataList)
}

::google::protobuf::uint8* MailDataList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.MailDataList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sg.MailData list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.MailDataList)
  return target;
}

size_t MailDataList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.MailDataList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .sg.MailData list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MailDataList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.MailDataList)
  GOOGLE_DCHECK_NE(&from, this);
  const MailDataList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailDataList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.MailDataList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.MailDataList)
    MergeFrom(*source);
  }
}

void MailDataList::MergeFrom(const MailDataList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.MailDataList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void MailDataList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.MailDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailDataList::CopyFrom(const MailDataList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.MailDataList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailDataList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void MailDataList::Swap(MailDataList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MailDataList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MailDataList::UnsafeArenaSwap(MailDataList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MailDataList::InternalSwap(MailDataList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MailDataList::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MailboxService_MailboxRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailboxService_MailboxRequest::kCmdFieldNumber;
const int MailboxService_MailboxRequest::kMailidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailboxService_MailboxRequest::MailboxService_MailboxRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_MailboxService_MailboxRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.MailboxService.MailboxRequest)
}
MailboxService_MailboxRequest::MailboxService_MailboxRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailboxService_MailboxRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.MailboxService.MailboxRequest)
}
MailboxService_MailboxRequest::MailboxService_MailboxRequest(const MailboxService_MailboxRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mailid_, &from.mailid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&mailid_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.MailboxService.MailboxRequest)
}

void MailboxService_MailboxRequest::SharedCtor() {
  mailid_ = GOOGLE_ULONGLONG(0);
  cmd_ = 1;
}

MailboxService_MailboxRequest::~MailboxService_MailboxRequest() {
  // @@protoc_insertion_point(destructor:sg.MailboxService.MailboxRequest)
  SharedDtor();
}

void MailboxService_MailboxRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MailboxService_MailboxRequest::ArenaDtor(void* object) {
  MailboxService_MailboxRequest* _this = reinterpret_cast< MailboxService_MailboxRequest* >(object);
  (void)_this;
}
void MailboxService_MailboxRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MailboxService_MailboxRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MailboxService_MailboxRequest::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailboxService_MailboxRequest& MailboxService_MailboxRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailboxService_MailboxRequest.base);
  return *internal_default_instance();
}


void MailboxService_MailboxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.MailboxService.MailboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    mailid_ = GOOGLE_ULONGLONG(0);
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailboxService_MailboxRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.MailboxService.MailboxRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.MailboxService.MAILBOX_COMMAND cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::MailboxService_MAILBOX_COMMAND_IsValid(value)) {
            set_cmd(static_cast< ::sg::MailboxService_MAILBOX_COMMAND >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.MailboxService.MailboxRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.MailboxService.MailboxRequest)
  return false;
#undef DO_
}

void MailboxService_MailboxRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.MailboxService.MailboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.MailboxService.MAILBOX_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional uint64 mailid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mailid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.MailboxService.MailboxRequest)
}

::google::protobuf::uint8* MailboxService_MailboxRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.MailboxService.MailboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.MailboxService.MAILBOX_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional uint64 mailid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mailid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.MailboxService.MailboxRequest)
  return target;
}

size_t MailboxService_MailboxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.MailboxService.MailboxRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.MailboxService.MAILBOX_COMMAND cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // optional uint64 mailid = 2;
  if (has_mailid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mailid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MailboxService_MailboxRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.MailboxService.MailboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MailboxService_MailboxRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailboxService_MailboxRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.MailboxService.MailboxRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.MailboxService.MailboxRequest)
    MergeFrom(*source);
  }
}

void MailboxService_MailboxRequest::MergeFrom(const MailboxService_MailboxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.MailboxService.MailboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mailid_ = from.mailid_;
    }
    if (cached_has_bits & 0x00000002u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MailboxService_MailboxRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.MailboxService.MailboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailboxService_MailboxRequest::CopyFrom(const MailboxService_MailboxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.MailboxService.MailboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailboxService_MailboxRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void MailboxService_MailboxRequest::Swap(MailboxService_MailboxRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MailboxService_MailboxRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MailboxService_MailboxRequest::UnsafeArenaSwap(MailboxService_MailboxRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MailboxService_MailboxRequest::InternalSwap(MailboxService_MailboxRequest* other) {
  using std::swap;
  swap(mailid_, other->mailid_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MailboxService_MailboxRequest::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MailboxService_MailboxResponse::InitAsDefaultInstance() {
  ::sg::_MailboxService_MailboxResponse_default_instance_._instance.get_mutable()->mail_list_ = const_cast< ::sg::MailDataList*>(
      ::sg::MailDataList::internal_default_instance());
}
void MailboxService_MailboxResponse::unsafe_arena_set_allocated_mail_list(
    ::sg::MailDataList* mail_list) {
  if (GetArenaNoVirtual() == NULL) {
    delete mail_list_;
  }
  mail_list_ = mail_list;
  if (mail_list) {
    set_has_mail_list();
  } else {
    clear_has_mail_list();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.MailboxService.MailboxResponse.mail_list)
}
void MailboxService_MailboxResponse::clear_out_drop_list() {
  out_drop_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailboxService_MailboxResponse::kResultFieldNumber;
const int MailboxService_MailboxResponse::kMailListFieldNumber;
const int MailboxService_MailboxResponse::kOutDropListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailboxService_MailboxResponse::MailboxService_MailboxResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_MailboxService_MailboxResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.MailboxService.MailboxResponse)
}
MailboxService_MailboxResponse::MailboxService_MailboxResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  out_drop_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailboxService_MailboxResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.MailboxService.MailboxResponse)
}
MailboxService_MailboxResponse::MailboxService_MailboxResponse(const MailboxService_MailboxResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      out_drop_list_(from.out_drop_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mail_list()) {
    mail_list_ = new ::sg::MailDataList(*from.mail_list_);
  } else {
    mail_list_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.MailboxService.MailboxResponse)
}

void MailboxService_MailboxResponse::SharedCtor() {
  ::memset(&mail_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&mail_list_)) + sizeof(result_));
}

MailboxService_MailboxResponse::~MailboxService_MailboxResponse() {
  // @@protoc_insertion_point(destructor:sg.MailboxService.MailboxResponse)
  SharedDtor();
}

void MailboxService_MailboxResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete mail_list_;
}

void MailboxService_MailboxResponse::ArenaDtor(void* object) {
  MailboxService_MailboxResponse* _this = reinterpret_cast< MailboxService_MailboxResponse* >(object);
  (void)_this;
}
void MailboxService_MailboxResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MailboxService_MailboxResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MailboxService_MailboxResponse::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailboxService_MailboxResponse& MailboxService_MailboxResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailboxService_MailboxResponse.base);
  return *internal_default_instance();
}


void MailboxService_MailboxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.MailboxService.MailboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  out_drop_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(mail_list_ != NULL);
    mail_list_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailboxService_MailboxResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.MailboxService.MailboxResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.MailDataList mail_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mail_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Reward out_drop_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_out_drop_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.MailboxService.MailboxResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.MailboxService.MailboxResponse)
  return false;
#undef DO_
}

void MailboxService_MailboxResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.MailboxService.MailboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .sg.MailDataList mail_list = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_mail_list(), output);
  }

  // repeated .sg.Reward out_drop_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->out_drop_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->out_drop_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.MailboxService.MailboxResponse)
}

::google::protobuf::uint8* MailboxService_MailboxResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.MailboxService.MailboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .sg.MailDataList mail_list = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_mail_list(), deterministic, target);
  }

  // repeated .sg.Reward out_drop_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->out_drop_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->out_drop_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.MailboxService.MailboxResponse)
  return target;
}

size_t MailboxService_MailboxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.MailboxService.MailboxResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .sg.Reward out_drop_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->out_drop_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->out_drop_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.MailDataList mail_list = 2;
    if (has_mail_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *mail_list_);
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MailboxService_MailboxResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.MailboxService.MailboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MailboxService_MailboxResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailboxService_MailboxResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.MailboxService.MailboxResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.MailboxService.MailboxResponse)
    MergeFrom(*source);
  }
}

void MailboxService_MailboxResponse::MergeFrom(const MailboxService_MailboxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.MailboxService.MailboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  out_drop_list_.MergeFrom(from.out_drop_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_mail_list()->::sg::MailDataList::MergeFrom(from.mail_list());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MailboxService_MailboxResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.MailboxService.MailboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailboxService_MailboxResponse::CopyFrom(const MailboxService_MailboxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.MailboxService.MailboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailboxService_MailboxResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->out_drop_list())) return false;
  if (has_mail_list()) {
    if (!this->mail_list_->IsInitialized()) return false;
  }
  return true;
}

void MailboxService_MailboxResponse::Swap(MailboxService_MailboxResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MailboxService_MailboxResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MailboxService_MailboxResponse::UnsafeArenaSwap(MailboxService_MailboxResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MailboxService_MailboxResponse::InternalSwap(MailboxService_MailboxResponse* other) {
  using std::swap;
  CastToBase(&out_drop_list_)->InternalSwap(CastToBase(&other->out_drop_list_));
  swap(mail_list_, other->mail_list_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MailboxService_MailboxResponse::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MailboxService::InitAsDefaultInstance() {
  ::sg::_MailboxService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::MailboxService_MailboxRequest*>(
      ::sg::MailboxService_MailboxRequest::internal_default_instance());
  ::sg::_MailboxService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::MailboxService_MailboxResponse*>(
      ::sg::MailboxService_MailboxResponse::internal_default_instance());
}
void MailboxService::unsafe_arena_set_allocated_req(
    ::sg::MailboxService_MailboxRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.MailboxService.req)
}
void MailboxService::unsafe_arena_set_allocated_resp(
    ::sg::MailboxService_MailboxResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.MailboxService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailboxService::kReqFieldNumber;
const int MailboxService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailboxService::MailboxService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_MailboxService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.MailboxService)
}
MailboxService::MailboxService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailboxService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.MailboxService)
}
MailboxService::MailboxService(const MailboxService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::MailboxService_MailboxRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::MailboxService_MailboxResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.MailboxService)
}

void MailboxService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

MailboxService::~MailboxService() {
  // @@protoc_insertion_point(destructor:sg.MailboxService)
  SharedDtor();
}

void MailboxService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void MailboxService::ArenaDtor(void* object) {
  MailboxService* _this = reinterpret_cast< MailboxService* >(object);
  (void)_this;
}
void MailboxService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MailboxService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MailboxService::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailboxService& MailboxService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_MailboxService.base);
  return *internal_default_instance();
}


void MailboxService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.MailboxService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailboxService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.MailboxService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.MailboxService.MailboxRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.MailboxService.MailboxResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.MailboxService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.MailboxService)
  return false;
#undef DO_
}

void MailboxService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.MailboxService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.MailboxService.MailboxRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.MailboxService.MailboxResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.MailboxService)
}

::google::protobuf::uint8* MailboxService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.MailboxService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.MailboxService.MailboxRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.MailboxService.MailboxResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.MailboxService)
  return target;
}

size_t MailboxService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.MailboxService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.MailboxService.MailboxRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.MailboxService.MailboxResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MailboxService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.MailboxService)
  GOOGLE_DCHECK_NE(&from, this);
  const MailboxService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailboxService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.MailboxService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.MailboxService)
    MergeFrom(*source);
  }
}

void MailboxService::MergeFrom(const MailboxService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.MailboxService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::MailboxService_MailboxRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::MailboxService_MailboxResponse::MergeFrom(from.resp());
    }
  }
}

void MailboxService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.MailboxService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailboxService::CopyFrom(const MailboxService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.MailboxService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailboxService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void MailboxService::Swap(MailboxService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MailboxService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MailboxService::UnsafeArenaSwap(MailboxService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MailboxService::InternalSwap(MailboxService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MailboxService::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewMailNotify::InitAsDefaultInstance() {
  ::sg::_NewMailNotify_default_instance_._instance.get_mutable()->mail_list_ = const_cast< ::sg::MailDataList*>(
      ::sg::MailDataList::internal_default_instance());
}
void NewMailNotify::unsafe_arena_set_allocated_mail_list(
    ::sg::MailDataList* mail_list) {
  if (GetArenaNoVirtual() == NULL) {
    delete mail_list_;
  }
  mail_list_ = mail_list;
  if (mail_list) {
    set_has_mail_list();
  } else {
    clear_has_mail_list();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.NewMailNotify.mail_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewMailNotify::kMailListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewMailNotify::NewMailNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mail_2eproto::scc_info_NewMailNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.NewMailNotify)
}
NewMailNotify::NewMailNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_NewMailNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.NewMailNotify)
}
NewMailNotify::NewMailNotify(const NewMailNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mail_list()) {
    mail_list_ = new ::sg::MailDataList(*from.mail_list_);
  } else {
    mail_list_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.NewMailNotify)
}

void NewMailNotify::SharedCtor() {
  mail_list_ = NULL;
}

NewMailNotify::~NewMailNotify() {
  // @@protoc_insertion_point(destructor:sg.NewMailNotify)
  SharedDtor();
}

void NewMailNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete mail_list_;
}

void NewMailNotify::ArenaDtor(void* object) {
  NewMailNotify* _this = reinterpret_cast< NewMailNotify* >(object);
  (void)_this;
}
void NewMailNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void NewMailNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewMailNotify::descriptor() {
  ::protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewMailNotify& NewMailNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mail_2eproto::scc_info_NewMailNotify.base);
  return *internal_default_instance();
}


void NewMailNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.NewMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(mail_list_ != NULL);
    mail_list_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewMailNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.NewMailNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.MailDataList mail_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mail_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.NewMailNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.NewMailNotify)
  return false;
#undef DO_
}

void NewMailNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.NewMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.MailDataList mail_list = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_mail_list(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.NewMailNotify)
}

::google::protobuf::uint8* NewMailNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.NewMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.MailDataList mail_list = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_mail_list(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.NewMailNotify)
  return target;
}

size_t NewMailNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.NewMailNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .sg.MailDataList mail_list = 1;
  if (has_mail_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mail_list_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewMailNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.NewMailNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const NewMailNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewMailNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.NewMailNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.NewMailNotify)
    MergeFrom(*source);
  }
}

void NewMailNotify::MergeFrom(const NewMailNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.NewMailNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mail_list()) {
    mutable_mail_list()->::sg::MailDataList::MergeFrom(from.mail_list());
  }
}

void NewMailNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.NewMailNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewMailNotify::CopyFrom(const NewMailNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.NewMailNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewMailNotify::IsInitialized() const {
  if (has_mail_list()) {
    if (!this->mail_list_->IsInitialized()) return false;
  }
  return true;
}

void NewMailNotify::Swap(NewMailNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    NewMailNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void NewMailNotify::UnsafeArenaSwap(NewMailNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void NewMailNotify::InternalSwap(NewMailNotify* other) {
  using std::swap;
  swap(mail_list_, other->mail_list_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewMailNotify::GetMetadata() const {
  protobuf_Mail_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mail_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ItemAny* Arena::CreateMaybeMessage< ::sg::ItemAny >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ItemAny >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ItemAnyList* Arena::CreateMaybeMessage< ::sg::ItemAnyList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ItemAnyList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ItemDrop* Arena::CreateMaybeMessage< ::sg::ItemDrop >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ItemDrop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ItemDropList* Arena::CreateMaybeMessage< ::sg::ItemDropList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ItemDropList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::MailData* Arena::CreateMaybeMessage< ::sg::MailData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::MailData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::MailDataList* Arena::CreateMaybeMessage< ::sg::MailDataList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::MailDataList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::MailboxService_MailboxRequest* Arena::CreateMaybeMessage< ::sg::MailboxService_MailboxRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::MailboxService_MailboxRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::MailboxService_MailboxResponse* Arena::CreateMaybeMessage< ::sg::MailboxService_MailboxResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::MailboxService_MailboxResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::MailboxService* Arena::CreateMaybeMessage< ::sg::MailboxService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::MailboxService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::NewMailNotify* Arena::CreateMaybeMessage< ::sg::NewMailNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::NewMailNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
