// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserSailor.proto

#include "UserSailor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Item;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SailorSkill;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_pb_pair_int_int;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Sailor;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_UserSailor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserSailor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SailorDelegate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserSailor_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserSailorService_UserSailorResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserSailor_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserSailorStrengthenService_UserSailorStrengthenRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserSailor_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UserSailorService_UserSailorRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserSailor_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UserSailorStrengthenService_UserSailorStrengthenResponse;
}  // namespace protobuf_UserSailor_2eproto
namespace sg {
class SailorDelegateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SailorDelegate>
      _instance;
} _SailorDelegate_default_instance_;
class UserSailorService_UserSailorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserSailorService_UserSailorRequest>
      _instance;
} _UserSailorService_UserSailorRequest_default_instance_;
class UserSailorService_UserSailorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserSailorService_UserSailorResponse>
      _instance;
} _UserSailorService_UserSailorResponse_default_instance_;
class UserSailorServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserSailorService>
      _instance;
} _UserSailorService_default_instance_;
class UserSailorStrengthenService_UserSailorStrengthenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserSailorStrengthenService_UserSailorStrengthenRequest>
      _instance;
} _UserSailorStrengthenService_UserSailorStrengthenRequest_default_instance_;
class UserSailorStrengthenService_UserSailorStrengthenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserSailorStrengthenService_UserSailorStrengthenResponse>
      _instance;
} _UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_;
class UserSailorStrengthenServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserSailorStrengthenService>
      _instance;
} _UserSailorStrengthenService_default_instance_;
class SailorStateNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SailorStateNotify>
      _instance;
} _SailorStateNotify_default_instance_;
class SailorFarmSkillNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SailorFarmSkillNotify>
      _instance;
} _SailorFarmSkillNotify_default_instance_;
}  // namespace sg
namespace protobuf_UserSailor_2eproto {
static void InitDefaultsSailorDelegate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_SailorDelegate_default_instance_;
    new (ptr) ::sg::SailorDelegate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::SailorDelegate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SailorDelegate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSailorDelegate}, {}};

static void InitDefaultsUserSailorService_UserSailorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserSailorService_UserSailorRequest_default_instance_;
    new (ptr) ::sg::UserSailorService_UserSailorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserSailorService_UserSailorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserSailorService_UserSailorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserSailorService_UserSailorRequest}, {
      &protobuf_UserSailor_2eproto::scc_info_SailorDelegate.base,
      &protobuf_BaseStruct_2eproto::scc_info_pb_pair_int_int.base,}};

static void InitDefaultsUserSailorService_UserSailorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserSailorService_UserSailorResponse_default_instance_;
    new (ptr) ::sg::UserSailorService_UserSailorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserSailorService_UserSailorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserSailorService_UserSailorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserSailorService_UserSailorResponse}, {
      &protobuf_BaseStruct_2eproto::scc_info_Sailor.base,}};

static void InitDefaultsUserSailorService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserSailorService_default_instance_;
    new (ptr) ::sg::UserSailorService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserSailorService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserSailorService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserSailorService}, {
      &protobuf_UserSailor_2eproto::scc_info_UserSailorService_UserSailorRequest.base,
      &protobuf_UserSailor_2eproto::scc_info_UserSailorService_UserSailorResponse.base,}};

static void InitDefaultsUserSailorStrengthenService_UserSailorStrengthenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserSailorStrengthenService_UserSailorStrengthenRequest_default_instance_;
    new (ptr) ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserSailorStrengthenService_UserSailorStrengthenRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserSailorStrengthenService_UserSailorStrengthenRequest}, {
      &protobuf_BaseStruct_2eproto::scc_info_pb_pair_int_int.base,}};

static void InitDefaultsUserSailorStrengthenService_UserSailorStrengthenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_;
    new (ptr) ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UserSailorStrengthenService_UserSailorStrengthenResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUserSailorStrengthenService_UserSailorStrengthenResponse}, {
      &protobuf_BaseStruct_2eproto::scc_info_Sailor.base,
      &protobuf_BaseStruct_2eproto::scc_info_Item.base,
      &protobuf_BaseStruct_2eproto::scc_info_SailorSkill.base,}};

static void InitDefaultsUserSailorStrengthenService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserSailorStrengthenService_default_instance_;
    new (ptr) ::sg::UserSailorStrengthenService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserSailorStrengthenService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserSailorStrengthenService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserSailorStrengthenService}, {
      &protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService_UserSailorStrengthenRequest.base,
      &protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService_UserSailorStrengthenResponse.base,}};

static void InitDefaultsSailorStateNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_SailorStateNotify_default_instance_;
    new (ptr) ::sg::SailorStateNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::SailorStateNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SailorStateNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSailorStateNotify}, {}};

static void InitDefaultsSailorFarmSkillNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_SailorFarmSkillNotify_default_instance_;
    new (ptr) ::sg::SailorFarmSkillNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::SailorFarmSkillNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SailorFarmSkillNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSailorFarmSkillNotify}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SailorDelegate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserSailorService_UserSailorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserSailorService_UserSailorResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserSailorService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserSailorStrengthenService_UserSailorStrengthenRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserSailorStrengthenService_UserSailorStrengthenResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserSailorStrengthenService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SailorStateNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SailorFarmSkillNotify.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorDelegate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorDelegate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorDelegate, sailor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorDelegate, job_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorDelegate, index_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, sailor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, work_order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, work_facility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, work_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, control_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, delegates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, equip_part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, equip_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorRequest, replace_list_),
  7,
  0,
  1,
  2,
  3,
  4,
  ~0u,
  5,
  6,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService_UserSailorResponse, sailors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, sailor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, sailor_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, skill_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, skill_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, exchange_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest, skill_book_),
  5,
  0,
  1,
  2,
  ~0u,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse, sailor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse, return_item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse, skill_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserSailorStrengthenService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, sailorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, _state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, facilityid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, job_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorStateNotify, hunger_),
  0,
  1,
  3,
  2,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorFarmSkillNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorFarmSkillNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorFarmSkillNotify, sailorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorFarmSkillNotify, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorFarmSkillNotify, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::SailorFarmSkillNotify, exp_),
  1,
  0,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::sg::SailorDelegate)},
  { 11, 26, sizeof(::sg::UserSailorService_UserSailorRequest)},
  { 36, 43, sizeof(::sg::UserSailorService_UserSailorResponse)},
  { 45, 52, sizeof(::sg::UserSailorService)},
  { 54, 66, sizeof(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest)},
  { 73, 82, sizeof(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse)},
  { 86, 93, sizeof(::sg::UserSailorStrengthenService)},
  { 95, 108, sizeof(::sg::SailorStateNotify)},
  { 116, 125, sizeof(::sg::SailorFarmSkillNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_SailorDelegate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserSailorService_UserSailorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserSailorService_UserSailorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserSailorService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserSailorStrengthenService_UserSailorStrengthenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserSailorStrengthenService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_SailorStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_SailorFarmSkillNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserSailor.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020UserSailor.proto\022\002sg\032\020BaseStruct.proto"
      "\"\?\n\016SailorDelegate\022\021\n\tsailor_id\030\001 \002(\005\022\013\n"
      "\003job\030\002 \002(\005\022\r\n\005index\030\003 \002(\005\"\351\004\n\021UserSailor"
      "Service\0224\n\003req\030\001 \001(\0132\'.sg.UserSailorServ"
      "ice.UserSailorRequest\0226\n\004resp\030\002 \001(\0132(.sg"
      ".UserSailorService.UserSailorResponse\032\273\002"
      "\n\021UserSailorRequest\022-\n\003cmd\030\001 \002(\0162 .sg.Us"
      "erSailorService.SAILOR_CMD\022\021\n\tsailor_id\030"
      "\002 \001(\005\022\022\n\nwork_order\030\003 \001(\005\022\025\n\rwork_facili"
      "ty\030\005 \001(\005\022\022\n\nwork_index\030\006 \001(\005\022-\n\014control_"
      "code\030\007 \001(\0162\027.sg.SAILOR_CONTROL_CODE\022%\n\td"
      "elegates\030\010 \003(\0132\022.sg.SailorDelegate\022\022\n\neq"
      "uip_part\030\t \001(\005\022\020\n\010equip_id\030\n \001(\005\022)\n\014repl"
      "ace_list\030\013 \003(\0132\023.sg.pb_pair_int_int\032A\n\022U"
      "serSailorResponse\022\016\n\006result\030\001 \002(\005\022\033\n\007sai"
      "lors\030\002 \003(\0132\n.sg.Sailor\"e\n\nSAILOR_CMD\022\t\n\005"
      "QUERY\020\001\022\014\n\010DELEGATE\020\002\022\020\n\014CHANGE_EQUIP\020\003\022"
      "\013\n\007REPLACE\020\004\022\013\n\007CONTROL\020\005\022\022\n\016BATCH_DELEG"
      "ATE\020\006\"\337\005\n\033UserSailorStrengthenService\022H\n"
      "\003req\030\001 \001(\0132;.sg.UserSailorStrengthenServ"
      "ice.UserSailorStrengthenRequest\022J\n\004resp\030"
      "\002 \001(\0132<.sg.UserSailorStrengthenService.U"
      "serSailorStrengthenResponse\032\345\001\n\033UserSail"
      "orStrengthenRequest\0227\n\003cmd\030\001 \002(\0162*.sg.Us"
      "erSailorStrengthenService.SAILOR_CMD\022\021\n\t"
      "sailor_id\030\002 \001(\005\022\025\n\rsailor_typeid\030\003 \001(\005\022\020"
      "\n\010skill_id\030\004 \001(\005\022\'\n\nskill_list\030\005 \003(\0132\023.s"
      "g.pb_pair_int_int\022\024\n\014exchange_num\030\006 \001(\005\022"
      "\022\n\nskill_book\030\007 \001(\005\032\211\001\n\034UserSailorStreng"
      "thenResponse\022\016\n\006result\030\001 \002(\005\022\032\n\006sailor\030\002"
      " \001(\0132\n.sg.Sailor\022\035\n\013return_item\030\003 \001(\0132\010."
      "sg.Item\022\036\n\005skill\030\004 \001(\0132\017.sg.SailorSkill\""
      "\265\001\n\nSAILOR_CMD\022\n\n\006SUMMON\020\001\022\016\n\nSTRENGTHEN"
      "\020\002\022\027\n\023FARM_SKILL_LEVEL_UP\020\003\022\022\n\016SKILL_LEV"
      "EL_UP\020\004\022\030\n\024LEVEL_UP_SKILL_BATCH\020\005\022\021\n\rCHI"
      "P_EXCHANGE\020\006\022\022\n\016SKILL_EXCHANGE\020\007\022\017\n\013LEAR"
      "N_SKILL\020\010\022\014\n\010PRACTICE\020\t\"\253\001\n\021SailorStateN"
      "otify\022\020\n\010sailorid\030\001 \002(\005\022 \n\006_state\030\002 \001(\0162"
      "\020.sg.SAILOR_STATE\022\020\n\010duration\030\003 \001(\005\022\016\n\006r"
      "oomid\030\004 \001(\004\022\022\n\nfacilityid\030\005 \001(\005\022\017\n\007order"
      "id\030\006 \001(\005\022\013\n\003job\030\007 \001(\005\022\016\n\006hunger\030\010 \001(\005\"V\n"
      "\025SailorFarmSkillNotify\022\020\n\010sailorid\030\001 \002(\005"
      "\022\017\n\007skillid\030\002 \001(\004\022\r\n\005level\030\003 \001(\005\022\013\n\003exp\030"
      "\004 \001(\005*B\n\023SAILOR_CONTROL_CODE\022\r\n\tCODE_NON"
      "E\020\000\022\r\n\tSEND_FOOD\020\001\022\r\n\tCODE_OVER\020cB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1798);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserSailor.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserSailor_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserSailorService_SAILOR_CMD_descriptor() {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserSailor_2eproto::file_level_enum_descriptors[0];
}
bool UserSailorService_SAILOR_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserSailorService_SAILOR_CMD UserSailorService::QUERY;
const UserSailorService_SAILOR_CMD UserSailorService::DELEGATE;
const UserSailorService_SAILOR_CMD UserSailorService::CHANGE_EQUIP;
const UserSailorService_SAILOR_CMD UserSailorService::REPLACE;
const UserSailorService_SAILOR_CMD UserSailorService::CONTROL;
const UserSailorService_SAILOR_CMD UserSailorService::BATCH_DELEGATE;
const UserSailorService_SAILOR_CMD UserSailorService::SAILOR_CMD_MIN;
const UserSailorService_SAILOR_CMD UserSailorService::SAILOR_CMD_MAX;
const int UserSailorService::SAILOR_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserSailorStrengthenService_SAILOR_CMD_descriptor() {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserSailor_2eproto::file_level_enum_descriptors[1];
}
bool UserSailorStrengthenService_SAILOR_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::SUMMON;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::STRENGTHEN;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::FARM_SKILL_LEVEL_UP;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::SKILL_LEVEL_UP;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::LEVEL_UP_SKILL_BATCH;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::CHIP_EXCHANGE;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::SKILL_EXCHANGE;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::LEARN_SKILL;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::PRACTICE;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::SAILOR_CMD_MIN;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService::SAILOR_CMD_MAX;
const int UserSailorStrengthenService::SAILOR_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SAILOR_CONTROL_CODE_descriptor() {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserSailor_2eproto::file_level_enum_descriptors[2];
}
bool SAILOR_CONTROL_CODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 99:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SailorDelegate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SailorDelegate::kSailorIdFieldNumber;
const int SailorDelegate::kJobFieldNumber;
const int SailorDelegate::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SailorDelegate::SailorDelegate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_SailorDelegate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.SailorDelegate)
}
SailorDelegate::SailorDelegate(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_SailorDelegate.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.SailorDelegate)
}
SailorDelegate::SailorDelegate(const SailorDelegate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sailor_id_, &from.sailor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&sailor_id_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:sg.SailorDelegate)
}

void SailorDelegate::SharedCtor() {
  ::memset(&sailor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&sailor_id_)) + sizeof(index_));
}

SailorDelegate::~SailorDelegate() {
  // @@protoc_insertion_point(destructor:sg.SailorDelegate)
  SharedDtor();
}

void SailorDelegate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SailorDelegate::ArenaDtor(void* object) {
  SailorDelegate* _this = reinterpret_cast< SailorDelegate* >(object);
  (void)_this;
}
void SailorDelegate::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SailorDelegate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SailorDelegate::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SailorDelegate& SailorDelegate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_SailorDelegate.base);
  return *internal_default_instance();
}


void SailorDelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.SailorDelegate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&sailor_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&index_) -
        reinterpret_cast<char*>(&sailor_id_)) + sizeof(index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SailorDelegate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.SailorDelegate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sailor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sailor_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sailor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 job = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &job_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.SailorDelegate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.SailorDelegate)
  return false;
#undef DO_
}

void SailorDelegate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.SailorDelegate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 sailor_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sailor_id(), output);
  }

  // required int32 job = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->job(), output);
  }

  // required int32 index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.SailorDelegate)
}

::google::protobuf::uint8* SailorDelegate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.SailorDelegate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 sailor_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sailor_id(), target);
  }

  // required int32 job = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->job(), target);
  }

  // required int32 index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.SailorDelegate)
  return target;
}

size_t SailorDelegate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.SailorDelegate)
  size_t total_size = 0;

  if (has_sailor_id()) {
    // required int32 sailor_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sailor_id());
  }

  if (has_job()) {
    // required int32 job = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->job());
  }

  if (has_index()) {
    // required int32 index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  return total_size;
}
size_t SailorDelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.SailorDelegate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 sailor_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sailor_id());

    // required int32 job = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->job());

    // required int32 index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SailorDelegate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.SailorDelegate)
  GOOGLE_DCHECK_NE(&from, this);
  const SailorDelegate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SailorDelegate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.SailorDelegate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.SailorDelegate)
    MergeFrom(*source);
  }
}

void SailorDelegate::MergeFrom(const SailorDelegate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.SailorDelegate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sailor_id_ = from.sailor_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      job_ = from.job_;
    }
    if (cached_has_bits & 0x00000004u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SailorDelegate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.SailorDelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SailorDelegate::CopyFrom(const SailorDelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.SailorDelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SailorDelegate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void SailorDelegate::Swap(SailorDelegate* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SailorDelegate* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SailorDelegate::UnsafeArenaSwap(SailorDelegate* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SailorDelegate::InternalSwap(SailorDelegate* other) {
  using std::swap;
  swap(sailor_id_, other->sailor_id_);
  swap(job_, other->job_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SailorDelegate::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserSailorService_UserSailorRequest::InitAsDefaultInstance() {
}
void UserSailorService_UserSailorRequest::clear_replace_list() {
  replace_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSailorService_UserSailorRequest::kCmdFieldNumber;
const int UserSailorService_UserSailorRequest::kSailorIdFieldNumber;
const int UserSailorService_UserSailorRequest::kWorkOrderFieldNumber;
const int UserSailorService_UserSailorRequest::kWorkFacilityFieldNumber;
const int UserSailorService_UserSailorRequest::kWorkIndexFieldNumber;
const int UserSailorService_UserSailorRequest::kControlCodeFieldNumber;
const int UserSailorService_UserSailorRequest::kDelegatesFieldNumber;
const int UserSailorService_UserSailorRequest::kEquipPartFieldNumber;
const int UserSailorService_UserSailorRequest::kEquipIdFieldNumber;
const int UserSailorService_UserSailorRequest::kReplaceListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSailorService_UserSailorRequest::UserSailorService_UserSailorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_UserSailorService_UserSailorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserSailorService.UserSailorRequest)
}
UserSailorService_UserSailorRequest::UserSailorService_UserSailorRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  delegates_(arena),
  replace_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorService_UserSailorRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserSailorService.UserSailorRequest)
}
UserSailorService_UserSailorRequest::UserSailorService_UserSailorRequest(const UserSailorService_UserSailorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      delegates_(from.delegates_),
      replace_list_(from.replace_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sailor_id_, &from.sailor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&sailor_id_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.UserSailorService.UserSailorRequest)
}

void UserSailorService_UserSailorRequest::SharedCtor() {
  ::memset(&sailor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&equip_id_) -
      reinterpret_cast<char*>(&sailor_id_)) + sizeof(equip_id_));
  cmd_ = 1;
}

UserSailorService_UserSailorRequest::~UserSailorService_UserSailorRequest() {
  // @@protoc_insertion_point(destructor:sg.UserSailorService.UserSailorRequest)
  SharedDtor();
}

void UserSailorService_UserSailorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserSailorService_UserSailorRequest::ArenaDtor(void* object) {
  UserSailorService_UserSailorRequest* _this = reinterpret_cast< UserSailorService_UserSailorRequest* >(object);
  (void)_this;
}
void UserSailorService_UserSailorRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserSailorService_UserSailorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserSailorService_UserSailorRequest::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSailorService_UserSailorRequest& UserSailorService_UserSailorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorService_UserSailorRequest.base);
  return *internal_default_instance();
}


void UserSailorService_UserSailorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserSailorService.UserSailorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegates_.Clear();
  replace_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&sailor_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&equip_id_) -
        reinterpret_cast<char*>(&sailor_id_)) + sizeof(equip_id_));
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserSailorService_UserSailorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserSailorService.UserSailorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserSailorService.SAILOR_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserSailorService_SAILOR_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserSailorService_SAILOR_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sailor_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sailor_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sailor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 work_order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_work_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &work_order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 work_facility = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_work_facility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &work_facility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 work_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_work_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &work_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.SAILOR_CONTROL_CODE control_code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::SAILOR_CONTROL_CODE_IsValid(value)) {
            set_control_code(static_cast< ::sg::SAILOR_CONTROL_CODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.SailorDelegate delegates = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_delegates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 equip_part = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_equip_part();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_part_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 equip_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_equip_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.pb_pair_int_int replace_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replace_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserSailorService.UserSailorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserSailorService.UserSailorRequest)
  return false;
#undef DO_
}

void UserSailorService_UserSailorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserSailorService.UserSailorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserSailorService.SAILOR_CMD cmd = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 sailor_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sailor_id(), output);
  }

  // optional int32 work_order = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->work_order(), output);
  }

  // optional int32 work_facility = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->work_facility(), output);
  }

  // optional int32 work_index = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->work_index(), output);
  }

  // optional .sg.SAILOR_CONTROL_CODE control_code = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->control_code(), output);
  }

  // repeated .sg.SailorDelegate delegates = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delegates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->delegates(static_cast<int>(i)),
      output);
  }

  // optional int32 equip_part = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->equip_part(), output);
  }

  // optional int32 equip_id = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->equip_id(), output);
  }

  // repeated .sg.pb_pair_int_int replace_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->replace_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserSailorService.UserSailorRequest)
}

::google::protobuf::uint8* UserSailorService_UserSailorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserSailorService.UserSailorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserSailorService.SAILOR_CMD cmd = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 sailor_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sailor_id(), target);
  }

  // optional int32 work_order = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->work_order(), target);
  }

  // optional int32 work_facility = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->work_facility(), target);
  }

  // optional int32 work_index = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->work_index(), target);
  }

  // optional .sg.SAILOR_CONTROL_CODE control_code = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->control_code(), target);
  }

  // repeated .sg.SailorDelegate delegates = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delegates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->delegates(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 equip_part = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->equip_part(), target);
  }

  // optional int32 equip_id = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->equip_id(), target);
  }

  // repeated .sg.pb_pair_int_int replace_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->replace_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserSailorService.UserSailorRequest)
  return target;
}

size_t UserSailorService_UserSailorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserSailorService.UserSailorRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserSailorService.SAILOR_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // repeated .sg.SailorDelegate delegates = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->delegates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->delegates(static_cast<int>(i)));
    }
  }

  // repeated .sg.pb_pair_int_int replace_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->replace_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replace_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 sailor_id = 2;
    if (has_sailor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sailor_id());
    }

    // optional int32 work_order = 3;
    if (has_work_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->work_order());
    }

    // optional int32 work_facility = 5;
    if (has_work_facility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->work_facility());
    }

    // optional int32 work_index = 6;
    if (has_work_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->work_index());
    }

    // optional .sg.SAILOR_CONTROL_CODE control_code = 7;
    if (has_control_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_code());
    }

    // optional int32 equip_part = 9;
    if (has_equip_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_part());
    }

    // optional int32 equip_id = 10;
    if (has_equip_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSailorService_UserSailorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserSailorService.UserSailorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSailorService_UserSailorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSailorService_UserSailorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserSailorService.UserSailorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserSailorService.UserSailorRequest)
    MergeFrom(*source);
  }
}

void UserSailorService_UserSailorRequest::MergeFrom(const UserSailorService_UserSailorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserSailorService.UserSailorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delegates_.MergeFrom(from.delegates_);
  replace_list_.MergeFrom(from.replace_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      sailor_id_ = from.sailor_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      work_order_ = from.work_order_;
    }
    if (cached_has_bits & 0x00000004u) {
      work_facility_ = from.work_facility_;
    }
    if (cached_has_bits & 0x00000008u) {
      work_index_ = from.work_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      control_code_ = from.control_code_;
    }
    if (cached_has_bits & 0x00000020u) {
      equip_part_ = from.equip_part_;
    }
    if (cached_has_bits & 0x00000040u) {
      equip_id_ = from.equip_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserSailorService_UserSailorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserSailorService.UserSailorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSailorService_UserSailorRequest::CopyFrom(const UserSailorService_UserSailorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserSailorService.UserSailorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSailorService_UserSailorRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->delegates())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->replace_list())) return false;
  return true;
}

void UserSailorService_UserSailorRequest::Swap(UserSailorService_UserSailorRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserSailorService_UserSailorRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserSailorService_UserSailorRequest::UnsafeArenaSwap(UserSailorService_UserSailorRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserSailorService_UserSailorRequest::InternalSwap(UserSailorService_UserSailorRequest* other) {
  using std::swap;
  CastToBase(&delegates_)->InternalSwap(CastToBase(&other->delegates_));
  CastToBase(&replace_list_)->InternalSwap(CastToBase(&other->replace_list_));
  swap(sailor_id_, other->sailor_id_);
  swap(work_order_, other->work_order_);
  swap(work_facility_, other->work_facility_);
  swap(work_index_, other->work_index_);
  swap(control_code_, other->control_code_);
  swap(equip_part_, other->equip_part_);
  swap(equip_id_, other->equip_id_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserSailorService_UserSailorRequest::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserSailorService_UserSailorResponse::InitAsDefaultInstance() {
}
void UserSailorService_UserSailorResponse::clear_sailors() {
  sailors_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSailorService_UserSailorResponse::kResultFieldNumber;
const int UserSailorService_UserSailorResponse::kSailorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSailorService_UserSailorResponse::UserSailorService_UserSailorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_UserSailorService_UserSailorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserSailorService.UserSailorResponse)
}
UserSailorService_UserSailorResponse::UserSailorService_UserSailorResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  sailors_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorService_UserSailorResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserSailorService.UserSailorResponse)
}
UserSailorService_UserSailorResponse::UserSailorService_UserSailorResponse(const UserSailorService_UserSailorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sailors_(from.sailors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserSailorService.UserSailorResponse)
}

void UserSailorService_UserSailorResponse::SharedCtor() {
  result_ = 0;
}

UserSailorService_UserSailorResponse::~UserSailorService_UserSailorResponse() {
  // @@protoc_insertion_point(destructor:sg.UserSailorService.UserSailorResponse)
  SharedDtor();
}

void UserSailorService_UserSailorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserSailorService_UserSailorResponse::ArenaDtor(void* object) {
  UserSailorService_UserSailorResponse* _this = reinterpret_cast< UserSailorService_UserSailorResponse* >(object);
  (void)_this;
}
void UserSailorService_UserSailorResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserSailorService_UserSailorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserSailorService_UserSailorResponse::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSailorService_UserSailorResponse& UserSailorService_UserSailorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorService_UserSailorResponse.base);
  return *internal_default_instance();
}


void UserSailorService_UserSailorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserSailorService.UserSailorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sailors_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserSailorService_UserSailorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserSailorService.UserSailorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Sailor sailors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sailors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserSailorService.UserSailorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserSailorService.UserSailorResponse)
  return false;
#undef DO_
}

void UserSailorService_UserSailorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserSailorService.UserSailorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .sg.Sailor sailors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sailors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->sailors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserSailorService.UserSailorResponse)
}

::google::protobuf::uint8* UserSailorService_UserSailorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserSailorService.UserSailorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .sg.Sailor sailors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sailors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->sailors(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserSailorService.UserSailorResponse)
  return target;
}

size_t UserSailorService_UserSailorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserSailorService.UserSailorResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.Sailor sailors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sailors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sailors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSailorService_UserSailorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserSailorService.UserSailorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSailorService_UserSailorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSailorService_UserSailorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserSailorService.UserSailorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserSailorService.UserSailorResponse)
    MergeFrom(*source);
  }
}

void UserSailorService_UserSailorResponse::MergeFrom(const UserSailorService_UserSailorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserSailorService.UserSailorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sailors_.MergeFrom(from.sailors_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void UserSailorService_UserSailorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserSailorService.UserSailorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSailorService_UserSailorResponse::CopyFrom(const UserSailorService_UserSailorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserSailorService.UserSailorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSailorService_UserSailorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->sailors())) return false;
  return true;
}

void UserSailorService_UserSailorResponse::Swap(UserSailorService_UserSailorResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserSailorService_UserSailorResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserSailorService_UserSailorResponse::UnsafeArenaSwap(UserSailorService_UserSailorResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserSailorService_UserSailorResponse::InternalSwap(UserSailorService_UserSailorResponse* other) {
  using std::swap;
  CastToBase(&sailors_)->InternalSwap(CastToBase(&other->sailors_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserSailorService_UserSailorResponse::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserSailorService::InitAsDefaultInstance() {
  ::sg::_UserSailorService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserSailorService_UserSailorRequest*>(
      ::sg::UserSailorService_UserSailorRequest::internal_default_instance());
  ::sg::_UserSailorService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserSailorService_UserSailorResponse*>(
      ::sg::UserSailorService_UserSailorResponse::internal_default_instance());
}
void UserSailorService::unsafe_arena_set_allocated_req(
    ::sg::UserSailorService_UserSailorRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserSailorService.req)
}
void UserSailorService::unsafe_arena_set_allocated_resp(
    ::sg::UserSailorService_UserSailorResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserSailorService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSailorService::kReqFieldNumber;
const int UserSailorService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSailorService::UserSailorService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_UserSailorService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserSailorService)
}
UserSailorService::UserSailorService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserSailorService)
}
UserSailorService::UserSailorService(const UserSailorService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserSailorService_UserSailorRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserSailorService_UserSailorResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserSailorService)
}

void UserSailorService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserSailorService::~UserSailorService() {
  // @@protoc_insertion_point(destructor:sg.UserSailorService)
  SharedDtor();
}

void UserSailorService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserSailorService::ArenaDtor(void* object) {
  UserSailorService* _this = reinterpret_cast< UserSailorService* >(object);
  (void)_this;
}
void UserSailorService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserSailorService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserSailorService::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSailorService& UserSailorService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorService.base);
  return *internal_default_instance();
}


void UserSailorService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserSailorService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserSailorService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserSailorService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserSailorService.UserSailorRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserSailorService.UserSailorResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserSailorService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserSailorService)
  return false;
#undef DO_
}

void UserSailorService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserSailorService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserSailorService.UserSailorRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserSailorService.UserSailorResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserSailorService)
}

::google::protobuf::uint8* UserSailorService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserSailorService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserSailorService.UserSailorRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserSailorService.UserSailorResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserSailorService)
  return target;
}

size_t UserSailorService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserSailorService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserSailorService.UserSailorRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserSailorService.UserSailorResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSailorService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserSailorService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSailorService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSailorService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserSailorService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserSailorService)
    MergeFrom(*source);
  }
}

void UserSailorService::MergeFrom(const UserSailorService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserSailorService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserSailorService_UserSailorRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserSailorService_UserSailorResponse::MergeFrom(from.resp());
    }
  }
}

void UserSailorService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserSailorService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSailorService::CopyFrom(const UserSailorService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserSailorService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSailorService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserSailorService::Swap(UserSailorService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserSailorService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserSailorService::UnsafeArenaSwap(UserSailorService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserSailorService::InternalSwap(UserSailorService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserSailorService::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserSailorStrengthenService_UserSailorStrengthenRequest::InitAsDefaultInstance() {
}
void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_skill_list() {
  skill_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSailorStrengthenService_UserSailorStrengthenRequest::kCmdFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenRequest::kSailorIdFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenRequest::kSailorTypeidFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenRequest::kSkillIdFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenRequest::kSkillListFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenRequest::kExchangeNumFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenRequest::kSkillBookFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSailorStrengthenService_UserSailorStrengthenRequest::UserSailorStrengthenService_UserSailorStrengthenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService_UserSailorStrengthenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
}
UserSailorStrengthenService_UserSailorStrengthenRequest::UserSailorStrengthenService_UserSailorStrengthenRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  skill_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService_UserSailorStrengthenRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
}
UserSailorStrengthenService_UserSailorStrengthenRequest::UserSailorStrengthenService_UserSailorStrengthenRequest(const UserSailorStrengthenService_UserSailorStrengthenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      skill_list_(from.skill_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sailor_id_, &from.sailor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&sailor_id_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::SharedCtor() {
  ::memset(&sailor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_book_) -
      reinterpret_cast<char*>(&sailor_id_)) + sizeof(skill_book_));
  cmd_ = 1;
}

UserSailorStrengthenService_UserSailorStrengthenRequest::~UserSailorStrengthenService_UserSailorStrengthenRequest() {
  // @@protoc_insertion_point(destructor:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  SharedDtor();
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::ArenaDtor(void* object) {
  UserSailorStrengthenService_UserSailorStrengthenRequest* _this = reinterpret_cast< UserSailorStrengthenService_UserSailorStrengthenRequest* >(object);
  (void)_this;
}
void UserSailorStrengthenService_UserSailorStrengthenRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserSailorStrengthenService_UserSailorStrengthenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserSailorStrengthenService_UserSailorStrengthenRequest::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSailorStrengthenService_UserSailorStrengthenRequest& UserSailorStrengthenService_UserSailorStrengthenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService_UserSailorStrengthenRequest.base);
  return *internal_default_instance();
}


void UserSailorStrengthenService_UserSailorStrengthenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skill_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&sailor_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&skill_book_) -
        reinterpret_cast<char*>(&sailor_id_)) + sizeof(skill_book_));
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserSailorStrengthenService_UserSailorStrengthenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserSailorStrengthenService.SAILOR_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserSailorStrengthenService_SAILOR_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserSailorStrengthenService_SAILOR_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sailor_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sailor_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sailor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sailor_typeid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sailor_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sailor_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 skill_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_skill_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.pb_pair_int_int skill_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_skill_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exchange_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_exchange_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 skill_book = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_skill_book();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_book_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  return false;
#undef DO_
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserSailorStrengthenService.SAILOR_CMD cmd = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 sailor_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sailor_id(), output);
  }

  // optional int32 sailor_typeid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sailor_typeid(), output);
  }

  // optional int32 skill_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill_id(), output);
  }

  // repeated .sg.pb_pair_int_int skill_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skill_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->skill_list(static_cast<int>(i)),
      output);
  }

  // optional int32 exchange_num = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->exchange_num(), output);
  }

  // optional int32 skill_book = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->skill_book(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
}

::google::protobuf::uint8* UserSailorStrengthenService_UserSailorStrengthenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserSailorStrengthenService.SAILOR_CMD cmd = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 sailor_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sailor_id(), target);
  }

  // optional int32 sailor_typeid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sailor_typeid(), target);
  }

  // optional int32 skill_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill_id(), target);
  }

  // repeated .sg.pb_pair_int_int skill_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skill_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->skill_list(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 exchange_num = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->exchange_num(), target);
  }

  // optional int32 skill_book = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->skill_book(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  return target;
}

size_t UserSailorStrengthenService_UserSailorStrengthenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserSailorStrengthenService.SAILOR_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // repeated .sg.pb_pair_int_int skill_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->skill_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->skill_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 sailor_id = 2;
    if (has_sailor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sailor_id());
    }

    // optional int32 sailor_typeid = 3;
    if (has_sailor_typeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sailor_typeid());
    }

    // optional int32 skill_id = 4;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 exchange_num = 6;
    if (has_exchange_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange_num());
    }

    // optional int32 skill_book = 7;
    if (has_skill_book()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_book());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSailorStrengthenService_UserSailorStrengthenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSailorStrengthenService_UserSailorStrengthenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
    MergeFrom(*source);
  }
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::MergeFrom(const UserSailorStrengthenService_UserSailorStrengthenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skill_list_.MergeFrom(from.skill_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      sailor_id_ = from.sailor_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      sailor_typeid_ = from.sailor_typeid_;
    }
    if (cached_has_bits & 0x00000004u) {
      skill_id_ = from.skill_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      exchange_num_ = from.exchange_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      skill_book_ = from.skill_book_;
    }
    if (cached_has_bits & 0x00000020u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::CopyFrom(const UserSailorStrengthenService_UserSailorStrengthenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSailorStrengthenService_UserSailorStrengthenRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->skill_list())) return false;
  return true;
}

void UserSailorStrengthenService_UserSailorStrengthenRequest::Swap(UserSailorStrengthenService_UserSailorStrengthenRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserSailorStrengthenService_UserSailorStrengthenRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserSailorStrengthenService_UserSailorStrengthenRequest::UnsafeArenaSwap(UserSailorStrengthenService_UserSailorStrengthenRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserSailorStrengthenService_UserSailorStrengthenRequest::InternalSwap(UserSailorStrengthenService_UserSailorStrengthenRequest* other) {
  using std::swap;
  CastToBase(&skill_list_)->InternalSwap(CastToBase(&other->skill_list_));
  swap(sailor_id_, other->sailor_id_);
  swap(sailor_typeid_, other->sailor_typeid_);
  swap(skill_id_, other->skill_id_);
  swap(exchange_num_, other->exchange_num_);
  swap(skill_book_, other->skill_book_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserSailorStrengthenService_UserSailorStrengthenRequest::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserSailorStrengthenService_UserSailorStrengthenResponse::InitAsDefaultInstance() {
  ::sg::_UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_._instance.get_mutable()->sailor_ = const_cast< ::sg::Sailor*>(
      ::sg::Sailor::internal_default_instance());
  ::sg::_UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_._instance.get_mutable()->return_item_ = const_cast< ::sg::Item*>(
      ::sg::Item::internal_default_instance());
  ::sg::_UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_._instance.get_mutable()->skill_ = const_cast< ::sg::SailorSkill*>(
      ::sg::SailorSkill::internal_default_instance());
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::unsafe_arena_set_allocated_sailor(
    ::sg::Sailor* sailor) {
  if (GetArenaNoVirtual() == NULL) {
    delete sailor_;
  }
  sailor_ = sailor;
  if (sailor) {
    set_has_sailor();
  } else {
    clear_has_sailor();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.sailor)
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::clear_sailor() {
  if (sailor_ != NULL) sailor_->Clear();
  clear_has_sailor();
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::unsafe_arena_set_allocated_return_item(
    ::sg::Item* return_item) {
  if (GetArenaNoVirtual() == NULL) {
    delete return_item_;
  }
  return_item_ = return_item;
  if (return_item) {
    set_has_return_item();
  } else {
    clear_has_return_item();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.return_item)
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::clear_return_item() {
  if (return_item_ != NULL) return_item_->Clear();
  clear_has_return_item();
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::unsafe_arena_set_allocated_skill(
    ::sg::SailorSkill* skill) {
  if (GetArenaNoVirtual() == NULL) {
    delete skill_;
  }
  skill_ = skill;
  if (skill) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.skill)
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::clear_skill() {
  if (skill_ != NULL) skill_->Clear();
  clear_has_skill();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSailorStrengthenService_UserSailorStrengthenResponse::kResultFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenResponse::kSailorFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenResponse::kReturnItemFieldNumber;
const int UserSailorStrengthenService_UserSailorStrengthenResponse::kSkillFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSailorStrengthenService_UserSailorStrengthenResponse::UserSailorStrengthenService_UserSailorStrengthenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService_UserSailorStrengthenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
}
UserSailorStrengthenService_UserSailorStrengthenResponse::UserSailorStrengthenService_UserSailorStrengthenResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService_UserSailorStrengthenResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
}
UserSailorStrengthenService_UserSailorStrengthenResponse::UserSailorStrengthenService_UserSailorStrengthenResponse(const UserSailorStrengthenService_UserSailorStrengthenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sailor()) {
    sailor_ = new ::sg::Sailor(*from.sailor_);
  } else {
    sailor_ = NULL;
  }
  if (from.has_return_item()) {
    return_item_ = new ::sg::Item(*from.return_item_);
  } else {
    return_item_ = NULL;
  }
  if (from.has_skill()) {
    skill_ = new ::sg::SailorSkill(*from.skill_);
  } else {
    skill_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::SharedCtor() {
  ::memset(&sailor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&sailor_)) + sizeof(result_));
}

UserSailorStrengthenService_UserSailorStrengthenResponse::~UserSailorStrengthenService_UserSailorStrengthenResponse() {
  // @@protoc_insertion_point(destructor:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  SharedDtor();
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete sailor_;
  if (this != internal_default_instance()) delete return_item_;
  if (this != internal_default_instance()) delete skill_;
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::ArenaDtor(void* object) {
  UserSailorStrengthenService_UserSailorStrengthenResponse* _this = reinterpret_cast< UserSailorStrengthenService_UserSailorStrengthenResponse* >(object);
  (void)_this;
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserSailorStrengthenService_UserSailorStrengthenResponse::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSailorStrengthenService_UserSailorStrengthenResponse& UserSailorStrengthenService_UserSailorStrengthenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService_UserSailorStrengthenResponse.base);
  return *internal_default_instance();
}


void UserSailorStrengthenService_UserSailorStrengthenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(sailor_ != NULL);
      sailor_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(return_item_ != NULL);
      return_item_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(skill_ != NULL);
      skill_->Clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserSailorStrengthenService_UserSailorStrengthenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Sailor sailor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sailor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Item return_item = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_return_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.SailorSkill skill = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_skill()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  return false;
#undef DO_
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .sg.Sailor sailor = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_sailor(), output);
  }

  // optional .sg.Item return_item = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_return_item(), output);
  }

  // optional .sg.SailorSkill skill = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_skill(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
}

::google::protobuf::uint8* UserSailorStrengthenService_UserSailorStrengthenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .sg.Sailor sailor = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_sailor(), deterministic, target);
  }

  // optional .sg.Item return_item = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_return_item(), deterministic, target);
  }

  // optional .sg.SailorSkill skill = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_skill(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  return target;
}

size_t UserSailorStrengthenService_UserSailorStrengthenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .sg.Sailor sailor = 2;
    if (has_sailor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sailor_);
    }

    // optional .sg.Item return_item = 3;
    if (has_return_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *return_item_);
    }

    // optional .sg.SailorSkill skill = 4;
    if (has_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *skill_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSailorStrengthenService_UserSailorStrengthenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSailorStrengthenService_UserSailorStrengthenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
    MergeFrom(*source);
  }
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::MergeFrom(const UserSailorStrengthenService_UserSailorStrengthenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_sailor()->::sg::Sailor::MergeFrom(from.sailor());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_return_item()->::sg::Item::MergeFrom(from.return_item());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_skill()->::sg::SailorSkill::MergeFrom(from.skill());
    }
    if (cached_has_bits & 0x00000008u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::CopyFrom(const UserSailorStrengthenService_UserSailorStrengthenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSailorStrengthenService_UserSailorStrengthenResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_sailor()) {
    if (!this->sailor_->IsInitialized()) return false;
  }
  if (has_return_item()) {
    if (!this->return_item_->IsInitialized()) return false;
  }
  if (has_skill()) {
    if (!this->skill_->IsInitialized()) return false;
  }
  return true;
}

void UserSailorStrengthenService_UserSailorStrengthenResponse::Swap(UserSailorStrengthenService_UserSailorStrengthenResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserSailorStrengthenService_UserSailorStrengthenResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::UnsafeArenaSwap(UserSailorStrengthenService_UserSailorStrengthenResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserSailorStrengthenService_UserSailorStrengthenResponse::InternalSwap(UserSailorStrengthenService_UserSailorStrengthenResponse* other) {
  using std::swap;
  swap(sailor_, other->sailor_);
  swap(return_item_, other->return_item_);
  swap(skill_, other->skill_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserSailorStrengthenService_UserSailorStrengthenResponse::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserSailorStrengthenService::InitAsDefaultInstance() {
  ::sg::_UserSailorStrengthenService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest*>(
      ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest::internal_default_instance());
  ::sg::_UserSailorStrengthenService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse*>(
      ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse::internal_default_instance());
}
void UserSailorStrengthenService::unsafe_arena_set_allocated_req(
    ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserSailorStrengthenService.req)
}
void UserSailorStrengthenService::unsafe_arena_set_allocated_resp(
    ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserSailorStrengthenService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSailorStrengthenService::kReqFieldNumber;
const int UserSailorStrengthenService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSailorStrengthenService::UserSailorStrengthenService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserSailorStrengthenService)
}
UserSailorStrengthenService::UserSailorStrengthenService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserSailorStrengthenService)
}
UserSailorStrengthenService::UserSailorStrengthenService(const UserSailorStrengthenService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserSailorStrengthenService)
}

void UserSailorStrengthenService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserSailorStrengthenService::~UserSailorStrengthenService() {
  // @@protoc_insertion_point(destructor:sg.UserSailorStrengthenService)
  SharedDtor();
}

void UserSailorStrengthenService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserSailorStrengthenService::ArenaDtor(void* object) {
  UserSailorStrengthenService* _this = reinterpret_cast< UserSailorStrengthenService* >(object);
  (void)_this;
}
void UserSailorStrengthenService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserSailorStrengthenService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserSailorStrengthenService::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSailorStrengthenService& UserSailorStrengthenService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_UserSailorStrengthenService.base);
  return *internal_default_instance();
}


void UserSailorStrengthenService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserSailorStrengthenService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserSailorStrengthenService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserSailorStrengthenService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserSailorStrengthenService.UserSailorStrengthenRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserSailorStrengthenService.UserSailorStrengthenResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserSailorStrengthenService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserSailorStrengthenService)
  return false;
#undef DO_
}

void UserSailorStrengthenService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserSailorStrengthenService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserSailorStrengthenService.UserSailorStrengthenRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserSailorStrengthenService.UserSailorStrengthenResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserSailorStrengthenService)
}

::google::protobuf::uint8* UserSailorStrengthenService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserSailorStrengthenService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserSailorStrengthenService.UserSailorStrengthenRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserSailorStrengthenService.UserSailorStrengthenResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserSailorStrengthenService)
  return target;
}

size_t UserSailorStrengthenService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserSailorStrengthenService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserSailorStrengthenService.UserSailorStrengthenRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserSailorStrengthenService.UserSailorStrengthenResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSailorStrengthenService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserSailorStrengthenService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSailorStrengthenService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSailorStrengthenService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserSailorStrengthenService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserSailorStrengthenService)
    MergeFrom(*source);
  }
}

void UserSailorStrengthenService::MergeFrom(const UserSailorStrengthenService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserSailorStrengthenService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserSailorStrengthenService_UserSailorStrengthenRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserSailorStrengthenService_UserSailorStrengthenResponse::MergeFrom(from.resp());
    }
  }
}

void UserSailorStrengthenService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserSailorStrengthenService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSailorStrengthenService::CopyFrom(const UserSailorStrengthenService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserSailorStrengthenService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSailorStrengthenService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserSailorStrengthenService::Swap(UserSailorStrengthenService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserSailorStrengthenService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserSailorStrengthenService::UnsafeArenaSwap(UserSailorStrengthenService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserSailorStrengthenService::InternalSwap(UserSailorStrengthenService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserSailorStrengthenService::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SailorStateNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SailorStateNotify::kSailoridFieldNumber;
const int SailorStateNotify::kStateFieldNumber;
const int SailorStateNotify::kDurationFieldNumber;
const int SailorStateNotify::kRoomidFieldNumber;
const int SailorStateNotify::kFacilityidFieldNumber;
const int SailorStateNotify::kOrderidFieldNumber;
const int SailorStateNotify::kJobFieldNumber;
const int SailorStateNotify::kHungerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SailorStateNotify::SailorStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_SailorStateNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.SailorStateNotify)
}
SailorStateNotify::SailorStateNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_SailorStateNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.SailorStateNotify)
}
SailorStateNotify::SailorStateNotify(const SailorStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sailorid_, &from.sailorid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hunger_) -
    reinterpret_cast<char*>(&sailorid_)) + sizeof(hunger_));
  // @@protoc_insertion_point(copy_constructor:sg.SailorStateNotify)
}

void SailorStateNotify::SharedCtor() {
  ::memset(&sailorid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hunger_) -
      reinterpret_cast<char*>(&sailorid_)) + sizeof(hunger_));
}

SailorStateNotify::~SailorStateNotify() {
  // @@protoc_insertion_point(destructor:sg.SailorStateNotify)
  SharedDtor();
}

void SailorStateNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SailorStateNotify::ArenaDtor(void* object) {
  SailorStateNotify* _this = reinterpret_cast< SailorStateNotify* >(object);
  (void)_this;
}
void SailorStateNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SailorStateNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SailorStateNotify::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SailorStateNotify& SailorStateNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_SailorStateNotify.base);
  return *internal_default_instance();
}


void SailorStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.SailorStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&sailorid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hunger_) -
        reinterpret_cast<char*>(&sailorid_)) + sizeof(hunger_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SailorStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.SailorStateNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sailorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sailorid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sailorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.SAILOR_STATE _state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::SAILOR_STATE_IsValid(value)) {
            set__state(static_cast< ::sg::SAILOR_STATE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 roomid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 facilityid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_facilityid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &facilityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 orderid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_orderid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 job = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &job_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hunger = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_hunger();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hunger_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.SailorStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.SailorStateNotify)
  return false;
#undef DO_
}

void SailorStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.SailorStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 sailorid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sailorid(), output);
  }

  // optional .sg.SAILOR_STATE _state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->_state(), output);
  }

  // optional int32 duration = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->duration(), output);
  }

  // optional uint64 roomid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roomid(), output);
  }

  // optional int32 facilityid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->facilityid(), output);
  }

  // optional int32 orderid = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->orderid(), output);
  }

  // optional int32 job = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->job(), output);
  }

  // optional int32 hunger = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->hunger(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.SailorStateNotify)
}

::google::protobuf::uint8* SailorStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.SailorStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 sailorid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sailorid(), target);
  }

  // optional .sg.SAILOR_STATE _state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->_state(), target);
  }

  // optional int32 duration = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->duration(), target);
  }

  // optional uint64 roomid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roomid(), target);
  }

  // optional int32 facilityid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->facilityid(), target);
  }

  // optional int32 orderid = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->orderid(), target);
  }

  // optional int32 job = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->job(), target);
  }

  // optional int32 hunger = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->hunger(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.SailorStateNotify)
  return target;
}

size_t SailorStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.SailorStateNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 sailorid = 1;
  if (has_sailorid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sailorid());
  }
  if (_has_bits_[0 / 32] & 254u) {
    // optional .sg.SAILOR_STATE _state = 2;
    if (has__state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->_state());
    }

    // optional uint64 roomid = 4;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roomid());
    }

    // optional int32 duration = 3;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

    // optional int32 facilityid = 5;
    if (has_facilityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->facilityid());
    }

    // optional int32 orderid = 6;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->orderid());
    }

    // optional int32 job = 7;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->job());
    }

    // optional int32 hunger = 8;
    if (has_hunger()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hunger());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SailorStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.SailorStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SailorStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SailorStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.SailorStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.SailorStateNotify)
    MergeFrom(*source);
  }
}

void SailorStateNotify::MergeFrom(const SailorStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.SailorStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      sailorid_ = from.sailorid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _state_ = from._state_;
    }
    if (cached_has_bits & 0x00000004u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000010u) {
      facilityid_ = from.facilityid_;
    }
    if (cached_has_bits & 0x00000020u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000040u) {
      job_ = from.job_;
    }
    if (cached_has_bits & 0x00000080u) {
      hunger_ = from.hunger_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SailorStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.SailorStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SailorStateNotify::CopyFrom(const SailorStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.SailorStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SailorStateNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SailorStateNotify::Swap(SailorStateNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SailorStateNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SailorStateNotify::UnsafeArenaSwap(SailorStateNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SailorStateNotify::InternalSwap(SailorStateNotify* other) {
  using std::swap;
  swap(sailorid_, other->sailorid_);
  swap(_state_, other->_state_);
  swap(roomid_, other->roomid_);
  swap(duration_, other->duration_);
  swap(facilityid_, other->facilityid_);
  swap(orderid_, other->orderid_);
  swap(job_, other->job_);
  swap(hunger_, other->hunger_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SailorStateNotify::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SailorFarmSkillNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SailorFarmSkillNotify::kSailoridFieldNumber;
const int SailorFarmSkillNotify::kSkillidFieldNumber;
const int SailorFarmSkillNotify::kLevelFieldNumber;
const int SailorFarmSkillNotify::kExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SailorFarmSkillNotify::SailorFarmSkillNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserSailor_2eproto::scc_info_SailorFarmSkillNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.SailorFarmSkillNotify)
}
SailorFarmSkillNotify::SailorFarmSkillNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_SailorFarmSkillNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.SailorFarmSkillNotify)
}
SailorFarmSkillNotify::SailorFarmSkillNotify(const SailorFarmSkillNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&skillid_, &from.skillid_,
    static_cast<size_t>(reinterpret_cast<char*>(&exp_) -
    reinterpret_cast<char*>(&skillid_)) + sizeof(exp_));
  // @@protoc_insertion_point(copy_constructor:sg.SailorFarmSkillNotify)
}

void SailorFarmSkillNotify::SharedCtor() {
  ::memset(&skillid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exp_) -
      reinterpret_cast<char*>(&skillid_)) + sizeof(exp_));
}

SailorFarmSkillNotify::~SailorFarmSkillNotify() {
  // @@protoc_insertion_point(destructor:sg.SailorFarmSkillNotify)
  SharedDtor();
}

void SailorFarmSkillNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SailorFarmSkillNotify::ArenaDtor(void* object) {
  SailorFarmSkillNotify* _this = reinterpret_cast< SailorFarmSkillNotify* >(object);
  (void)_this;
}
void SailorFarmSkillNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SailorFarmSkillNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SailorFarmSkillNotify::descriptor() {
  ::protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SailorFarmSkillNotify& SailorFarmSkillNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserSailor_2eproto::scc_info_SailorFarmSkillNotify.base);
  return *internal_default_instance();
}


void SailorFarmSkillNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.SailorFarmSkillNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&skillid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&exp_) -
        reinterpret_cast<char*>(&skillid_)) + sizeof(exp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SailorFarmSkillNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.SailorFarmSkillNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 sailorid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sailorid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sailorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 skillid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.SailorFarmSkillNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.SailorFarmSkillNotify)
  return false;
#undef DO_
}

void SailorFarmSkillNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.SailorFarmSkillNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 sailorid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sailorid(), output);
  }

  // optional uint64 skillid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->skillid(), output);
  }

  // optional int32 level = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // optional int32 exp = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.SailorFarmSkillNotify)
}

::google::protobuf::uint8* SailorFarmSkillNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.SailorFarmSkillNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 sailorid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sailorid(), target);
  }

  // optional uint64 skillid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->skillid(), target);
  }

  // optional int32 level = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // optional int32 exp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.SailorFarmSkillNotify)
  return target;
}

size_t SailorFarmSkillNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.SailorFarmSkillNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 sailorid = 1;
  if (has_sailorid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sailorid());
  }
  // optional uint64 skillid = 2;
  if (has_skillid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->skillid());
  }

  if (_has_bits_[0 / 32] & 12u) {
    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SailorFarmSkillNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.SailorFarmSkillNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SailorFarmSkillNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SailorFarmSkillNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.SailorFarmSkillNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.SailorFarmSkillNotify)
    MergeFrom(*source);
  }
}

void SailorFarmSkillNotify::MergeFrom(const SailorFarmSkillNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.SailorFarmSkillNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      skillid_ = from.skillid_;
    }
    if (cached_has_bits & 0x00000002u) {
      sailorid_ = from.sailorid_;
    }
    if (cached_has_bits & 0x00000004u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000008u) {
      exp_ = from.exp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SailorFarmSkillNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.SailorFarmSkillNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SailorFarmSkillNotify::CopyFrom(const SailorFarmSkillNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.SailorFarmSkillNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SailorFarmSkillNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void SailorFarmSkillNotify::Swap(SailorFarmSkillNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SailorFarmSkillNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SailorFarmSkillNotify::UnsafeArenaSwap(SailorFarmSkillNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SailorFarmSkillNotify::InternalSwap(SailorFarmSkillNotify* other) {
  using std::swap;
  swap(skillid_, other->skillid_);
  swap(sailorid_, other->sailorid_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SailorFarmSkillNotify::GetMetadata() const {
  protobuf_UserSailor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserSailor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::SailorDelegate* Arena::CreateMaybeMessage< ::sg::SailorDelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::SailorDelegate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserSailorService_UserSailorRequest* Arena::CreateMaybeMessage< ::sg::UserSailorService_UserSailorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserSailorService_UserSailorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserSailorService_UserSailorResponse* Arena::CreateMaybeMessage< ::sg::UserSailorService_UserSailorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserSailorService_UserSailorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserSailorService* Arena::CreateMaybeMessage< ::sg::UserSailorService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserSailorService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* Arena::CreateMaybeMessage< ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* Arena::CreateMaybeMessage< ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserSailorStrengthenService* Arena::CreateMaybeMessage< ::sg::UserSailorStrengthenService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserSailorStrengthenService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::SailorStateNotify* Arena::CreateMaybeMessage< ::sg::SailorStateNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::SailorStateNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::SailorFarmSkillNotify* Arena::CreateMaybeMessage< ::sg::SailorFarmSkillNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::SailorFarmSkillNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
