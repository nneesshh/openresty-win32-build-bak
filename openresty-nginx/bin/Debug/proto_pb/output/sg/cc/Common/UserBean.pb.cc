// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserBean.proto

#include "UserBean.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Reward;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_UserBean_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountLoginService_LoginRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountLoginService_LoginResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountReloginService_ReloginRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountReloginService_ReloginResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FastRegisterAccountService_RegisterRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FastRegisterAccountService_RegisterResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlayerJoinService_JoinRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlayerJoinService_JoinResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegisterAccountService_RegisterRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegisterAccountService_RegisterResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserAttrService_UserAttrRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserAttribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserStateService_UserStateRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserAttrService_UserAttrResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserBean_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserStateService_UserStateResponse;
}  // namespace protobuf_UserBean_2eproto
namespace sg {
class ErrorNoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorNo>
      _instance;
} _ErrorNo_default_instance_;
class RegisterAccountService_RegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterAccountService_RegisterRequest>
      _instance;
} _RegisterAccountService_RegisterRequest_default_instance_;
class RegisterAccountService_RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterAccountService_RegisterResponse>
      _instance;
} _RegisterAccountService_RegisterResponse_default_instance_;
class RegisterAccountServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterAccountService>
      _instance;
} _RegisterAccountService_default_instance_;
class FastRegisterAccountService_RegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FastRegisterAccountService_RegisterRequest>
      _instance;
} _FastRegisterAccountService_RegisterRequest_default_instance_;
class FastRegisterAccountService_RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FastRegisterAccountService_RegisterResponse>
      _instance;
} _FastRegisterAccountService_RegisterResponse_default_instance_;
class FastRegisterAccountServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FastRegisterAccountService>
      _instance;
} _FastRegisterAccountService_default_instance_;
class AccountLoginService_LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginService_LoginRequest>
      _instance;
} _AccountLoginService_LoginRequest_default_instance_;
class AccountLoginService_LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginService_LoginResponse>
      _instance;
} _AccountLoginService_LoginResponse_default_instance_;
class AccountLoginServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountLoginService>
      _instance;
} _AccountLoginService_default_instance_;
class AccountReloginService_ReloginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountReloginService_ReloginRequest>
      _instance;
} _AccountReloginService_ReloginRequest_default_instance_;
class AccountReloginService_ReloginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountReloginService_ReloginResponse>
      _instance;
} _AccountReloginService_ReloginResponse_default_instance_;
class AccountReloginServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountReloginService>
      _instance;
} _AccountReloginService_default_instance_;
class PlayerJoinService_JoinRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerJoinService_JoinRequest>
      _instance;
} _PlayerJoinService_JoinRequest_default_instance_;
class PlayerJoinService_JoinResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerJoinService_JoinResponse>
      _instance;
} _PlayerJoinService_JoinResponse_default_instance_;
class PlayerJoinServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerJoinService>
      _instance;
} _PlayerJoinService_default_instance_;
class UserAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAttribute>
      _instance;
} _UserAttribute_default_instance_;
class UserAttrService_UserAttrRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAttrService_UserAttrRequest>
      _instance;
} _UserAttrService_UserAttrRequest_default_instance_;
class UserAttrService_UserAttrResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAttrService_UserAttrResponse>
      _instance;
} _UserAttrService_UserAttrResponse_default_instance_;
class UserAttrServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAttrService>
      _instance;
} _UserAttrService_default_instance_;
class UserLevelUpNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLevelUpNotify>
      _instance;
} _UserLevelUpNotify_default_instance_;
class UserStateService_UserStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserStateService_UserStateRequest>
      _instance;
} _UserStateService_UserStateRequest_default_instance_;
class UserStateService_UserStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserStateService_UserStateResponse>
      _instance;
} _UserStateService_UserStateResponse_default_instance_;
class UserStateServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserStateService>
      _instance;
} _UserStateService_default_instance_;
}  // namespace sg
namespace protobuf_UserBean_2eproto {
static void InitDefaultsErrorNo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ErrorNo_default_instance_;
    new (ptr) ::sg::ErrorNo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ErrorNo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorNo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorNo}, {}};

static void InitDefaultsRegisterAccountService_RegisterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_RegisterAccountService_RegisterRequest_default_instance_;
    new (ptr) ::sg::RegisterAccountService_RegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::RegisterAccountService_RegisterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterAccountService_RegisterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterAccountService_RegisterRequest}, {}};

static void InitDefaultsRegisterAccountService_RegisterResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_RegisterAccountService_RegisterResponse_default_instance_;
    new (ptr) ::sg::RegisterAccountService_RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::RegisterAccountService_RegisterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterAccountService_RegisterResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterAccountService_RegisterResponse}, {}};

static void InitDefaultsRegisterAccountService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_RegisterAccountService_default_instance_;
    new (ptr) ::sg::RegisterAccountService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::RegisterAccountService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RegisterAccountService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRegisterAccountService}, {
      &protobuf_UserBean_2eproto::scc_info_RegisterAccountService_RegisterRequest.base,
      &protobuf_UserBean_2eproto::scc_info_RegisterAccountService_RegisterResponse.base,}};

static void InitDefaultsFastRegisterAccountService_RegisterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_FastRegisterAccountService_RegisterRequest_default_instance_;
    new (ptr) ::sg::FastRegisterAccountService_RegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::FastRegisterAccountService_RegisterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FastRegisterAccountService_RegisterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFastRegisterAccountService_RegisterRequest}, {}};

static void InitDefaultsFastRegisterAccountService_RegisterResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_FastRegisterAccountService_RegisterResponse_default_instance_;
    new (ptr) ::sg::FastRegisterAccountService_RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::FastRegisterAccountService_RegisterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FastRegisterAccountService_RegisterResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFastRegisterAccountService_RegisterResponse}, {}};

static void InitDefaultsFastRegisterAccountService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_FastRegisterAccountService_default_instance_;
    new (ptr) ::sg::FastRegisterAccountService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::FastRegisterAccountService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FastRegisterAccountService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFastRegisterAccountService}, {
      &protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService_RegisterRequest.base,
      &protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService_RegisterResponse.base,}};

static void InitDefaultsAccountLoginService_LoginRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_AccountLoginService_LoginRequest_default_instance_;
    new (ptr) ::sg::AccountLoginService_LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::AccountLoginService_LoginRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountLoginService_LoginRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountLoginService_LoginRequest}, {}};

static void InitDefaultsAccountLoginService_LoginResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_AccountLoginService_LoginResponse_default_instance_;
    new (ptr) ::sg::AccountLoginService_LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::AccountLoginService_LoginResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountLoginService_LoginResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountLoginService_LoginResponse}, {}};

static void InitDefaultsAccountLoginService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_AccountLoginService_default_instance_;
    new (ptr) ::sg::AccountLoginService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::AccountLoginService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AccountLoginService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAccountLoginService}, {
      &protobuf_UserBean_2eproto::scc_info_AccountLoginService_LoginRequest.base,
      &protobuf_UserBean_2eproto::scc_info_AccountLoginService_LoginResponse.base,}};

static void InitDefaultsAccountReloginService_ReloginRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_AccountReloginService_ReloginRequest_default_instance_;
    new (ptr) ::sg::AccountReloginService_ReloginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::AccountReloginService_ReloginRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountReloginService_ReloginRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountReloginService_ReloginRequest}, {}};

static void InitDefaultsAccountReloginService_ReloginResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_AccountReloginService_ReloginResponse_default_instance_;
    new (ptr) ::sg::AccountReloginService_ReloginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::AccountReloginService_ReloginResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountReloginService_ReloginResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountReloginService_ReloginResponse}, {}};

static void InitDefaultsAccountReloginService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_AccountReloginService_default_instance_;
    new (ptr) ::sg::AccountReloginService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::AccountReloginService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AccountReloginService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAccountReloginService}, {
      &protobuf_UserBean_2eproto::scc_info_AccountReloginService_ReloginRequest.base,
      &protobuf_UserBean_2eproto::scc_info_AccountReloginService_ReloginResponse.base,}};

static void InitDefaultsPlayerJoinService_JoinRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_PlayerJoinService_JoinRequest_default_instance_;
    new (ptr) ::sg::PlayerJoinService_JoinRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::PlayerJoinService_JoinRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerJoinService_JoinRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerJoinService_JoinRequest}, {}};

static void InitDefaultsPlayerJoinService_JoinResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_PlayerJoinService_JoinResponse_default_instance_;
    new (ptr) ::sg::PlayerJoinService_JoinResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::PlayerJoinService_JoinResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerJoinService_JoinResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerJoinService_JoinResponse}, {}};

static void InitDefaultsPlayerJoinService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_PlayerJoinService_default_instance_;
    new (ptr) ::sg::PlayerJoinService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::PlayerJoinService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PlayerJoinService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPlayerJoinService}, {
      &protobuf_UserBean_2eproto::scc_info_PlayerJoinService_JoinRequest.base,
      &protobuf_UserBean_2eproto::scc_info_PlayerJoinService_JoinResponse.base,}};

static void InitDefaultsUserAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserAttribute_default_instance_;
    new (ptr) ::sg::UserAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserAttribute}, {}};

static void InitDefaultsUserAttrService_UserAttrRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserAttrService_UserAttrRequest_default_instance_;
    new (ptr) ::sg::UserAttrService_UserAttrRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserAttrService_UserAttrRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserAttrService_UserAttrRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserAttrService_UserAttrRequest}, {}};

static void InitDefaultsUserAttrService_UserAttrResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserAttrService_UserAttrResponse_default_instance_;
    new (ptr) ::sg::UserAttrService_UserAttrResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserAttrService_UserAttrResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserAttrService_UserAttrResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserAttrService_UserAttrResponse}, {
      &protobuf_UserBean_2eproto::scc_info_UserAttribute.base,}};

static void InitDefaultsUserAttrService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserAttrService_default_instance_;
    new (ptr) ::sg::UserAttrService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserAttrService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserAttrService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserAttrService}, {
      &protobuf_UserBean_2eproto::scc_info_UserAttrService_UserAttrRequest.base,
      &protobuf_UserBean_2eproto::scc_info_UserAttrService_UserAttrResponse.base,}};

static void InitDefaultsUserLevelUpNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserLevelUpNotify_default_instance_;
    new (ptr) ::sg::UserLevelUpNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserLevelUpNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserLevelUpNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserLevelUpNotify}, {
      &protobuf_BaseStruct_2eproto::scc_info_Reward.base,}};

static void InitDefaultsUserStateService_UserStateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserStateService_UserStateRequest_default_instance_;
    new (ptr) ::sg::UserStateService_UserStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserStateService_UserStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserStateService_UserStateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserStateService_UserStateRequest}, {}};

static void InitDefaultsUserStateService_UserStateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserStateService_UserStateResponse_default_instance_;
    new (ptr) ::sg::UserStateService_UserStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserStateService_UserStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserStateService_UserStateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserStateService_UserStateResponse}, {
      &protobuf_BaseStruct_2eproto::scc_info_UserState.base,}};

static void InitDefaultsUserStateService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserStateService_default_instance_;
    new (ptr) ::sg::UserStateService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserStateService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserStateService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserStateService}, {
      &protobuf_UserBean_2eproto::scc_info_UserStateService_UserStateRequest.base,
      &protobuf_UserBean_2eproto::scc_info_UserStateService_UserStateResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorNo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterAccountService_RegisterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterAccountService_RegisterResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterAccountService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FastRegisterAccountService_RegisterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FastRegisterAccountService_RegisterResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FastRegisterAccountService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountLoginService_LoginRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountLoginService_LoginResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountLoginService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountReloginService_ReloginRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountReloginService_ReloginResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountReloginService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerJoinService_JoinRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerJoinService_JoinResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerJoinService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserAttrService_UserAttrRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserAttrService_UserAttrResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserAttrService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserLevelUpNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserStateService_UserStateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserStateService_UserStateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserStateService.base);
}

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ErrorNo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ErrorNo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ErrorNo, error_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ErrorNo, desc_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterRequest, pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterRequest, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterRequest, email_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService_RegisterResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::RegisterAccountService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService_RegisterRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService_RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService_RegisterResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService_RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService_RegisterResponse, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService_RegisterResponse, pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService_RegisterResponse, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService_RegisterResponse, email_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::FastRegisterAccountService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService_LoginRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService_LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService_LoginRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService_LoginRequest, pwd_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService_LoginResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService_LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService_LoginResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService_LoginResponse, uuid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountLoginService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService_ReloginRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService_ReloginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService_ReloginRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService_ReloginRequest, pwd_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService_ReloginResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService_ReloginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService_ReloginResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService_ReloginResponse, uuid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::AccountReloginService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService_JoinRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService_JoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService_JoinRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService_JoinRequest, nick_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService_JoinResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService_JoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService_JoinResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::PlayerJoinService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, portrait_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, last_rename_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttribute, portrait_frame_),
  0,
  3,
  4,
  1,
  5,
  2,
  7,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrRequest, new_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrRequest, new_portrait_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrRequest, new_signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrRequest, new_frame_),
  4,
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService_UserAttrResponse, user_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserAttrService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserLevelUpNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserLevelUpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserLevelUpNotify, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserLevelUpNotify, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserLevelUpNotify, reward_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService_UserStateRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService_UserStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService_UserStateRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService_UserStateRequest, new_guide_val_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService_UserStateResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService_UserStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService_UserStateResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService_UserStateResponse, state_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserStateService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::sg::ErrorNo)},
  { 9, 18, sizeof(::sg::RegisterAccountService_RegisterRequest)},
  { 22, 28, sizeof(::sg::RegisterAccountService_RegisterResponse)},
  { 29, 36, sizeof(::sg::RegisterAccountService)},
  { 38, 43, sizeof(::sg::FastRegisterAccountService_RegisterRequest)},
  { 43, 52, sizeof(::sg::FastRegisterAccountService_RegisterResponse)},
  { 56, 63, sizeof(::sg::FastRegisterAccountService)},
  { 65, 72, sizeof(::sg::AccountLoginService_LoginRequest)},
  { 74, 81, sizeof(::sg::AccountLoginService_LoginResponse)},
  { 83, 90, sizeof(::sg::AccountLoginService)},
  { 92, 99, sizeof(::sg::AccountReloginService_ReloginRequest)},
  { 101, 108, sizeof(::sg::AccountReloginService_ReloginResponse)},
  { 110, 117, sizeof(::sg::AccountReloginService)},
  { 119, 126, sizeof(::sg::PlayerJoinService_JoinRequest)},
  { 128, 134, sizeof(::sg::PlayerJoinService_JoinResponse)},
  { 135, 142, sizeof(::sg::PlayerJoinService)},
  { 144, 157, sizeof(::sg::UserAttribute)},
  { 165, 175, sizeof(::sg::UserAttrService_UserAttrRequest)},
  { 180, 187, sizeof(::sg::UserAttrService_UserAttrResponse)},
  { 189, 196, sizeof(::sg::UserAttrService)},
  { 198, 206, sizeof(::sg::UserLevelUpNotify)},
  { 209, 216, sizeof(::sg::UserStateService_UserStateRequest)},
  { 218, 225, sizeof(::sg::UserStateService_UserStateResponse)},
  { 227, 234, sizeof(::sg::UserStateService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ErrorNo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_RegisterAccountService_RegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_RegisterAccountService_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_RegisterAccountService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_FastRegisterAccountService_RegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_FastRegisterAccountService_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_FastRegisterAccountService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_AccountLoginService_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_AccountLoginService_LoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_AccountLoginService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_AccountReloginService_ReloginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_AccountReloginService_ReloginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_AccountReloginService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_PlayerJoinService_JoinRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_PlayerJoinService_JoinResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_PlayerJoinService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserAttrService_UserAttrRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserAttrService_UserAttrResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserAttrService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserLevelUpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserStateService_UserStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserStateService_UserStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserStateService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserBean.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016UserBean.proto\022\002sg\032\020BaseStruct.proto\"K"
      "\n\007ErrorNo\022\020\n\010error_no\030\001 \002(\005\022\014\n\004desc\030\002 \002("
      "\014\" \n\010ERROR_NO\022\024\n\007RELOGIN\020\330\271\377\377\377\377\377\377\377\001\"\273\003\n\026"
      "RegisterAccountService\0227\n\003req\030\001 \001(\0132*.sg"
      ".RegisterAccountService.RegisterRequest\022"
      "9\n\004resp\030\002 \001(\0132+.sg.RegisterAccountServic"
      "e.RegisterResponse\032H\n\017RegisterRequest\022\013\n"
      "\003uid\030\001 \002(\014\022\013\n\003pwd\030\002 \002(\014\022\014\n\004nick\030\003 \002(\014\022\r\n"
      "\005email\030\004 \002(\014\032E\n\020RegisterResponse\0221\n\006resu"
      "lt\030\001 \002(\0162!.sg.RegisterAccountService.RES"
      "ULT\"\233\001\n\006RESULT\022\006\n\002OK\020\000\022!\n\024UID_OR_PWD_TOO"
      "_SHORT\020\377\377\377\377\377\377\377\377\377\001\022\037\n\022UID_ALREADY_EXISTS\020"
      "\376\377\377\377\377\377\377\377\377\001\022)\n\034UID_MUST_START_WITH_A_LETT"
      "ER\020\375\377\377\377\377\377\377\377\377\001\022\032\n\rEMAIL_INVALID\020\374\377\377\377\377\377\377\377\377"
      "\001\"\366\001\n\032FastRegisterAccountService\022;\n\003req\030"
      "\001 \001(\0132..sg.FastRegisterAccountService.Re"
      "gisterRequest\022=\n\004resp\030\002 \001(\0132/.sg.FastReg"
      "isterAccountService.RegisterResponse\032\021\n\017"
      "RegisterRequest\032I\n\020RegisterResponse\022\013\n\003u"
      "id\030\001 \002(\014\022\013\n\003pwd\030\002 \002(\014\022\014\n\004nick\030\003 \002(\014\022\r\n\005e"
      "mail\030\004 \002(\014\"\363\002\n\023AccountLoginService\0221\n\003re"
      "q\030\001 \001(\0132$.sg.AccountLoginService.LoginRe"
      "quest\0223\n\004resp\030\002 \001(\0132%.sg.AccountLoginSer"
      "vice.LoginResponse\032(\n\014LoginRequest\022\013\n\003ui"
      "d\030\001 \002(\014\022\013\n\003pwd\030\002 \002(\014\032M\n\rLoginResponse\022.\n"
      "\006result\030\001 \002(\0162\036.sg.AccountLoginService.R"
      "ESULT\022\014\n\004uuid\030\002 \001(\004\"{\n\006RESULT\022\006\n\002OK\020\000\022$\n"
      "\027UID_OR_PWD_IS_NOT_VALID\020\377\377\377\377\377\377\377\377\377\001\022$\n\027U"
      "SER_ASSETS_LOAD_FAILED\020\376\377\377\377\377\377\377\377\377\001\022\035\n\020TOO"
      "_MANY_REQUEST\020\375\377\377\377\377\377\377\377\377\001\"\244\002\n\025AccountRelo"
      "ginService\0225\n\003req\030\001 \001(\0132(.sg.AccountRelo"
      "ginService.ReloginRequest\0227\n\004resp\030\002 \001(\0132"
      ").sg.AccountReloginService.ReloginRespon"
      "se\032*\n\016ReloginRequest\022\013\n\003uid\030\001 \002(\014\022\013\n\003pwd"
      "\030\002 \002(\014\032Q\n\017ReloginResponse\0220\n\006result\030\001 \002("
      "\0162 .sg.AccountReloginService.RESULT\022\014\n\004u"
      "uid\030\002 \001(\004\"\034\n\006RESULT\022\006\n\002OK\020\000\022\n\n\006FAILED\020\001\""
      "\373\001\n\021PlayerJoinService\022.\n\003req\030\001 \001(\0132!.sg."
      "PlayerJoinService.JoinRequest\0220\n\004resp\030\002 "
      "\001(\0132\".sg.PlayerJoinService.JoinResponse\032"
      "(\n\013JoinRequest\022\013\n\003uid\030\001 \002(\014\022\014\n\004nick\030\002 \002("
      "\014\032<\n\014JoinResponse\022,\n\006result\030\001 \002(\0162\034.sg.P"
      "layerJoinService.RESULT\"\034\n\006RESULT\022\006\n\002OK\020"
      "\000\022\n\n\006FAILED\020\001\"\240\001\n\rUserAttribute\022\016\n\006useri"
      "d\030\001 \002(\014\022\r\n\005level\030\002 \002(\005\022\013\n\003exp\030\003 \002(\005\022\014\n\004n"
      "ick\030\004 \002(\014\022\020\n\010portrait\030\005 \002(\005\022\021\n\tsignature"
      "\030\006 \002(\014\022\030\n\020last_rename_time\030\007 \001(\020\022\026\n\016port"
      "rait_frame\030\010 \001(\005\"\265\003\n\017UserAttrService\0220\n\003"
      "req\030\001 \001(\0132#.sg.UserAttrService.UserAttrR"
      "equest\0222\n\004resp\030\002 \001(\0132$.sg.UserAttrServic"
      "e.UserAttrResponse\032\216\001\n\017UserAttrRequest\022)"
      "\n\003cmd\030\001 \002(\0162\034.sg.UserAttrService.USER_CM"
      "D\022\020\n\010new_name\030\002 \001(\014\022\024\n\014new_portrait\030\003 \001("
      "\005\022\025\n\rnew_signature\030\004 \001(\014\022\021\n\tnew_frame\030\005 "
      "\001(\005\032C\n\020UserAttrResponse\022\016\n\006result\030\001 \002(\005\022"
      "\037\n\004user\030\002 \001(\0132\021.sg.UserAttribute\"f\n\010USER"
      "_CMD\022\t\n\005QUERY\020\001\022\n\n\006RENAME\020\002\022\023\n\017CHANGE_PO"
      "RTRAIT\020\003\022\023\n\017WRITE_SIGNATURE\020\004\022\031\n\025CHANGE_"
      "PORTRAIT_FRAME\020\005\"K\n\021UserLevelUpNotify\022\r\n"
      "\005level\030\001 \002(\005\022\013\n\003exp\030\002 \002(\005\022\032\n\006reward\030\003 \001("
      "\0132\n.sg.Reward\"\265\002\n\020UserStateService\0222\n\003re"
      "q\030\001 \001(\0132%.sg.UserStateService.UserStateR"
      "equest\0224\n\004resp\030\002 \001(\0132&.sg.UserStateServi"
      "ce.UserStateResponse\032P\n\020UserStateRequest"
      "\022%\n\003cmd\030\001 \002(\0162\030.sg.UserStateService.CMD\022"
      "\025\n\rnew_guide_val\030\002 \001(\014\032A\n\021UserStateRespo"
      "nse\022\016\n\006result\030\001 \002(\005\022\034\n\005state\030\002 \001(\0132\r.sg."
      "UserState\"\"\n\003CMD\022\t\n\005QUERY\020\001\022\020\n\014CHANGE_GU"
      "IDE\020\002B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2730);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserBean.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserBean_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* ErrorNo_ERROR_NO_descriptor() {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBean_2eproto::file_level_enum_descriptors[0];
}
bool ErrorNo_ERROR_NO_IsValid(int value) {
  switch (value) {
    case -9000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ErrorNo_ERROR_NO ErrorNo::RELOGIN;
const ErrorNo_ERROR_NO ErrorNo::ERROR_NO_MIN;
const ErrorNo_ERROR_NO ErrorNo::ERROR_NO_MAX;
const int ErrorNo::ERROR_NO_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RegisterAccountService_RESULT_descriptor() {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBean_2eproto::file_level_enum_descriptors[1];
}
bool RegisterAccountService_RESULT_IsValid(int value) {
  switch (value) {
    case -4:
    case -3:
    case -2:
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RegisterAccountService_RESULT RegisterAccountService::OK;
const RegisterAccountService_RESULT RegisterAccountService::UID_OR_PWD_TOO_SHORT;
const RegisterAccountService_RESULT RegisterAccountService::UID_ALREADY_EXISTS;
const RegisterAccountService_RESULT RegisterAccountService::UID_MUST_START_WITH_A_LETTER;
const RegisterAccountService_RESULT RegisterAccountService::EMAIL_INVALID;
const RegisterAccountService_RESULT RegisterAccountService::RESULT_MIN;
const RegisterAccountService_RESULT RegisterAccountService::RESULT_MAX;
const int RegisterAccountService::RESULT_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AccountLoginService_RESULT_descriptor() {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBean_2eproto::file_level_enum_descriptors[2];
}
bool AccountLoginService_RESULT_IsValid(int value) {
  switch (value) {
    case -3:
    case -2:
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AccountLoginService_RESULT AccountLoginService::OK;
const AccountLoginService_RESULT AccountLoginService::UID_OR_PWD_IS_NOT_VALID;
const AccountLoginService_RESULT AccountLoginService::USER_ASSETS_LOAD_FAILED;
const AccountLoginService_RESULT AccountLoginService::TOO_MANY_REQUEST;
const AccountLoginService_RESULT AccountLoginService::RESULT_MIN;
const AccountLoginService_RESULT AccountLoginService::RESULT_MAX;
const int AccountLoginService::RESULT_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AccountReloginService_RESULT_descriptor() {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBean_2eproto::file_level_enum_descriptors[3];
}
bool AccountReloginService_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AccountReloginService_RESULT AccountReloginService::OK;
const AccountReloginService_RESULT AccountReloginService::FAILED;
const AccountReloginService_RESULT AccountReloginService::RESULT_MIN;
const AccountReloginService_RESULT AccountReloginService::RESULT_MAX;
const int AccountReloginService::RESULT_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerJoinService_RESULT_descriptor() {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBean_2eproto::file_level_enum_descriptors[4];
}
bool PlayerJoinService_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerJoinService_RESULT PlayerJoinService::OK;
const PlayerJoinService_RESULT PlayerJoinService::FAILED;
const PlayerJoinService_RESULT PlayerJoinService::RESULT_MIN;
const PlayerJoinService_RESULT PlayerJoinService::RESULT_MAX;
const int PlayerJoinService::RESULT_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserAttrService_USER_CMD_descriptor() {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBean_2eproto::file_level_enum_descriptors[5];
}
bool UserAttrService_USER_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserAttrService_USER_CMD UserAttrService::QUERY;
const UserAttrService_USER_CMD UserAttrService::RENAME;
const UserAttrService_USER_CMD UserAttrService::CHANGE_PORTRAIT;
const UserAttrService_USER_CMD UserAttrService::WRITE_SIGNATURE;
const UserAttrService_USER_CMD UserAttrService::CHANGE_PORTRAIT_FRAME;
const UserAttrService_USER_CMD UserAttrService::USER_CMD_MIN;
const UserAttrService_USER_CMD UserAttrService::USER_CMD_MAX;
const int UserAttrService::USER_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserStateService_CMD_descriptor() {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBean_2eproto::file_level_enum_descriptors[6];
}
bool UserStateService_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserStateService_CMD UserStateService::QUERY;
const UserStateService_CMD UserStateService::CHANGE_GUIDE;
const UserStateService_CMD UserStateService::CMD_MIN;
const UserStateService_CMD UserStateService::CMD_MAX;
const int UserStateService::CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ErrorNo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorNo::kErrorNoFieldNumber;
const int ErrorNo::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorNo::ErrorNo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_ErrorNo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ErrorNo)
}
ErrorNo::ErrorNo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_ErrorNo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ErrorNo)
}
ErrorNo::ErrorNo(const ErrorNo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc(),
      GetArenaNoVirtual());
  }
  error_no_ = from.error_no_;
  // @@protoc_insertion_point(copy_constructor:sg.ErrorNo)
}

void ErrorNo::SharedCtor() {
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_no_ = 0;
}

ErrorNo::~ErrorNo() {
  // @@protoc_insertion_point(destructor:sg.ErrorNo)
  SharedDtor();
}

void ErrorNo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorNo::ArenaDtor(void* object) {
  ErrorNo* _this = reinterpret_cast< ErrorNo* >(object);
  (void)_this;
}
void ErrorNo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ErrorNo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorNo::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorNo& ErrorNo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_ErrorNo.base);
  return *internal_default_instance();
}


void ErrorNo::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ErrorNo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    desc_.ClearNonDefaultToEmpty();
  }
  error_no_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ErrorNo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ErrorNo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 error_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_error_no();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ErrorNo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ErrorNo)
  return false;
#undef DO_
}

void ErrorNo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ErrorNo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 error_no = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_no(), output);
  }

  // required bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->desc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ErrorNo)
}

::google::protobuf::uint8* ErrorNo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ErrorNo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 error_no = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_no(), target);
  }

  // required bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ErrorNo)
  return target;
}

size_t ErrorNo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.ErrorNo)
  size_t total_size = 0;

  if (has_desc()) {
    // required bytes desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  if (has_error_no()) {
    // required int32 error_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_no());
  }

  return total_size;
}
size_t ErrorNo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ErrorNo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());

    // required int32 error_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_no());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorNo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ErrorNo)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorNo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorNo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ErrorNo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ErrorNo)
    MergeFrom(*source);
  }
}

void ErrorNo::MergeFrom(const ErrorNo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ErrorNo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_desc(from.desc());
    }
    if (cached_has_bits & 0x00000002u) {
      error_no_ = from.error_no_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ErrorNo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ErrorNo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorNo::CopyFrom(const ErrorNo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ErrorNo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorNo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ErrorNo::Swap(ErrorNo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ErrorNo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ErrorNo::UnsafeArenaSwap(ErrorNo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ErrorNo::InternalSwap(ErrorNo* other) {
  using std::swap;
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_no_, other->error_no_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorNo::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterAccountService_RegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterAccountService_RegisterRequest::kUidFieldNumber;
const int RegisterAccountService_RegisterRequest::kPwdFieldNumber;
const int RegisterAccountService_RegisterRequest::kNickFieldNumber;
const int RegisterAccountService_RegisterRequest::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterAccountService_RegisterRequest::RegisterAccountService_RegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_RegisterAccountService_RegisterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.RegisterAccountService.RegisterRequest)
}
RegisterAccountService_RegisterRequest::RegisterAccountService_RegisterRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_RegisterAccountService_RegisterRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.RegisterAccountService.RegisterRequest)
}
RegisterAccountService_RegisterRequest::RegisterAccountService_RegisterRequest(const RegisterAccountService_RegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid(),
      GetArenaNoVirtual());
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwd()) {
    pwd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:sg.RegisterAccountService.RegisterRequest)
}

void RegisterAccountService_RegisterRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RegisterAccountService_RegisterRequest::~RegisterAccountService_RegisterRequest() {
  // @@protoc_insertion_point(destructor:sg.RegisterAccountService.RegisterRequest)
  SharedDtor();
}

void RegisterAccountService_RegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterAccountService_RegisterRequest::ArenaDtor(void* object) {
  RegisterAccountService_RegisterRequest* _this = reinterpret_cast< RegisterAccountService_RegisterRequest* >(object);
  (void)_this;
}
void RegisterAccountService_RegisterRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterAccountService_RegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterAccountService_RegisterRequest::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterAccountService_RegisterRequest& RegisterAccountService_RegisterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_RegisterAccountService_RegisterRequest.base);
  return *internal_default_instance();
}


void RegisterAccountService_RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.RegisterAccountService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      pwd_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      email_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterAccountService_RegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.RegisterAccountService.RegisterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes email = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.RegisterAccountService.RegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.RegisterAccountService.RegisterRequest)
  return false;
#undef DO_
}

void RegisterAccountService_RegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.RegisterAccountService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uid(), output);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pwd(), output);
  }

  // required bytes nick = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->nick(), output);
  }

  // required bytes email = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.RegisterAccountService.RegisterRequest)
}

::google::protobuf::uint8* RegisterAccountService_RegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.RegisterAccountService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uid(), target);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pwd(), target);
  }

  // required bytes nick = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->nick(), target);
  }

  // required bytes email = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.RegisterAccountService.RegisterRequest)
  return target;
}

size_t RegisterAccountService_RegisterRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.RegisterAccountService.RegisterRequest)
  size_t total_size = 0;

  if (has_uid()) {
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());
  }

  if (has_pwd()) {
    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());
  }

  if (has_nick()) {
    // required bytes nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  if (has_email()) {
    // required bytes email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->email());
  }

  return total_size;
}
size_t RegisterAccountService_RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.RegisterAccountService.RegisterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());

    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());

    // required bytes nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

    // required bytes email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->email());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountService_RegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.RegisterAccountService.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountService_RegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterAccountService_RegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.RegisterAccountService.RegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.RegisterAccountService.RegisterRequest)
    MergeFrom(*source);
  }
}

void RegisterAccountService_RegisterRequest::MergeFrom(const RegisterAccountService_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.RegisterAccountService.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_uid(from.uid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_pwd(from.pwd());
    }
    if (cached_has_bits & 0x00000004u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000008u) {
      set_email(from.email());
    }
  }
}

void RegisterAccountService_RegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.RegisterAccountService.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountService_RegisterRequest::CopyFrom(const RegisterAccountService_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.RegisterAccountService.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountService_RegisterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void RegisterAccountService_RegisterRequest::Swap(RegisterAccountService_RegisterRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterAccountService_RegisterRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterAccountService_RegisterRequest::UnsafeArenaSwap(RegisterAccountService_RegisterRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterAccountService_RegisterRequest::InternalSwap(RegisterAccountService_RegisterRequest* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pwd_.Swap(&other->pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterAccountService_RegisterRequest::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterAccountService_RegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterAccountService_RegisterResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterAccountService_RegisterResponse::RegisterAccountService_RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_RegisterAccountService_RegisterResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.RegisterAccountService.RegisterResponse)
}
RegisterAccountService_RegisterResponse::RegisterAccountService_RegisterResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_RegisterAccountService_RegisterResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.RegisterAccountService.RegisterResponse)
}
RegisterAccountService_RegisterResponse::RegisterAccountService_RegisterResponse(const RegisterAccountService_RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.RegisterAccountService.RegisterResponse)
}

void RegisterAccountService_RegisterResponse::SharedCtor() {
  result_ = 0;
}

RegisterAccountService_RegisterResponse::~RegisterAccountService_RegisterResponse() {
  // @@protoc_insertion_point(destructor:sg.RegisterAccountService.RegisterResponse)
  SharedDtor();
}

void RegisterAccountService_RegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void RegisterAccountService_RegisterResponse::ArenaDtor(void* object) {
  RegisterAccountService_RegisterResponse* _this = reinterpret_cast< RegisterAccountService_RegisterResponse* >(object);
  (void)_this;
}
void RegisterAccountService_RegisterResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterAccountService_RegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterAccountService_RegisterResponse::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterAccountService_RegisterResponse& RegisterAccountService_RegisterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_RegisterAccountService_RegisterResponse.base);
  return *internal_default_instance();
}


void RegisterAccountService_RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.RegisterAccountService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterAccountService_RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.RegisterAccountService.RegisterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.RegisterAccountService.RESULT result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::RegisterAccountService_RESULT_IsValid(value)) {
            set_result(static_cast< ::sg::RegisterAccountService_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.RegisterAccountService.RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.RegisterAccountService.RegisterResponse)
  return false;
#undef DO_
}

void RegisterAccountService_RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.RegisterAccountService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.RegisterAccountService.RESULT result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.RegisterAccountService.RegisterResponse)
}

::google::protobuf::uint8* RegisterAccountService_RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.RegisterAccountService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.RegisterAccountService.RESULT result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.RegisterAccountService.RegisterResponse)
  return target;
}

size_t RegisterAccountService_RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.RegisterAccountService.RegisterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.RegisterAccountService.RESULT result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountService_RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.RegisterAccountService.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountService_RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterAccountService_RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.RegisterAccountService.RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.RegisterAccountService.RegisterResponse)
    MergeFrom(*source);
  }
}

void RegisterAccountService_RegisterResponse::MergeFrom(const RegisterAccountService_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.RegisterAccountService.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void RegisterAccountService_RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.RegisterAccountService.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountService_RegisterResponse::CopyFrom(const RegisterAccountService_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.RegisterAccountService.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountService_RegisterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RegisterAccountService_RegisterResponse::Swap(RegisterAccountService_RegisterResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterAccountService_RegisterResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterAccountService_RegisterResponse::UnsafeArenaSwap(RegisterAccountService_RegisterResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterAccountService_RegisterResponse::InternalSwap(RegisterAccountService_RegisterResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterAccountService_RegisterResponse::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterAccountService::InitAsDefaultInstance() {
  ::sg::_RegisterAccountService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::RegisterAccountService_RegisterRequest*>(
      ::sg::RegisterAccountService_RegisterRequest::internal_default_instance());
  ::sg::_RegisterAccountService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::RegisterAccountService_RegisterResponse*>(
      ::sg::RegisterAccountService_RegisterResponse::internal_default_instance());
}
void RegisterAccountService::unsafe_arena_set_allocated_req(
    ::sg::RegisterAccountService_RegisterRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.RegisterAccountService.req)
}
void RegisterAccountService::unsafe_arena_set_allocated_resp(
    ::sg::RegisterAccountService_RegisterResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.RegisterAccountService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterAccountService::kReqFieldNumber;
const int RegisterAccountService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterAccountService::RegisterAccountService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_RegisterAccountService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.RegisterAccountService)
}
RegisterAccountService::RegisterAccountService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_RegisterAccountService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.RegisterAccountService)
}
RegisterAccountService::RegisterAccountService(const RegisterAccountService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::RegisterAccountService_RegisterRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::RegisterAccountService_RegisterResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.RegisterAccountService)
}

void RegisterAccountService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

RegisterAccountService::~RegisterAccountService() {
  // @@protoc_insertion_point(destructor:sg.RegisterAccountService)
  SharedDtor();
}

void RegisterAccountService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void RegisterAccountService::ArenaDtor(void* object) {
  RegisterAccountService* _this = reinterpret_cast< RegisterAccountService* >(object);
  (void)_this;
}
void RegisterAccountService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterAccountService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterAccountService::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterAccountService& RegisterAccountService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_RegisterAccountService.base);
  return *internal_default_instance();
}


void RegisterAccountService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.RegisterAccountService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterAccountService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.RegisterAccountService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.RegisterAccountService.RegisterRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.RegisterAccountService.RegisterResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.RegisterAccountService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.RegisterAccountService)
  return false;
#undef DO_
}

void RegisterAccountService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.RegisterAccountService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.RegisterAccountService.RegisterRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.RegisterAccountService.RegisterResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.RegisterAccountService)
}

::google::protobuf::uint8* RegisterAccountService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.RegisterAccountService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.RegisterAccountService.RegisterRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.RegisterAccountService.RegisterResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.RegisterAccountService)
  return target;
}

size_t RegisterAccountService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.RegisterAccountService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.RegisterAccountService.RegisterRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.RegisterAccountService.RegisterResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterAccountService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.RegisterAccountService)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterAccountService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterAccountService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.RegisterAccountService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.RegisterAccountService)
    MergeFrom(*source);
  }
}

void RegisterAccountService::MergeFrom(const RegisterAccountService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.RegisterAccountService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::RegisterAccountService_RegisterRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::RegisterAccountService_RegisterResponse::MergeFrom(from.resp());
    }
  }
}

void RegisterAccountService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.RegisterAccountService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterAccountService::CopyFrom(const RegisterAccountService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.RegisterAccountService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterAccountService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void RegisterAccountService::Swap(RegisterAccountService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterAccountService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterAccountService::UnsafeArenaSwap(RegisterAccountService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterAccountService::InternalSwap(RegisterAccountService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterAccountService::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FastRegisterAccountService_RegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FastRegisterAccountService_RegisterRequest::FastRegisterAccountService_RegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService_RegisterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.FastRegisterAccountService.RegisterRequest)
}
FastRegisterAccountService_RegisterRequest::FastRegisterAccountService_RegisterRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService_RegisterRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.FastRegisterAccountService.RegisterRequest)
}
FastRegisterAccountService_RegisterRequest::FastRegisterAccountService_RegisterRequest(const FastRegisterAccountService_RegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sg.FastRegisterAccountService.RegisterRequest)
}

void FastRegisterAccountService_RegisterRequest::SharedCtor() {
}

FastRegisterAccountService_RegisterRequest::~FastRegisterAccountService_RegisterRequest() {
  // @@protoc_insertion_point(destructor:sg.FastRegisterAccountService.RegisterRequest)
  SharedDtor();
}

void FastRegisterAccountService_RegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void FastRegisterAccountService_RegisterRequest::ArenaDtor(void* object) {
  FastRegisterAccountService_RegisterRequest* _this = reinterpret_cast< FastRegisterAccountService_RegisterRequest* >(object);
  (void)_this;
}
void FastRegisterAccountService_RegisterRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FastRegisterAccountService_RegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FastRegisterAccountService_RegisterRequest::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FastRegisterAccountService_RegisterRequest& FastRegisterAccountService_RegisterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService_RegisterRequest.base);
  return *internal_default_instance();
}


void FastRegisterAccountService_RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.FastRegisterAccountService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FastRegisterAccountService_RegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.FastRegisterAccountService.RegisterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:sg.FastRegisterAccountService.RegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.FastRegisterAccountService.RegisterRequest)
  return false;
#undef DO_
}

void FastRegisterAccountService_RegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.FastRegisterAccountService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.FastRegisterAccountService.RegisterRequest)
}

::google::protobuf::uint8* FastRegisterAccountService_RegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.FastRegisterAccountService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.FastRegisterAccountService.RegisterRequest)
  return target;
}

size_t FastRegisterAccountService_RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.FastRegisterAccountService.RegisterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FastRegisterAccountService_RegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.FastRegisterAccountService.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FastRegisterAccountService_RegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FastRegisterAccountService_RegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.FastRegisterAccountService.RegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.FastRegisterAccountService.RegisterRequest)
    MergeFrom(*source);
  }
}

void FastRegisterAccountService_RegisterRequest::MergeFrom(const FastRegisterAccountService_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.FastRegisterAccountService.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FastRegisterAccountService_RegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.FastRegisterAccountService.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FastRegisterAccountService_RegisterRequest::CopyFrom(const FastRegisterAccountService_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.FastRegisterAccountService.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastRegisterAccountService_RegisterRequest::IsInitialized() const {
  return true;
}

void FastRegisterAccountService_RegisterRequest::Swap(FastRegisterAccountService_RegisterRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FastRegisterAccountService_RegisterRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FastRegisterAccountService_RegisterRequest::UnsafeArenaSwap(FastRegisterAccountService_RegisterRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FastRegisterAccountService_RegisterRequest::InternalSwap(FastRegisterAccountService_RegisterRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FastRegisterAccountService_RegisterRequest::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FastRegisterAccountService_RegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FastRegisterAccountService_RegisterResponse::kUidFieldNumber;
const int FastRegisterAccountService_RegisterResponse::kPwdFieldNumber;
const int FastRegisterAccountService_RegisterResponse::kNickFieldNumber;
const int FastRegisterAccountService_RegisterResponse::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FastRegisterAccountService_RegisterResponse::FastRegisterAccountService_RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService_RegisterResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.FastRegisterAccountService.RegisterResponse)
}
FastRegisterAccountService_RegisterResponse::FastRegisterAccountService_RegisterResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService_RegisterResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.FastRegisterAccountService.RegisterResponse)
}
FastRegisterAccountService_RegisterResponse::FastRegisterAccountService_RegisterResponse(const FastRegisterAccountService_RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid(),
      GetArenaNoVirtual());
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwd()) {
    pwd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:sg.FastRegisterAccountService.RegisterResponse)
}

void FastRegisterAccountService_RegisterResponse::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FastRegisterAccountService_RegisterResponse::~FastRegisterAccountService_RegisterResponse() {
  // @@protoc_insertion_point(destructor:sg.FastRegisterAccountService.RegisterResponse)
  SharedDtor();
}

void FastRegisterAccountService_RegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FastRegisterAccountService_RegisterResponse::ArenaDtor(void* object) {
  FastRegisterAccountService_RegisterResponse* _this = reinterpret_cast< FastRegisterAccountService_RegisterResponse* >(object);
  (void)_this;
}
void FastRegisterAccountService_RegisterResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FastRegisterAccountService_RegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FastRegisterAccountService_RegisterResponse::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FastRegisterAccountService_RegisterResponse& FastRegisterAccountService_RegisterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService_RegisterResponse.base);
  return *internal_default_instance();
}


void FastRegisterAccountService_RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.FastRegisterAccountService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      pwd_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      email_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FastRegisterAccountService_RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.FastRegisterAccountService.RegisterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes email = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.FastRegisterAccountService.RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.FastRegisterAccountService.RegisterResponse)
  return false;
#undef DO_
}

void FastRegisterAccountService_RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.FastRegisterAccountService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uid(), output);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pwd(), output);
  }

  // required bytes nick = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->nick(), output);
  }

  // required bytes email = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.FastRegisterAccountService.RegisterResponse)
}

::google::protobuf::uint8* FastRegisterAccountService_RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.FastRegisterAccountService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uid(), target);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pwd(), target);
  }

  // required bytes nick = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->nick(), target);
  }

  // required bytes email = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.FastRegisterAccountService.RegisterResponse)
  return target;
}

size_t FastRegisterAccountService_RegisterResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.FastRegisterAccountService.RegisterResponse)
  size_t total_size = 0;

  if (has_uid()) {
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());
  }

  if (has_pwd()) {
    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());
  }

  if (has_nick()) {
    // required bytes nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  if (has_email()) {
    // required bytes email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->email());
  }

  return total_size;
}
size_t FastRegisterAccountService_RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.FastRegisterAccountService.RegisterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());

    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());

    // required bytes nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

    // required bytes email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->email());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FastRegisterAccountService_RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.FastRegisterAccountService.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FastRegisterAccountService_RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FastRegisterAccountService_RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.FastRegisterAccountService.RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.FastRegisterAccountService.RegisterResponse)
    MergeFrom(*source);
  }
}

void FastRegisterAccountService_RegisterResponse::MergeFrom(const FastRegisterAccountService_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.FastRegisterAccountService.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_uid(from.uid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_pwd(from.pwd());
    }
    if (cached_has_bits & 0x00000004u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000008u) {
      set_email(from.email());
    }
  }
}

void FastRegisterAccountService_RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.FastRegisterAccountService.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FastRegisterAccountService_RegisterResponse::CopyFrom(const FastRegisterAccountService_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.FastRegisterAccountService.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastRegisterAccountService_RegisterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void FastRegisterAccountService_RegisterResponse::Swap(FastRegisterAccountService_RegisterResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FastRegisterAccountService_RegisterResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FastRegisterAccountService_RegisterResponse::UnsafeArenaSwap(FastRegisterAccountService_RegisterResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FastRegisterAccountService_RegisterResponse::InternalSwap(FastRegisterAccountService_RegisterResponse* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pwd_.Swap(&other->pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FastRegisterAccountService_RegisterResponse::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FastRegisterAccountService::InitAsDefaultInstance() {
  ::sg::_FastRegisterAccountService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::FastRegisterAccountService_RegisterRequest*>(
      ::sg::FastRegisterAccountService_RegisterRequest::internal_default_instance());
  ::sg::_FastRegisterAccountService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::FastRegisterAccountService_RegisterResponse*>(
      ::sg::FastRegisterAccountService_RegisterResponse::internal_default_instance());
}
void FastRegisterAccountService::unsafe_arena_set_allocated_req(
    ::sg::FastRegisterAccountService_RegisterRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.FastRegisterAccountService.req)
}
void FastRegisterAccountService::unsafe_arena_set_allocated_resp(
    ::sg::FastRegisterAccountService_RegisterResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.FastRegisterAccountService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FastRegisterAccountService::kReqFieldNumber;
const int FastRegisterAccountService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FastRegisterAccountService::FastRegisterAccountService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.FastRegisterAccountService)
}
FastRegisterAccountService::FastRegisterAccountService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.FastRegisterAccountService)
}
FastRegisterAccountService::FastRegisterAccountService(const FastRegisterAccountService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::FastRegisterAccountService_RegisterRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::FastRegisterAccountService_RegisterResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.FastRegisterAccountService)
}

void FastRegisterAccountService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

FastRegisterAccountService::~FastRegisterAccountService() {
  // @@protoc_insertion_point(destructor:sg.FastRegisterAccountService)
  SharedDtor();
}

void FastRegisterAccountService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void FastRegisterAccountService::ArenaDtor(void* object) {
  FastRegisterAccountService* _this = reinterpret_cast< FastRegisterAccountService* >(object);
  (void)_this;
}
void FastRegisterAccountService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FastRegisterAccountService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FastRegisterAccountService::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FastRegisterAccountService& FastRegisterAccountService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_FastRegisterAccountService.base);
  return *internal_default_instance();
}


void FastRegisterAccountService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.FastRegisterAccountService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FastRegisterAccountService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.FastRegisterAccountService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.FastRegisterAccountService.RegisterRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.FastRegisterAccountService.RegisterResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.FastRegisterAccountService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.FastRegisterAccountService)
  return false;
#undef DO_
}

void FastRegisterAccountService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.FastRegisterAccountService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.FastRegisterAccountService.RegisterRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.FastRegisterAccountService.RegisterResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.FastRegisterAccountService)
}

::google::protobuf::uint8* FastRegisterAccountService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.FastRegisterAccountService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.FastRegisterAccountService.RegisterRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.FastRegisterAccountService.RegisterResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.FastRegisterAccountService)
  return target;
}

size_t FastRegisterAccountService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.FastRegisterAccountService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.FastRegisterAccountService.RegisterRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.FastRegisterAccountService.RegisterResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FastRegisterAccountService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.FastRegisterAccountService)
  GOOGLE_DCHECK_NE(&from, this);
  const FastRegisterAccountService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FastRegisterAccountService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.FastRegisterAccountService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.FastRegisterAccountService)
    MergeFrom(*source);
  }
}

void FastRegisterAccountService::MergeFrom(const FastRegisterAccountService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.FastRegisterAccountService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::FastRegisterAccountService_RegisterRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::FastRegisterAccountService_RegisterResponse::MergeFrom(from.resp());
    }
  }
}

void FastRegisterAccountService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.FastRegisterAccountService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FastRegisterAccountService::CopyFrom(const FastRegisterAccountService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.FastRegisterAccountService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastRegisterAccountService::IsInitialized() const {
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void FastRegisterAccountService::Swap(FastRegisterAccountService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FastRegisterAccountService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FastRegisterAccountService::UnsafeArenaSwap(FastRegisterAccountService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FastRegisterAccountService::InternalSwap(FastRegisterAccountService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FastRegisterAccountService::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountLoginService_LoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginService_LoginRequest::kUidFieldNumber;
const int AccountLoginService_LoginRequest::kPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginService_LoginRequest::AccountLoginService_LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_AccountLoginService_LoginRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.AccountLoginService.LoginRequest)
}
AccountLoginService_LoginRequest::AccountLoginService_LoginRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountLoginService_LoginRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.AccountLoginService.LoginRequest)
}
AccountLoginService_LoginRequest::AccountLoginService_LoginRequest(const AccountLoginService_LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid(),
      GetArenaNoVirtual());
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwd()) {
    pwd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:sg.AccountLoginService.LoginRequest)
}

void AccountLoginService_LoginRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountLoginService_LoginRequest::~AccountLoginService_LoginRequest() {
  // @@protoc_insertion_point(destructor:sg.AccountLoginService.LoginRequest)
  SharedDtor();
}

void AccountLoginService_LoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountLoginService_LoginRequest::ArenaDtor(void* object) {
  AccountLoginService_LoginRequest* _this = reinterpret_cast< AccountLoginService_LoginRequest* >(object);
  (void)_this;
}
void AccountLoginService_LoginRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AccountLoginService_LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountLoginService_LoginRequest::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginService_LoginRequest& AccountLoginService_LoginRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountLoginService_LoginRequest.base);
  return *internal_default_instance();
}


void AccountLoginService_LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.AccountLoginService.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      pwd_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountLoginService_LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.AccountLoginService.LoginRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.AccountLoginService.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.AccountLoginService.LoginRequest)
  return false;
#undef DO_
}

void AccountLoginService_LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.AccountLoginService.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uid(), output);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pwd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.AccountLoginService.LoginRequest)
}

::google::protobuf::uint8* AccountLoginService_LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.AccountLoginService.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uid(), target);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pwd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.AccountLoginService.LoginRequest)
  return target;
}

size_t AccountLoginService_LoginRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.AccountLoginService.LoginRequest)
  size_t total_size = 0;

  if (has_uid()) {
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());
  }

  if (has_pwd()) {
    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());
  }

  return total_size;
}
size_t AccountLoginService_LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.AccountLoginService.LoginRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());

    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountLoginService_LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.AccountLoginService.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginService_LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginService_LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.AccountLoginService.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.AccountLoginService.LoginRequest)
    MergeFrom(*source);
  }
}

void AccountLoginService_LoginRequest::MergeFrom(const AccountLoginService_LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.AccountLoginService.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_uid(from.uid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_pwd(from.pwd());
    }
  }
}

void AccountLoginService_LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.AccountLoginService.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginService_LoginRequest::CopyFrom(const AccountLoginService_LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.AccountLoginService.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginService_LoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AccountLoginService_LoginRequest::Swap(AccountLoginService_LoginRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AccountLoginService_LoginRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AccountLoginService_LoginRequest::UnsafeArenaSwap(AccountLoginService_LoginRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AccountLoginService_LoginRequest::InternalSwap(AccountLoginService_LoginRequest* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pwd_.Swap(&other->pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountLoginService_LoginRequest::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountLoginService_LoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginService_LoginResponse::kResultFieldNumber;
const int AccountLoginService_LoginResponse::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginService_LoginResponse::AccountLoginService_LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_AccountLoginService_LoginResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.AccountLoginService.LoginResponse)
}
AccountLoginService_LoginResponse::AccountLoginService_LoginResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountLoginService_LoginResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.AccountLoginService.LoginResponse)
}
AccountLoginService_LoginResponse::AccountLoginService_LoginResponse(const AccountLoginService_LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uuid_, &from.uuid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&uuid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:sg.AccountLoginService.LoginResponse)
}

void AccountLoginService_LoginResponse::SharedCtor() {
  ::memset(&uuid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&uuid_)) + sizeof(result_));
}

AccountLoginService_LoginResponse::~AccountLoginService_LoginResponse() {
  // @@protoc_insertion_point(destructor:sg.AccountLoginService.LoginResponse)
  SharedDtor();
}

void AccountLoginService_LoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AccountLoginService_LoginResponse::ArenaDtor(void* object) {
  AccountLoginService_LoginResponse* _this = reinterpret_cast< AccountLoginService_LoginResponse* >(object);
  (void)_this;
}
void AccountLoginService_LoginResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AccountLoginService_LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountLoginService_LoginResponse::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginService_LoginResponse& AccountLoginService_LoginResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountLoginService_LoginResponse.base);
  return *internal_default_instance();
}


void AccountLoginService_LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.AccountLoginService.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&uuid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&uuid_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountLoginService_LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.AccountLoginService.LoginResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.AccountLoginService.RESULT result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::AccountLoginService_RESULT_IsValid(value)) {
            set_result(static_cast< ::sg::AccountLoginService_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.AccountLoginService.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.AccountLoginService.LoginResponse)
  return false;
#undef DO_
}

void AccountLoginService_LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.AccountLoginService.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.AccountLoginService.RESULT result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional uint64 uuid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.AccountLoginService.LoginResponse)
}

::google::protobuf::uint8* AccountLoginService_LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.AccountLoginService.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.AccountLoginService.RESULT result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional uint64 uuid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.AccountLoginService.LoginResponse)
  return target;
}

size_t AccountLoginService_LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.AccountLoginService.LoginResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.AccountLoginService.RESULT result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  // optional uint64 uuid = 2;
  if (has_uuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountLoginService_LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.AccountLoginService.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginService_LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginService_LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.AccountLoginService.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.AccountLoginService.LoginResponse)
    MergeFrom(*source);
  }
}

void AccountLoginService_LoginResponse::MergeFrom(const AccountLoginService_LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.AccountLoginService.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      uuid_ = from.uuid_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccountLoginService_LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.AccountLoginService.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginService_LoginResponse::CopyFrom(const AccountLoginService_LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.AccountLoginService.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginService_LoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void AccountLoginService_LoginResponse::Swap(AccountLoginService_LoginResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AccountLoginService_LoginResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AccountLoginService_LoginResponse::UnsafeArenaSwap(AccountLoginService_LoginResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AccountLoginService_LoginResponse::InternalSwap(AccountLoginService_LoginResponse* other) {
  using std::swap;
  swap(uuid_, other->uuid_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountLoginService_LoginResponse::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountLoginService::InitAsDefaultInstance() {
  ::sg::_AccountLoginService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::AccountLoginService_LoginRequest*>(
      ::sg::AccountLoginService_LoginRequest::internal_default_instance());
  ::sg::_AccountLoginService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::AccountLoginService_LoginResponse*>(
      ::sg::AccountLoginService_LoginResponse::internal_default_instance());
}
void AccountLoginService::unsafe_arena_set_allocated_req(
    ::sg::AccountLoginService_LoginRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.AccountLoginService.req)
}
void AccountLoginService::unsafe_arena_set_allocated_resp(
    ::sg::AccountLoginService_LoginResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.AccountLoginService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginService::kReqFieldNumber;
const int AccountLoginService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginService::AccountLoginService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_AccountLoginService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.AccountLoginService)
}
AccountLoginService::AccountLoginService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountLoginService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.AccountLoginService)
}
AccountLoginService::AccountLoginService(const AccountLoginService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::AccountLoginService_LoginRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::AccountLoginService_LoginResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.AccountLoginService)
}

void AccountLoginService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

AccountLoginService::~AccountLoginService() {
  // @@protoc_insertion_point(destructor:sg.AccountLoginService)
  SharedDtor();
}

void AccountLoginService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void AccountLoginService::ArenaDtor(void* object) {
  AccountLoginService* _this = reinterpret_cast< AccountLoginService* >(object);
  (void)_this;
}
void AccountLoginService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AccountLoginService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountLoginService::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountLoginService& AccountLoginService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountLoginService.base);
  return *internal_default_instance();
}


void AccountLoginService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.AccountLoginService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountLoginService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.AccountLoginService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.AccountLoginService.LoginRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.AccountLoginService.LoginResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.AccountLoginService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.AccountLoginService)
  return false;
#undef DO_
}

void AccountLoginService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.AccountLoginService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.AccountLoginService.LoginRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.AccountLoginService.LoginResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.AccountLoginService)
}

::google::protobuf::uint8* AccountLoginService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.AccountLoginService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.AccountLoginService.LoginRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.AccountLoginService.LoginResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.AccountLoginService)
  return target;
}

size_t AccountLoginService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.AccountLoginService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.AccountLoginService.LoginRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.AccountLoginService.LoginResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountLoginService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.AccountLoginService)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountLoginService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.AccountLoginService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.AccountLoginService)
    MergeFrom(*source);
  }
}

void AccountLoginService::MergeFrom(const AccountLoginService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.AccountLoginService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::AccountLoginService_LoginRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::AccountLoginService_LoginResponse::MergeFrom(from.resp());
    }
  }
}

void AccountLoginService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.AccountLoginService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginService::CopyFrom(const AccountLoginService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.AccountLoginService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void AccountLoginService::Swap(AccountLoginService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AccountLoginService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AccountLoginService::UnsafeArenaSwap(AccountLoginService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AccountLoginService::InternalSwap(AccountLoginService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountLoginService::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountReloginService_ReloginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountReloginService_ReloginRequest::kUidFieldNumber;
const int AccountReloginService_ReloginRequest::kPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountReloginService_ReloginRequest::AccountReloginService_ReloginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_AccountReloginService_ReloginRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.AccountReloginService.ReloginRequest)
}
AccountReloginService_ReloginRequest::AccountReloginService_ReloginRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountReloginService_ReloginRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.AccountReloginService.ReloginRequest)
}
AccountReloginService_ReloginRequest::AccountReloginService_ReloginRequest(const AccountReloginService_ReloginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid(),
      GetArenaNoVirtual());
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwd()) {
    pwd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:sg.AccountReloginService.ReloginRequest)
}

void AccountReloginService_ReloginRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountReloginService_ReloginRequest::~AccountReloginService_ReloginRequest() {
  // @@protoc_insertion_point(destructor:sg.AccountReloginService.ReloginRequest)
  SharedDtor();
}

void AccountReloginService_ReloginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountReloginService_ReloginRequest::ArenaDtor(void* object) {
  AccountReloginService_ReloginRequest* _this = reinterpret_cast< AccountReloginService_ReloginRequest* >(object);
  (void)_this;
}
void AccountReloginService_ReloginRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AccountReloginService_ReloginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountReloginService_ReloginRequest::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountReloginService_ReloginRequest& AccountReloginService_ReloginRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountReloginService_ReloginRequest.base);
  return *internal_default_instance();
}


void AccountReloginService_ReloginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.AccountReloginService.ReloginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      pwd_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountReloginService_ReloginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.AccountReloginService.ReloginRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.AccountReloginService.ReloginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.AccountReloginService.ReloginRequest)
  return false;
#undef DO_
}

void AccountReloginService_ReloginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.AccountReloginService.ReloginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uid(), output);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pwd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.AccountReloginService.ReloginRequest)
}

::google::protobuf::uint8* AccountReloginService_ReloginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.AccountReloginService.ReloginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uid(), target);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pwd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.AccountReloginService.ReloginRequest)
  return target;
}

size_t AccountReloginService_ReloginRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.AccountReloginService.ReloginRequest)
  size_t total_size = 0;

  if (has_uid()) {
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());
  }

  if (has_pwd()) {
    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());
  }

  return total_size;
}
size_t AccountReloginService_ReloginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.AccountReloginService.ReloginRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());

    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountReloginService_ReloginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.AccountReloginService.ReloginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountReloginService_ReloginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountReloginService_ReloginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.AccountReloginService.ReloginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.AccountReloginService.ReloginRequest)
    MergeFrom(*source);
  }
}

void AccountReloginService_ReloginRequest::MergeFrom(const AccountReloginService_ReloginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.AccountReloginService.ReloginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_uid(from.uid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_pwd(from.pwd());
    }
  }
}

void AccountReloginService_ReloginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.AccountReloginService.ReloginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountReloginService_ReloginRequest::CopyFrom(const AccountReloginService_ReloginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.AccountReloginService.ReloginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountReloginService_ReloginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AccountReloginService_ReloginRequest::Swap(AccountReloginService_ReloginRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AccountReloginService_ReloginRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AccountReloginService_ReloginRequest::UnsafeArenaSwap(AccountReloginService_ReloginRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AccountReloginService_ReloginRequest::InternalSwap(AccountReloginService_ReloginRequest* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pwd_.Swap(&other->pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountReloginService_ReloginRequest::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountReloginService_ReloginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountReloginService_ReloginResponse::kResultFieldNumber;
const int AccountReloginService_ReloginResponse::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountReloginService_ReloginResponse::AccountReloginService_ReloginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_AccountReloginService_ReloginResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.AccountReloginService.ReloginResponse)
}
AccountReloginService_ReloginResponse::AccountReloginService_ReloginResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountReloginService_ReloginResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.AccountReloginService.ReloginResponse)
}
AccountReloginService_ReloginResponse::AccountReloginService_ReloginResponse(const AccountReloginService_ReloginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uuid_, &from.uuid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&uuid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:sg.AccountReloginService.ReloginResponse)
}

void AccountReloginService_ReloginResponse::SharedCtor() {
  ::memset(&uuid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&uuid_)) + sizeof(result_));
}

AccountReloginService_ReloginResponse::~AccountReloginService_ReloginResponse() {
  // @@protoc_insertion_point(destructor:sg.AccountReloginService.ReloginResponse)
  SharedDtor();
}

void AccountReloginService_ReloginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AccountReloginService_ReloginResponse::ArenaDtor(void* object) {
  AccountReloginService_ReloginResponse* _this = reinterpret_cast< AccountReloginService_ReloginResponse* >(object);
  (void)_this;
}
void AccountReloginService_ReloginResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AccountReloginService_ReloginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountReloginService_ReloginResponse::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountReloginService_ReloginResponse& AccountReloginService_ReloginResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountReloginService_ReloginResponse.base);
  return *internal_default_instance();
}


void AccountReloginService_ReloginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.AccountReloginService.ReloginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&uuid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&uuid_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountReloginService_ReloginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.AccountReloginService.ReloginResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.AccountReloginService.RESULT result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::AccountReloginService_RESULT_IsValid(value)) {
            set_result(static_cast< ::sg::AccountReloginService_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.AccountReloginService.ReloginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.AccountReloginService.ReloginResponse)
  return false;
#undef DO_
}

void AccountReloginService_ReloginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.AccountReloginService.ReloginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.AccountReloginService.RESULT result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional uint64 uuid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.AccountReloginService.ReloginResponse)
}

::google::protobuf::uint8* AccountReloginService_ReloginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.AccountReloginService.ReloginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.AccountReloginService.RESULT result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional uint64 uuid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.AccountReloginService.ReloginResponse)
  return target;
}

size_t AccountReloginService_ReloginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.AccountReloginService.ReloginResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.AccountReloginService.RESULT result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  // optional uint64 uuid = 2;
  if (has_uuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountReloginService_ReloginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.AccountReloginService.ReloginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountReloginService_ReloginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountReloginService_ReloginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.AccountReloginService.ReloginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.AccountReloginService.ReloginResponse)
    MergeFrom(*source);
  }
}

void AccountReloginService_ReloginResponse::MergeFrom(const AccountReloginService_ReloginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.AccountReloginService.ReloginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      uuid_ = from.uuid_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccountReloginService_ReloginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.AccountReloginService.ReloginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountReloginService_ReloginResponse::CopyFrom(const AccountReloginService_ReloginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.AccountReloginService.ReloginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountReloginService_ReloginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void AccountReloginService_ReloginResponse::Swap(AccountReloginService_ReloginResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AccountReloginService_ReloginResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AccountReloginService_ReloginResponse::UnsafeArenaSwap(AccountReloginService_ReloginResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AccountReloginService_ReloginResponse::InternalSwap(AccountReloginService_ReloginResponse* other) {
  using std::swap;
  swap(uuid_, other->uuid_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountReloginService_ReloginResponse::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountReloginService::InitAsDefaultInstance() {
  ::sg::_AccountReloginService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::AccountReloginService_ReloginRequest*>(
      ::sg::AccountReloginService_ReloginRequest::internal_default_instance());
  ::sg::_AccountReloginService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::AccountReloginService_ReloginResponse*>(
      ::sg::AccountReloginService_ReloginResponse::internal_default_instance());
}
void AccountReloginService::unsafe_arena_set_allocated_req(
    ::sg::AccountReloginService_ReloginRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.AccountReloginService.req)
}
void AccountReloginService::unsafe_arena_set_allocated_resp(
    ::sg::AccountReloginService_ReloginResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.AccountReloginService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountReloginService::kReqFieldNumber;
const int AccountReloginService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountReloginService::AccountReloginService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_AccountReloginService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.AccountReloginService)
}
AccountReloginService::AccountReloginService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountReloginService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.AccountReloginService)
}
AccountReloginService::AccountReloginService(const AccountReloginService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::AccountReloginService_ReloginRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::AccountReloginService_ReloginResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.AccountReloginService)
}

void AccountReloginService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

AccountReloginService::~AccountReloginService() {
  // @@protoc_insertion_point(destructor:sg.AccountReloginService)
  SharedDtor();
}

void AccountReloginService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void AccountReloginService::ArenaDtor(void* object) {
  AccountReloginService* _this = reinterpret_cast< AccountReloginService* >(object);
  (void)_this;
}
void AccountReloginService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AccountReloginService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountReloginService::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountReloginService& AccountReloginService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_AccountReloginService.base);
  return *internal_default_instance();
}


void AccountReloginService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.AccountReloginService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountReloginService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.AccountReloginService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.AccountReloginService.ReloginRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.AccountReloginService.ReloginResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.AccountReloginService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.AccountReloginService)
  return false;
#undef DO_
}

void AccountReloginService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.AccountReloginService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.AccountReloginService.ReloginRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.AccountReloginService.ReloginResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.AccountReloginService)
}

::google::protobuf::uint8* AccountReloginService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.AccountReloginService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.AccountReloginService.ReloginRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.AccountReloginService.ReloginResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.AccountReloginService)
  return target;
}

size_t AccountReloginService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.AccountReloginService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.AccountReloginService.ReloginRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.AccountReloginService.ReloginResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountReloginService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.AccountReloginService)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountReloginService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountReloginService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.AccountReloginService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.AccountReloginService)
    MergeFrom(*source);
  }
}

void AccountReloginService::MergeFrom(const AccountReloginService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.AccountReloginService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::AccountReloginService_ReloginRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::AccountReloginService_ReloginResponse::MergeFrom(from.resp());
    }
  }
}

void AccountReloginService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.AccountReloginService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountReloginService::CopyFrom(const AccountReloginService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.AccountReloginService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountReloginService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void AccountReloginService::Swap(AccountReloginService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AccountReloginService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AccountReloginService::UnsafeArenaSwap(AccountReloginService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AccountReloginService::InternalSwap(AccountReloginService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountReloginService::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerJoinService_JoinRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerJoinService_JoinRequest::kUidFieldNumber;
const int PlayerJoinService_JoinRequest::kNickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerJoinService_JoinRequest::PlayerJoinService_JoinRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_PlayerJoinService_JoinRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.PlayerJoinService.JoinRequest)
}
PlayerJoinService_JoinRequest::PlayerJoinService_JoinRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_PlayerJoinService_JoinRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.PlayerJoinService.JoinRequest)
}
PlayerJoinService_JoinRequest::PlayerJoinService_JoinRequest(const PlayerJoinService_JoinRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:sg.PlayerJoinService.JoinRequest)
}

void PlayerJoinService_JoinRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerJoinService_JoinRequest::~PlayerJoinService_JoinRequest() {
  // @@protoc_insertion_point(destructor:sg.PlayerJoinService.JoinRequest)
  SharedDtor();
}

void PlayerJoinService_JoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerJoinService_JoinRequest::ArenaDtor(void* object) {
  PlayerJoinService_JoinRequest* _this = reinterpret_cast< PlayerJoinService_JoinRequest* >(object);
  (void)_this;
}
void PlayerJoinService_JoinRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerJoinService_JoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerJoinService_JoinRequest::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerJoinService_JoinRequest& PlayerJoinService_JoinRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_PlayerJoinService_JoinRequest.base);
  return *internal_default_instance();
}


void PlayerJoinService_JoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.PlayerJoinService.JoinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      nick_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerJoinService_JoinRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.PlayerJoinService.JoinRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.PlayerJoinService.JoinRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.PlayerJoinService.JoinRequest)
  return false;
#undef DO_
}

void PlayerJoinService_JoinRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.PlayerJoinService.JoinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uid(), output);
  }

  // required bytes nick = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nick(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.PlayerJoinService.JoinRequest)
}

::google::protobuf::uint8* PlayerJoinService_JoinRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.PlayerJoinService.JoinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uid(), target);
  }

  // required bytes nick = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nick(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.PlayerJoinService.JoinRequest)
  return target;
}

size_t PlayerJoinService_JoinRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.PlayerJoinService.JoinRequest)
  size_t total_size = 0;

  if (has_uid()) {
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());
  }

  if (has_nick()) {
    // required bytes nick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  return total_size;
}
size_t PlayerJoinService_JoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.PlayerJoinService.JoinRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());

    // required bytes nick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerJoinService_JoinRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.PlayerJoinService.JoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerJoinService_JoinRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerJoinService_JoinRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.PlayerJoinService.JoinRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.PlayerJoinService.JoinRequest)
    MergeFrom(*source);
  }
}

void PlayerJoinService_JoinRequest::MergeFrom(const PlayerJoinService_JoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.PlayerJoinService.JoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_uid(from.uid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_nick(from.nick());
    }
  }
}

void PlayerJoinService_JoinRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.PlayerJoinService.JoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerJoinService_JoinRequest::CopyFrom(const PlayerJoinService_JoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.PlayerJoinService.JoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerJoinService_JoinRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PlayerJoinService_JoinRequest::Swap(PlayerJoinService_JoinRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerJoinService_JoinRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerJoinService_JoinRequest::UnsafeArenaSwap(PlayerJoinService_JoinRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerJoinService_JoinRequest::InternalSwap(PlayerJoinService_JoinRequest* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerJoinService_JoinRequest::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerJoinService_JoinResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerJoinService_JoinResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerJoinService_JoinResponse::PlayerJoinService_JoinResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_PlayerJoinService_JoinResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.PlayerJoinService.JoinResponse)
}
PlayerJoinService_JoinResponse::PlayerJoinService_JoinResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_PlayerJoinService_JoinResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.PlayerJoinService.JoinResponse)
}
PlayerJoinService_JoinResponse::PlayerJoinService_JoinResponse(const PlayerJoinService_JoinResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.PlayerJoinService.JoinResponse)
}

void PlayerJoinService_JoinResponse::SharedCtor() {
  result_ = 0;
}

PlayerJoinService_JoinResponse::~PlayerJoinService_JoinResponse() {
  // @@protoc_insertion_point(destructor:sg.PlayerJoinService.JoinResponse)
  SharedDtor();
}

void PlayerJoinService_JoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PlayerJoinService_JoinResponse::ArenaDtor(void* object) {
  PlayerJoinService_JoinResponse* _this = reinterpret_cast< PlayerJoinService_JoinResponse* >(object);
  (void)_this;
}
void PlayerJoinService_JoinResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerJoinService_JoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerJoinService_JoinResponse::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerJoinService_JoinResponse& PlayerJoinService_JoinResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_PlayerJoinService_JoinResponse.base);
  return *internal_default_instance();
}


void PlayerJoinService_JoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.PlayerJoinService.JoinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerJoinService_JoinResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.PlayerJoinService.JoinResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.PlayerJoinService.RESULT result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::PlayerJoinService_RESULT_IsValid(value)) {
            set_result(static_cast< ::sg::PlayerJoinService_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.PlayerJoinService.JoinResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.PlayerJoinService.JoinResponse)
  return false;
#undef DO_
}

void PlayerJoinService_JoinResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.PlayerJoinService.JoinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.PlayerJoinService.RESULT result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.PlayerJoinService.JoinResponse)
}

::google::protobuf::uint8* PlayerJoinService_JoinResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.PlayerJoinService.JoinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.PlayerJoinService.RESULT result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.PlayerJoinService.JoinResponse)
  return target;
}

size_t PlayerJoinService_JoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.PlayerJoinService.JoinResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.PlayerJoinService.RESULT result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerJoinService_JoinResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.PlayerJoinService.JoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerJoinService_JoinResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerJoinService_JoinResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.PlayerJoinService.JoinResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.PlayerJoinService.JoinResponse)
    MergeFrom(*source);
  }
}

void PlayerJoinService_JoinResponse::MergeFrom(const PlayerJoinService_JoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.PlayerJoinService.JoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void PlayerJoinService_JoinResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.PlayerJoinService.JoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerJoinService_JoinResponse::CopyFrom(const PlayerJoinService_JoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.PlayerJoinService.JoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerJoinService_JoinResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayerJoinService_JoinResponse::Swap(PlayerJoinService_JoinResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerJoinService_JoinResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerJoinService_JoinResponse::UnsafeArenaSwap(PlayerJoinService_JoinResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerJoinService_JoinResponse::InternalSwap(PlayerJoinService_JoinResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerJoinService_JoinResponse::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerJoinService::InitAsDefaultInstance() {
  ::sg::_PlayerJoinService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::PlayerJoinService_JoinRequest*>(
      ::sg::PlayerJoinService_JoinRequest::internal_default_instance());
  ::sg::_PlayerJoinService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::PlayerJoinService_JoinResponse*>(
      ::sg::PlayerJoinService_JoinResponse::internal_default_instance());
}
void PlayerJoinService::unsafe_arena_set_allocated_req(
    ::sg::PlayerJoinService_JoinRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.PlayerJoinService.req)
}
void PlayerJoinService::unsafe_arena_set_allocated_resp(
    ::sg::PlayerJoinService_JoinResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.PlayerJoinService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerJoinService::kReqFieldNumber;
const int PlayerJoinService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerJoinService::PlayerJoinService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_PlayerJoinService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.PlayerJoinService)
}
PlayerJoinService::PlayerJoinService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_PlayerJoinService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.PlayerJoinService)
}
PlayerJoinService::PlayerJoinService(const PlayerJoinService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::PlayerJoinService_JoinRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::PlayerJoinService_JoinResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.PlayerJoinService)
}

void PlayerJoinService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

PlayerJoinService::~PlayerJoinService() {
  // @@protoc_insertion_point(destructor:sg.PlayerJoinService)
  SharedDtor();
}

void PlayerJoinService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void PlayerJoinService::ArenaDtor(void* object) {
  PlayerJoinService* _this = reinterpret_cast< PlayerJoinService* >(object);
  (void)_this;
}
void PlayerJoinService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerJoinService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerJoinService::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerJoinService& PlayerJoinService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_PlayerJoinService.base);
  return *internal_default_instance();
}


void PlayerJoinService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.PlayerJoinService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerJoinService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.PlayerJoinService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.PlayerJoinService.JoinRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.PlayerJoinService.JoinResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.PlayerJoinService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.PlayerJoinService)
  return false;
#undef DO_
}

void PlayerJoinService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.PlayerJoinService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.PlayerJoinService.JoinRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.PlayerJoinService.JoinResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.PlayerJoinService)
}

::google::protobuf::uint8* PlayerJoinService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.PlayerJoinService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.PlayerJoinService.JoinRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.PlayerJoinService.JoinResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.PlayerJoinService)
  return target;
}

size_t PlayerJoinService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.PlayerJoinService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.PlayerJoinService.JoinRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.PlayerJoinService.JoinResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerJoinService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.PlayerJoinService)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerJoinService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerJoinService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.PlayerJoinService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.PlayerJoinService)
    MergeFrom(*source);
  }
}

void PlayerJoinService::MergeFrom(const PlayerJoinService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.PlayerJoinService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::PlayerJoinService_JoinRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::PlayerJoinService_JoinResponse::MergeFrom(from.resp());
    }
  }
}

void PlayerJoinService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.PlayerJoinService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerJoinService::CopyFrom(const PlayerJoinService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.PlayerJoinService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerJoinService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void PlayerJoinService::Swap(PlayerJoinService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerJoinService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerJoinService::UnsafeArenaSwap(PlayerJoinService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerJoinService::InternalSwap(PlayerJoinService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerJoinService::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAttribute::kUseridFieldNumber;
const int UserAttribute::kLevelFieldNumber;
const int UserAttribute::kExpFieldNumber;
const int UserAttribute::kNickFieldNumber;
const int UserAttribute::kPortraitFieldNumber;
const int UserAttribute::kSignatureFieldNumber;
const int UserAttribute::kLastRenameTimeFieldNumber;
const int UserAttribute::kPortraitFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAttribute::UserAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_UserAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserAttribute)
}
UserAttribute::UserAttribute(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserAttribute.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserAttribute)
}
UserAttribute::UserAttribute(const UserAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature(),
      GetArenaNoVirtual());
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_rename_time_) -
    reinterpret_cast<char*>(&level_)) + sizeof(last_rename_time_));
  // @@protoc_insertion_point(copy_constructor:sg.UserAttribute)
}

void UserAttribute::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_rename_time_) -
      reinterpret_cast<char*>(&level_)) + sizeof(last_rename_time_));
}

UserAttribute::~UserAttribute() {
  // @@protoc_insertion_point(destructor:sg.UserAttribute)
  SharedDtor();
}

void UserAttribute::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserAttribute::ArenaDtor(void* object) {
  UserAttribute* _this = reinterpret_cast< UserAttribute* >(object);
  (void)_this;
}
void UserAttribute::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserAttribute::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserAttribute& UserAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserAttribute.base);
  return *internal_default_instance();
}


void UserAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      signature_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_rename_time_) -
        reinterpret_cast<char*>(&level_)) + sizeof(last_rename_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 exp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 portrait = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_portrait();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &portrait_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes signature = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 last_rename_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_last_rename_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &last_rename_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 portrait_frame = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_portrait_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &portrait_frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserAttribute)
  return false;
#undef DO_
}

void UserAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required int32 level = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // required int32 exp = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp(), output);
  }

  // required bytes nick = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->nick(), output);
  }

  // required int32 portrait = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->portrait(), output);
  }

  // required bytes signature = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->signature(), output);
  }

  // optional sfixed64 last_rename_time = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(7, this->last_rename_time(), output);
  }

  // optional int32 portrait_frame = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->portrait_frame(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserAttribute)
}

::google::protobuf::uint8* UserAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required int32 level = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // required int32 exp = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp(), target);
  }

  // required bytes nick = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->nick(), target);
  }

  // required int32 portrait = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->portrait(), target);
  }

  // required bytes signature = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->signature(), target);
  }

  // optional sfixed64 last_rename_time = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(7, this->last_rename_time(), target);
  }

  // optional int32 portrait_frame = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->portrait_frame(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserAttribute)
  return target;
}

size_t UserAttribute::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.UserAttribute)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_nick()) {
    // required bytes nick = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  if (has_signature()) {
    // required bytes signature = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  if (has_level()) {
    // required int32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_exp()) {
    // required int32 exp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  if (has_portrait()) {
    // required int32 portrait = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->portrait());
  }

  return total_size;
}
size_t UserAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required bytes nick = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

    // required bytes signature = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());

    // required int32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 exp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());

    // required int32 portrait = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->portrait());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional int32 portrait_frame = 8;
    if (has_portrait_frame()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->portrait_frame());
    }

    // optional sfixed64 last_rename_time = 7;
    if (has_last_rename_time()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserAttribute)
    MergeFrom(*source);
  }
}

void UserAttribute::MergeFrom(const UserAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000004u) {
      set_signature(from.signature());
    }
    if (cached_has_bits & 0x00000008u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000010u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000020u) {
      portrait_ = from.portrait_;
    }
    if (cached_has_bits & 0x00000040u) {
      portrait_frame_ = from.portrait_frame_;
    }
    if (cached_has_bits & 0x00000080u) {
      last_rename_time_ = from.last_rename_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAttribute::CopyFrom(const UserAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void UserAttribute::Swap(UserAttribute* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserAttribute* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserAttribute::UnsafeArenaSwap(UserAttribute* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserAttribute::InternalSwap(UserAttribute* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(portrait_, other->portrait_);
  swap(portrait_frame_, other->portrait_frame_);
  swap(last_rename_time_, other->last_rename_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserAttribute::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserAttrService_UserAttrRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAttrService_UserAttrRequest::kCmdFieldNumber;
const int UserAttrService_UserAttrRequest::kNewNameFieldNumber;
const int UserAttrService_UserAttrRequest::kNewPortraitFieldNumber;
const int UserAttrService_UserAttrRequest::kNewSignatureFieldNumber;
const int UserAttrService_UserAttrRequest::kNewFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAttrService_UserAttrRequest::UserAttrService_UserAttrRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_UserAttrService_UserAttrRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserAttrService.UserAttrRequest)
}
UserAttrService_UserAttrRequest::UserAttrService_UserAttrRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserAttrService_UserAttrRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserAttrService.UserAttrRequest)
}
UserAttrService_UserAttrRequest::UserAttrService_UserAttrRequest(const UserAttrService_UserAttrRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_name()) {
    new_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_name(),
      GetArenaNoVirtual());
  }
  new_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_signature()) {
    new_signature_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_signature(),
      GetArenaNoVirtual());
  }
  ::memcpy(&new_portrait_, &from.new_portrait_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&new_portrait_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.UserAttrService.UserAttrRequest)
}

void UserAttrService_UserAttrRequest::SharedCtor() {
  new_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&new_portrait_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_frame_) -
      reinterpret_cast<char*>(&new_portrait_)) + sizeof(new_frame_));
  cmd_ = 1;
}

UserAttrService_UserAttrRequest::~UserAttrService_UserAttrRequest() {
  // @@protoc_insertion_point(destructor:sg.UserAttrService.UserAttrRequest)
  SharedDtor();
}

void UserAttrService_UserAttrRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  new_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserAttrService_UserAttrRequest::ArenaDtor(void* object) {
  UserAttrService_UserAttrRequest* _this = reinterpret_cast< UserAttrService_UserAttrRequest* >(object);
  (void)_this;
}
void UserAttrService_UserAttrRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserAttrService_UserAttrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserAttrService_UserAttrRequest::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserAttrService_UserAttrRequest& UserAttrService_UserAttrRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserAttrService_UserAttrRequest.base);
  return *internal_default_instance();
}


void UserAttrService_UserAttrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserAttrService.UserAttrRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      new_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      new_signature_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&new_portrait_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&new_frame_) -
        reinterpret_cast<char*>(&new_portrait_)) + sizeof(new_frame_));
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserAttrService_UserAttrRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserAttrService.UserAttrRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserAttrService.USER_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserAttrService_USER_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserAttrService_USER_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes new_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_new_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 new_portrait = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_new_portrait();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_portrait_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes new_signature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_new_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 new_frame = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_new_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserAttrService.UserAttrRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserAttrService.UserAttrRequest)
  return false;
#undef DO_
}

void UserAttrService_UserAttrRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserAttrService.UserAttrRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserAttrService.USER_CMD cmd = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional bytes new_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->new_name(), output);
  }

  // optional int32 new_portrait = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->new_portrait(), output);
  }

  // optional bytes new_signature = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->new_signature(), output);
  }

  // optional int32 new_frame = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->new_frame(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserAttrService.UserAttrRequest)
}

::google::protobuf::uint8* UserAttrService_UserAttrRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserAttrService.UserAttrRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserAttrService.USER_CMD cmd = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional bytes new_name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->new_name(), target);
  }

  // optional int32 new_portrait = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->new_portrait(), target);
  }

  // optional bytes new_signature = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->new_signature(), target);
  }

  // optional int32 new_frame = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->new_frame(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserAttrService.UserAttrRequest)
  return target;
}

size_t UserAttrService_UserAttrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserAttrService.UserAttrRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserAttrService.USER_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes new_name = 2;
    if (has_new_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->new_name());
    }

    // optional bytes new_signature = 4;
    if (has_new_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->new_signature());
    }

    // optional int32 new_portrait = 3;
    if (has_new_portrait()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_portrait());
    }

    // optional int32 new_frame = 5;
    if (has_new_frame()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_frame());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserAttrService_UserAttrRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserAttrService.UserAttrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAttrService_UserAttrRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAttrService_UserAttrRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserAttrService.UserAttrRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserAttrService.UserAttrRequest)
    MergeFrom(*source);
  }
}

void UserAttrService_UserAttrRequest::MergeFrom(const UserAttrService_UserAttrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserAttrService.UserAttrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_new_name(from.new_name());
    }
    if (cached_has_bits & 0x00000002u) {
      set_new_signature(from.new_signature());
    }
    if (cached_has_bits & 0x00000004u) {
      new_portrait_ = from.new_portrait_;
    }
    if (cached_has_bits & 0x00000008u) {
      new_frame_ = from.new_frame_;
    }
    if (cached_has_bits & 0x00000010u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserAttrService_UserAttrRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserAttrService.UserAttrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAttrService_UserAttrRequest::CopyFrom(const UserAttrService_UserAttrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserAttrService.UserAttrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAttrService_UserAttrRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  return true;
}

void UserAttrService_UserAttrRequest::Swap(UserAttrService_UserAttrRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserAttrService_UserAttrRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserAttrService_UserAttrRequest::UnsafeArenaSwap(UserAttrService_UserAttrRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserAttrService_UserAttrRequest::InternalSwap(UserAttrService_UserAttrRequest* other) {
  using std::swap;
  new_name_.Swap(&other->new_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  new_signature_.Swap(&other->new_signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(new_portrait_, other->new_portrait_);
  swap(new_frame_, other->new_frame_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserAttrService_UserAttrRequest::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserAttrService_UserAttrResponse::InitAsDefaultInstance() {
  ::sg::_UserAttrService_UserAttrResponse_default_instance_._instance.get_mutable()->user_ = const_cast< ::sg::UserAttribute*>(
      ::sg::UserAttribute::internal_default_instance());
}
void UserAttrService_UserAttrResponse::unsafe_arena_set_allocated_user(
    ::sg::UserAttribute* user) {
  if (GetArenaNoVirtual() == NULL) {
    delete user_;
  }
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserAttrService.UserAttrResponse.user)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAttrService_UserAttrResponse::kResultFieldNumber;
const int UserAttrService_UserAttrResponse::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAttrService_UserAttrResponse::UserAttrService_UserAttrResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_UserAttrService_UserAttrResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserAttrService.UserAttrResponse)
}
UserAttrService_UserAttrResponse::UserAttrService_UserAttrResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserAttrService_UserAttrResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserAttrService.UserAttrResponse)
}
UserAttrService_UserAttrResponse::UserAttrService_UserAttrResponse(const UserAttrService_UserAttrResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::sg::UserAttribute(*from.user_);
  } else {
    user_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserAttrService.UserAttrResponse)
}

void UserAttrService_UserAttrResponse::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&user_)) + sizeof(result_));
}

UserAttrService_UserAttrResponse::~UserAttrService_UserAttrResponse() {
  // @@protoc_insertion_point(destructor:sg.UserAttrService.UserAttrResponse)
  SharedDtor();
}

void UserAttrService_UserAttrResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete user_;
}

void UserAttrService_UserAttrResponse::ArenaDtor(void* object) {
  UserAttrService_UserAttrResponse* _this = reinterpret_cast< UserAttrService_UserAttrResponse* >(object);
  (void)_this;
}
void UserAttrService_UserAttrResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserAttrService_UserAttrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserAttrService_UserAttrResponse::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserAttrService_UserAttrResponse& UserAttrService_UserAttrResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserAttrService_UserAttrResponse.base);
  return *internal_default_instance();
}


void UserAttrService_UserAttrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserAttrService.UserAttrResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(user_ != NULL);
    user_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserAttrService_UserAttrResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserAttrService.UserAttrResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserAttribute user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserAttrService.UserAttrResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserAttrService.UserAttrResponse)
  return false;
#undef DO_
}

void UserAttrService_UserAttrResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserAttrService.UserAttrResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .sg.UserAttribute user = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserAttrService.UserAttrResponse)
}

::google::protobuf::uint8* UserAttrService_UserAttrResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserAttrService.UserAttrResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .sg.UserAttribute user = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserAttrService.UserAttrResponse)
  return target;
}

size_t UserAttrService_UserAttrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserAttrService.UserAttrResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // optional .sg.UserAttribute user = 2;
  if (has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserAttrService_UserAttrResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserAttrService.UserAttrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAttrService_UserAttrResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAttrService_UserAttrResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserAttrService.UserAttrResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserAttrService.UserAttrResponse)
    MergeFrom(*source);
  }
}

void UserAttrService_UserAttrResponse::MergeFrom(const UserAttrService_UserAttrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserAttrService.UserAttrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_user()->::sg::UserAttribute::MergeFrom(from.user());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserAttrService_UserAttrResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserAttrService.UserAttrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAttrService_UserAttrResponse::CopyFrom(const UserAttrService_UserAttrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserAttrService.UserAttrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAttrService_UserAttrResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_user()) {
    if (!this->user_->IsInitialized()) return false;
  }
  return true;
}

void UserAttrService_UserAttrResponse::Swap(UserAttrService_UserAttrResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserAttrService_UserAttrResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserAttrService_UserAttrResponse::UnsafeArenaSwap(UserAttrService_UserAttrResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserAttrService_UserAttrResponse::InternalSwap(UserAttrService_UserAttrResponse* other) {
  using std::swap;
  swap(user_, other->user_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserAttrService_UserAttrResponse::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserAttrService::InitAsDefaultInstance() {
  ::sg::_UserAttrService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserAttrService_UserAttrRequest*>(
      ::sg::UserAttrService_UserAttrRequest::internal_default_instance());
  ::sg::_UserAttrService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserAttrService_UserAttrResponse*>(
      ::sg::UserAttrService_UserAttrResponse::internal_default_instance());
}
void UserAttrService::unsafe_arena_set_allocated_req(
    ::sg::UserAttrService_UserAttrRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserAttrService.req)
}
void UserAttrService::unsafe_arena_set_allocated_resp(
    ::sg::UserAttrService_UserAttrResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserAttrService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAttrService::kReqFieldNumber;
const int UserAttrService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAttrService::UserAttrService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_UserAttrService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserAttrService)
}
UserAttrService::UserAttrService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserAttrService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserAttrService)
}
UserAttrService::UserAttrService(const UserAttrService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserAttrService_UserAttrRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserAttrService_UserAttrResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserAttrService)
}

void UserAttrService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserAttrService::~UserAttrService() {
  // @@protoc_insertion_point(destructor:sg.UserAttrService)
  SharedDtor();
}

void UserAttrService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserAttrService::ArenaDtor(void* object) {
  UserAttrService* _this = reinterpret_cast< UserAttrService* >(object);
  (void)_this;
}
void UserAttrService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserAttrService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserAttrService::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserAttrService& UserAttrService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserAttrService.base);
  return *internal_default_instance();
}


void UserAttrService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserAttrService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserAttrService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserAttrService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserAttrService.UserAttrRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserAttrService.UserAttrResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserAttrService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserAttrService)
  return false;
#undef DO_
}

void UserAttrService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserAttrService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserAttrService.UserAttrRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserAttrService.UserAttrResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserAttrService)
}

::google::protobuf::uint8* UserAttrService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserAttrService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserAttrService.UserAttrRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserAttrService.UserAttrResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserAttrService)
  return target;
}

size_t UserAttrService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserAttrService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserAttrService.UserAttrRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserAttrService.UserAttrResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserAttrService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserAttrService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAttrService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAttrService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserAttrService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserAttrService)
    MergeFrom(*source);
  }
}

void UserAttrService::MergeFrom(const UserAttrService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserAttrService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserAttrService_UserAttrRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserAttrService_UserAttrResponse::MergeFrom(from.resp());
    }
  }
}

void UserAttrService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserAttrService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAttrService::CopyFrom(const UserAttrService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserAttrService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAttrService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserAttrService::Swap(UserAttrService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserAttrService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserAttrService::UnsafeArenaSwap(UserAttrService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserAttrService::InternalSwap(UserAttrService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserAttrService::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLevelUpNotify::InitAsDefaultInstance() {
  ::sg::_UserLevelUpNotify_default_instance_._instance.get_mutable()->reward_ = const_cast< ::sg::Reward*>(
      ::sg::Reward::internal_default_instance());
}
void UserLevelUpNotify::unsafe_arena_set_allocated_reward(
    ::sg::Reward* reward) {
  if (GetArenaNoVirtual() == NULL) {
    delete reward_;
  }
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserLevelUpNotify.reward)
}
void UserLevelUpNotify::clear_reward() {
  if (reward_ != NULL) reward_->Clear();
  clear_has_reward();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLevelUpNotify::kLevelFieldNumber;
const int UserLevelUpNotify::kExpFieldNumber;
const int UserLevelUpNotify::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLevelUpNotify::UserLevelUpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_UserLevelUpNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserLevelUpNotify)
}
UserLevelUpNotify::UserLevelUpNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserLevelUpNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserLevelUpNotify)
}
UserLevelUpNotify::UserLevelUpNotify(const UserLevelUpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reward()) {
    reward_ = new ::sg::Reward(*from.reward_);
  } else {
    reward_ = NULL;
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&exp_) -
    reinterpret_cast<char*>(&level_)) + sizeof(exp_));
  // @@protoc_insertion_point(copy_constructor:sg.UserLevelUpNotify)
}

void UserLevelUpNotify::SharedCtor() {
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exp_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(exp_));
}

UserLevelUpNotify::~UserLevelUpNotify() {
  // @@protoc_insertion_point(destructor:sg.UserLevelUpNotify)
  SharedDtor();
}

void UserLevelUpNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete reward_;
}

void UserLevelUpNotify::ArenaDtor(void* object) {
  UserLevelUpNotify* _this = reinterpret_cast< UserLevelUpNotify* >(object);
  (void)_this;
}
void UserLevelUpNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserLevelUpNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserLevelUpNotify::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLevelUpNotify& UserLevelUpNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserLevelUpNotify.base);
  return *internal_default_instance();
}


void UserLevelUpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserLevelUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(reward_ != NULL);
    reward_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&exp_) -
        reinterpret_cast<char*>(&level_)) + sizeof(exp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserLevelUpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserLevelUpNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 exp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Reward reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserLevelUpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserLevelUpNotify)
  return false;
#undef DO_
}

void UserLevelUpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserLevelUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required int32 exp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }

  // optional .sg.Reward reward = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserLevelUpNotify)
}

::google::protobuf::uint8* UserLevelUpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserLevelUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required int32 exp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }

  // optional .sg.Reward reward = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_reward(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserLevelUpNotify)
  return target;
}

size_t UserLevelUpNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.UserLevelUpNotify)
  size_t total_size = 0;

  if (has_level()) {
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_exp()) {
    // required int32 exp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  return total_size;
}
size_t UserLevelUpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserLevelUpNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 exp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .sg.Reward reward = 3;
  if (has_reward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reward_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLevelUpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserLevelUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLevelUpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLevelUpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserLevelUpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserLevelUpNotify)
    MergeFrom(*source);
  }
}

void UserLevelUpNotify::MergeFrom(const UserLevelUpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserLevelUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_reward()->::sg::Reward::MergeFrom(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000004u) {
      exp_ = from.exp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserLevelUpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserLevelUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLevelUpNotify::CopyFrom(const UserLevelUpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserLevelUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLevelUpNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_reward()) {
    if (!this->reward_->IsInitialized()) return false;
  }
  return true;
}

void UserLevelUpNotify::Swap(UserLevelUpNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserLevelUpNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserLevelUpNotify::UnsafeArenaSwap(UserLevelUpNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserLevelUpNotify::InternalSwap(UserLevelUpNotify* other) {
  using std::swap;
  swap(reward_, other->reward_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserLevelUpNotify::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserStateService_UserStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserStateService_UserStateRequest::kCmdFieldNumber;
const int UserStateService_UserStateRequest::kNewGuideValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserStateService_UserStateRequest::UserStateService_UserStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_UserStateService_UserStateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserStateService.UserStateRequest)
}
UserStateService_UserStateRequest::UserStateService_UserStateRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserStateService_UserStateRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserStateService.UserStateRequest)
}
UserStateService_UserStateRequest::UserStateService_UserStateRequest(const UserStateService_UserStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_guide_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_guide_val()) {
    new_guide_val_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_guide_val(),
      GetArenaNoVirtual());
  }
  cmd_ = from.cmd_;
  // @@protoc_insertion_point(copy_constructor:sg.UserStateService.UserStateRequest)
}

void UserStateService_UserStateRequest::SharedCtor() {
  new_guide_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_ = 1;
}

UserStateService_UserStateRequest::~UserStateService_UserStateRequest() {
  // @@protoc_insertion_point(destructor:sg.UserStateService.UserStateRequest)
  SharedDtor();
}

void UserStateService_UserStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  new_guide_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserStateService_UserStateRequest::ArenaDtor(void* object) {
  UserStateService_UserStateRequest* _this = reinterpret_cast< UserStateService_UserStateRequest* >(object);
  (void)_this;
}
void UserStateService_UserStateRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserStateService_UserStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserStateService_UserStateRequest::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserStateService_UserStateRequest& UserStateService_UserStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserStateService_UserStateRequest.base);
  return *internal_default_instance();
}


void UserStateService_UserStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserStateService.UserStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      new_guide_val_.ClearNonDefaultToEmpty();
    }
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserStateService_UserStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserStateService.UserStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserStateService.CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserStateService_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserStateService_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes new_guide_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_new_guide_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserStateService.UserStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserStateService.UserStateRequest)
  return false;
#undef DO_
}

void UserStateService_UserStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserStateService.UserStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserStateService.CMD cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional bytes new_guide_val = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->new_guide_val(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserStateService.UserStateRequest)
}

::google::protobuf::uint8* UserStateService_UserStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserStateService.UserStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserStateService.CMD cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional bytes new_guide_val = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->new_guide_val(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserStateService.UserStateRequest)
  return target;
}

size_t UserStateService_UserStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserStateService.UserStateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserStateService.CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // optional bytes new_guide_val = 2;
  if (has_new_guide_val()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->new_guide_val());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserStateService_UserStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserStateService.UserStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserStateService_UserStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserStateService_UserStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserStateService.UserStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserStateService.UserStateRequest)
    MergeFrom(*source);
  }
}

void UserStateService_UserStateRequest::MergeFrom(const UserStateService_UserStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserStateService.UserStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_new_guide_val(from.new_guide_val());
    }
    if (cached_has_bits & 0x00000002u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserStateService_UserStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserStateService.UserStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserStateService_UserStateRequest::CopyFrom(const UserStateService_UserStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserStateService.UserStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserStateService_UserStateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void UserStateService_UserStateRequest::Swap(UserStateService_UserStateRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserStateService_UserStateRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserStateService_UserStateRequest::UnsafeArenaSwap(UserStateService_UserStateRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserStateService_UserStateRequest::InternalSwap(UserStateService_UserStateRequest* other) {
  using std::swap;
  new_guide_val_.Swap(&other->new_guide_val_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserStateService_UserStateRequest::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserStateService_UserStateResponse::InitAsDefaultInstance() {
  ::sg::_UserStateService_UserStateResponse_default_instance_._instance.get_mutable()->state_ = const_cast< ::sg::UserState*>(
      ::sg::UserState::internal_default_instance());
}
void UserStateService_UserStateResponse::unsafe_arena_set_allocated_state(
    ::sg::UserState* state) {
  if (GetArenaNoVirtual() == NULL) {
    delete state_;
  }
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserStateService.UserStateResponse.state)
}
void UserStateService_UserStateResponse::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserStateService_UserStateResponse::kResultFieldNumber;
const int UserStateService_UserStateResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserStateService_UserStateResponse::UserStateService_UserStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_UserStateService_UserStateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserStateService.UserStateResponse)
}
UserStateService_UserStateResponse::UserStateService_UserStateResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserStateService_UserStateResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserStateService.UserStateResponse)
}
UserStateService_UserStateResponse::UserStateService_UserStateResponse(const UserStateService_UserStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::sg::UserState(*from.state_);
  } else {
    state_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserStateService.UserStateResponse)
}

void UserStateService_UserStateResponse::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&state_)) + sizeof(result_));
}

UserStateService_UserStateResponse::~UserStateService_UserStateResponse() {
  // @@protoc_insertion_point(destructor:sg.UserStateService.UserStateResponse)
  SharedDtor();
}

void UserStateService_UserStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete state_;
}

void UserStateService_UserStateResponse::ArenaDtor(void* object) {
  UserStateService_UserStateResponse* _this = reinterpret_cast< UserStateService_UserStateResponse* >(object);
  (void)_this;
}
void UserStateService_UserStateResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserStateService_UserStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserStateService_UserStateResponse::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserStateService_UserStateResponse& UserStateService_UserStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserStateService_UserStateResponse.base);
  return *internal_default_instance();
}


void UserStateService_UserStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserStateService.UserStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(state_ != NULL);
    state_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserStateService_UserStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserStateService.UserStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserState state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserStateService.UserStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserStateService.UserStateResponse)
  return false;
#undef DO_
}

void UserStateService_UserStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserStateService.UserStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .sg.UserState state = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserStateService.UserStateResponse)
}

::google::protobuf::uint8* UserStateService_UserStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserStateService.UserStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .sg.UserState state = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_state(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserStateService.UserStateResponse)
  return target;
}

size_t UserStateService_UserStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserStateService.UserStateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // optional .sg.UserState state = 2;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserStateService_UserStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserStateService.UserStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserStateService_UserStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserStateService_UserStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserStateService.UserStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserStateService.UserStateResponse)
    MergeFrom(*source);
  }
}

void UserStateService_UserStateResponse::MergeFrom(const UserStateService_UserStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserStateService.UserStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_state()->::sg::UserState::MergeFrom(from.state());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserStateService_UserStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserStateService.UserStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserStateService_UserStateResponse::CopyFrom(const UserStateService_UserStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserStateService.UserStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserStateService_UserStateResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void UserStateService_UserStateResponse::Swap(UserStateService_UserStateResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserStateService_UserStateResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserStateService_UserStateResponse::UnsafeArenaSwap(UserStateService_UserStateResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserStateService_UserStateResponse::InternalSwap(UserStateService_UserStateResponse* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserStateService_UserStateResponse::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserStateService::InitAsDefaultInstance() {
  ::sg::_UserStateService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserStateService_UserStateRequest*>(
      ::sg::UserStateService_UserStateRequest::internal_default_instance());
  ::sg::_UserStateService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserStateService_UserStateResponse*>(
      ::sg::UserStateService_UserStateResponse::internal_default_instance());
}
void UserStateService::unsafe_arena_set_allocated_req(
    ::sg::UserStateService_UserStateRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserStateService.req)
}
void UserStateService::unsafe_arena_set_allocated_resp(
    ::sg::UserStateService_UserStateResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserStateService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserStateService::kReqFieldNumber;
const int UserStateService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserStateService::UserStateService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserBean_2eproto::scc_info_UserStateService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserStateService)
}
UserStateService::UserStateService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserStateService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserStateService)
}
UserStateService::UserStateService(const UserStateService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserStateService_UserStateRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserStateService_UserStateResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserStateService)
}

void UserStateService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserStateService::~UserStateService() {
  // @@protoc_insertion_point(destructor:sg.UserStateService)
  SharedDtor();
}

void UserStateService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserStateService::ArenaDtor(void* object) {
  UserStateService* _this = reinterpret_cast< UserStateService* >(object);
  (void)_this;
}
void UserStateService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserStateService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserStateService::descriptor() {
  ::protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserStateService& UserStateService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserBean_2eproto::scc_info_UserStateService.base);
  return *internal_default_instance();
}


void UserStateService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserStateService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserStateService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserStateService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserStateService.UserStateRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserStateService.UserStateResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserStateService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserStateService)
  return false;
#undef DO_
}

void UserStateService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserStateService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserStateService.UserStateRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserStateService.UserStateResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserStateService)
}

::google::protobuf::uint8* UserStateService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserStateService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserStateService.UserStateRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserStateService.UserStateResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserStateService)
  return target;
}

size_t UserStateService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserStateService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserStateService.UserStateRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserStateService.UserStateResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserStateService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserStateService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserStateService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserStateService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserStateService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserStateService)
    MergeFrom(*source);
  }
}

void UserStateService::MergeFrom(const UserStateService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserStateService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserStateService_UserStateRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserStateService_UserStateResponse::MergeFrom(from.resp());
    }
  }
}

void UserStateService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserStateService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserStateService::CopyFrom(const UserStateService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserStateService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserStateService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserStateService::Swap(UserStateService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserStateService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserStateService::UnsafeArenaSwap(UserStateService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserStateService::InternalSwap(UserStateService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserStateService::GetMetadata() const {
  protobuf_UserBean_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserBean_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ErrorNo* Arena::CreateMaybeMessage< ::sg::ErrorNo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ErrorNo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::RegisterAccountService_RegisterRequest* Arena::CreateMaybeMessage< ::sg::RegisterAccountService_RegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::RegisterAccountService_RegisterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::RegisterAccountService_RegisterResponse* Arena::CreateMaybeMessage< ::sg::RegisterAccountService_RegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::RegisterAccountService_RegisterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::RegisterAccountService* Arena::CreateMaybeMessage< ::sg::RegisterAccountService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::RegisterAccountService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::FastRegisterAccountService_RegisterRequest* Arena::CreateMaybeMessage< ::sg::FastRegisterAccountService_RegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::FastRegisterAccountService_RegisterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::FastRegisterAccountService_RegisterResponse* Arena::CreateMaybeMessage< ::sg::FastRegisterAccountService_RegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::FastRegisterAccountService_RegisterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::FastRegisterAccountService* Arena::CreateMaybeMessage< ::sg::FastRegisterAccountService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::FastRegisterAccountService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::AccountLoginService_LoginRequest* Arena::CreateMaybeMessage< ::sg::AccountLoginService_LoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::AccountLoginService_LoginRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::AccountLoginService_LoginResponse* Arena::CreateMaybeMessage< ::sg::AccountLoginService_LoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::AccountLoginService_LoginResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::AccountLoginService* Arena::CreateMaybeMessage< ::sg::AccountLoginService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::AccountLoginService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::AccountReloginService_ReloginRequest* Arena::CreateMaybeMessage< ::sg::AccountReloginService_ReloginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::AccountReloginService_ReloginRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::AccountReloginService_ReloginResponse* Arena::CreateMaybeMessage< ::sg::AccountReloginService_ReloginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::AccountReloginService_ReloginResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::AccountReloginService* Arena::CreateMaybeMessage< ::sg::AccountReloginService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::AccountReloginService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::PlayerJoinService_JoinRequest* Arena::CreateMaybeMessage< ::sg::PlayerJoinService_JoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::PlayerJoinService_JoinRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::PlayerJoinService_JoinResponse* Arena::CreateMaybeMessage< ::sg::PlayerJoinService_JoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::PlayerJoinService_JoinResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::PlayerJoinService* Arena::CreateMaybeMessage< ::sg::PlayerJoinService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::PlayerJoinService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserAttribute* Arena::CreateMaybeMessage< ::sg::UserAttribute >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserAttrService_UserAttrRequest* Arena::CreateMaybeMessage< ::sg::UserAttrService_UserAttrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserAttrService_UserAttrRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserAttrService_UserAttrResponse* Arena::CreateMaybeMessage< ::sg::UserAttrService_UserAttrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserAttrService_UserAttrResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserAttrService* Arena::CreateMaybeMessage< ::sg::UserAttrService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserAttrService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserLevelUpNotify* Arena::CreateMaybeMessage< ::sg::UserLevelUpNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserLevelUpNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserStateService_UserStateRequest* Arena::CreateMaybeMessage< ::sg::UserStateService_UserStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserStateService_UserStateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserStateService_UserStateResponse* Arena::CreateMaybeMessage< ::sg::UserStateService_UserStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserStateService_UserStateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserStateService* Arena::CreateMaybeMessage< ::sg::UserStateService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserStateService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
