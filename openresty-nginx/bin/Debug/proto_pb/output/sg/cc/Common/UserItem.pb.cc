// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserItem.proto

#include "UserItem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Item;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Reward;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_UserItem_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserItem_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserItemService_UserItemRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserItem_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UserItemService_UserItemResponse;
}  // namespace protobuf_UserItem_2eproto
namespace sg {
class UserItemService_UserItemRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserItemService_UserItemRequest>
      _instance;
} _UserItemService_UserItemRequest_default_instance_;
class UserItemService_UserItemResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserItemService_UserItemResponse>
      _instance;
} _UserItemService_UserItemResponse_default_instance_;
class UserItemServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserItemService>
      _instance;
} _UserItemService_default_instance_;
}  // namespace sg
namespace protobuf_UserItem_2eproto {
static void InitDefaultsUserItemService_UserItemRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserItemService_UserItemRequest_default_instance_;
    new (ptr) ::sg::UserItemService_UserItemRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserItemService_UserItemRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserItemService_UserItemRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserItemService_UserItemRequest}, {}};

static void InitDefaultsUserItemService_UserItemResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserItemService_UserItemResponse_default_instance_;
    new (ptr) ::sg::UserItemService_UserItemResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserItemService_UserItemResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserItemService_UserItemResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserItemService_UserItemResponse}, {
      &protobuf_BaseStruct_2eproto::scc_info_Item.base,
      &protobuf_BaseStruct_2eproto::scc_info_Reward.base,}};

static void InitDefaultsUserItemService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserItemService_default_instance_;
    new (ptr) ::sg::UserItemService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserItemService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserItemService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserItemService}, {
      &protobuf_UserItem_2eproto::scc_info_UserItemService_UserItemRequest.base,
      &protobuf_UserItem_2eproto::scc_info_UserItemService_UserItemResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UserItemService_UserItemRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserItemService_UserItemResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserItemService.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemRequest, typeid__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemRequest, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemRequest, target_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemRequest, target_id_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemResponse, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService_UserItemResponse, reward_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserItemService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::sg::UserItemService_UserItemRequest)},
  { 15, 23, sizeof(::sg::UserItemService_UserItemResponse)},
  { 26, 33, sizeof(::sg::UserItemService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserItemService_UserItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserItemService_UserItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserItemService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserItem.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016UserItem.proto\022\002sg\032\020BaseStruct.proto\"\207"
      "\003\n\017UserItemService\0220\n\003req\030\001 \001(\0132#.sg.Use"
      "rItemService.UserItemRequest\0222\n\004resp\030\002 \001"
      "(\0132$.sg.UserItemService.UserItemResponse"
      "\032\201\001\n\017UserItemRequest\022)\n\003cmd\030\001 \002(\0162\034.sg.U"
      "serItemService.ITEM_CMD\022\016\n\006typeid\030\003 \001(\005\022"
      "\013\n\003num\030\004 \001(\005\022\023\n\013target_type\030\005 \001(\005\022\021\n\ttar"
      "get_id\030\006 \001(\005\032W\n\020UserItemResponse\022\016\n\006resu"
      "lt\030\001 \002(\005\022\027\n\005items\030\002 \003(\0132\010.sg.Item\022\032\n\006rew"
      "ard\030\003 \001(\0132\n.sg.Reward\"1\n\010ITEM_CMD\022\t\n\005QUE"
      "RY\020\001\022\007\n\003ADD\020\002\022\010\n\004SALE\020\003\022\007\n\003USE\020\004B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 437);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserItem.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserItem_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserItemService_ITEM_CMD_descriptor() {
  protobuf_UserItem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserItem_2eproto::file_level_enum_descriptors[0];
}
bool UserItemService_ITEM_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserItemService_ITEM_CMD UserItemService::QUERY;
const UserItemService_ITEM_CMD UserItemService::ADD;
const UserItemService_ITEM_CMD UserItemService::SALE;
const UserItemService_ITEM_CMD UserItemService::USE;
const UserItemService_ITEM_CMD UserItemService::ITEM_CMD_MIN;
const UserItemService_ITEM_CMD UserItemService::ITEM_CMD_MAX;
const int UserItemService::ITEM_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void UserItemService_UserItemRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserItemService_UserItemRequest::kCmdFieldNumber;
const int UserItemService_UserItemRequest::kTypeidFieldNumber;
const int UserItemService_UserItemRequest::kNumFieldNumber;
const int UserItemService_UserItemRequest::kTargetTypeFieldNumber;
const int UserItemService_UserItemRequest::kTargetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserItemService_UserItemRequest::UserItemService_UserItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserItem_2eproto::scc_info_UserItemService_UserItemRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserItemService.UserItemRequest)
}
UserItemService_UserItemRequest::UserItemService_UserItemRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserItem_2eproto::scc_info_UserItemService_UserItemRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserItemService.UserItemRequest)
}
UserItemService_UserItemRequest::UserItemService_UserItemRequest(const UserItemService_UserItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&typeid__, &from.typeid__,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&typeid__)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.UserItemService.UserItemRequest)
}

void UserItemService_UserItemRequest::SharedCtor() {
  ::memset(&typeid__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_id_) -
      reinterpret_cast<char*>(&typeid__)) + sizeof(target_id_));
  cmd_ = 1;
}

UserItemService_UserItemRequest::~UserItemService_UserItemRequest() {
  // @@protoc_insertion_point(destructor:sg.UserItemService.UserItemRequest)
  SharedDtor();
}

void UserItemService_UserItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserItemService_UserItemRequest::ArenaDtor(void* object) {
  UserItemService_UserItemRequest* _this = reinterpret_cast< UserItemService_UserItemRequest* >(object);
  (void)_this;
}
void UserItemService_UserItemRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserItemService_UserItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserItemService_UserItemRequest::descriptor() {
  ::protobuf_UserItem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserItem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserItemService_UserItemRequest& UserItemService_UserItemRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserItem_2eproto::scc_info_UserItemService_UserItemRequest.base);
  return *internal_default_instance();
}


void UserItemService_UserItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserItemService.UserItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&typeid__, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_id_) -
        reinterpret_cast<char*>(&typeid__)) + sizeof(target_id_));
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserItemService_UserItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserItemService.UserItemRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserItemService.ITEM_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserItemService_ITEM_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserItemService_ITEM_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 typeid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_typeid_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typeid__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_target_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_target_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserItemService.UserItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserItemService.UserItemRequest)
  return false;
#undef DO_
}

void UserItemService_UserItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserItemService.UserItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserItemService.ITEM_CMD cmd = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 typeid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->typeid_(), output);
  }

  // optional int32 num = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num(), output);
  }

  // optional int32 target_type = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_type(), output);
  }

  // optional int32 target_id = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->target_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserItemService.UserItemRequest)
}

::google::protobuf::uint8* UserItemService_UserItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserItemService.UserItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserItemService.ITEM_CMD cmd = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 typeid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->typeid_(), target);
  }

  // optional int32 num = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->num(), target);
  }

  // optional int32 target_type = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_type(), target);
  }

  // optional int32 target_id = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->target_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserItemService.UserItemRequest)
  return target;
}

size_t UserItemService_UserItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserItemService.UserItemRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserItemService.ITEM_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 typeid = 3;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->typeid_());
    }

    // optional int32 num = 4;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 target_type = 5;
    if (has_target_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_type());
    }

    // optional int32 target_id = 6;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserItemService_UserItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserItemService.UserItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserItemService_UserItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserItemService_UserItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserItemService.UserItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserItemService.UserItemRequest)
    MergeFrom(*source);
  }
}

void UserItemService_UserItemRequest::MergeFrom(const UserItemService_UserItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserItemService.UserItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      typeid__ = from.typeid__;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_type_ = from.target_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      target_id_ = from.target_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserItemService_UserItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserItemService.UserItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserItemService_UserItemRequest::CopyFrom(const UserItemService_UserItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserItemService.UserItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserItemService_UserItemRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  return true;
}

void UserItemService_UserItemRequest::Swap(UserItemService_UserItemRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserItemService_UserItemRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserItemService_UserItemRequest::UnsafeArenaSwap(UserItemService_UserItemRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserItemService_UserItemRequest::InternalSwap(UserItemService_UserItemRequest* other) {
  using std::swap;
  swap(typeid__, other->typeid__);
  swap(num_, other->num_);
  swap(target_type_, other->target_type_);
  swap(target_id_, other->target_id_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserItemService_UserItemRequest::GetMetadata() const {
  protobuf_UserItem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserItem_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserItemService_UserItemResponse::InitAsDefaultInstance() {
  ::sg::_UserItemService_UserItemResponse_default_instance_._instance.get_mutable()->reward_ = const_cast< ::sg::Reward*>(
      ::sg::Reward::internal_default_instance());
}
void UserItemService_UserItemResponse::clear_items() {
  items_.Clear();
}
void UserItemService_UserItemResponse::unsafe_arena_set_allocated_reward(
    ::sg::Reward* reward) {
  if (GetArenaNoVirtual() == NULL) {
    delete reward_;
  }
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserItemService.UserItemResponse.reward)
}
void UserItemService_UserItemResponse::clear_reward() {
  if (reward_ != NULL) reward_->Clear();
  clear_has_reward();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserItemService_UserItemResponse::kResultFieldNumber;
const int UserItemService_UserItemResponse::kItemsFieldNumber;
const int UserItemService_UserItemResponse::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserItemService_UserItemResponse::UserItemService_UserItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserItem_2eproto::scc_info_UserItemService_UserItemResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserItemService.UserItemResponse)
}
UserItemService_UserItemResponse::UserItemService_UserItemResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  items_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserItem_2eproto::scc_info_UserItemService_UserItemResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserItemService.UserItemResponse)
}
UserItemService_UserItemResponse::UserItemService_UserItemResponse(const UserItemService_UserItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reward()) {
    reward_ = new ::sg::Reward(*from.reward_);
  } else {
    reward_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserItemService.UserItemResponse)
}

void UserItemService_UserItemResponse::SharedCtor() {
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(result_));
}

UserItemService_UserItemResponse::~UserItemService_UserItemResponse() {
  // @@protoc_insertion_point(destructor:sg.UserItemService.UserItemResponse)
  SharedDtor();
}

void UserItemService_UserItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete reward_;
}

void UserItemService_UserItemResponse::ArenaDtor(void* object) {
  UserItemService_UserItemResponse* _this = reinterpret_cast< UserItemService_UserItemResponse* >(object);
  (void)_this;
}
void UserItemService_UserItemResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserItemService_UserItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserItemService_UserItemResponse::descriptor() {
  ::protobuf_UserItem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserItem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserItemService_UserItemResponse& UserItemService_UserItemResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserItem_2eproto::scc_info_UserItemService_UserItemResponse.base);
  return *internal_default_instance();
}


void UserItemService_UserItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserItemService.UserItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(reward_ != NULL);
    reward_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserItemService_UserItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserItemService.UserItemResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Item items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Reward reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserItemService.UserItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserItemService.UserItemResponse)
  return false;
#undef DO_
}

void UserItemService_UserItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserItemService.UserItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .sg.Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  // optional .sg.Reward reward = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserItemService.UserItemResponse)
}

::google::protobuf::uint8* UserItemService_UserItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserItemService.UserItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .sg.Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  // optional .sg.Reward reward = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_reward(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserItemService.UserItemResponse)
  return target;
}

size_t UserItemService_UserItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserItemService.UserItemResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.Item items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // optional .sg.Reward reward = 3;
  if (has_reward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reward_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserItemService_UserItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserItemService.UserItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserItemService_UserItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserItemService_UserItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserItemService.UserItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserItemService.UserItemResponse)
    MergeFrom(*source);
  }
}

void UserItemService_UserItemResponse::MergeFrom(const UserItemService_UserItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserItemService.UserItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_reward()->::sg::Reward::MergeFrom(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserItemService_UserItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserItemService.UserItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserItemService_UserItemResponse::CopyFrom(const UserItemService_UserItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserItemService.UserItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserItemService_UserItemResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  if (has_reward()) {
    if (!this->reward_->IsInitialized()) return false;
  }
  return true;
}

void UserItemService_UserItemResponse::Swap(UserItemService_UserItemResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserItemService_UserItemResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserItemService_UserItemResponse::UnsafeArenaSwap(UserItemService_UserItemResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserItemService_UserItemResponse::InternalSwap(UserItemService_UserItemResponse* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(reward_, other->reward_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserItemService_UserItemResponse::GetMetadata() const {
  protobuf_UserItem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserItem_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserItemService::InitAsDefaultInstance() {
  ::sg::_UserItemService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserItemService_UserItemRequest*>(
      ::sg::UserItemService_UserItemRequest::internal_default_instance());
  ::sg::_UserItemService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserItemService_UserItemResponse*>(
      ::sg::UserItemService_UserItemResponse::internal_default_instance());
}
void UserItemService::unsafe_arena_set_allocated_req(
    ::sg::UserItemService_UserItemRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserItemService.req)
}
void UserItemService::unsafe_arena_set_allocated_resp(
    ::sg::UserItemService_UserItemResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserItemService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserItemService::kReqFieldNumber;
const int UserItemService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserItemService::UserItemService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserItem_2eproto::scc_info_UserItemService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserItemService)
}
UserItemService::UserItemService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserItem_2eproto::scc_info_UserItemService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserItemService)
}
UserItemService::UserItemService(const UserItemService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserItemService_UserItemRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserItemService_UserItemResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserItemService)
}

void UserItemService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserItemService::~UserItemService() {
  // @@protoc_insertion_point(destructor:sg.UserItemService)
  SharedDtor();
}

void UserItemService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserItemService::ArenaDtor(void* object) {
  UserItemService* _this = reinterpret_cast< UserItemService* >(object);
  (void)_this;
}
void UserItemService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserItemService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserItemService::descriptor() {
  ::protobuf_UserItem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserItem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserItemService& UserItemService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserItem_2eproto::scc_info_UserItemService.base);
  return *internal_default_instance();
}


void UserItemService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserItemService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserItemService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserItemService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserItemService.UserItemRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserItemService.UserItemResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserItemService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserItemService)
  return false;
#undef DO_
}

void UserItemService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserItemService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserItemService.UserItemRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserItemService.UserItemResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserItemService)
}

::google::protobuf::uint8* UserItemService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserItemService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserItemService.UserItemRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserItemService.UserItemResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserItemService)
  return target;
}

size_t UserItemService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserItemService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserItemService.UserItemRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserItemService.UserItemResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserItemService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserItemService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserItemService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserItemService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserItemService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserItemService)
    MergeFrom(*source);
  }
}

void UserItemService::MergeFrom(const UserItemService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserItemService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserItemService_UserItemRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserItemService_UserItemResponse::MergeFrom(from.resp());
    }
  }
}

void UserItemService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserItemService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserItemService::CopyFrom(const UserItemService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserItemService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserItemService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserItemService::Swap(UserItemService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserItemService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserItemService::UnsafeArenaSwap(UserItemService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserItemService::InternalSwap(UserItemService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserItemService::GetMetadata() const {
  protobuf_UserItem_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserItem_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserItemService_UserItemRequest* Arena::CreateMaybeMessage< ::sg::UserItemService_UserItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserItemService_UserItemRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserItemService_UserItemResponse* Arena::CreateMaybeMessage< ::sg::UserItemService_UserItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserItemService_UserItemResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserItemService* Arena::CreateMaybeMessage< ::sg::UserItemService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserItemService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
