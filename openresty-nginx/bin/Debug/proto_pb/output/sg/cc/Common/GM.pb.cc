// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GM.proto

#include "GM.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GM_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GM_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GMAddItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GM_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GMService_GMResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GM_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GMService_GMRequest;
}  // namespace protobuf_GM_2eproto
namespace gm {
class GMAddItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMAddItem>
      _instance;
} _GMAddItem_default_instance_;
class GMService_GMRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMService_GMRequest>
      _instance;
} _GMService_GMRequest_default_instance_;
class GMService_GMResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMService_GMResponse>
      _instance;
} _GMService_GMResponse_default_instance_;
class GMServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMService>
      _instance;
} _GMService_default_instance_;
}  // namespace gm
namespace protobuf_GM_2eproto {
static void InitDefaultsGMAddItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gm::_GMAddItem_default_instance_;
    new (ptr) ::gm::GMAddItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gm::GMAddItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GMAddItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGMAddItem}, {}};

static void InitDefaultsGMService_GMRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gm::_GMService_GMRequest_default_instance_;
    new (ptr) ::gm::GMService_GMRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gm::GMService_GMRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GMService_GMRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGMService_GMRequest}, {
      &protobuf_GM_2eproto::scc_info_GMAddItem.base,}};

static void InitDefaultsGMService_GMResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gm::_GMService_GMResponse_default_instance_;
    new (ptr) ::gm::GMService_GMResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gm::GMService_GMResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GMService_GMResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGMService_GMResponse}, {}};

static void InitDefaultsGMService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gm::_GMService_default_instance_;
    new (ptr) ::gm::GMService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gm::GMService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GMService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGMService}, {
      &protobuf_GM_2eproto::scc_info_GMService_GMRequest.base,
      &protobuf_GM_2eproto::scc_info_GMService_GMResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GMAddItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GMService_GMRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GMService_GMResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GMService.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMAddItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMAddItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMAddItem, item_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMAddItem, item_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService_GMRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService_GMRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService_GMRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService_GMRequest, add_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService_GMRequest, command_txt_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService_GMResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService_GMResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService_GMResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gm::GMService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::gm::GMAddItem)},
  { 9, 17, sizeof(::gm::GMService_GMRequest)},
  { 20, 26, sizeof(::gm::GMService_GMResponse)},
  { 27, 34, sizeof(::gm::GMService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gm::_GMAddItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gm::_GMService_GMRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gm::_GMService_GMResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gm::_GMService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GM.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010GM.proto\022\002gm\"2\n\tGMAddItem\022\023\n\013item_type"
      "id\030\001 \002(\004\022\020\n\010item_num\030\002 \002(\005\"\223\002\n\tGMService"
      "\022$\n\003req\030\001 \001(\0132\027.gm.GMService.GMRequest\022&"
      "\n\004resp\030\002 \001(\0132\030.gm.GMService.GMResponse\032m"
      "\n\tGMRequest\022%\n\003cmd\030\001 \002(\0162\030.gm.GMService."
      "GM_COMMAND\022$\n\radd_item_list\030\013 \003(\0132\r.gm.G"
      "MAddItem\022\023\n\013command_txt\0303 \001(\014\032\034\n\nGMRespo"
      "nse\022\016\n\006result\030\001 \002(\005\"+\n\nGM_COMMAND\022\014\n\010ADD"
      "_ITEM\020\001\022\017\n\013COMMAND_TXT\020eB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 349);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GM.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GM_2eproto
namespace gm {
const ::google::protobuf::EnumDescriptor* GMService_GM_COMMAND_descriptor() {
  protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GM_2eproto::file_level_enum_descriptors[0];
}
bool GMService_GM_COMMAND_IsValid(int value) {
  switch (value) {
    case 1:
    case 101:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GMService_GM_COMMAND GMService::ADD_ITEM;
const GMService_GM_COMMAND GMService::COMMAND_TXT;
const GMService_GM_COMMAND GMService::GM_COMMAND_MIN;
const GMService_GM_COMMAND GMService::GM_COMMAND_MAX;
const int GMService::GM_COMMAND_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void GMAddItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMAddItem::kItemTypeidFieldNumber;
const int GMAddItem::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMAddItem::GMAddItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GM_2eproto::scc_info_GMAddItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gm.GMAddItem)
}
GMAddItem::GMAddItem(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GM_2eproto::scc_info_GMAddItem.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gm.GMAddItem)
}
GMAddItem::GMAddItem(const GMAddItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_typeid_, &from.item_typeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_typeid_)) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:gm.GMAddItem)
}

void GMAddItem::SharedCtor() {
  ::memset(&item_typeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_typeid_)) + sizeof(item_num_));
}

GMAddItem::~GMAddItem() {
  // @@protoc_insertion_point(destructor:gm.GMAddItem)
  SharedDtor();
}

void GMAddItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GMAddItem::ArenaDtor(void* object) {
  GMAddItem* _this = reinterpret_cast< GMAddItem* >(object);
  (void)_this;
}
void GMAddItem::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GMAddItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GMAddItem::descriptor() {
  ::protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GM_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMAddItem& GMAddItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GM_2eproto::scc_info_GMAddItem.base);
  return *internal_default_instance();
}


void GMAddItem::Clear() {
// @@protoc_insertion_point(message_clear_start:gm.GMAddItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&item_typeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_num_) -
        reinterpret_cast<char*>(&item_typeid_)) + sizeof(item_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMAddItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gm.GMAddItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 item_typeid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gm.GMAddItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gm.GMAddItem)
  return false;
#undef DO_
}

void GMAddItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gm.GMAddItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 item_typeid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_typeid(), output);
  }

  // required int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gm.GMAddItem)
}

::google::protobuf::uint8* GMAddItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gm.GMAddItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 item_typeid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_typeid(), target);
  }

  // required int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gm.GMAddItem)
  return target;
}

size_t GMAddItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:gm.GMAddItem)
  size_t total_size = 0;

  if (has_item_typeid()) {
    // required uint64 item_typeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());
  }

  if (has_item_num()) {
    // required int32 item_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_num());
  }

  return total_size;
}
size_t GMAddItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gm.GMAddItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 item_typeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());

    // required int32 item_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GMAddItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gm.GMAddItem)
  GOOGLE_DCHECK_NE(&from, this);
  const GMAddItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMAddItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gm.GMAddItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gm.GMAddItem)
    MergeFrom(*source);
  }
}

void GMAddItem::MergeFrom(const GMAddItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gm.GMAddItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_typeid_ = from.item_typeid_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_num_ = from.item_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GMAddItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gm.GMAddItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMAddItem::CopyFrom(const GMAddItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gm.GMAddItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMAddItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GMAddItem::Swap(GMAddItem* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GMAddItem* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GMAddItem::UnsafeArenaSwap(GMAddItem* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GMAddItem::InternalSwap(GMAddItem* other) {
  using std::swap;
  swap(item_typeid_, other->item_typeid_);
  swap(item_num_, other->item_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GMAddItem::GetMetadata() const {
  protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GM_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMService_GMRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMService_GMRequest::kCmdFieldNumber;
const int GMService_GMRequest::kAddItemListFieldNumber;
const int GMService_GMRequest::kCommandTxtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMService_GMRequest::GMService_GMRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GM_2eproto::scc_info_GMService_GMRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gm.GMService.GMRequest)
}
GMService_GMRequest::GMService_GMRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  add_item_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GM_2eproto::scc_info_GMService_GMRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gm.GMService.GMRequest)
}
GMService_GMRequest::GMService_GMRequest(const GMService_GMRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      add_item_list_(from.add_item_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_txt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_command_txt()) {
    command_txt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_txt(),
      GetArenaNoVirtual());
  }
  cmd_ = from.cmd_;
  // @@protoc_insertion_point(copy_constructor:gm.GMService.GMRequest)
}

void GMService_GMRequest::SharedCtor() {
  command_txt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_ = 1;
}

GMService_GMRequest::~GMService_GMRequest() {
  // @@protoc_insertion_point(destructor:gm.GMService.GMRequest)
  SharedDtor();
}

void GMService_GMRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  command_txt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GMService_GMRequest::ArenaDtor(void* object) {
  GMService_GMRequest* _this = reinterpret_cast< GMService_GMRequest* >(object);
  (void)_this;
}
void GMService_GMRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GMService_GMRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GMService_GMRequest::descriptor() {
  ::protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GM_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMService_GMRequest& GMService_GMRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GM_2eproto::scc_info_GMService_GMRequest.base);
  return *internal_default_instance();
}


void GMService_GMRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gm.GMService.GMRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  add_item_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      command_txt_.ClearNonDefaultToEmpty();
    }
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMService_GMRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gm.GMService.GMRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .gm.GMService.GM_COMMAND cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gm::GMService_GM_COMMAND_IsValid(value)) {
            set_cmd(static_cast< ::gm::GMService_GM_COMMAND >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gm.GMAddItem add_item_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes command_txt = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_command_txt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gm.GMService.GMRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gm.GMService.GMRequest)
  return false;
#undef DO_
}

void GMService_GMRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gm.GMService.GMRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gm.GMService.GM_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // repeated .gm.GMAddItem add_item_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->add_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->add_item_list(static_cast<int>(i)),
      output);
  }

  // optional bytes command_txt = 51;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      51, this->command_txt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gm.GMService.GMRequest)
}

::google::protobuf::uint8* GMService_GMRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gm.GMService.GMRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gm.GMService.GM_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // repeated .gm.GMAddItem add_item_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->add_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->add_item_list(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes command_txt = 51;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        51, this->command_txt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gm.GMService.GMRequest)
  return target;
}

size_t GMService_GMRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gm.GMService.GMRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .gm.GMService.GM_COMMAND cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // repeated .gm.GMAddItem add_item_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->add_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->add_item_list(static_cast<int>(i)));
    }
  }

  // optional bytes command_txt = 51;
  if (has_command_txt()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->command_txt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GMService_GMRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gm.GMService.GMRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GMService_GMRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMService_GMRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gm.GMService.GMRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gm.GMService.GMRequest)
    MergeFrom(*source);
  }
}

void GMService_GMRequest::MergeFrom(const GMService_GMRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gm.GMService.GMRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  add_item_list_.MergeFrom(from.add_item_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_command_txt(from.command_txt());
    }
    if (cached_has_bits & 0x00000002u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GMService_GMRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gm.GMService.GMRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMService_GMRequest::CopyFrom(const GMService_GMRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gm.GMService.GMRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMService_GMRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->add_item_list())) return false;
  return true;
}

void GMService_GMRequest::Swap(GMService_GMRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GMService_GMRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GMService_GMRequest::UnsafeArenaSwap(GMService_GMRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GMService_GMRequest::InternalSwap(GMService_GMRequest* other) {
  using std::swap;
  CastToBase(&add_item_list_)->InternalSwap(CastToBase(&other->add_item_list_));
  command_txt_.Swap(&other->command_txt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GMService_GMRequest::GetMetadata() const {
  protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GM_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMService_GMResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMService_GMResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMService_GMResponse::GMService_GMResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GM_2eproto::scc_info_GMService_GMResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gm.GMService.GMResponse)
}
GMService_GMResponse::GMService_GMResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GM_2eproto::scc_info_GMService_GMResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gm.GMService.GMResponse)
}
GMService_GMResponse::GMService_GMResponse(const GMService_GMResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:gm.GMService.GMResponse)
}

void GMService_GMResponse::SharedCtor() {
  result_ = 0;
}

GMService_GMResponse::~GMService_GMResponse() {
  // @@protoc_insertion_point(destructor:gm.GMService.GMResponse)
  SharedDtor();
}

void GMService_GMResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GMService_GMResponse::ArenaDtor(void* object) {
  GMService_GMResponse* _this = reinterpret_cast< GMService_GMResponse* >(object);
  (void)_this;
}
void GMService_GMResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GMService_GMResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GMService_GMResponse::descriptor() {
  ::protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GM_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMService_GMResponse& GMService_GMResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GM_2eproto::scc_info_GMService_GMResponse.base);
  return *internal_default_instance();
}


void GMService_GMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gm.GMService.GMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMService_GMResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gm.GMService.GMResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gm.GMService.GMResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gm.GMService.GMResponse)
  return false;
#undef DO_
}

void GMService_GMResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gm.GMService.GMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gm.GMService.GMResponse)
}

::google::protobuf::uint8* GMService_GMResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gm.GMService.GMResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gm.GMService.GMResponse)
  return target;
}

size_t GMService_GMResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gm.GMService.GMResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GMService_GMResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gm.GMService.GMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GMService_GMResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMService_GMResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gm.GMService.GMResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gm.GMService.GMResponse)
    MergeFrom(*source);
  }
}

void GMService_GMResponse::MergeFrom(const GMService_GMResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gm.GMService.GMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GMService_GMResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gm.GMService.GMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMService_GMResponse::CopyFrom(const GMService_GMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gm.GMService.GMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMService_GMResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GMService_GMResponse::Swap(GMService_GMResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GMService_GMResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GMService_GMResponse::UnsafeArenaSwap(GMService_GMResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GMService_GMResponse::InternalSwap(GMService_GMResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GMService_GMResponse::GetMetadata() const {
  protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GM_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMService::InitAsDefaultInstance() {
  ::gm::_GMService_default_instance_._instance.get_mutable()->req_ = const_cast< ::gm::GMService_GMRequest*>(
      ::gm::GMService_GMRequest::internal_default_instance());
  ::gm::_GMService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::gm::GMService_GMResponse*>(
      ::gm::GMService_GMResponse::internal_default_instance());
}
void GMService::unsafe_arena_set_allocated_req(
    ::gm::GMService_GMRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gm.GMService.req)
}
void GMService::unsafe_arena_set_allocated_resp(
    ::gm::GMService_GMResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gm.GMService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMService::kReqFieldNumber;
const int GMService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMService::GMService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GM_2eproto::scc_info_GMService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gm.GMService)
}
GMService::GMService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GM_2eproto::scc_info_GMService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gm.GMService)
}
GMService::GMService(const GMService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::gm::GMService_GMRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::gm::GMService_GMResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gm.GMService)
}

void GMService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

GMService::~GMService() {
  // @@protoc_insertion_point(destructor:gm.GMService)
  SharedDtor();
}

void GMService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void GMService::ArenaDtor(void* object) {
  GMService* _this = reinterpret_cast< GMService* >(object);
  (void)_this;
}
void GMService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GMService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GMService::descriptor() {
  ::protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GM_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMService& GMService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GM_2eproto::scc_info_GMService.base);
  return *internal_default_instance();
}


void GMService::Clear() {
// @@protoc_insertion_point(message_clear_start:gm.GMService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gm.GMService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gm.GMService.GMRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .gm.GMService.GMResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gm.GMService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gm.GMService)
  return false;
#undef DO_
}

void GMService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gm.GMService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .gm.GMService.GMRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .gm.GMService.GMResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gm.GMService)
}

::google::protobuf::uint8* GMService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gm.GMService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .gm.GMService.GMRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .gm.GMService.GMResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gm.GMService)
  return target;
}

size_t GMService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gm.GMService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .gm.GMService.GMRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .gm.GMService.GMResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GMService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gm.GMService)
  GOOGLE_DCHECK_NE(&from, this);
  const GMService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gm.GMService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gm.GMService)
    MergeFrom(*source);
  }
}

void GMService::MergeFrom(const GMService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gm.GMService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::gm::GMService_GMRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::gm::GMService_GMResponse::MergeFrom(from.resp());
    }
  }
}

void GMService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gm.GMService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMService::CopyFrom(const GMService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gm.GMService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void GMService::Swap(GMService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GMService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GMService::UnsafeArenaSwap(GMService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GMService::InternalSwap(GMService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GMService::GetMetadata() const {
  protobuf_GM_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GM_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gm
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gm::GMAddItem* Arena::CreateMaybeMessage< ::gm::GMAddItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gm::GMAddItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gm::GMService_GMRequest* Arena::CreateMaybeMessage< ::gm::GMService_GMRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gm::GMService_GMRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gm::GMService_GMResponse* Arena::CreateMaybeMessage< ::gm::GMService_GMResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gm::GMService_GMResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gm::GMService* Arena::CreateMaybeMessage< ::gm::GMService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gm::GMService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
