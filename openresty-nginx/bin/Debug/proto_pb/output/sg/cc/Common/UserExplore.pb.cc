// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserExplore.proto

#include "UserExplore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Reward;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_UserExplore_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExploreEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExploreRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExploreStage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExploreState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserExploreActionService_UserExploreRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserExploreService_UserExploreRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ActionResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UserExploreActionService_UserExploreResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UserExploreService_UserExploreResponse;
}  // namespace protobuf_UserExplore_2eproto
namespace sg {
class ExploreStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExploreState>
      _instance;
} _ExploreState_default_instance_;
class ExploreStageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExploreStage>
      _instance;
} _ExploreStage_default_instance_;
class ExploreRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExploreRecord>
      _instance;
} _ExploreRecord_default_instance_;
class ExploreEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExploreEvent>
      _instance;
} _ExploreEvent_default_instance_;
class ActionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionResult>
      _instance;
} _ActionResult_default_instance_;
class UserExploreService_UserExploreRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserExploreService_UserExploreRequest>
      _instance;
} _UserExploreService_UserExploreRequest_default_instance_;
class UserExploreService_UserExploreResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserExploreService_UserExploreResponse>
      _instance;
} _UserExploreService_UserExploreResponse_default_instance_;
class UserExploreServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserExploreService>
      _instance;
} _UserExploreService_default_instance_;
class UserExploreActionService_UserExploreRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserExploreActionService_UserExploreRequest>
      _instance;
} _UserExploreActionService_UserExploreRequest_default_instance_;
class UserExploreActionService_UserExploreResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserExploreActionService_UserExploreResponse>
      _instance;
} _UserExploreActionService_UserExploreResponse_default_instance_;
class UserExploreActionServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserExploreActionService>
      _instance;
} _UserExploreActionService_default_instance_;
class NewEventExistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewEventExist>
      _instance;
} _NewEventExist_default_instance_;
class EventChangeNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventChangeNotify>
      _instance;
} _EventChangeNotify_default_instance_;
}  // namespace sg
namespace protobuf_UserExplore_2eproto {
static void InitDefaultsExploreState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ExploreState_default_instance_;
    new (ptr) ::sg::ExploreState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ExploreState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExploreState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExploreState}, {}};

static void InitDefaultsExploreStage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ExploreStage_default_instance_;
    new (ptr) ::sg::ExploreStage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ExploreStage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExploreStage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExploreStage}, {}};

static void InitDefaultsExploreRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ExploreRecord_default_instance_;
    new (ptr) ::sg::ExploreRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ExploreRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExploreRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExploreRecord}, {}};

static void InitDefaultsExploreEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ExploreEvent_default_instance_;
    new (ptr) ::sg::ExploreEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ExploreEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExploreEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExploreEvent}, {}};

static void InitDefaultsActionResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ActionResult_default_instance_;
    new (ptr) ::sg::ActionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ActionResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ActionResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsActionResult}, {
      &protobuf_UserExplore_2eproto::scc_info_ExploreEvent.base,
      &protobuf_BaseStruct_2eproto::scc_info_Reward.base,
      &protobuf_UserExplore_2eproto::scc_info_ExploreRecord.base,}};

static void InitDefaultsUserExploreService_UserExploreRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserExploreService_UserExploreRequest_default_instance_;
    new (ptr) ::sg::UserExploreService_UserExploreRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserExploreService_UserExploreRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserExploreService_UserExploreRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserExploreService_UserExploreRequest}, {}};

static void InitDefaultsUserExploreService_UserExploreResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserExploreService_UserExploreResponse_default_instance_;
    new (ptr) ::sg::UserExploreService_UserExploreResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserExploreService_UserExploreResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UserExploreService_UserExploreResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUserExploreService_UserExploreResponse}, {
      &protobuf_UserExplore_2eproto::scc_info_ExploreState.base,
      &protobuf_UserExplore_2eproto::scc_info_ExploreRecord.base,
      &protobuf_UserExplore_2eproto::scc_info_ExploreEvent.base,}};

static void InitDefaultsUserExploreService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserExploreService_default_instance_;
    new (ptr) ::sg::UserExploreService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserExploreService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserExploreService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserExploreService}, {
      &protobuf_UserExplore_2eproto::scc_info_UserExploreService_UserExploreRequest.base,
      &protobuf_UserExplore_2eproto::scc_info_UserExploreService_UserExploreResponse.base,}};

static void InitDefaultsUserExploreActionService_UserExploreRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserExploreActionService_UserExploreRequest_default_instance_;
    new (ptr) ::sg::UserExploreActionService_UserExploreRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserExploreActionService_UserExploreRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserExploreActionService_UserExploreRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserExploreActionService_UserExploreRequest}, {}};

static void InitDefaultsUserExploreActionService_UserExploreResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserExploreActionService_UserExploreResponse_default_instance_;
    new (ptr) ::sg::UserExploreActionService_UserExploreResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserExploreActionService_UserExploreResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UserExploreActionService_UserExploreResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUserExploreActionService_UserExploreResponse}, {
      &protobuf_UserExplore_2eproto::scc_info_ExploreState.base,
      &protobuf_UserExplore_2eproto::scc_info_ExploreStage.base,
      &protobuf_UserExplore_2eproto::scc_info_ActionResult.base,}};

static void InitDefaultsUserExploreActionService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserExploreActionService_default_instance_;
    new (ptr) ::sg::UserExploreActionService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserExploreActionService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserExploreActionService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserExploreActionService}, {
      &protobuf_UserExplore_2eproto::scc_info_UserExploreActionService_UserExploreRequest.base,
      &protobuf_UserExplore_2eproto::scc_info_UserExploreActionService_UserExploreResponse.base,}};

static void InitDefaultsNewEventExist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_NewEventExist_default_instance_;
    new (ptr) ::sg::NewEventExist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::NewEventExist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_NewEventExist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNewEventExist}, {
      &protobuf_UserExplore_2eproto::scc_info_ExploreEvent.base,
      &protobuf_UserExplore_2eproto::scc_info_ExploreRecord.base,}};

static void InitDefaultsEventChangeNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_EventChangeNotify_default_instance_;
    new (ptr) ::sg::EventChangeNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::EventChangeNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventChangeNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventChangeNotify}, {
      &protobuf_UserExplore_2eproto::scc_info_ExploreEvent.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ExploreState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExploreStage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExploreRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExploreEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserExploreService_UserExploreRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserExploreService_UserExploreResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserExploreService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserExploreActionService_UserExploreRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserExploreActionService_UserExploreResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserExploreActionService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NewEventExist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventChangeNotify.base);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreState, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreState, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreState, pos_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreState, pos_y_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreStage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreStage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreStage, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreStage, fog_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreRecord, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreRecord, object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreRecord, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreRecord, timestamp_),
  1,
  4,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, typeid__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, locale_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, locale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, pos_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, pos_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ExploreEvent, deadline_),
  1,
  10,
  2,
  3,
  4,
  5,
  6,
  9,
  0,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ActionResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ActionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ActionResult, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ActionResult, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ActionResult, record_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreRequest, eventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreRequest, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreRequest, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreRequest, distance_),
  3,
  0,
  1,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreResponse, records_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService_UserExploreResponse, events_),
  1,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreRequest, eventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreRequest, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreRequest, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreRequest, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreRequest, stageid_),
  4,
  0,
  1,
  5,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreResponse, stage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService_UserExploreResponse, action_result_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserExploreActionService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::NewEventExist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::NewEventExist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::NewEventExist, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::NewEventExist, record_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::EventChangeNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::EventChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::EventChangeNotify, event_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::sg::ExploreState)},
  { 13, 20, sizeof(::sg::ExploreStage)},
  { 22, 32, sizeof(::sg::ExploreRecord)},
  { 37, 53, sizeof(::sg::ExploreEvent)},
  { 64, 72, sizeof(::sg::ActionResult)},
  { 75, 85, sizeof(::sg::UserExploreService_UserExploreRequest)},
  { 90, 99, sizeof(::sg::UserExploreService_UserExploreResponse)},
  { 103, 110, sizeof(::sg::UserExploreService)},
  { 112, 123, sizeof(::sg::UserExploreActionService_UserExploreRequest)},
  { 129, 138, sizeof(::sg::UserExploreActionService_UserExploreResponse)},
  { 142, 149, sizeof(::sg::UserExploreActionService)},
  { 151, 158, sizeof(::sg::NewEventExist)},
  { 160, 166, sizeof(::sg::EventChangeNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ExploreState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ExploreStage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ExploreRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ExploreEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ActionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserExploreService_UserExploreRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserExploreService_UserExploreResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserExploreService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserExploreActionService_UserExploreRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserExploreActionService_UserExploreResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserExploreActionService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_NewEventExist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_EventChangeNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserExplore.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021UserExplore.proto\022\002sg\032\020BaseStruct.prot"
      "o\"L\n\014ExploreState\022\020\n\010location\030\001 \002(\005\022\014\n\004s"
      "tep\030\002 \002(\005\022\r\n\005pos_x\030\003 \002(\005\022\r\n\005pos_y\030\004 \002(\005\""
      "\'\n\014ExploreStage\022\n\n\002id\030\001 \002(\005\022\013\n\003fog\030\002 \002(\014"
      "\"v\n\rExploreRecord\022\n\n\002id\030\001 \002(\005\022%\n\004type\030\002 "
      "\002(\0162\027.sg.EXPLORE_RECORD_TYPE\022\016\n\006object\030\003"
      " \002(\005\022\017\n\007content\030\004 \002(\014\022\021\n\ttimestamp\030\005 \002(\020"
      "\"\331\001\n\014ExploreEvent\022\n\n\002id\030\001 \002(\005\022&\n\005state\030\002"
      " \002(\0162\027.sg.EXPLORE_EVENT_STATE\022\014\n\004type\030\003 "
      "\002(\005\022\016\n\006typeid\030\004 \002(\005\022\023\n\013locale_type\030\005 \002(\005"
      "\022\016\n\006locale\030\006 \002(\005\022\r\n\005pos_x\030\007 \002(\005\022\r\n\005pos_y"
      "\030\010 \002(\005\022\017\n\007content\030\t \002(\014\022\021\n\ttimestamp\030\n \002"
      "(\020\022\020\n\010deadline\030\013 \002(\020\"n\n\014ActionResult\022\037\n\005"
      "event\030\001 \001(\0132\020.sg.ExploreEvent\022\032\n\006reward\030"
      "\002 \001(\0132\n.sg.Reward\022!\n\006record\030\003 \001(\0132\021.sg.E"
      "xploreRecord\"\321\003\n\022UserExploreService\0226\n\003r"
      "eq\030\001 \001(\0132).sg.UserExploreService.UserExp"
      "loreRequest\0228\n\004resp\030\002 \001(\0132*.sg.UserExplo"
      "reService.UserExploreResponse\032\237\001\n\022UserEx"
      "ploreRequest\022/\n\003cmd\030\001 \002(\0162\".sg.UserExplo"
      "reService.EXPLORE_CMD\022\017\n\007eventid\030\002 \001(\005\022\016"
      "\n\006action\030\003 \001(\005\022%\n\tdirection\030\004 \001(\0162\022.sg.M"
      "OVE_DIRECTION\022\020\n\010distance\030\005 \001(\005\032\214\001\n\023User"
      "ExploreResponse\022\016\n\006result\030\001 \002(\005\022\037\n\005state"
      "\030\002 \001(\0132\020.sg.ExploreState\022\"\n\007records\030\004 \003("
      "\0132\021.sg.ExploreRecord\022 \n\006events\030\005 \003(\0132\020.s"
      "g.ExploreEvent\"\030\n\013EXPLORE_CMD\022\t\n\005QUERY\020\001"
      "\"\235\004\n\030UserExploreActionService\022<\n\003req\030\001 \001"
      "(\0132/.sg.UserExploreActionService.UserExp"
      "loreRequest\022>\n\004resp\030\002 \001(\01320.sg.UserExplo"
      "reActionService.UserExploreResponse\032\266\001\n\022"
      "UserExploreRequest\0225\n\003cmd\030\001 \002(\0162(.sg.Use"
      "rExploreActionService.EXPLORE_CMD\022\017\n\007eve"
      "ntid\030\002 \001(\005\022\016\n\006action\030\003 \001(\005\022%\n\tdirection\030"
      "\004 \001(\0162\022.sg.MOVE_DIRECTION\022\020\n\010distance\030\005 "
      "\001(\005\022\017\n\007stageid\030\006 \001(\005\032\220\001\n\023UserExploreResp"
      "onse\022\016\n\006result\030\001 \002(\005\022\037\n\005state\030\002 \001(\0132\020.sg"
      ".ExploreState\022\037\n\005stage\030\003 \001(\0132\020.sg.Explor"
      "eStage\022\'\n\raction_result\030\006 \001(\0132\020.sg.Actio"
      "nResult\"7\n\013EXPLORE_CMD\022\t\n\005ENTER\020\001\022\010\n\004MOV"
      "E\020\002\022\023\n\017ATTEND_TO_EVENT\020\003\"S\n\rNewEventExis"
      "t\022\037\n\005event\030\001 \002(\0132\020.sg.ExploreEvent\022!\n\006re"
      "cord\030\003 \002(\0132\021.sg.ExploreRecord\"4\n\021EventCh"
      "angeNotify\022\037\n\005event\030\001 \002(\0132\020.sg.ExploreEv"
      "ent*[\n\023EXPLORE_RECORD_TYPE\022%\n!EXPLORE_RE"
      "CORD_TYPE_NORMAL_BATTLE\020\001\022\035\n\031EXPLORE_REC"
      "ORD_TYPE_EVENT\020\002*U\n\023EXPLORE_EVENT_STATE\022"
      "\035\n\031EXPLORE_EVENT_STATE_ALIVE\020\001\022\037\n\033EXPLOR"
      "E_EVENT_STATE_INVAILD\020\002*R\n\023EXPLORE_LOCAL"
      "E_TYPE\022\034\n\030EXPLORE_LOCALE_TYPE_LAND\020\001\022\035\n\031"
      "EXPLORE_LOCALE_TYPE_OCEAN\020\002*\244\002\n\016MOVE_DIR"
      "ECTION\022\025\n\021MOVE_DIRECTION_UP\020\001\022\027\n\023MOVE_DI"
      "RECTION_DOWN\020\002\022\027\n\023MOVE_DIRECTION_LEFT\020\003\022"
      "\030\n\024MOVE_DIRECTION_RIGHT\020\004\022\032\n\026MOVE_DIRECT"
      "ION_LEFT_UP\020\005\022\034\n\030MOVE_DIRECTION_LEFT_DOW"
      "N\020\006\022\033\n\027MOVE_DIRECTION_RIGHT_UP\020\007\022\035\n\031MOVE"
      "_DIRECTION_RIGHT_DOWN\020\010\022\032\n\026MOVE_DIRECTIO"
      "N_UP_DOWN\020\t\022\035\n\031MOVE_DIRECTION_LEFT_RIGHT"
      "\020\nB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2327);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserExplore.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserExplore_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserExploreService_EXPLORE_CMD_descriptor() {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserExplore_2eproto::file_level_enum_descriptors[0];
}
bool UserExploreService_EXPLORE_CMD_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserExploreService_EXPLORE_CMD UserExploreService::QUERY;
const UserExploreService_EXPLORE_CMD UserExploreService::EXPLORE_CMD_MIN;
const UserExploreService_EXPLORE_CMD UserExploreService::EXPLORE_CMD_MAX;
const int UserExploreService::EXPLORE_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserExploreActionService_EXPLORE_CMD_descriptor() {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserExplore_2eproto::file_level_enum_descriptors[1];
}
bool UserExploreActionService_EXPLORE_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserExploreActionService_EXPLORE_CMD UserExploreActionService::ENTER;
const UserExploreActionService_EXPLORE_CMD UserExploreActionService::MOVE;
const UserExploreActionService_EXPLORE_CMD UserExploreActionService::ATTEND_TO_EVENT;
const UserExploreActionService_EXPLORE_CMD UserExploreActionService::EXPLORE_CMD_MIN;
const UserExploreActionService_EXPLORE_CMD UserExploreActionService::EXPLORE_CMD_MAX;
const int UserExploreActionService::EXPLORE_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EXPLORE_RECORD_TYPE_descriptor() {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserExplore_2eproto::file_level_enum_descriptors[2];
}
bool EXPLORE_RECORD_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EXPLORE_EVENT_STATE_descriptor() {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserExplore_2eproto::file_level_enum_descriptors[3];
}
bool EXPLORE_EVENT_STATE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EXPLORE_LOCALE_TYPE_descriptor() {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserExplore_2eproto::file_level_enum_descriptors[4];
}
bool EXPLORE_LOCALE_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MOVE_DIRECTION_descriptor() {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserExplore_2eproto::file_level_enum_descriptors[5];
}
bool MOVE_DIRECTION_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ExploreState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExploreState::kLocationFieldNumber;
const int ExploreState::kStepFieldNumber;
const int ExploreState::kPosXFieldNumber;
const int ExploreState::kPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExploreState::ExploreState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_ExploreState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ExploreState)
}
ExploreState::ExploreState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ExploreState.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ExploreState)
}
ExploreState::ExploreState(const ExploreState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&location_, &from.location_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_y_) -
    reinterpret_cast<char*>(&location_)) + sizeof(pos_y_));
  // @@protoc_insertion_point(copy_constructor:sg.ExploreState)
}

void ExploreState::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_y_) -
      reinterpret_cast<char*>(&location_)) + sizeof(pos_y_));
}

ExploreState::~ExploreState() {
  // @@protoc_insertion_point(destructor:sg.ExploreState)
  SharedDtor();
}

void ExploreState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ExploreState::ArenaDtor(void* object) {
  ExploreState* _this = reinterpret_cast< ExploreState* >(object);
  (void)_this;
}
void ExploreState::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ExploreState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExploreState::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExploreState& ExploreState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ExploreState.base);
  return *internal_default_instance();
}


void ExploreState::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ExploreState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&location_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pos_y_) -
        reinterpret_cast<char*>(&location_)) + sizeof(pos_y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExploreState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ExploreState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_location();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 step = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_step();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 pos_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 pos_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pos_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ExploreState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ExploreState)
  return false;
#undef DO_
}

void ExploreState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ExploreState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 location = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->location(), output);
  }

  // required int32 step = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->step(), output);
  }

  // required int32 pos_x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // required int32 pos_y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ExploreState)
}

::google::protobuf::uint8* ExploreState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ExploreState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->location(), target);
  }

  // required int32 step = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->step(), target);
  }

  // required int32 pos_x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // required int32 pos_y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ExploreState)
  return target;
}

size_t ExploreState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.ExploreState)
  size_t total_size = 0;

  if (has_location()) {
    // required int32 location = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->location());
  }

  if (has_step()) {
    // required int32 step = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step());
  }

  if (has_pos_x()) {
    // required int32 pos_x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_x());
  }

  if (has_pos_y()) {
    // required int32 pos_y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_y());
  }

  return total_size;
}
size_t ExploreState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ExploreState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 location = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->location());

    // required int32 step = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->step());

    // required int32 pos_x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_x());

    // required int32 pos_y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExploreState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ExploreState)
  GOOGLE_DCHECK_NE(&from, this);
  const ExploreState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExploreState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ExploreState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ExploreState)
    MergeFrom(*source);
  }
}

void ExploreState::MergeFrom(const ExploreState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ExploreState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      location_ = from.location_;
    }
    if (cached_has_bits & 0x00000002u) {
      step_ = from.step_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_x_ = from.pos_x_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_y_ = from.pos_y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExploreState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ExploreState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExploreState::CopyFrom(const ExploreState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ExploreState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExploreState::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ExploreState::Swap(ExploreState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ExploreState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ExploreState::UnsafeArenaSwap(ExploreState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ExploreState::InternalSwap(ExploreState* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(step_, other->step_);
  swap(pos_x_, other->pos_x_);
  swap(pos_y_, other->pos_y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExploreState::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExploreStage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExploreStage::kIdFieldNumber;
const int ExploreStage::kFogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExploreStage::ExploreStage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_ExploreStage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ExploreStage)
}
ExploreStage::ExploreStage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ExploreStage.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ExploreStage)
}
ExploreStage::ExploreStage(const ExploreStage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fog_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fog()) {
    fog_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fog(),
      GetArenaNoVirtual());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:sg.ExploreStage)
}

void ExploreStage::SharedCtor() {
  fog_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

ExploreStage::~ExploreStage() {
  // @@protoc_insertion_point(destructor:sg.ExploreStage)
  SharedDtor();
}

void ExploreStage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  fog_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExploreStage::ArenaDtor(void* object) {
  ExploreStage* _this = reinterpret_cast< ExploreStage* >(object);
  (void)_this;
}
void ExploreStage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ExploreStage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExploreStage::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExploreStage& ExploreStage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ExploreStage.base);
  return *internal_default_instance();
}


void ExploreStage::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ExploreStage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    fog_.ClearNonDefaultToEmpty();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExploreStage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ExploreStage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes fog = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fog()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ExploreStage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ExploreStage)
  return false;
#undef DO_
}

void ExploreStage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ExploreStage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bytes fog = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->fog(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ExploreStage)
}

::google::protobuf::uint8* ExploreStage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ExploreStage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bytes fog = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->fog(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ExploreStage)
  return target;
}

size_t ExploreStage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.ExploreStage)
  size_t total_size = 0;

  if (has_fog()) {
    // required bytes fog = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->fog());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t ExploreStage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ExploreStage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes fog = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->fog());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExploreStage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ExploreStage)
  GOOGLE_DCHECK_NE(&from, this);
  const ExploreStage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExploreStage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ExploreStage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ExploreStage)
    MergeFrom(*source);
  }
}

void ExploreStage::MergeFrom(const ExploreStage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ExploreStage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_fog(from.fog());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExploreStage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ExploreStage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExploreStage::CopyFrom(const ExploreStage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ExploreStage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExploreStage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ExploreStage::Swap(ExploreStage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ExploreStage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ExploreStage::UnsafeArenaSwap(ExploreStage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ExploreStage::InternalSwap(ExploreStage* other) {
  using std::swap;
  fog_.Swap(&other->fog_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExploreStage::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExploreRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExploreRecord::kIdFieldNumber;
const int ExploreRecord::kTypeFieldNumber;
const int ExploreRecord::kObjectFieldNumber;
const int ExploreRecord::kContentFieldNumber;
const int ExploreRecord::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExploreRecord::ExploreRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_ExploreRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ExploreRecord)
}
ExploreRecord::ExploreRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ExploreRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ExploreRecord)
}
ExploreRecord::ExploreRecord(const ExploreRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:sg.ExploreRecord)
}

void ExploreRecord::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&id_)) + sizeof(timestamp_));
  type_ = 1;
}

ExploreRecord::~ExploreRecord() {
  // @@protoc_insertion_point(destructor:sg.ExploreRecord)
  SharedDtor();
}

void ExploreRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExploreRecord::ArenaDtor(void* object) {
  ExploreRecord* _this = reinterpret_cast< ExploreRecord* >(object);
  (void)_this;
}
void ExploreRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ExploreRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExploreRecord::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExploreRecord& ExploreRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ExploreRecord.base);
  return *internal_default_instance();
}


void ExploreRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ExploreRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    content_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 30u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&id_)) + sizeof(timestamp_));
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExploreRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ExploreRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .sg.EXPLORE_RECORD_TYPE type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::EXPLORE_RECORD_TYPE_IsValid(value)) {
            set_type(static_cast< ::sg::EXPLORE_RECORD_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 object = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_object();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &object_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ExploreRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ExploreRecord)
  return false;
#undef DO_
}

void ExploreRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ExploreRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .sg.EXPLORE_RECORD_TYPE type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required int32 object = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->object(), output);
  }

  // required bytes content = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  // required sfixed64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(5, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ExploreRecord)
}

::google::protobuf::uint8* ExploreRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ExploreRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .sg.EXPLORE_RECORD_TYPE type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required int32 object = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->object(), target);
  }

  // required bytes content = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  // required sfixed64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(5, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ExploreRecord)
  return target;
}

size_t ExploreRecord::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.ExploreRecord)
  size_t total_size = 0;

  if (has_content()) {
    // required bytes content = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_object()) {
    // required int32 object = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->object());
  }

  if (has_timestamp()) {
    // required sfixed64 timestamp = 5;
    total_size += 1 + 8;
  }

  if (has_type()) {
    // required .sg.EXPLORE_RECORD_TYPE type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t ExploreRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ExploreRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes content = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 object = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->object());

    // required sfixed64 timestamp = 5;
    total_size += 1 + 8;

    // required .sg.EXPLORE_RECORD_TYPE type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExploreRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ExploreRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const ExploreRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExploreRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ExploreRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ExploreRecord)
    MergeFrom(*source);
  }
}

void ExploreRecord::MergeFrom(const ExploreRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ExploreRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_content(from.content());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      object_ = from.object_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExploreRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ExploreRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExploreRecord::CopyFrom(const ExploreRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ExploreRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExploreRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void ExploreRecord::Swap(ExploreRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ExploreRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ExploreRecord::UnsafeArenaSwap(ExploreRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ExploreRecord::InternalSwap(ExploreRecord* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(object_, other->object_);
  swap(timestamp_, other->timestamp_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExploreRecord::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExploreEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExploreEvent::kIdFieldNumber;
const int ExploreEvent::kStateFieldNumber;
const int ExploreEvent::kTypeFieldNumber;
const int ExploreEvent::kTypeidFieldNumber;
const int ExploreEvent::kLocaleTypeFieldNumber;
const int ExploreEvent::kLocaleFieldNumber;
const int ExploreEvent::kPosXFieldNumber;
const int ExploreEvent::kPosYFieldNumber;
const int ExploreEvent::kContentFieldNumber;
const int ExploreEvent::kTimestampFieldNumber;
const int ExploreEvent::kDeadlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExploreEvent::ExploreEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_ExploreEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ExploreEvent)
}
ExploreEvent::ExploreEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ExploreEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ExploreEvent)
}
ExploreEvent::ExploreEvent(const ExploreEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:sg.ExploreEvent)
}

void ExploreEvent::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_y_) -
      reinterpret_cast<char*>(&id_)) + sizeof(pos_y_));
  state_ = 1;
}

ExploreEvent::~ExploreEvent() {
  // @@protoc_insertion_point(destructor:sg.ExploreEvent)
  SharedDtor();
}

void ExploreEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExploreEvent::ArenaDtor(void* object) {
  ExploreEvent* _this = reinterpret_cast< ExploreEvent* >(object);
  (void)_this;
}
void ExploreEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ExploreEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExploreEvent::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExploreEvent& ExploreEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ExploreEvent.base);
  return *internal_default_instance();
}


void ExploreEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ExploreEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    content_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 254u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&id_)) + sizeof(timestamp_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&deadline_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pos_y_) -
        reinterpret_cast<char*>(&deadline_)) + sizeof(pos_y_));
    state_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExploreEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ExploreEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .sg.EXPLORE_EVENT_STATE state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::EXPLORE_EVENT_STATE_IsValid(value)) {
            set_state(static_cast< ::sg::EXPLORE_EVENT_STATE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 typeid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_typeid_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typeid__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 locale_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_locale_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &locale_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 locale = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_locale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &locale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 pos_x = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_pos_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 pos_y = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_pos_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes content = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 timestamp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 deadline = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_deadline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &deadline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ExploreEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ExploreEvent)
  return false;
#undef DO_
}

void ExploreEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ExploreEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .sg.EXPLORE_EVENT_STATE state = 2;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // required int32 type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // required int32 typeid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->typeid_(), output);
  }

  // required int32 locale_type = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->locale_type(), output);
  }

  // required int32 locale = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->locale(), output);
  }

  // required int32 pos_x = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->pos_x(), output);
  }

  // required int32 pos_y = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->pos_y(), output);
  }

  // required bytes content = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->content(), output);
  }

  // required sfixed64 timestamp = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->timestamp(), output);
  }

  // required sfixed64 deadline = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(11, this->deadline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ExploreEvent)
}

::google::protobuf::uint8* ExploreEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ExploreEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .sg.EXPLORE_EVENT_STATE state = 2;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // required int32 type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // required int32 typeid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->typeid_(), target);
  }

  // required int32 locale_type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->locale_type(), target);
  }

  // required int32 locale = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->locale(), target);
  }

  // required int32 pos_x = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->pos_x(), target);
  }

  // required int32 pos_y = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->pos_y(), target);
  }

  // required bytes content = 9;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->content(), target);
  }

  // required sfixed64 timestamp = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->timestamp(), target);
  }

  // required sfixed64 deadline = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(11, this->deadline(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ExploreEvent)
  return target;
}

size_t ExploreEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.ExploreEvent)
  size_t total_size = 0;

  if (has_content()) {
    // required bytes content = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_typeid_()) {
    // required int32 typeid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typeid_());
  }

  if (has_locale_type()) {
    // required int32 locale_type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locale_type());
  }

  if (has_locale()) {
    // required int32 locale = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locale());
  }

  if (has_pos_x()) {
    // required int32 pos_x = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_x());
  }

  if (has_timestamp()) {
    // required sfixed64 timestamp = 10;
    total_size += 1 + 8;
  }

  if (has_deadline()) {
    // required sfixed64 deadline = 11;
    total_size += 1 + 8;
  }

  if (has_pos_y()) {
    // required int32 pos_y = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_y());
  }

  if (has_state()) {
    // required .sg.EXPLORE_EVENT_STATE state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  return total_size;
}
size_t ExploreEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ExploreEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required bytes content = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required int32 typeid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typeid_());

    // required int32 locale_type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locale_type());

    // required int32 locale = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locale());

    // required int32 pos_x = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_x());

    // required sfixed64 timestamp = 10;
    total_size += 1 + 8;

    // required sfixed64 deadline = 11;
    total_size += 1 + 8;

    // required int32 pos_y = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_y());

    // required .sg.EXPLORE_EVENT_STATE state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExploreEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ExploreEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ExploreEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExploreEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ExploreEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ExploreEvent)
    MergeFrom(*source);
  }
}

void ExploreEvent::MergeFrom(const ExploreEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ExploreEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_content(from.content());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      typeid__ = from.typeid__;
    }
    if (cached_has_bits & 0x00000010u) {
      locale_type_ = from.locale_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      locale_ = from.locale_;
    }
    if (cached_has_bits & 0x00000040u) {
      pos_x_ = from.pos_x_;
    }
    if (cached_has_bits & 0x00000080u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      deadline_ = from.deadline_;
    }
    if (cached_has_bits & 0x00000200u) {
      pos_y_ = from.pos_y_;
    }
    if (cached_has_bits & 0x00000400u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExploreEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ExploreEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExploreEvent::CopyFrom(const ExploreEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ExploreEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExploreEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;
  return true;
}

void ExploreEvent::Swap(ExploreEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ExploreEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ExploreEvent::UnsafeArenaSwap(ExploreEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ExploreEvent::InternalSwap(ExploreEvent* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(typeid__, other->typeid__);
  swap(locale_type_, other->locale_type_);
  swap(locale_, other->locale_);
  swap(pos_x_, other->pos_x_);
  swap(timestamp_, other->timestamp_);
  swap(deadline_, other->deadline_);
  swap(pos_y_, other->pos_y_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExploreEvent::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionResult::InitAsDefaultInstance() {
  ::sg::_ActionResult_default_instance_._instance.get_mutable()->event_ = const_cast< ::sg::ExploreEvent*>(
      ::sg::ExploreEvent::internal_default_instance());
  ::sg::_ActionResult_default_instance_._instance.get_mutable()->reward_ = const_cast< ::sg::Reward*>(
      ::sg::Reward::internal_default_instance());
  ::sg::_ActionResult_default_instance_._instance.get_mutable()->record_ = const_cast< ::sg::ExploreRecord*>(
      ::sg::ExploreRecord::internal_default_instance());
}
void ActionResult::unsafe_arena_set_allocated_event(
    ::sg::ExploreEvent* event) {
  if (GetArenaNoVirtual() == NULL) {
    delete event_;
  }
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ActionResult.event)
}
void ActionResult::unsafe_arena_set_allocated_reward(
    ::sg::Reward* reward) {
  if (GetArenaNoVirtual() == NULL) {
    delete reward_;
  }
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ActionResult.reward)
}
void ActionResult::clear_reward() {
  if (reward_ != NULL) reward_->Clear();
  clear_has_reward();
}
void ActionResult::unsafe_arena_set_allocated_record(
    ::sg::ExploreRecord* record) {
  if (GetArenaNoVirtual() == NULL) {
    delete record_;
  }
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ActionResult.record)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionResult::kEventFieldNumber;
const int ActionResult::kRewardFieldNumber;
const int ActionResult::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionResult::ActionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_ActionResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ActionResult)
}
ActionResult::ActionResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ActionResult.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ActionResult)
}
ActionResult::ActionResult(const ActionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::sg::ExploreEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  if (from.has_reward()) {
    reward_ = new ::sg::Reward(*from.reward_);
  } else {
    reward_ = NULL;
  }
  if (from.has_record()) {
    record_ = new ::sg::ExploreRecord(*from.record_);
  } else {
    record_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.ActionResult)
}

void ActionResult::SharedCtor() {
  ::memset(&event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&record_) -
      reinterpret_cast<char*>(&event_)) + sizeof(record_));
}

ActionResult::~ActionResult() {
  // @@protoc_insertion_point(destructor:sg.ActionResult)
  SharedDtor();
}

void ActionResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete event_;
  if (this != internal_default_instance()) delete reward_;
  if (this != internal_default_instance()) delete record_;
}

void ActionResult::ArenaDtor(void* object) {
  ActionResult* _this = reinterpret_cast< ActionResult* >(object);
  (void)_this;
}
void ActionResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ActionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionResult::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionResult& ActionResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_ActionResult.base);
  return *internal_default_instance();
}


void ActionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ActionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(event_ != NULL);
      event_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(reward_ != NULL);
      reward_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(record_ != NULL);
      record_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ActionResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.ExploreEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Reward reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.ExploreRecord record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ActionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ActionResult)
  return false;
#undef DO_
}

void ActionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ActionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.ExploreEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_event(), output);
  }

  // optional .sg.Reward reward = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reward(), output);
  }

  // optional .sg.ExploreRecord record = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_record(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ActionResult)
}

::google::protobuf::uint8* ActionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ActionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.ExploreEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_event(), deterministic, target);
  }

  // optional .sg.Reward reward = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reward(), deterministic, target);
  }

  // optional .sg.ExploreRecord record = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_record(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ActionResult)
  return target;
}

size_t ActionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ActionResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .sg.ExploreEvent event = 1;
    if (has_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *event_);
    }

    // optional .sg.Reward reward = 2;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reward_);
    }

    // optional .sg.ExploreRecord record = 3;
    if (has_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *record_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ActionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ActionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ActionResult)
    MergeFrom(*source);
  }
}

void ActionResult::MergeFrom(const ActionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ActionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_event()->::sg::ExploreEvent::MergeFrom(from.event());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_reward()->::sg::Reward::MergeFrom(from.reward());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_record()->::sg::ExploreRecord::MergeFrom(from.record());
    }
  }
}

void ActionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ActionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionResult::CopyFrom(const ActionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ActionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionResult::IsInitialized() const {
  if (has_event()) {
    if (!this->event_->IsInitialized()) return false;
  }
  if (has_reward()) {
    if (!this->reward_->IsInitialized()) return false;
  }
  if (has_record()) {
    if (!this->record_->IsInitialized()) return false;
  }
  return true;
}

void ActionResult::Swap(ActionResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ActionResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ActionResult::UnsafeArenaSwap(ActionResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ActionResult::InternalSwap(ActionResult* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(reward_, other->reward_);
  swap(record_, other->record_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionResult::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserExploreService_UserExploreRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserExploreService_UserExploreRequest::kCmdFieldNumber;
const int UserExploreService_UserExploreRequest::kEventidFieldNumber;
const int UserExploreService_UserExploreRequest::kActionFieldNumber;
const int UserExploreService_UserExploreRequest::kDirectionFieldNumber;
const int UserExploreService_UserExploreRequest::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserExploreService_UserExploreRequest::UserExploreService_UserExploreRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_UserExploreService_UserExploreRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserExploreService.UserExploreRequest)
}
UserExploreService_UserExploreRequest::UserExploreService_UserExploreRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreService_UserExploreRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserExploreService.UserExploreRequest)
}
UserExploreService_UserExploreRequest::UserExploreService_UserExploreRequest(const UserExploreService_UserExploreRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eventid_, &from.eventid_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&eventid_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:sg.UserExploreService.UserExploreRequest)
}

void UserExploreService_UserExploreRequest::SharedCtor() {
  ::memset(&eventid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&eventid_)) + sizeof(distance_));
  cmd_ = 1;
  direction_ = 1;
}

UserExploreService_UserExploreRequest::~UserExploreService_UserExploreRequest() {
  // @@protoc_insertion_point(destructor:sg.UserExploreService.UserExploreRequest)
  SharedDtor();
}

void UserExploreService_UserExploreRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserExploreService_UserExploreRequest::ArenaDtor(void* object) {
  UserExploreService_UserExploreRequest* _this = reinterpret_cast< UserExploreService_UserExploreRequest* >(object);
  (void)_this;
}
void UserExploreService_UserExploreRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserExploreService_UserExploreRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserExploreService_UserExploreRequest::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserExploreService_UserExploreRequest& UserExploreService_UserExploreRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreService_UserExploreRequest.base);
  return *internal_default_instance();
}


void UserExploreService_UserExploreRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserExploreService.UserExploreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&eventid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&distance_) -
        reinterpret_cast<char*>(&eventid_)) + sizeof(distance_));
    cmd_ = 1;
    direction_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserExploreService_UserExploreRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserExploreService.UserExploreRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserExploreService.EXPLORE_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserExploreService_EXPLORE_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserExploreService_EXPLORE_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eventid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eventid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.MOVE_DIRECTION direction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::MOVE_DIRECTION_IsValid(value)) {
            set_direction(static_cast< ::sg::MOVE_DIRECTION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 distance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserExploreService.UserExploreRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserExploreService.UserExploreRequest)
  return false;
#undef DO_
}

void UserExploreService_UserExploreRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserExploreService.UserExploreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserExploreService.EXPLORE_CMD cmd = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eventid(), output);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  // optional .sg.MOVE_DIRECTION direction = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->direction(), output);
  }

  // optional int32 distance = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserExploreService.UserExploreRequest)
}

::google::protobuf::uint8* UserExploreService_UserExploreRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserExploreService.UserExploreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserExploreService.EXPLORE_CMD cmd = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eventid(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  // optional .sg.MOVE_DIRECTION direction = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->direction(), target);
  }

  // optional int32 distance = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserExploreService.UserExploreRequest)
  return target;
}

size_t UserExploreService_UserExploreRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserExploreService.UserExploreRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserExploreService.EXPLORE_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 eventid = 2;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eventid());
    }

    // optional int32 action = 3;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

    // optional int32 distance = 5;
    if (has_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->distance());
    }

  }
  // optional .sg.MOVE_DIRECTION direction = 4;
  if (has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserExploreService_UserExploreRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserExploreService.UserExploreRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserExploreService_UserExploreRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserExploreService_UserExploreRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserExploreService.UserExploreRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserExploreService.UserExploreRequest)
    MergeFrom(*source);
  }
}

void UserExploreService_UserExploreRequest::MergeFrom(const UserExploreService_UserExploreRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserExploreService.UserExploreRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      eventid_ = from.eventid_;
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    if (cached_has_bits & 0x00000004u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000008u) {
      cmd_ = from.cmd_;
    }
    if (cached_has_bits & 0x00000010u) {
      direction_ = from.direction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserExploreService_UserExploreRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserExploreService.UserExploreRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserExploreService_UserExploreRequest::CopyFrom(const UserExploreService_UserExploreRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserExploreService.UserExploreRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserExploreService_UserExploreRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void UserExploreService_UserExploreRequest::Swap(UserExploreService_UserExploreRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserExploreService_UserExploreRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserExploreService_UserExploreRequest::UnsafeArenaSwap(UserExploreService_UserExploreRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserExploreService_UserExploreRequest::InternalSwap(UserExploreService_UserExploreRequest* other) {
  using std::swap;
  swap(eventid_, other->eventid_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(cmd_, other->cmd_);
  swap(direction_, other->direction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserExploreService_UserExploreRequest::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserExploreService_UserExploreResponse::InitAsDefaultInstance() {
  ::sg::_UserExploreService_UserExploreResponse_default_instance_._instance.get_mutable()->state_ = const_cast< ::sg::ExploreState*>(
      ::sg::ExploreState::internal_default_instance());
}
void UserExploreService_UserExploreResponse::unsafe_arena_set_allocated_state(
    ::sg::ExploreState* state) {
  if (GetArenaNoVirtual() == NULL) {
    delete state_;
  }
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserExploreService.UserExploreResponse.state)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserExploreService_UserExploreResponse::kResultFieldNumber;
const int UserExploreService_UserExploreResponse::kStateFieldNumber;
const int UserExploreService_UserExploreResponse::kRecordsFieldNumber;
const int UserExploreService_UserExploreResponse::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserExploreService_UserExploreResponse::UserExploreService_UserExploreResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_UserExploreService_UserExploreResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserExploreService.UserExploreResponse)
}
UserExploreService_UserExploreResponse::UserExploreService_UserExploreResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  records_(arena),
  events_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreService_UserExploreResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserExploreService.UserExploreResponse)
}
UserExploreService_UserExploreResponse::UserExploreService_UserExploreResponse(const UserExploreService_UserExploreResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      records_(from.records_),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::sg::ExploreState(*from.state_);
  } else {
    state_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserExploreService.UserExploreResponse)
}

void UserExploreService_UserExploreResponse::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&state_)) + sizeof(result_));
}

UserExploreService_UserExploreResponse::~UserExploreService_UserExploreResponse() {
  // @@protoc_insertion_point(destructor:sg.UserExploreService.UserExploreResponse)
  SharedDtor();
}

void UserExploreService_UserExploreResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete state_;
}

void UserExploreService_UserExploreResponse::ArenaDtor(void* object) {
  UserExploreService_UserExploreResponse* _this = reinterpret_cast< UserExploreService_UserExploreResponse* >(object);
  (void)_this;
}
void UserExploreService_UserExploreResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserExploreService_UserExploreResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserExploreService_UserExploreResponse::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserExploreService_UserExploreResponse& UserExploreService_UserExploreResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreService_UserExploreResponse.base);
  return *internal_default_instance();
}


void UserExploreService_UserExploreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserExploreService.UserExploreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  records_.Clear();
  events_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(state_ != NULL);
    state_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserExploreService_UserExploreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserExploreService.UserExploreResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.ExploreState state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.ExploreRecord records = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.ExploreEvent events = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserExploreService.UserExploreResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserExploreService.UserExploreResponse)
  return false;
#undef DO_
}

void UserExploreService_UserExploreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserExploreService.UserExploreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .sg.ExploreState state = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_state(), output);
  }

  // repeated .sg.ExploreRecord records = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->records(static_cast<int>(i)),
      output);
  }

  // repeated .sg.ExploreEvent events = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->events(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserExploreService.UserExploreResponse)
}

::google::protobuf::uint8* UserExploreService_UserExploreResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserExploreService.UserExploreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .sg.ExploreState state = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_state(), deterministic, target);
  }

  // repeated .sg.ExploreRecord records = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->records(static_cast<int>(i)), deterministic, target);
  }

  // repeated .sg.ExploreEvent events = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->events(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserExploreService.UserExploreResponse)
  return target;
}

size_t UserExploreService_UserExploreResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserExploreService.UserExploreResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.ExploreRecord records = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->records(static_cast<int>(i)));
    }
  }

  // repeated .sg.ExploreEvent events = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // optional .sg.ExploreState state = 2;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserExploreService_UserExploreResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserExploreService.UserExploreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserExploreService_UserExploreResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserExploreService_UserExploreResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserExploreService.UserExploreResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserExploreService.UserExploreResponse)
    MergeFrom(*source);
  }
}

void UserExploreService_UserExploreResponse::MergeFrom(const UserExploreService_UserExploreResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserExploreService.UserExploreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  records_.MergeFrom(from.records_);
  events_.MergeFrom(from.events_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_state()->::sg::ExploreState::MergeFrom(from.state());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserExploreService_UserExploreResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserExploreService.UserExploreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserExploreService_UserExploreResponse::CopyFrom(const UserExploreService_UserExploreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserExploreService.UserExploreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserExploreService_UserExploreResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->records())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->events())) return false;
  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  return true;
}

void UserExploreService_UserExploreResponse::Swap(UserExploreService_UserExploreResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserExploreService_UserExploreResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserExploreService_UserExploreResponse::UnsafeArenaSwap(UserExploreService_UserExploreResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserExploreService_UserExploreResponse::InternalSwap(UserExploreService_UserExploreResponse* other) {
  using std::swap;
  CastToBase(&records_)->InternalSwap(CastToBase(&other->records_));
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  swap(state_, other->state_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserExploreService_UserExploreResponse::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserExploreService::InitAsDefaultInstance() {
  ::sg::_UserExploreService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserExploreService_UserExploreRequest*>(
      ::sg::UserExploreService_UserExploreRequest::internal_default_instance());
  ::sg::_UserExploreService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserExploreService_UserExploreResponse*>(
      ::sg::UserExploreService_UserExploreResponse::internal_default_instance());
}
void UserExploreService::unsafe_arena_set_allocated_req(
    ::sg::UserExploreService_UserExploreRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserExploreService.req)
}
void UserExploreService::unsafe_arena_set_allocated_resp(
    ::sg::UserExploreService_UserExploreResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserExploreService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserExploreService::kReqFieldNumber;
const int UserExploreService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserExploreService::UserExploreService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_UserExploreService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserExploreService)
}
UserExploreService::UserExploreService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserExploreService)
}
UserExploreService::UserExploreService(const UserExploreService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserExploreService_UserExploreRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserExploreService_UserExploreResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserExploreService)
}

void UserExploreService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserExploreService::~UserExploreService() {
  // @@protoc_insertion_point(destructor:sg.UserExploreService)
  SharedDtor();
}

void UserExploreService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserExploreService::ArenaDtor(void* object) {
  UserExploreService* _this = reinterpret_cast< UserExploreService* >(object);
  (void)_this;
}
void UserExploreService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserExploreService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserExploreService::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserExploreService& UserExploreService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreService.base);
  return *internal_default_instance();
}


void UserExploreService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserExploreService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserExploreService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserExploreService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserExploreService.UserExploreRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserExploreService.UserExploreResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserExploreService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserExploreService)
  return false;
#undef DO_
}

void UserExploreService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserExploreService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserExploreService.UserExploreRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserExploreService.UserExploreResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserExploreService)
}

::google::protobuf::uint8* UserExploreService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserExploreService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserExploreService.UserExploreRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserExploreService.UserExploreResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserExploreService)
  return target;
}

size_t UserExploreService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserExploreService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserExploreService.UserExploreRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserExploreService.UserExploreResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserExploreService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserExploreService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserExploreService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserExploreService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserExploreService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserExploreService)
    MergeFrom(*source);
  }
}

void UserExploreService::MergeFrom(const UserExploreService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserExploreService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserExploreService_UserExploreRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserExploreService_UserExploreResponse::MergeFrom(from.resp());
    }
  }
}

void UserExploreService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserExploreService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserExploreService::CopyFrom(const UserExploreService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserExploreService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserExploreService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserExploreService::Swap(UserExploreService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserExploreService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserExploreService::UnsafeArenaSwap(UserExploreService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserExploreService::InternalSwap(UserExploreService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserExploreService::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserExploreActionService_UserExploreRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserExploreActionService_UserExploreRequest::kCmdFieldNumber;
const int UserExploreActionService_UserExploreRequest::kEventidFieldNumber;
const int UserExploreActionService_UserExploreRequest::kActionFieldNumber;
const int UserExploreActionService_UserExploreRequest::kDirectionFieldNumber;
const int UserExploreActionService_UserExploreRequest::kDistanceFieldNumber;
const int UserExploreActionService_UserExploreRequest::kStageidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserExploreActionService_UserExploreRequest::UserExploreActionService_UserExploreRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_UserExploreActionService_UserExploreRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserExploreActionService.UserExploreRequest)
}
UserExploreActionService_UserExploreRequest::UserExploreActionService_UserExploreRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreActionService_UserExploreRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserExploreActionService.UserExploreRequest)
}
UserExploreActionService_UserExploreRequest::UserExploreActionService_UserExploreRequest(const UserExploreActionService_UserExploreRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eventid_, &from.eventid_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&eventid_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:sg.UserExploreActionService.UserExploreRequest)
}

void UserExploreActionService_UserExploreRequest::SharedCtor() {
  ::memset(&eventid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stageid_) -
      reinterpret_cast<char*>(&eventid_)) + sizeof(stageid_));
  cmd_ = 1;
  direction_ = 1;
}

UserExploreActionService_UserExploreRequest::~UserExploreActionService_UserExploreRequest() {
  // @@protoc_insertion_point(destructor:sg.UserExploreActionService.UserExploreRequest)
  SharedDtor();
}

void UserExploreActionService_UserExploreRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserExploreActionService_UserExploreRequest::ArenaDtor(void* object) {
  UserExploreActionService_UserExploreRequest* _this = reinterpret_cast< UserExploreActionService_UserExploreRequest* >(object);
  (void)_this;
}
void UserExploreActionService_UserExploreRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserExploreActionService_UserExploreRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserExploreActionService_UserExploreRequest::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserExploreActionService_UserExploreRequest& UserExploreActionService_UserExploreRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreActionService_UserExploreRequest.base);
  return *internal_default_instance();
}


void UserExploreActionService_UserExploreRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserExploreActionService.UserExploreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&eventid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stageid_) -
        reinterpret_cast<char*>(&eventid_)) + sizeof(stageid_));
    cmd_ = 1;
    direction_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserExploreActionService_UserExploreRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserExploreActionService.UserExploreRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserExploreActionService.EXPLORE_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserExploreActionService_EXPLORE_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserExploreActionService_EXPLORE_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eventid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eventid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.MOVE_DIRECTION direction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::MOVE_DIRECTION_IsValid(value)) {
            set_direction(static_cast< ::sg::MOVE_DIRECTION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 distance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stageid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_stageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserExploreActionService.UserExploreRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserExploreActionService.UserExploreRequest)
  return false;
#undef DO_
}

void UserExploreActionService_UserExploreRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserExploreActionService.UserExploreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserExploreActionService.EXPLORE_CMD cmd = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->eventid(), output);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  // optional .sg.MOVE_DIRECTION direction = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->direction(), output);
  }

  // optional int32 distance = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->distance(), output);
  }

  // optional int32 stageid = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->stageid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserExploreActionService.UserExploreRequest)
}

::google::protobuf::uint8* UserExploreActionService_UserExploreRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserExploreActionService.UserExploreRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserExploreActionService.EXPLORE_CMD cmd = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 eventid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->eventid(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  // optional .sg.MOVE_DIRECTION direction = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->direction(), target);
  }

  // optional int32 distance = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->distance(), target);
  }

  // optional int32 stageid = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->stageid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserExploreActionService.UserExploreRequest)
  return target;
}

size_t UserExploreActionService_UserExploreRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserExploreActionService.UserExploreRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserExploreActionService.EXPLORE_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 eventid = 2;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eventid());
    }

    // optional int32 action = 3;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

    // optional int32 distance = 5;
    if (has_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->distance());
    }

    // optional int32 stageid = 6;
    if (has_stageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stageid());
    }

  }
  // optional .sg.MOVE_DIRECTION direction = 4;
  if (has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserExploreActionService_UserExploreRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserExploreActionService.UserExploreRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserExploreActionService_UserExploreRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserExploreActionService_UserExploreRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserExploreActionService.UserExploreRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserExploreActionService.UserExploreRequest)
    MergeFrom(*source);
  }
}

void UserExploreActionService_UserExploreRequest::MergeFrom(const UserExploreActionService_UserExploreRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserExploreActionService.UserExploreRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      eventid_ = from.eventid_;
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    if (cached_has_bits & 0x00000004u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000008u) {
      stageid_ = from.stageid_;
    }
    if (cached_has_bits & 0x00000010u) {
      cmd_ = from.cmd_;
    }
    if (cached_has_bits & 0x00000020u) {
      direction_ = from.direction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserExploreActionService_UserExploreRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserExploreActionService.UserExploreRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserExploreActionService_UserExploreRequest::CopyFrom(const UserExploreActionService_UserExploreRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserExploreActionService.UserExploreRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserExploreActionService_UserExploreRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  return true;
}

void UserExploreActionService_UserExploreRequest::Swap(UserExploreActionService_UserExploreRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserExploreActionService_UserExploreRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserExploreActionService_UserExploreRequest::UnsafeArenaSwap(UserExploreActionService_UserExploreRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserExploreActionService_UserExploreRequest::InternalSwap(UserExploreActionService_UserExploreRequest* other) {
  using std::swap;
  swap(eventid_, other->eventid_);
  swap(action_, other->action_);
  swap(distance_, other->distance_);
  swap(stageid_, other->stageid_);
  swap(cmd_, other->cmd_);
  swap(direction_, other->direction_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserExploreActionService_UserExploreRequest::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserExploreActionService_UserExploreResponse::InitAsDefaultInstance() {
  ::sg::_UserExploreActionService_UserExploreResponse_default_instance_._instance.get_mutable()->state_ = const_cast< ::sg::ExploreState*>(
      ::sg::ExploreState::internal_default_instance());
  ::sg::_UserExploreActionService_UserExploreResponse_default_instance_._instance.get_mutable()->stage_ = const_cast< ::sg::ExploreStage*>(
      ::sg::ExploreStage::internal_default_instance());
  ::sg::_UserExploreActionService_UserExploreResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::sg::ActionResult*>(
      ::sg::ActionResult::internal_default_instance());
}
void UserExploreActionService_UserExploreResponse::unsafe_arena_set_allocated_state(
    ::sg::ExploreState* state) {
  if (GetArenaNoVirtual() == NULL) {
    delete state_;
  }
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserExploreActionService.UserExploreResponse.state)
}
void UserExploreActionService_UserExploreResponse::unsafe_arena_set_allocated_stage(
    ::sg::ExploreStage* stage) {
  if (GetArenaNoVirtual() == NULL) {
    delete stage_;
  }
  stage_ = stage;
  if (stage) {
    set_has_stage();
  } else {
    clear_has_stage();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserExploreActionService.UserExploreResponse.stage)
}
void UserExploreActionService_UserExploreResponse::unsafe_arena_set_allocated_action_result(
    ::sg::ActionResult* action_result) {
  if (GetArenaNoVirtual() == NULL) {
    delete action_result_;
  }
  action_result_ = action_result;
  if (action_result) {
    set_has_action_result();
  } else {
    clear_has_action_result();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserExploreActionService.UserExploreResponse.action_result)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserExploreActionService_UserExploreResponse::kResultFieldNumber;
const int UserExploreActionService_UserExploreResponse::kStateFieldNumber;
const int UserExploreActionService_UserExploreResponse::kStageFieldNumber;
const int UserExploreActionService_UserExploreResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserExploreActionService_UserExploreResponse::UserExploreActionService_UserExploreResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_UserExploreActionService_UserExploreResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserExploreActionService.UserExploreResponse)
}
UserExploreActionService_UserExploreResponse::UserExploreActionService_UserExploreResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreActionService_UserExploreResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserExploreActionService.UserExploreResponse)
}
UserExploreActionService_UserExploreResponse::UserExploreActionService_UserExploreResponse(const UserExploreActionService_UserExploreResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::sg::ExploreState(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_stage()) {
    stage_ = new ::sg::ExploreStage(*from.stage_);
  } else {
    stage_ = NULL;
  }
  if (from.has_action_result()) {
    action_result_ = new ::sg::ActionResult(*from.action_result_);
  } else {
    action_result_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserExploreActionService.UserExploreResponse)
}

void UserExploreActionService_UserExploreResponse::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&state_)) + sizeof(result_));
}

UserExploreActionService_UserExploreResponse::~UserExploreActionService_UserExploreResponse() {
  // @@protoc_insertion_point(destructor:sg.UserExploreActionService.UserExploreResponse)
  SharedDtor();
}

void UserExploreActionService_UserExploreResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete stage_;
  if (this != internal_default_instance()) delete action_result_;
}

void UserExploreActionService_UserExploreResponse::ArenaDtor(void* object) {
  UserExploreActionService_UserExploreResponse* _this = reinterpret_cast< UserExploreActionService_UserExploreResponse* >(object);
  (void)_this;
}
void UserExploreActionService_UserExploreResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserExploreActionService_UserExploreResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserExploreActionService_UserExploreResponse::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserExploreActionService_UserExploreResponse& UserExploreActionService_UserExploreResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreActionService_UserExploreResponse.base);
  return *internal_default_instance();
}


void UserExploreActionService_UserExploreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserExploreActionService.UserExploreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(state_ != NULL);
      state_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(stage_ != NULL);
      stage_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(action_result_ != NULL);
      action_result_->Clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserExploreActionService_UserExploreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserExploreActionService.UserExploreResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.ExploreState state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.ExploreStage stage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.ActionResult action_result = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserExploreActionService.UserExploreResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserExploreActionService.UserExploreResponse)
  return false;
#undef DO_
}

void UserExploreActionService_UserExploreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserExploreActionService.UserExploreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .sg.ExploreState state = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_state(), output);
  }

  // optional .sg.ExploreStage stage = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_stage(), output);
  }

  // optional .sg.ActionResult action_result = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_action_result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserExploreActionService.UserExploreResponse)
}

::google::protobuf::uint8* UserExploreActionService_UserExploreResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserExploreActionService.UserExploreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .sg.ExploreState state = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_state(), deterministic, target);
  }

  // optional .sg.ExploreStage stage = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_stage(), deterministic, target);
  }

  // optional .sg.ActionResult action_result = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_action_result(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserExploreActionService.UserExploreResponse)
  return target;
}

size_t UserExploreActionService_UserExploreResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserExploreActionService.UserExploreResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .sg.ExploreState state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *state_);
    }

    // optional .sg.ExploreStage stage = 3;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stage_);
    }

    // optional .sg.ActionResult action_result = 6;
    if (has_action_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *action_result_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserExploreActionService_UserExploreResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserExploreActionService.UserExploreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserExploreActionService_UserExploreResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserExploreActionService_UserExploreResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserExploreActionService.UserExploreResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserExploreActionService.UserExploreResponse)
    MergeFrom(*source);
  }
}

void UserExploreActionService_UserExploreResponse::MergeFrom(const UserExploreActionService_UserExploreResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserExploreActionService.UserExploreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_state()->::sg::ExploreState::MergeFrom(from.state());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_stage()->::sg::ExploreStage::MergeFrom(from.stage());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_action_result()->::sg::ActionResult::MergeFrom(from.action_result());
    }
    if (cached_has_bits & 0x00000008u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserExploreActionService_UserExploreResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserExploreActionService.UserExploreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserExploreActionService_UserExploreResponse::CopyFrom(const UserExploreActionService_UserExploreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserExploreActionService.UserExploreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserExploreActionService_UserExploreResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  if (has_stage()) {
    if (!this->stage_->IsInitialized()) return false;
  }
  if (has_action_result()) {
    if (!this->action_result_->IsInitialized()) return false;
  }
  return true;
}

void UserExploreActionService_UserExploreResponse::Swap(UserExploreActionService_UserExploreResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserExploreActionService_UserExploreResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserExploreActionService_UserExploreResponse::UnsafeArenaSwap(UserExploreActionService_UserExploreResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserExploreActionService_UserExploreResponse::InternalSwap(UserExploreActionService_UserExploreResponse* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(stage_, other->stage_);
  swap(action_result_, other->action_result_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserExploreActionService_UserExploreResponse::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserExploreActionService::InitAsDefaultInstance() {
  ::sg::_UserExploreActionService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserExploreActionService_UserExploreRequest*>(
      ::sg::UserExploreActionService_UserExploreRequest::internal_default_instance());
  ::sg::_UserExploreActionService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserExploreActionService_UserExploreResponse*>(
      ::sg::UserExploreActionService_UserExploreResponse::internal_default_instance());
}
void UserExploreActionService::unsafe_arena_set_allocated_req(
    ::sg::UserExploreActionService_UserExploreRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserExploreActionService.req)
}
void UserExploreActionService::unsafe_arena_set_allocated_resp(
    ::sg::UserExploreActionService_UserExploreResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserExploreActionService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserExploreActionService::kReqFieldNumber;
const int UserExploreActionService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserExploreActionService::UserExploreActionService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_UserExploreActionService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserExploreActionService)
}
UserExploreActionService::UserExploreActionService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreActionService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserExploreActionService)
}
UserExploreActionService::UserExploreActionService(const UserExploreActionService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserExploreActionService_UserExploreRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserExploreActionService_UserExploreResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserExploreActionService)
}

void UserExploreActionService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserExploreActionService::~UserExploreActionService() {
  // @@protoc_insertion_point(destructor:sg.UserExploreActionService)
  SharedDtor();
}

void UserExploreActionService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserExploreActionService::ArenaDtor(void* object) {
  UserExploreActionService* _this = reinterpret_cast< UserExploreActionService* >(object);
  (void)_this;
}
void UserExploreActionService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserExploreActionService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserExploreActionService::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserExploreActionService& UserExploreActionService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_UserExploreActionService.base);
  return *internal_default_instance();
}


void UserExploreActionService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserExploreActionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserExploreActionService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserExploreActionService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserExploreActionService.UserExploreRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserExploreActionService.UserExploreResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserExploreActionService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserExploreActionService)
  return false;
#undef DO_
}

void UserExploreActionService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserExploreActionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserExploreActionService.UserExploreRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserExploreActionService.UserExploreResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserExploreActionService)
}

::google::protobuf::uint8* UserExploreActionService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserExploreActionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserExploreActionService.UserExploreRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserExploreActionService.UserExploreResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserExploreActionService)
  return target;
}

size_t UserExploreActionService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserExploreActionService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserExploreActionService.UserExploreRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserExploreActionService.UserExploreResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserExploreActionService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserExploreActionService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserExploreActionService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserExploreActionService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserExploreActionService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserExploreActionService)
    MergeFrom(*source);
  }
}

void UserExploreActionService::MergeFrom(const UserExploreActionService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserExploreActionService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserExploreActionService_UserExploreRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserExploreActionService_UserExploreResponse::MergeFrom(from.resp());
    }
  }
}

void UserExploreActionService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserExploreActionService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserExploreActionService::CopyFrom(const UserExploreActionService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserExploreActionService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserExploreActionService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserExploreActionService::Swap(UserExploreActionService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserExploreActionService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserExploreActionService::UnsafeArenaSwap(UserExploreActionService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserExploreActionService::InternalSwap(UserExploreActionService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserExploreActionService::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewEventExist::InitAsDefaultInstance() {
  ::sg::_NewEventExist_default_instance_._instance.get_mutable()->event_ = const_cast< ::sg::ExploreEvent*>(
      ::sg::ExploreEvent::internal_default_instance());
  ::sg::_NewEventExist_default_instance_._instance.get_mutable()->record_ = const_cast< ::sg::ExploreRecord*>(
      ::sg::ExploreRecord::internal_default_instance());
}
void NewEventExist::unsafe_arena_set_allocated_event(
    ::sg::ExploreEvent* event) {
  if (GetArenaNoVirtual() == NULL) {
    delete event_;
  }
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.NewEventExist.event)
}
void NewEventExist::unsafe_arena_set_allocated_record(
    ::sg::ExploreRecord* record) {
  if (GetArenaNoVirtual() == NULL) {
    delete record_;
  }
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.NewEventExist.record)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewEventExist::kEventFieldNumber;
const int NewEventExist::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewEventExist::NewEventExist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_NewEventExist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.NewEventExist)
}
NewEventExist::NewEventExist(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_NewEventExist.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.NewEventExist)
}
NewEventExist::NewEventExist(const NewEventExist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::sg::ExploreEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  if (from.has_record()) {
    record_ = new ::sg::ExploreRecord(*from.record_);
  } else {
    record_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.NewEventExist)
}

void NewEventExist::SharedCtor() {
  ::memset(&event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&record_) -
      reinterpret_cast<char*>(&event_)) + sizeof(record_));
}

NewEventExist::~NewEventExist() {
  // @@protoc_insertion_point(destructor:sg.NewEventExist)
  SharedDtor();
}

void NewEventExist::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete event_;
  if (this != internal_default_instance()) delete record_;
}

void NewEventExist::ArenaDtor(void* object) {
  NewEventExist* _this = reinterpret_cast< NewEventExist* >(object);
  (void)_this;
}
void NewEventExist::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void NewEventExist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewEventExist::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewEventExist& NewEventExist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_NewEventExist.base);
  return *internal_default_instance();
}


void NewEventExist::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.NewEventExist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(event_ != NULL);
      event_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(record_ != NULL);
      record_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewEventExist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.NewEventExist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ExploreEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .sg.ExploreRecord record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.NewEventExist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.NewEventExist)
  return false;
#undef DO_
}

void NewEventExist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.NewEventExist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ExploreEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_event(), output);
  }

  // required .sg.ExploreRecord record = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_record(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.NewEventExist)
}

::google::protobuf::uint8* NewEventExist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.NewEventExist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ExploreEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_event(), deterministic, target);
  }

  // required .sg.ExploreRecord record = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_record(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.NewEventExist)
  return target;
}

size_t NewEventExist::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.NewEventExist)
  size_t total_size = 0;

  if (has_event()) {
    // required .sg.ExploreEvent event = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);
  }

  if (has_record()) {
    // required .sg.ExploreRecord record = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *record_);
  }

  return total_size;
}
size_t NewEventExist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.NewEventExist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .sg.ExploreEvent event = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);

    // required .sg.ExploreRecord record = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *record_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewEventExist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.NewEventExist)
  GOOGLE_DCHECK_NE(&from, this);
  const NewEventExist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewEventExist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.NewEventExist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.NewEventExist)
    MergeFrom(*source);
  }
}

void NewEventExist::MergeFrom(const NewEventExist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.NewEventExist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_event()->::sg::ExploreEvent::MergeFrom(from.event());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_record()->::sg::ExploreRecord::MergeFrom(from.record());
    }
  }
}

void NewEventExist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.NewEventExist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewEventExist::CopyFrom(const NewEventExist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.NewEventExist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewEventExist::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_event()) {
    if (!this->event_->IsInitialized()) return false;
  }
  if (has_record()) {
    if (!this->record_->IsInitialized()) return false;
  }
  return true;
}

void NewEventExist::Swap(NewEventExist* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    NewEventExist* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void NewEventExist::UnsafeArenaSwap(NewEventExist* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void NewEventExist::InternalSwap(NewEventExist* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(record_, other->record_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewEventExist::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventChangeNotify::InitAsDefaultInstance() {
  ::sg::_EventChangeNotify_default_instance_._instance.get_mutable()->event_ = const_cast< ::sg::ExploreEvent*>(
      ::sg::ExploreEvent::internal_default_instance());
}
void EventChangeNotify::unsafe_arena_set_allocated_event(
    ::sg::ExploreEvent* event) {
  if (GetArenaNoVirtual() == NULL) {
    delete event_;
  }
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.EventChangeNotify.event)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventChangeNotify::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventChangeNotify::EventChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserExplore_2eproto::scc_info_EventChangeNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.EventChangeNotify)
}
EventChangeNotify::EventChangeNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_EventChangeNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.EventChangeNotify)
}
EventChangeNotify::EventChangeNotify(const EventChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::sg::ExploreEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.EventChangeNotify)
}

void EventChangeNotify::SharedCtor() {
  event_ = NULL;
}

EventChangeNotify::~EventChangeNotify() {
  // @@protoc_insertion_point(destructor:sg.EventChangeNotify)
  SharedDtor();
}

void EventChangeNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete event_;
}

void EventChangeNotify::ArenaDtor(void* object) {
  EventChangeNotify* _this = reinterpret_cast< EventChangeNotify* >(object);
  (void)_this;
}
void EventChangeNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EventChangeNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventChangeNotify::descriptor() {
  ::protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventChangeNotify& EventChangeNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserExplore_2eproto::scc_info_EventChangeNotify.base);
  return *internal_default_instance();
}


void EventChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.EventChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(event_ != NULL);
    event_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EventChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.EventChangeNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ExploreEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.EventChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.EventChangeNotify)
  return false;
#undef DO_
}

void EventChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.EventChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ExploreEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_event(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.EventChangeNotify)
}

::google::protobuf::uint8* EventChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.EventChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ExploreEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_event(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.EventChangeNotify)
  return target;
}

size_t EventChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.EventChangeNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ExploreEvent event = 1;
  if (has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.EventChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EventChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.EventChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.EventChangeNotify)
    MergeFrom(*source);
  }
}

void EventChangeNotify::MergeFrom(const EventChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.EventChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_event()) {
    mutable_event()->::sg::ExploreEvent::MergeFrom(from.event());
  }
}

void EventChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.EventChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventChangeNotify::CopyFrom(const EventChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.EventChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventChangeNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_event()) {
    if (!this->event_->IsInitialized()) return false;
  }
  return true;
}

void EventChangeNotify::Swap(EventChangeNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EventChangeNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EventChangeNotify::UnsafeArenaSwap(EventChangeNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EventChangeNotify::InternalSwap(EventChangeNotify* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventChangeNotify::GetMetadata() const {
  protobuf_UserExplore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserExplore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ExploreState* Arena::CreateMaybeMessage< ::sg::ExploreState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ExploreState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ExploreStage* Arena::CreateMaybeMessage< ::sg::ExploreStage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ExploreStage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ExploreRecord* Arena::CreateMaybeMessage< ::sg::ExploreRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ExploreRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ExploreEvent* Arena::CreateMaybeMessage< ::sg::ExploreEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ExploreEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ActionResult* Arena::CreateMaybeMessage< ::sg::ActionResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ActionResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserExploreService_UserExploreRequest* Arena::CreateMaybeMessage< ::sg::UserExploreService_UserExploreRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserExploreService_UserExploreRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserExploreService_UserExploreResponse* Arena::CreateMaybeMessage< ::sg::UserExploreService_UserExploreResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserExploreService_UserExploreResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserExploreService* Arena::CreateMaybeMessage< ::sg::UserExploreService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserExploreService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserExploreActionService_UserExploreRequest* Arena::CreateMaybeMessage< ::sg::UserExploreActionService_UserExploreRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserExploreActionService_UserExploreRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserExploreActionService_UserExploreResponse* Arena::CreateMaybeMessage< ::sg::UserExploreActionService_UserExploreResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserExploreActionService_UserExploreResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserExploreActionService* Arena::CreateMaybeMessage< ::sg::UserExploreActionService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserExploreActionService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::NewEventExist* Arena::CreateMaybeMessage< ::sg::NewEventExist >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::NewEventExist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::EventChangeNotify* Arena::CreateMaybeMessage< ::sg::EventChangeNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::EventChangeNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
