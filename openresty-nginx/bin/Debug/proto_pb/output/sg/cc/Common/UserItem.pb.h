// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserItem.proto

#ifndef PROTOBUF_INCLUDED_UserItem_2eproto
#define PROTOBUF_INCLUDED_UserItem_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "BaseStruct.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_UserItem_2eproto 

namespace protobuf_UserItem_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_UserItem_2eproto
namespace sg {
class UserItemService;
class UserItemServiceDefaultTypeInternal;
extern UserItemServiceDefaultTypeInternal _UserItemService_default_instance_;
class UserItemService_UserItemRequest;
class UserItemService_UserItemRequestDefaultTypeInternal;
extern UserItemService_UserItemRequestDefaultTypeInternal _UserItemService_UserItemRequest_default_instance_;
class UserItemService_UserItemResponse;
class UserItemService_UserItemResponseDefaultTypeInternal;
extern UserItemService_UserItemResponseDefaultTypeInternal _UserItemService_UserItemResponse_default_instance_;
}  // namespace sg
namespace google {
namespace protobuf {
template<> ::sg::UserItemService* Arena::CreateMaybeMessage<::sg::UserItemService>(Arena*);
template<> ::sg::UserItemService_UserItemRequest* Arena::CreateMaybeMessage<::sg::UserItemService_UserItemRequest>(Arena*);
template<> ::sg::UserItemService_UserItemResponse* Arena::CreateMaybeMessage<::sg::UserItemService_UserItemResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sg {

enum UserItemService_ITEM_CMD {
  UserItemService_ITEM_CMD_QUERY = 1,
  UserItemService_ITEM_CMD_ADD = 2,
  UserItemService_ITEM_CMD_SALE = 3,
  UserItemService_ITEM_CMD_USE = 4
};
bool UserItemService_ITEM_CMD_IsValid(int value);
const UserItemService_ITEM_CMD UserItemService_ITEM_CMD_ITEM_CMD_MIN = UserItemService_ITEM_CMD_QUERY;
const UserItemService_ITEM_CMD UserItemService_ITEM_CMD_ITEM_CMD_MAX = UserItemService_ITEM_CMD_USE;
const int UserItemService_ITEM_CMD_ITEM_CMD_ARRAYSIZE = UserItemService_ITEM_CMD_ITEM_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserItemService_ITEM_CMD_descriptor();
inline const ::std::string& UserItemService_ITEM_CMD_Name(UserItemService_ITEM_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserItemService_ITEM_CMD_descriptor(), value);
}
inline bool UserItemService_ITEM_CMD_Parse(
    const ::std::string& name, UserItemService_ITEM_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserItemService_ITEM_CMD>(
    UserItemService_ITEM_CMD_descriptor(), name, value);
}
// ===================================================================

class UserItemService_UserItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserItemService.UserItemRequest) */ {
 public:
  UserItemService_UserItemRequest();
  virtual ~UserItemService_UserItemRequest();

  UserItemService_UserItemRequest(const UserItemService_UserItemRequest& from);

  inline UserItemService_UserItemRequest& operator=(const UserItemService_UserItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserItemService_UserItemRequest(UserItemService_UserItemRequest&& from) noexcept
    : UserItemService_UserItemRequest() {
    *this = ::std::move(from);
  }

  inline UserItemService_UserItemRequest& operator=(UserItemService_UserItemRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserItemService_UserItemRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserItemService_UserItemRequest* internal_default_instance() {
    return reinterpret_cast<const UserItemService_UserItemRequest*>(
               &_UserItemService_UserItemRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(UserItemService_UserItemRequest* other);
  void Swap(UserItemService_UserItemRequest* other);
  friend void swap(UserItemService_UserItemRequest& a, UserItemService_UserItemRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserItemService_UserItemRequest* New() const final {
    return CreateMaybeMessage<UserItemService_UserItemRequest>(NULL);
  }

  UserItemService_UserItemRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserItemService_UserItemRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserItemService_UserItemRequest& from);
  void MergeFrom(const UserItemService_UserItemRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserItemService_UserItemRequest* other);
  protected:
  explicit UserItemService_UserItemRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 typeid = 3;
  bool has_typeid_() const;
  void clear_typeid_();
  static const int kTypeidFieldNumber = 3;
  ::google::protobuf::int32 typeid_() const;
  void set_typeid_(::google::protobuf::int32 value);

  // optional int32 num = 4;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 4;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // optional int32 target_type = 5;
  bool has_target_type() const;
  void clear_target_type();
  static const int kTargetTypeFieldNumber = 5;
  ::google::protobuf::int32 target_type() const;
  void set_target_type(::google::protobuf::int32 value);

  // optional int32 target_id = 6;
  bool has_target_id() const;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 6;
  ::google::protobuf::int32 target_id() const;
  void set_target_id(::google::protobuf::int32 value);

  // required .sg.UserItemService.ITEM_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserItemService_ITEM_CMD cmd() const;
  void set_cmd(::sg::UserItemService_ITEM_CMD value);

  // @@protoc_insertion_point(class_scope:sg.UserItemService.UserItemRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_typeid_();
  void clear_has_typeid_();
  void set_has_num();
  void clear_has_num();
  void set_has_target_type();
  void clear_has_target_type();
  void set_has_target_id();
  void clear_has_target_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 typeid__;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 target_type_;
  ::google::protobuf::int32 target_id_;
  int cmd_;
  friend struct ::protobuf_UserItem_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserItemService_UserItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserItemService.UserItemResponse) */ {
 public:
  UserItemService_UserItemResponse();
  virtual ~UserItemService_UserItemResponse();

  UserItemService_UserItemResponse(const UserItemService_UserItemResponse& from);

  inline UserItemService_UserItemResponse& operator=(const UserItemService_UserItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserItemService_UserItemResponse(UserItemService_UserItemResponse&& from) noexcept
    : UserItemService_UserItemResponse() {
    *this = ::std::move(from);
  }

  inline UserItemService_UserItemResponse& operator=(UserItemService_UserItemResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserItemService_UserItemResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserItemService_UserItemResponse* internal_default_instance() {
    return reinterpret_cast<const UserItemService_UserItemResponse*>(
               &_UserItemService_UserItemResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(UserItemService_UserItemResponse* other);
  void Swap(UserItemService_UserItemResponse* other);
  friend void swap(UserItemService_UserItemResponse& a, UserItemService_UserItemResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserItemService_UserItemResponse* New() const final {
    return CreateMaybeMessage<UserItemService_UserItemResponse>(NULL);
  }

  UserItemService_UserItemResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserItemService_UserItemResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserItemService_UserItemResponse& from);
  void MergeFrom(const UserItemService_UserItemResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserItemService_UserItemResponse* other);
  protected:
  explicit UserItemService_UserItemResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.Item items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::sg::Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Item >*
      mutable_items();
  const ::sg::Item& items(int index) const;
  ::sg::Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::sg::Item >&
      items() const;

  // optional .sg.Reward reward = 3;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  private:
  const ::sg::Reward& _internal_reward() const;
  public:
  const ::sg::Reward& reward() const;
  ::sg::Reward* release_reward();
  ::sg::Reward* mutable_reward();
  void set_allocated_reward(::sg::Reward* reward);
  void unsafe_arena_set_allocated_reward(
      ::sg::Reward* reward);
  ::sg::Reward* unsafe_arena_release_reward();

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserItemService.UserItemResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_reward();
  void clear_has_reward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::Item > items_;
  ::sg::Reward* reward_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_UserItem_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserItemService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserItemService) */ {
 public:
  UserItemService();
  virtual ~UserItemService();

  UserItemService(const UserItemService& from);

  inline UserItemService& operator=(const UserItemService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserItemService(UserItemService&& from) noexcept
    : UserItemService() {
    *this = ::std::move(from);
  }

  inline UserItemService& operator=(UserItemService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserItemService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserItemService* internal_default_instance() {
    return reinterpret_cast<const UserItemService*>(
               &_UserItemService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(UserItemService* other);
  void Swap(UserItemService* other);
  friend void swap(UserItemService& a, UserItemService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserItemService* New() const final {
    return CreateMaybeMessage<UserItemService>(NULL);
  }

  UserItemService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserItemService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserItemService& from);
  void MergeFrom(const UserItemService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserItemService* other);
  protected:
  explicit UserItemService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserItemService_UserItemRequest UserItemRequest;
  typedef UserItemService_UserItemResponse UserItemResponse;

  typedef UserItemService_ITEM_CMD ITEM_CMD;
  static const ITEM_CMD QUERY =
    UserItemService_ITEM_CMD_QUERY;
  static const ITEM_CMD ADD =
    UserItemService_ITEM_CMD_ADD;
  static const ITEM_CMD SALE =
    UserItemService_ITEM_CMD_SALE;
  static const ITEM_CMD USE =
    UserItemService_ITEM_CMD_USE;
  static inline bool ITEM_CMD_IsValid(int value) {
    return UserItemService_ITEM_CMD_IsValid(value);
  }
  static const ITEM_CMD ITEM_CMD_MIN =
    UserItemService_ITEM_CMD_ITEM_CMD_MIN;
  static const ITEM_CMD ITEM_CMD_MAX =
    UserItemService_ITEM_CMD_ITEM_CMD_MAX;
  static const int ITEM_CMD_ARRAYSIZE =
    UserItemService_ITEM_CMD_ITEM_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ITEM_CMD_descriptor() {
    return UserItemService_ITEM_CMD_descriptor();
  }
  static inline const ::std::string& ITEM_CMD_Name(ITEM_CMD value) {
    return UserItemService_ITEM_CMD_Name(value);
  }
  static inline bool ITEM_CMD_Parse(const ::std::string& name,
      ITEM_CMD* value) {
    return UserItemService_ITEM_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserItemService.UserItemRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserItemService_UserItemRequest& _internal_req() const;
  public:
  const ::sg::UserItemService_UserItemRequest& req() const;
  ::sg::UserItemService_UserItemRequest* release_req();
  ::sg::UserItemService_UserItemRequest* mutable_req();
  void set_allocated_req(::sg::UserItemService_UserItemRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserItemService_UserItemRequest* req);
  ::sg::UserItemService_UserItemRequest* unsafe_arena_release_req();

  // optional .sg.UserItemService.UserItemResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserItemService_UserItemResponse& _internal_resp() const;
  public:
  const ::sg::UserItemService_UserItemResponse& resp() const;
  ::sg::UserItemService_UserItemResponse* release_resp();
  ::sg::UserItemService_UserItemResponse* mutable_resp();
  void set_allocated_resp(::sg::UserItemService_UserItemResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserItemService_UserItemResponse* resp);
  ::sg::UserItemService_UserItemResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserItemService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserItemService_UserItemRequest* req_;
  ::sg::UserItemService_UserItemResponse* resp_;
  friend struct ::protobuf_UserItem_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserItemService_UserItemRequest

// required .sg.UserItemService.ITEM_CMD cmd = 1;
inline bool UserItemService_UserItemRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserItemService_UserItemRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserItemService_UserItemRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserItemService_UserItemRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserItemService_ITEM_CMD UserItemService_UserItemRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserItemService.UserItemRequest.cmd)
  return static_cast< ::sg::UserItemService_ITEM_CMD >(cmd_);
}
inline void UserItemService_UserItemRequest::set_cmd(::sg::UserItemService_ITEM_CMD value) {
  assert(::sg::UserItemService_ITEM_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserItemService.UserItemRequest.cmd)
}

// optional int32 typeid = 3;
inline bool UserItemService_UserItemRequest::has_typeid_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserItemService_UserItemRequest::set_has_typeid_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserItemService_UserItemRequest::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserItemService_UserItemRequest::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 UserItemService_UserItemRequest::typeid_() const {
  // @@protoc_insertion_point(field_get:sg.UserItemService.UserItemRequest.typeid)
  return typeid__;
}
inline void UserItemService_UserItemRequest::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:sg.UserItemService.UserItemRequest.typeid)
}

// optional int32 num = 4;
inline bool UserItemService_UserItemRequest::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserItemService_UserItemRequest::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserItemService_UserItemRequest::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserItemService_UserItemRequest::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 UserItemService_UserItemRequest::num() const {
  // @@protoc_insertion_point(field_get:sg.UserItemService.UserItemRequest.num)
  return num_;
}
inline void UserItemService_UserItemRequest::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:sg.UserItemService.UserItemRequest.num)
}

// optional int32 target_type = 5;
inline bool UserItemService_UserItemRequest::has_target_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserItemService_UserItemRequest::set_has_target_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserItemService_UserItemRequest::clear_has_target_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserItemService_UserItemRequest::clear_target_type() {
  target_type_ = 0;
  clear_has_target_type();
}
inline ::google::protobuf::int32 UserItemService_UserItemRequest::target_type() const {
  // @@protoc_insertion_point(field_get:sg.UserItemService.UserItemRequest.target_type)
  return target_type_;
}
inline void UserItemService_UserItemRequest::set_target_type(::google::protobuf::int32 value) {
  set_has_target_type();
  target_type_ = value;
  // @@protoc_insertion_point(field_set:sg.UserItemService.UserItemRequest.target_type)
}

// optional int32 target_id = 6;
inline bool UserItemService_UserItemRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserItemService_UserItemRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserItemService_UserItemRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserItemService_UserItemRequest::clear_target_id() {
  target_id_ = 0;
  clear_has_target_id();
}
inline ::google::protobuf::int32 UserItemService_UserItemRequest::target_id() const {
  // @@protoc_insertion_point(field_get:sg.UserItemService.UserItemRequest.target_id)
  return target_id_;
}
inline void UserItemService_UserItemRequest::set_target_id(::google::protobuf::int32 value) {
  set_has_target_id();
  target_id_ = value;
  // @@protoc_insertion_point(field_set:sg.UserItemService.UserItemRequest.target_id)
}

// -------------------------------------------------------------------

// UserItemService_UserItemResponse

// required int32 result = 1;
inline bool UserItemService_UserItemResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserItemService_UserItemResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserItemService_UserItemResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserItemService_UserItemResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserItemService_UserItemResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserItemService.UserItemResponse.result)
  return result_;
}
inline void UserItemService_UserItemResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserItemService.UserItemResponse.result)
}

// repeated .sg.Item items = 2;
inline int UserItemService_UserItemResponse::items_size() const {
  return items_.size();
}
inline ::sg::Item* UserItemService_UserItemResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserItemService.UserItemResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Item >*
UserItemService_UserItemResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserItemService.UserItemResponse.items)
  return &items_;
}
inline const ::sg::Item& UserItemService_UserItemResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserItemService.UserItemResponse.items)
  return items_.Get(index);
}
inline ::sg::Item* UserItemService_UserItemResponse::add_items() {
  // @@protoc_insertion_point(field_add:sg.UserItemService.UserItemResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Item >&
UserItemService_UserItemResponse::items() const {
  // @@protoc_insertion_point(field_list:sg.UserItemService.UserItemResponse.items)
  return items_;
}

// optional .sg.Reward reward = 3;
inline bool UserItemService_UserItemResponse::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserItemService_UserItemResponse::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserItemService_UserItemResponse::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::sg::Reward& UserItemService_UserItemResponse::_internal_reward() const {
  return *reward_;
}
inline const ::sg::Reward& UserItemService_UserItemResponse::reward() const {
  const ::sg::Reward* p = reward_;
  // @@protoc_insertion_point(field_get:sg.UserItemService.UserItemResponse.reward)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::Reward*>(
      &::sg::_Reward_default_instance_);
}
inline ::sg::Reward* UserItemService_UserItemResponse::release_reward() {
  // @@protoc_insertion_point(field_release:sg.UserItemService.UserItemResponse.reward)
  clear_has_reward();
  ::sg::Reward* temp = reward_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  reward_ = NULL;
  return temp;
}
inline ::sg::Reward* UserItemService_UserItemResponse::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserItemService.UserItemResponse.reward)
  clear_has_reward();
  ::sg::Reward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline ::sg::Reward* UserItemService_UserItemResponse::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::Reward>(GetArenaNoVirtual());
    reward_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserItemService.UserItemResponse.reward)
  return reward_;
}
inline void UserItemService_UserItemResponse::set_allocated_reward(::sg::Reward* reward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reward_);
  }
  if (reward) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(reward)->GetArena();
    if (message_arena != submessage_arena) {
      reward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reward, submessage_arena);
    }
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_ = reward;
  // @@protoc_insertion_point(field_set_allocated:sg.UserItemService.UserItemResponse.reward)
}

// -------------------------------------------------------------------

// UserItemService

// optional .sg.UserItemService.UserItemRequest req = 1;
inline bool UserItemService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserItemService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserItemService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserItemService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserItemService_UserItemRequest& UserItemService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserItemService_UserItemRequest& UserItemService::req() const {
  const ::sg::UserItemService_UserItemRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserItemService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserItemService_UserItemRequest*>(
      &::sg::_UserItemService_UserItemRequest_default_instance_);
}
inline ::sg::UserItemService_UserItemRequest* UserItemService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserItemService.req)
  clear_has_req();
  ::sg::UserItemService_UserItemRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserItemService_UserItemRequest* UserItemService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserItemService.req)
  clear_has_req();
  ::sg::UserItemService_UserItemRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserItemService_UserItemRequest* UserItemService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserItemService_UserItemRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserItemService.req)
  return req_;
}
inline void UserItemService::set_allocated_req(::sg::UserItemService_UserItemRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserItemService.req)
}

// optional .sg.UserItemService.UserItemResponse resp = 2;
inline bool UserItemService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserItemService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserItemService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserItemService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserItemService_UserItemResponse& UserItemService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserItemService_UserItemResponse& UserItemService::resp() const {
  const ::sg::UserItemService_UserItemResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserItemService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserItemService_UserItemResponse*>(
      &::sg::_UserItemService_UserItemResponse_default_instance_);
}
inline ::sg::UserItemService_UserItemResponse* UserItemService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserItemService.resp)
  clear_has_resp();
  ::sg::UserItemService_UserItemResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserItemService_UserItemResponse* UserItemService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserItemService.resp)
  clear_has_resp();
  ::sg::UserItemService_UserItemResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserItemService_UserItemResponse* UserItemService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserItemService_UserItemResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserItemService.resp)
  return resp_;
}
inline void UserItemService::set_allocated_resp(::sg::UserItemService_UserItemResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserItemService.resp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sg::UserItemService_ITEM_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserItemService_ITEM_CMD>() {
  return ::sg::UserItemService_ITEM_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_UserItem_2eproto
