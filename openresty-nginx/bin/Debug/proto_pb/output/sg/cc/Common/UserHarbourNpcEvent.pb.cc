// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserHarbourNpcEvent.proto

#include "UserHarbourNpcEvent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Item;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_UserHarbourNpcEvent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserHarbourNpcEvent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HarborNpcEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserHarbourNpcEvent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserHarborNpcEventService_EventRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserHarbourNpcEvent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserHarborNpcStealActionService_ActionRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserHarbourNpcEvent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HarborNpcEventList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserHarbourNpcEvent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserHarborNpcEventService_EventResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserHarbourNpcEvent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserHarborNpcStealActionService_ActionResponse;
}  // namespace protobuf_UserHarbourNpcEvent_2eproto
namespace sg {
class HarborNpcEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HarborNpcEvent>
      _instance;
} _HarborNpcEvent_default_instance_;
class HarborNpcEventListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HarborNpcEventList>
      _instance;
} _HarborNpcEventList_default_instance_;
class UserHarborNpcEventService_EventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHarborNpcEventService_EventRequest>
      _instance;
} _UserHarborNpcEventService_EventRequest_default_instance_;
class UserHarborNpcEventService_EventResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHarborNpcEventService_EventResponse>
      _instance;
} _UserHarborNpcEventService_EventResponse_default_instance_;
class UserHarborNpcEventServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHarborNpcEventService>
      _instance;
} _UserHarborNpcEventService_default_instance_;
class UserHarborNpcEventNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHarborNpcEventNotify>
      _instance;
} _UserHarborNpcEventNotify_default_instance_;
class UserHarborNpcStealActionService_ActionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHarborNpcStealActionService_ActionRequest>
      _instance;
} _UserHarborNpcStealActionService_ActionRequest_default_instance_;
class UserHarborNpcStealActionService_ActionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHarborNpcStealActionService_ActionResponse>
      _instance;
} _UserHarborNpcStealActionService_ActionResponse_default_instance_;
class UserHarborNpcStealActionServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHarborNpcStealActionService>
      _instance;
} _UserHarborNpcStealActionService_default_instance_;
}  // namespace sg
namespace protobuf_UserHarbourNpcEvent_2eproto {
static void InitDefaultsHarborNpcEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_HarborNpcEvent_default_instance_;
    new (ptr) ::sg::HarborNpcEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::HarborNpcEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HarborNpcEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHarborNpcEvent}, {}};

static void InitDefaultsHarborNpcEventList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_HarborNpcEventList_default_instance_;
    new (ptr) ::sg::HarborNpcEventList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::HarborNpcEventList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HarborNpcEventList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHarborNpcEventList}, {
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEvent.base,}};

static void InitDefaultsUserHarborNpcEventService_EventRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserHarborNpcEventService_EventRequest_default_instance_;
    new (ptr) ::sg::UserHarborNpcEventService_EventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserHarborNpcEventService_EventRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserHarborNpcEventService_EventRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserHarborNpcEventService_EventRequest}, {}};

static void InitDefaultsUserHarborNpcEventService_EventResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserHarborNpcEventService_EventResponse_default_instance_;
    new (ptr) ::sg::UserHarborNpcEventService_EventResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserHarborNpcEventService_EventResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserHarborNpcEventService_EventResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserHarborNpcEventService_EventResponse}, {
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEventList.base,}};

static void InitDefaultsUserHarborNpcEventService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserHarborNpcEventService_default_instance_;
    new (ptr) ::sg::UserHarborNpcEventService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserHarborNpcEventService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserHarborNpcEventService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserHarborNpcEventService}, {
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService_EventRequest.base,
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService_EventResponse.base,}};

static void InitDefaultsUserHarborNpcEventNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserHarborNpcEventNotify_default_instance_;
    new (ptr) ::sg::UserHarborNpcEventNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserHarborNpcEventNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserHarborNpcEventNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserHarborNpcEventNotify}, {
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEventList.base,}};

static void InitDefaultsUserHarborNpcStealActionService_ActionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserHarborNpcStealActionService_ActionRequest_default_instance_;
    new (ptr) ::sg::UserHarborNpcStealActionService_ActionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserHarborNpcStealActionService_ActionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserHarborNpcStealActionService_ActionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserHarborNpcStealActionService_ActionRequest}, {}};

static void InitDefaultsUserHarborNpcStealActionService_ActionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserHarborNpcStealActionService_ActionResponse_default_instance_;
    new (ptr) ::sg::UserHarborNpcStealActionService_ActionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserHarborNpcStealActionService_ActionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserHarborNpcStealActionService_ActionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserHarborNpcStealActionService_ActionResponse}, {
      &protobuf_BaseStruct_2eproto::scc_info_Item.base,}};

static void InitDefaultsUserHarborNpcStealActionService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserHarborNpcStealActionService_default_instance_;
    new (ptr) ::sg::UserHarborNpcStealActionService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserHarborNpcStealActionService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserHarborNpcStealActionService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserHarborNpcStealActionService}, {
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService_ActionRequest.base,
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService_ActionResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HarborNpcEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HarborNpcEventList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHarborNpcEventService_EventRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHarborNpcEventService_EventResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHarborNpcEventService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHarborNpcEventNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHarborNpcStealActionService_ActionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHarborNpcStealActionService_ActionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHarborNpcStealActionService.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, eventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, npcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, param_roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, param_npcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEvent, param_funitureid_),
  0,
  7,
  1,
  2,
  3,
  5,
  6,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEventList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEventList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::HarborNpcEventList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService_EventRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService_EventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService_EventRequest, cmd_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService_EventResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService_EventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService_EventResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService_EventResponse, event_list_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcEventNotify, event_list_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionRequest, npcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionRequest, sailorid_list_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService_ActionResponse, reward_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserHarborNpcStealActionService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::sg::HarborNpcEvent)},
  { 21, 27, sizeof(::sg::HarborNpcEventList)},
  { 28, 34, sizeof(::sg::UserHarborNpcEventService_EventRequest)},
  { 35, 42, sizeof(::sg::UserHarborNpcEventService_EventResponse)},
  { 44, 51, sizeof(::sg::UserHarborNpcEventService)},
  { 53, 59, sizeof(::sg::UserHarborNpcEventNotify)},
  { 60, 68, sizeof(::sg::UserHarborNpcStealActionService_ActionRequest)},
  { 71, 78, sizeof(::sg::UserHarborNpcStealActionService_ActionResponse)},
  { 80, 87, sizeof(::sg::UserHarborNpcStealActionService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_HarborNpcEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_HarborNpcEventList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserHarborNpcEventService_EventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserHarborNpcEventService_EventResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserHarborNpcEventService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserHarborNpcEventNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserHarborNpcStealActionService_ActionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserHarborNpcStealActionService_ActionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserHarborNpcStealActionService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserHarbourNpcEvent.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031UserHarbourNpcEvent.proto\022\002sg\032\020BaseStr"
      "uct.proto\"\301\001\n\016HarborNpcEvent\022\017\n\007eventid\030"
      "\001 \002(\005\022-\n\nevent_type\030\002 \002(\0162\031.sg.HARBOR_NP"
      "C_EVENT_TYPE\022\r\n\005npcid\030\003 \002(\005\022\r\n\005state\030\004 \002"
      "(\005\022\014\n\004step\030\014 \001(\005\022\024\n\014param_roomid\030\r \001(\005\022\023"
      "\n\013param_npcid\030\016 \001(\005\022\030\n\020param_funitureid\030"
      "\017 \001(\005\"6\n\022HarborNpcEventList\022 \n\004list\030\001 \003("
      "\0132\022.sg.HarborNpcEvent\"\302\002\n\031UserHarborNpcE"
      "ventService\0227\n\003req\030\001 \001(\0132*.sg.UserHarbor"
      "NpcEventService.EventRequest\0229\n\004resp\030\002 \001"
      "(\0132+.sg.UserHarborNpcEventService.EventR"
      "esponse\032H\n\014EventRequest\0228\n\003cmd\030\001 \002(\0162+.s"
      "g.UserHarborNpcEventService.EVENT_COMMAN"
      "D\032K\n\rEventResponse\022\016\n\006result\030\001 \002(\005\022*\n\nev"
      "ent_list\030\002 \001(\0132\026.sg.HarborNpcEventList\"\032"
      "\n\rEVENT_COMMAND\022\t\n\005QUERY\020\001\"F\n\030UserHarbor"
      "NpcEventNotify\022*\n\nevent_list\030\001 \002(\0132\026.sg."
      "HarborNpcEventList\"\217\003\n\037UserHarborNpcStea"
      "lActionService\022>\n\003req\030\001 \001(\01321.sg.UserHar"
      "borNpcStealActionService.ActionRequest\022@"
      "\n\004resp\030\002 \001(\01322.sg.UserHarborNpcStealActi"
      "onService.ActionResponse\032v\n\rActionReques"
      "t\022\?\n\003cmd\030\001 \002(\01622.sg.UserHarborNpcStealAc"
      "tionService.ACTION_COMMAND\022\r\n\005npcid\030\002 \001("
      "\005\022\025\n\rsailorid_list\030\003 \003(\005\032\?\n\016ActionRespon"
      "se\022\016\n\006result\030\001 \002(\005\022\035\n\013reward_list\030\002 \003(\0132"
      "\010.sg.Item\"1\n\016ACTION_COMMAND\022\r\n\tNPC_STEAL"
      "\020\001\022\020\n\014PLAYER_CATCH\020\002*\224\003\n\017OCCUPATION_TYPE"
      "\022\032\n\026OCCUPATION_TYPE_COMMON\020\001\022\032\n\026OCCUPATI"
      "ON_TYPE_BEGGAR\020\002\022\032\n\026OCCUPATION_TYPE_VEND"
      "OR\020\003\022\031\n\025OCCUPATION_TYPE_THIEF\020\004\022!\n\035OCCUP"
      "ATION_TYPE_DINE_AND_DASH\020\005\022\030\n\024OCCUPATION"
      "_TYPE_VIP_\020\006\022\030\n\024OCCUPATION_TYPE_KING\020\007\022 "
      "\n\034OCCUPATION_TYPE_HUNGRY_GHOST\020\013\022\034\n\030OCCU"
      "PATION_TYPE_DRUNKARD\020\014\022\037\n\033OCCUPATION_TYP"
      "E_TRANSFORMER\020\r\022\034\n\030OCCUPATION_TYPE_DRUGS"
      "TER\020\016\022\031\n\025OCCUPATION_TYPE_CLOWN\020e\022!\n\035OCCU"
      "PATION_TYPE_DOUBLE_WALKER\020f*\322\001\n\020OCCUPATI"
      "ON_STAGE\022\030\n\024OCCUPATION_STAGE_ANY\020\000\022\033\n\027OC"
      "CUPATION_STAGE_HARBOR\020\001\022 \n\034OCCUPATION_ST"
      "AGE_SHIP_ENTERY\020\002\022$\n OCCUPATION_STAGE_MA"
      "KE_FOOD_ORDER\020\003\022 \n\034OCCUPATION_STAGE_EATI"
      "NG_OVER\020\004\022\035\n\031OCCUPATION_STAGE_PAY_OVER\020\005"
      "*\227\002\n\025HARBOR_NPC_EVENT_TYPE\022\"\n\036HARBOR_NPC"
      "_EVENT_TYPE_STEALING\020\001\022!\n\035HARBOR_NPC_EVE"
      "NT_TYPE_DASHING\020\002\022\035\n\031HARBOR_NPC_EVENT_TY"
      "PE_VIP\020\003\022\036\n\032HARBOR_NPC_EVENT_TYPE_KING\020\004"
      "\022$\n HARBOR_NPC_EVENT_TYPE_STARVATION\020\005\022+"
      "\n\'HARBOR_NPC_EVENT_TYPE_FIGHT_TRANSFORME"
      "R\020\013\022%\n!HARBOR_NPC_EVENT_TYPE_FIGHT_STAGE"
      "\020\014*[\n\026HARBOR_NPC_EVENT_STATE\022\037\n\033HARBOR_N"
      "PC_EVENT_STATE_OPEN\020\001\022 \n\034HARBOR_NPC_EVEN"
      "T_STATE_CLOSE\020\002B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2100);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserHarbourNpcEvent.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserHarbourNpcEvent_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserHarborNpcEventService_EVENT_COMMAND_descriptor() {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserHarbourNpcEvent_2eproto::file_level_enum_descriptors[0];
}
bool UserHarborNpcEventService_EVENT_COMMAND_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserHarborNpcEventService_EVENT_COMMAND UserHarborNpcEventService::QUERY;
const UserHarborNpcEventService_EVENT_COMMAND UserHarborNpcEventService::EVENT_COMMAND_MIN;
const UserHarborNpcEventService_EVENT_COMMAND UserHarborNpcEventService::EVENT_COMMAND_MAX;
const int UserHarborNpcEventService::EVENT_COMMAND_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserHarborNpcStealActionService_ACTION_COMMAND_descriptor() {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserHarbourNpcEvent_2eproto::file_level_enum_descriptors[1];
}
bool UserHarborNpcStealActionService_ACTION_COMMAND_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserHarborNpcStealActionService_ACTION_COMMAND UserHarborNpcStealActionService::NPC_STEAL;
const UserHarborNpcStealActionService_ACTION_COMMAND UserHarborNpcStealActionService::PLAYER_CATCH;
const UserHarborNpcStealActionService_ACTION_COMMAND UserHarborNpcStealActionService::ACTION_COMMAND_MIN;
const UserHarborNpcStealActionService_ACTION_COMMAND UserHarborNpcStealActionService::ACTION_COMMAND_MAX;
const int UserHarborNpcStealActionService::ACTION_COMMAND_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OCCUPATION_TYPE_descriptor() {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserHarbourNpcEvent_2eproto::file_level_enum_descriptors[2];
}
bool OCCUPATION_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 11:
    case 12:
    case 13:
    case 14:
    case 101:
    case 102:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OCCUPATION_STAGE_descriptor() {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserHarbourNpcEvent_2eproto::file_level_enum_descriptors[3];
}
bool OCCUPATION_STAGE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HARBOR_NPC_EVENT_TYPE_descriptor() {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserHarbourNpcEvent_2eproto::file_level_enum_descriptors[4];
}
bool HARBOR_NPC_EVENT_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HARBOR_NPC_EVENT_STATE_descriptor() {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserHarbourNpcEvent_2eproto::file_level_enum_descriptors[5];
}
bool HARBOR_NPC_EVENT_STATE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void HarborNpcEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HarborNpcEvent::kEventidFieldNumber;
const int HarborNpcEvent::kEventTypeFieldNumber;
const int HarborNpcEvent::kNpcidFieldNumber;
const int HarborNpcEvent::kStateFieldNumber;
const int HarborNpcEvent::kStepFieldNumber;
const int HarborNpcEvent::kParamRoomidFieldNumber;
const int HarborNpcEvent::kParamNpcidFieldNumber;
const int HarborNpcEvent::kParamFunitureidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HarborNpcEvent::HarborNpcEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.HarborNpcEvent)
}
HarborNpcEvent::HarborNpcEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.HarborNpcEvent)
}
HarborNpcEvent::HarborNpcEvent(const HarborNpcEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eventid_, &from.eventid_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_type_) -
    reinterpret_cast<char*>(&eventid_)) + sizeof(event_type_));
  // @@protoc_insertion_point(copy_constructor:sg.HarborNpcEvent)
}

void HarborNpcEvent::SharedCtor() {
  ::memset(&eventid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_npcid_) -
      reinterpret_cast<char*>(&eventid_)) + sizeof(param_npcid_));
  event_type_ = 1;
}

HarborNpcEvent::~HarborNpcEvent() {
  // @@protoc_insertion_point(destructor:sg.HarborNpcEvent)
  SharedDtor();
}

void HarborNpcEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HarborNpcEvent::ArenaDtor(void* object) {
  HarborNpcEvent* _this = reinterpret_cast< HarborNpcEvent* >(object);
  (void)_this;
}
void HarborNpcEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HarborNpcEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HarborNpcEvent::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HarborNpcEvent& HarborNpcEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEvent.base);
  return *internal_default_instance();
}


void HarborNpcEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.HarborNpcEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&eventid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&param_npcid_) -
        reinterpret_cast<char*>(&eventid_)) + sizeof(param_npcid_));
    event_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HarborNpcEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.HarborNpcEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 eventid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eventid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .sg.HARBOR_NPC_EVENT_TYPE event_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::HARBOR_NPC_EVENT_TYPE_IsValid(value)) {
            set_event_type(static_cast< ::sg::HARBOR_NPC_EVENT_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 npcid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_npcid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 step = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_step();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 param_roomid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_param_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 param_npcid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_param_npcid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_npcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 param_funitureid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_param_funitureid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_funitureid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.HarborNpcEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.HarborNpcEvent)
  return false;
#undef DO_
}

void HarborNpcEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.HarborNpcEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 eventid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eventid(), output);
  }

  // required .sg.HARBOR_NPC_EVENT_TYPE event_type = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->event_type(), output);
  }

  // required int32 npcid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->npcid(), output);
  }

  // required int32 state = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // optional int32 step = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->step(), output);
  }

  // optional int32 param_roomid = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->param_roomid(), output);
  }

  // optional int32 param_npcid = 14;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->param_npcid(), output);
  }

  // optional int32 param_funitureid = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->param_funitureid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.HarborNpcEvent)
}

::google::protobuf::uint8* HarborNpcEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.HarborNpcEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 eventid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eventid(), target);
  }

  // required .sg.HARBOR_NPC_EVENT_TYPE event_type = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->event_type(), target);
  }

  // required int32 npcid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->npcid(), target);
  }

  // required int32 state = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // optional int32 step = 12;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->step(), target);
  }

  // optional int32 param_roomid = 13;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->param_roomid(), target);
  }

  // optional int32 param_npcid = 14;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->param_npcid(), target);
  }

  // optional int32 param_funitureid = 15;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->param_funitureid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.HarborNpcEvent)
  return target;
}

size_t HarborNpcEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.HarborNpcEvent)
  size_t total_size = 0;

  if (has_eventid()) {
    // required int32 eventid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eventid());
  }

  if (has_npcid()) {
    // required int32 npcid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->npcid());
  }

  if (has_state()) {
    // required int32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_event_type()) {
    // required .sg.HARBOR_NPC_EVENT_TYPE event_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
  }

  return total_size;
}
size_t HarborNpcEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.HarborNpcEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000087) ^ 0x00000087) == 0) {  // All required fields are present.
    // required int32 eventid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eventid());

    // required int32 npcid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->npcid());

    // required int32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required .sg.HARBOR_NPC_EVENT_TYPE event_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 120u) {
    // optional int32 step = 12;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->step());
    }

    // optional int32 param_funitureid = 15;
    if (has_param_funitureid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param_funitureid());
    }

    // optional int32 param_roomid = 13;
    if (has_param_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param_roomid());
    }

    // optional int32 param_npcid = 14;
    if (has_param_npcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param_npcid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HarborNpcEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.HarborNpcEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const HarborNpcEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HarborNpcEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.HarborNpcEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.HarborNpcEvent)
    MergeFrom(*source);
  }
}

void HarborNpcEvent::MergeFrom(const HarborNpcEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.HarborNpcEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      eventid_ = from.eventid_;
    }
    if (cached_has_bits & 0x00000002u) {
      npcid_ = from.npcid_;
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000008u) {
      step_ = from.step_;
    }
    if (cached_has_bits & 0x00000010u) {
      param_funitureid_ = from.param_funitureid_;
    }
    if (cached_has_bits & 0x00000020u) {
      param_roomid_ = from.param_roomid_;
    }
    if (cached_has_bits & 0x00000040u) {
      param_npcid_ = from.param_npcid_;
    }
    if (cached_has_bits & 0x00000080u) {
      event_type_ = from.event_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HarborNpcEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.HarborNpcEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HarborNpcEvent::CopyFrom(const HarborNpcEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.HarborNpcEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HarborNpcEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000087) != 0x00000087) return false;
  return true;
}

void HarborNpcEvent::Swap(HarborNpcEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HarborNpcEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HarborNpcEvent::UnsafeArenaSwap(HarborNpcEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HarborNpcEvent::InternalSwap(HarborNpcEvent* other) {
  using std::swap;
  swap(eventid_, other->eventid_);
  swap(npcid_, other->npcid_);
  swap(state_, other->state_);
  swap(step_, other->step_);
  swap(param_funitureid_, other->param_funitureid_);
  swap(param_roomid_, other->param_roomid_);
  swap(param_npcid_, other->param_npcid_);
  swap(event_type_, other->event_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HarborNpcEvent::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HarborNpcEventList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HarborNpcEventList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HarborNpcEventList::HarborNpcEventList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEventList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.HarborNpcEventList)
}
HarborNpcEventList::HarborNpcEventList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEventList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.HarborNpcEventList)
}
HarborNpcEventList::HarborNpcEventList(const HarborNpcEventList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sg.HarborNpcEventList)
}

void HarborNpcEventList::SharedCtor() {
}

HarborNpcEventList::~HarborNpcEventList() {
  // @@protoc_insertion_point(destructor:sg.HarborNpcEventList)
  SharedDtor();
}

void HarborNpcEventList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void HarborNpcEventList::ArenaDtor(void* object) {
  HarborNpcEventList* _this = reinterpret_cast< HarborNpcEventList* >(object);
  (void)_this;
}
void HarborNpcEventList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HarborNpcEventList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HarborNpcEventList::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HarborNpcEventList& HarborNpcEventList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_HarborNpcEventList.base);
  return *internal_default_instance();
}


void HarborNpcEventList::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.HarborNpcEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HarborNpcEventList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.HarborNpcEventList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sg.HarborNpcEvent list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.HarborNpcEventList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.HarborNpcEventList)
  return false;
#undef DO_
}

void HarborNpcEventList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.HarborNpcEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sg.HarborNpcEvent list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.HarborNpcEventList)
}

::google::protobuf::uint8* HarborNpcEventList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.HarborNpcEventList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sg.HarborNpcEvent list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.HarborNpcEventList)
  return target;
}

size_t HarborNpcEventList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.HarborNpcEventList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .sg.HarborNpcEvent list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HarborNpcEventList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.HarborNpcEventList)
  GOOGLE_DCHECK_NE(&from, this);
  const HarborNpcEventList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HarborNpcEventList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.HarborNpcEventList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.HarborNpcEventList)
    MergeFrom(*source);
  }
}

void HarborNpcEventList::MergeFrom(const HarborNpcEventList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.HarborNpcEventList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void HarborNpcEventList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.HarborNpcEventList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HarborNpcEventList::CopyFrom(const HarborNpcEventList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.HarborNpcEventList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HarborNpcEventList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void HarborNpcEventList::Swap(HarborNpcEventList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HarborNpcEventList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HarborNpcEventList::UnsafeArenaSwap(HarborNpcEventList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HarborNpcEventList::InternalSwap(HarborNpcEventList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HarborNpcEventList::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHarborNpcEventService_EventRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHarborNpcEventService_EventRequest::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHarborNpcEventService_EventRequest::UserHarborNpcEventService_EventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService_EventRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserHarborNpcEventService.EventRequest)
}
UserHarborNpcEventService_EventRequest::UserHarborNpcEventService_EventRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService_EventRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserHarborNpcEventService.EventRequest)
}
UserHarborNpcEventService_EventRequest::UserHarborNpcEventService_EventRequest(const UserHarborNpcEventService_EventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_ = from.cmd_;
  // @@protoc_insertion_point(copy_constructor:sg.UserHarborNpcEventService.EventRequest)
}

void UserHarborNpcEventService_EventRequest::SharedCtor() {
  cmd_ = 1;
}

UserHarborNpcEventService_EventRequest::~UserHarborNpcEventService_EventRequest() {
  // @@protoc_insertion_point(destructor:sg.UserHarborNpcEventService.EventRequest)
  SharedDtor();
}

void UserHarborNpcEventService_EventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserHarborNpcEventService_EventRequest::ArenaDtor(void* object) {
  UserHarborNpcEventService_EventRequest* _this = reinterpret_cast< UserHarborNpcEventService_EventRequest* >(object);
  (void)_this;
}
void UserHarborNpcEventService_EventRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserHarborNpcEventService_EventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHarborNpcEventService_EventRequest::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHarborNpcEventService_EventRequest& UserHarborNpcEventService_EventRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService_EventRequest.base);
  return *internal_default_instance();
}


void UserHarborNpcEventService_EventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserHarborNpcEventService.EventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHarborNpcEventService_EventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserHarborNpcEventService.EventRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserHarborNpcEventService.EVENT_COMMAND cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserHarborNpcEventService_EVENT_COMMAND_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserHarborNpcEventService_EVENT_COMMAND >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserHarborNpcEventService.EventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserHarborNpcEventService.EventRequest)
  return false;
#undef DO_
}

void UserHarborNpcEventService_EventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserHarborNpcEventService.EventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserHarborNpcEventService.EVENT_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserHarborNpcEventService.EventRequest)
}

::google::protobuf::uint8* UserHarborNpcEventService_EventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserHarborNpcEventService.EventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserHarborNpcEventService.EVENT_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserHarborNpcEventService.EventRequest)
  return target;
}

size_t UserHarborNpcEventService_EventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserHarborNpcEventService.EventRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserHarborNpcEventService.EVENT_COMMAND cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHarborNpcEventService_EventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserHarborNpcEventService.EventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHarborNpcEventService_EventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHarborNpcEventService_EventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserHarborNpcEventService.EventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserHarborNpcEventService.EventRequest)
    MergeFrom(*source);
  }
}

void UserHarborNpcEventService_EventRequest::MergeFrom(const UserHarborNpcEventService_EventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserHarborNpcEventService.EventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cmd()) {
    set_cmd(from.cmd());
  }
}

void UserHarborNpcEventService_EventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserHarborNpcEventService.EventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHarborNpcEventService_EventRequest::CopyFrom(const UserHarborNpcEventService_EventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserHarborNpcEventService.EventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHarborNpcEventService_EventRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserHarborNpcEventService_EventRequest::Swap(UserHarborNpcEventService_EventRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserHarborNpcEventService_EventRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserHarborNpcEventService_EventRequest::UnsafeArenaSwap(UserHarborNpcEventService_EventRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserHarborNpcEventService_EventRequest::InternalSwap(UserHarborNpcEventService_EventRequest* other) {
  using std::swap;
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHarborNpcEventService_EventRequest::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHarborNpcEventService_EventResponse::InitAsDefaultInstance() {
  ::sg::_UserHarborNpcEventService_EventResponse_default_instance_._instance.get_mutable()->event_list_ = const_cast< ::sg::HarborNpcEventList*>(
      ::sg::HarborNpcEventList::internal_default_instance());
}
void UserHarborNpcEventService_EventResponse::unsafe_arena_set_allocated_event_list(
    ::sg::HarborNpcEventList* event_list) {
  if (GetArenaNoVirtual() == NULL) {
    delete event_list_;
  }
  event_list_ = event_list;
  if (event_list) {
    set_has_event_list();
  } else {
    clear_has_event_list();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserHarborNpcEventService.EventResponse.event_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHarborNpcEventService_EventResponse::kResultFieldNumber;
const int UserHarborNpcEventService_EventResponse::kEventListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHarborNpcEventService_EventResponse::UserHarborNpcEventService_EventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService_EventResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserHarborNpcEventService.EventResponse)
}
UserHarborNpcEventService_EventResponse::UserHarborNpcEventService_EventResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService_EventResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserHarborNpcEventService.EventResponse)
}
UserHarborNpcEventService_EventResponse::UserHarborNpcEventService_EventResponse(const UserHarborNpcEventService_EventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event_list()) {
    event_list_ = new ::sg::HarborNpcEventList(*from.event_list_);
  } else {
    event_list_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserHarborNpcEventService.EventResponse)
}

void UserHarborNpcEventService_EventResponse::SharedCtor() {
  ::memset(&event_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&event_list_)) + sizeof(result_));
}

UserHarborNpcEventService_EventResponse::~UserHarborNpcEventService_EventResponse() {
  // @@protoc_insertion_point(destructor:sg.UserHarborNpcEventService.EventResponse)
  SharedDtor();
}

void UserHarborNpcEventService_EventResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete event_list_;
}

void UserHarborNpcEventService_EventResponse::ArenaDtor(void* object) {
  UserHarborNpcEventService_EventResponse* _this = reinterpret_cast< UserHarborNpcEventService_EventResponse* >(object);
  (void)_this;
}
void UserHarborNpcEventService_EventResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserHarborNpcEventService_EventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHarborNpcEventService_EventResponse::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHarborNpcEventService_EventResponse& UserHarborNpcEventService_EventResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService_EventResponse.base);
  return *internal_default_instance();
}


void UserHarborNpcEventService_EventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserHarborNpcEventService.EventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(event_list_ != NULL);
    event_list_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHarborNpcEventService_EventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserHarborNpcEventService.EventResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.HarborNpcEventList event_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserHarborNpcEventService.EventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserHarborNpcEventService.EventResponse)
  return false;
#undef DO_
}

void UserHarborNpcEventService_EventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserHarborNpcEventService.EventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .sg.HarborNpcEventList event_list = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_event_list(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserHarborNpcEventService.EventResponse)
}

::google::protobuf::uint8* UserHarborNpcEventService_EventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserHarborNpcEventService.EventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .sg.HarborNpcEventList event_list = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_event_list(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserHarborNpcEventService.EventResponse)
  return target;
}

size_t UserHarborNpcEventService_EventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserHarborNpcEventService.EventResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // optional .sg.HarborNpcEventList event_list = 2;
  if (has_event_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_list_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHarborNpcEventService_EventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserHarborNpcEventService.EventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHarborNpcEventService_EventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHarborNpcEventService_EventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserHarborNpcEventService.EventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserHarborNpcEventService.EventResponse)
    MergeFrom(*source);
  }
}

void UserHarborNpcEventService_EventResponse::MergeFrom(const UserHarborNpcEventService_EventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserHarborNpcEventService.EventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_event_list()->::sg::HarborNpcEventList::MergeFrom(from.event_list());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserHarborNpcEventService_EventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserHarborNpcEventService.EventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHarborNpcEventService_EventResponse::CopyFrom(const UserHarborNpcEventService_EventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserHarborNpcEventService.EventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHarborNpcEventService_EventResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_event_list()) {
    if (!this->event_list_->IsInitialized()) return false;
  }
  return true;
}

void UserHarborNpcEventService_EventResponse::Swap(UserHarborNpcEventService_EventResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserHarborNpcEventService_EventResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserHarborNpcEventService_EventResponse::UnsafeArenaSwap(UserHarborNpcEventService_EventResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserHarborNpcEventService_EventResponse::InternalSwap(UserHarborNpcEventService_EventResponse* other) {
  using std::swap;
  swap(event_list_, other->event_list_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHarborNpcEventService_EventResponse::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHarborNpcEventService::InitAsDefaultInstance() {
  ::sg::_UserHarborNpcEventService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserHarborNpcEventService_EventRequest*>(
      ::sg::UserHarborNpcEventService_EventRequest::internal_default_instance());
  ::sg::_UserHarborNpcEventService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserHarborNpcEventService_EventResponse*>(
      ::sg::UserHarborNpcEventService_EventResponse::internal_default_instance());
}
void UserHarborNpcEventService::unsafe_arena_set_allocated_req(
    ::sg::UserHarborNpcEventService_EventRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserHarborNpcEventService.req)
}
void UserHarborNpcEventService::unsafe_arena_set_allocated_resp(
    ::sg::UserHarborNpcEventService_EventResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserHarborNpcEventService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHarborNpcEventService::kReqFieldNumber;
const int UserHarborNpcEventService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHarborNpcEventService::UserHarborNpcEventService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserHarborNpcEventService)
}
UserHarborNpcEventService::UserHarborNpcEventService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserHarborNpcEventService)
}
UserHarborNpcEventService::UserHarborNpcEventService(const UserHarborNpcEventService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserHarborNpcEventService_EventRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserHarborNpcEventService_EventResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserHarborNpcEventService)
}

void UserHarborNpcEventService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserHarborNpcEventService::~UserHarborNpcEventService() {
  // @@protoc_insertion_point(destructor:sg.UserHarborNpcEventService)
  SharedDtor();
}

void UserHarborNpcEventService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserHarborNpcEventService::ArenaDtor(void* object) {
  UserHarborNpcEventService* _this = reinterpret_cast< UserHarborNpcEventService* >(object);
  (void)_this;
}
void UserHarborNpcEventService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserHarborNpcEventService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHarborNpcEventService::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHarborNpcEventService& UserHarborNpcEventService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventService.base);
  return *internal_default_instance();
}


void UserHarborNpcEventService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserHarborNpcEventService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHarborNpcEventService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserHarborNpcEventService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserHarborNpcEventService.EventRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserHarborNpcEventService.EventResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserHarborNpcEventService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserHarborNpcEventService)
  return false;
#undef DO_
}

void UserHarborNpcEventService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserHarborNpcEventService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserHarborNpcEventService.EventRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserHarborNpcEventService.EventResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserHarborNpcEventService)
}

::google::protobuf::uint8* UserHarborNpcEventService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserHarborNpcEventService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserHarborNpcEventService.EventRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserHarborNpcEventService.EventResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserHarborNpcEventService)
  return target;
}

size_t UserHarborNpcEventService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserHarborNpcEventService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserHarborNpcEventService.EventRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserHarborNpcEventService.EventResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHarborNpcEventService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserHarborNpcEventService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHarborNpcEventService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHarborNpcEventService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserHarborNpcEventService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserHarborNpcEventService)
    MergeFrom(*source);
  }
}

void UserHarborNpcEventService::MergeFrom(const UserHarborNpcEventService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserHarborNpcEventService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserHarborNpcEventService_EventRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserHarborNpcEventService_EventResponse::MergeFrom(from.resp());
    }
  }
}

void UserHarborNpcEventService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserHarborNpcEventService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHarborNpcEventService::CopyFrom(const UserHarborNpcEventService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserHarborNpcEventService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHarborNpcEventService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserHarborNpcEventService::Swap(UserHarborNpcEventService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserHarborNpcEventService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserHarborNpcEventService::UnsafeArenaSwap(UserHarborNpcEventService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserHarborNpcEventService::InternalSwap(UserHarborNpcEventService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHarborNpcEventService::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHarborNpcEventNotify::InitAsDefaultInstance() {
  ::sg::_UserHarborNpcEventNotify_default_instance_._instance.get_mutable()->event_list_ = const_cast< ::sg::HarborNpcEventList*>(
      ::sg::HarborNpcEventList::internal_default_instance());
}
void UserHarborNpcEventNotify::unsafe_arena_set_allocated_event_list(
    ::sg::HarborNpcEventList* event_list) {
  if (GetArenaNoVirtual() == NULL) {
    delete event_list_;
  }
  event_list_ = event_list;
  if (event_list) {
    set_has_event_list();
  } else {
    clear_has_event_list();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserHarborNpcEventNotify.event_list)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHarborNpcEventNotify::kEventListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHarborNpcEventNotify::UserHarborNpcEventNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserHarborNpcEventNotify)
}
UserHarborNpcEventNotify::UserHarborNpcEventNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserHarborNpcEventNotify)
}
UserHarborNpcEventNotify::UserHarborNpcEventNotify(const UserHarborNpcEventNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event_list()) {
    event_list_ = new ::sg::HarborNpcEventList(*from.event_list_);
  } else {
    event_list_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserHarborNpcEventNotify)
}

void UserHarborNpcEventNotify::SharedCtor() {
  event_list_ = NULL;
}

UserHarborNpcEventNotify::~UserHarborNpcEventNotify() {
  // @@protoc_insertion_point(destructor:sg.UserHarborNpcEventNotify)
  SharedDtor();
}

void UserHarborNpcEventNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete event_list_;
}

void UserHarborNpcEventNotify::ArenaDtor(void* object) {
  UserHarborNpcEventNotify* _this = reinterpret_cast< UserHarborNpcEventNotify* >(object);
  (void)_this;
}
void UserHarborNpcEventNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserHarborNpcEventNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHarborNpcEventNotify::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHarborNpcEventNotify& UserHarborNpcEventNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcEventNotify.base);
  return *internal_default_instance();
}


void UserHarborNpcEventNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserHarborNpcEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(event_list_ != NULL);
    event_list_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHarborNpcEventNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserHarborNpcEventNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.HarborNpcEventList event_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserHarborNpcEventNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserHarborNpcEventNotify)
  return false;
#undef DO_
}

void UserHarborNpcEventNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserHarborNpcEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.HarborNpcEventList event_list = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_event_list(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserHarborNpcEventNotify)
}

::google::protobuf::uint8* UserHarborNpcEventNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserHarborNpcEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.HarborNpcEventList event_list = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_event_list(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserHarborNpcEventNotify)
  return target;
}

size_t UserHarborNpcEventNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserHarborNpcEventNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.HarborNpcEventList event_list = 1;
  if (has_event_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_list_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHarborNpcEventNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserHarborNpcEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHarborNpcEventNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHarborNpcEventNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserHarborNpcEventNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserHarborNpcEventNotify)
    MergeFrom(*source);
  }
}

void UserHarborNpcEventNotify::MergeFrom(const UserHarborNpcEventNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserHarborNpcEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_event_list()) {
    mutable_event_list()->::sg::HarborNpcEventList::MergeFrom(from.event_list());
  }
}

void UserHarborNpcEventNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserHarborNpcEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHarborNpcEventNotify::CopyFrom(const UserHarborNpcEventNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserHarborNpcEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHarborNpcEventNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_event_list()) {
    if (!this->event_list_->IsInitialized()) return false;
  }
  return true;
}

void UserHarborNpcEventNotify::Swap(UserHarborNpcEventNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserHarborNpcEventNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserHarborNpcEventNotify::UnsafeArenaSwap(UserHarborNpcEventNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserHarborNpcEventNotify::InternalSwap(UserHarborNpcEventNotify* other) {
  using std::swap;
  swap(event_list_, other->event_list_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHarborNpcEventNotify::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHarborNpcStealActionService_ActionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHarborNpcStealActionService_ActionRequest::kCmdFieldNumber;
const int UserHarborNpcStealActionService_ActionRequest::kNpcidFieldNumber;
const int UserHarborNpcStealActionService_ActionRequest::kSailoridListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHarborNpcStealActionService_ActionRequest::UserHarborNpcStealActionService_ActionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService_ActionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserHarborNpcStealActionService.ActionRequest)
}
UserHarborNpcStealActionService_ActionRequest::UserHarborNpcStealActionService_ActionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  sailorid_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService_ActionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserHarborNpcStealActionService.ActionRequest)
}
UserHarborNpcStealActionService_ActionRequest::UserHarborNpcStealActionService_ActionRequest(const UserHarborNpcStealActionService_ActionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sailorid_list_(from.sailorid_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&npcid_, &from.npcid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&npcid_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.UserHarborNpcStealActionService.ActionRequest)
}

void UserHarborNpcStealActionService_ActionRequest::SharedCtor() {
  npcid_ = 0;
  cmd_ = 1;
}

UserHarborNpcStealActionService_ActionRequest::~UserHarborNpcStealActionService_ActionRequest() {
  // @@protoc_insertion_point(destructor:sg.UserHarborNpcStealActionService.ActionRequest)
  SharedDtor();
}

void UserHarborNpcStealActionService_ActionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserHarborNpcStealActionService_ActionRequest::ArenaDtor(void* object) {
  UserHarborNpcStealActionService_ActionRequest* _this = reinterpret_cast< UserHarborNpcStealActionService_ActionRequest* >(object);
  (void)_this;
}
void UserHarborNpcStealActionService_ActionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserHarborNpcStealActionService_ActionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHarborNpcStealActionService_ActionRequest::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHarborNpcStealActionService_ActionRequest& UserHarborNpcStealActionService_ActionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService_ActionRequest.base);
  return *internal_default_instance();
}


void UserHarborNpcStealActionService_ActionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserHarborNpcStealActionService.ActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sailorid_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    npcid_ = 0;
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHarborNpcStealActionService_ActionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserHarborNpcStealActionService.ActionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserHarborNpcStealActionService.ACTION_COMMAND cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserHarborNpcStealActionService_ACTION_COMMAND_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserHarborNpcStealActionService_ACTION_COMMAND >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 npcid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_npcid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 sailorid_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_sailorid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sailorid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserHarborNpcStealActionService.ActionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserHarborNpcStealActionService.ActionRequest)
  return false;
#undef DO_
}

void UserHarborNpcStealActionService_ActionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserHarborNpcStealActionService.ActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserHarborNpcStealActionService.ACTION_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 npcid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->npcid(), output);
  }

  // repeated int32 sailorid_list = 3;
  for (int i = 0, n = this->sailorid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->sailorid_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserHarborNpcStealActionService.ActionRequest)
}

::google::protobuf::uint8* UserHarborNpcStealActionService_ActionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserHarborNpcStealActionService.ActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserHarborNpcStealActionService.ACTION_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 npcid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->npcid(), target);
  }

  // repeated int32 sailorid_list = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->sailorid_list_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserHarborNpcStealActionService.ActionRequest)
  return target;
}

size_t UserHarborNpcStealActionService_ActionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserHarborNpcStealActionService.ActionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserHarborNpcStealActionService.ACTION_COMMAND cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // repeated int32 sailorid_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->sailorid_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->sailorid_list_size());
    total_size += data_size;
  }

  // optional int32 npcid = 2;
  if (has_npcid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->npcid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHarborNpcStealActionService_ActionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserHarborNpcStealActionService.ActionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHarborNpcStealActionService_ActionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHarborNpcStealActionService_ActionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserHarborNpcStealActionService.ActionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserHarborNpcStealActionService.ActionRequest)
    MergeFrom(*source);
  }
}

void UserHarborNpcStealActionService_ActionRequest::MergeFrom(const UserHarborNpcStealActionService_ActionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserHarborNpcStealActionService.ActionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sailorid_list_.MergeFrom(from.sailorid_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      npcid_ = from.npcid_;
    }
    if (cached_has_bits & 0x00000002u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserHarborNpcStealActionService_ActionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserHarborNpcStealActionService.ActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHarborNpcStealActionService_ActionRequest::CopyFrom(const UserHarborNpcStealActionService_ActionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserHarborNpcStealActionService.ActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHarborNpcStealActionService_ActionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void UserHarborNpcStealActionService_ActionRequest::Swap(UserHarborNpcStealActionService_ActionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserHarborNpcStealActionService_ActionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserHarborNpcStealActionService_ActionRequest::UnsafeArenaSwap(UserHarborNpcStealActionService_ActionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserHarborNpcStealActionService_ActionRequest::InternalSwap(UserHarborNpcStealActionService_ActionRequest* other) {
  using std::swap;
  sailorid_list_.InternalSwap(&other->sailorid_list_);
  swap(npcid_, other->npcid_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHarborNpcStealActionService_ActionRequest::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHarborNpcStealActionService_ActionResponse::InitAsDefaultInstance() {
}
void UserHarborNpcStealActionService_ActionResponse::clear_reward_list() {
  reward_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHarborNpcStealActionService_ActionResponse::kResultFieldNumber;
const int UserHarborNpcStealActionService_ActionResponse::kRewardListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHarborNpcStealActionService_ActionResponse::UserHarborNpcStealActionService_ActionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService_ActionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserHarborNpcStealActionService.ActionResponse)
}
UserHarborNpcStealActionService_ActionResponse::UserHarborNpcStealActionService_ActionResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  reward_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService_ActionResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserHarborNpcStealActionService.ActionResponse)
}
UserHarborNpcStealActionService_ActionResponse::UserHarborNpcStealActionService_ActionResponse(const UserHarborNpcStealActionService_ActionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      reward_list_(from.reward_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserHarborNpcStealActionService.ActionResponse)
}

void UserHarborNpcStealActionService_ActionResponse::SharedCtor() {
  result_ = 0;
}

UserHarborNpcStealActionService_ActionResponse::~UserHarborNpcStealActionService_ActionResponse() {
  // @@protoc_insertion_point(destructor:sg.UserHarborNpcStealActionService.ActionResponse)
  SharedDtor();
}

void UserHarborNpcStealActionService_ActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserHarborNpcStealActionService_ActionResponse::ArenaDtor(void* object) {
  UserHarborNpcStealActionService_ActionResponse* _this = reinterpret_cast< UserHarborNpcStealActionService_ActionResponse* >(object);
  (void)_this;
}
void UserHarborNpcStealActionService_ActionResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserHarborNpcStealActionService_ActionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHarborNpcStealActionService_ActionResponse::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHarborNpcStealActionService_ActionResponse& UserHarborNpcStealActionService_ActionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService_ActionResponse.base);
  return *internal_default_instance();
}


void UserHarborNpcStealActionService_ActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserHarborNpcStealActionService.ActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward_list_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHarborNpcStealActionService_ActionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserHarborNpcStealActionService.ActionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Item reward_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reward_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserHarborNpcStealActionService.ActionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserHarborNpcStealActionService.ActionResponse)
  return false;
#undef DO_
}

void UserHarborNpcStealActionService_ActionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserHarborNpcStealActionService.ActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .sg.Item reward_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reward_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->reward_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserHarborNpcStealActionService.ActionResponse)
}

::google::protobuf::uint8* UserHarborNpcStealActionService_ActionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserHarborNpcStealActionService.ActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .sg.Item reward_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reward_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->reward_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserHarborNpcStealActionService.ActionResponse)
  return target;
}

size_t UserHarborNpcStealActionService_ActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserHarborNpcStealActionService.ActionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.Item reward_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->reward_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reward_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHarborNpcStealActionService_ActionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserHarborNpcStealActionService.ActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHarborNpcStealActionService_ActionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHarborNpcStealActionService_ActionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserHarborNpcStealActionService.ActionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserHarborNpcStealActionService.ActionResponse)
    MergeFrom(*source);
  }
}

void UserHarborNpcStealActionService_ActionResponse::MergeFrom(const UserHarborNpcStealActionService_ActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserHarborNpcStealActionService.ActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reward_list_.MergeFrom(from.reward_list_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void UserHarborNpcStealActionService_ActionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserHarborNpcStealActionService.ActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHarborNpcStealActionService_ActionResponse::CopyFrom(const UserHarborNpcStealActionService_ActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserHarborNpcStealActionService.ActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHarborNpcStealActionService_ActionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reward_list())) return false;
  return true;
}

void UserHarborNpcStealActionService_ActionResponse::Swap(UserHarborNpcStealActionService_ActionResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserHarborNpcStealActionService_ActionResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserHarborNpcStealActionService_ActionResponse::UnsafeArenaSwap(UserHarborNpcStealActionService_ActionResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserHarborNpcStealActionService_ActionResponse::InternalSwap(UserHarborNpcStealActionService_ActionResponse* other) {
  using std::swap;
  CastToBase(&reward_list_)->InternalSwap(CastToBase(&other->reward_list_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHarborNpcStealActionService_ActionResponse::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHarborNpcStealActionService::InitAsDefaultInstance() {
  ::sg::_UserHarborNpcStealActionService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserHarborNpcStealActionService_ActionRequest*>(
      ::sg::UserHarborNpcStealActionService_ActionRequest::internal_default_instance());
  ::sg::_UserHarborNpcStealActionService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserHarborNpcStealActionService_ActionResponse*>(
      ::sg::UserHarborNpcStealActionService_ActionResponse::internal_default_instance());
}
void UserHarborNpcStealActionService::unsafe_arena_set_allocated_req(
    ::sg::UserHarborNpcStealActionService_ActionRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserHarborNpcStealActionService.req)
}
void UserHarborNpcStealActionService::unsafe_arena_set_allocated_resp(
    ::sg::UserHarborNpcStealActionService_ActionResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserHarborNpcStealActionService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHarborNpcStealActionService::kReqFieldNumber;
const int UserHarborNpcStealActionService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHarborNpcStealActionService::UserHarborNpcStealActionService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserHarborNpcStealActionService)
}
UserHarborNpcStealActionService::UserHarborNpcStealActionService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserHarborNpcStealActionService)
}
UserHarborNpcStealActionService::UserHarborNpcStealActionService(const UserHarborNpcStealActionService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserHarborNpcStealActionService_ActionRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserHarborNpcStealActionService_ActionResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserHarborNpcStealActionService)
}

void UserHarborNpcStealActionService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserHarborNpcStealActionService::~UserHarborNpcStealActionService() {
  // @@protoc_insertion_point(destructor:sg.UserHarborNpcStealActionService)
  SharedDtor();
}

void UserHarborNpcStealActionService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserHarborNpcStealActionService::ArenaDtor(void* object) {
  UserHarborNpcStealActionService* _this = reinterpret_cast< UserHarborNpcStealActionService* >(object);
  (void)_this;
}
void UserHarborNpcStealActionService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserHarborNpcStealActionService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHarborNpcStealActionService::descriptor() {
  ::protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHarborNpcStealActionService& UserHarborNpcStealActionService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserHarbourNpcEvent_2eproto::scc_info_UserHarborNpcStealActionService.base);
  return *internal_default_instance();
}


void UserHarborNpcStealActionService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserHarborNpcStealActionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHarborNpcStealActionService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserHarborNpcStealActionService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserHarborNpcStealActionService.ActionRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserHarborNpcStealActionService.ActionResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserHarborNpcStealActionService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserHarborNpcStealActionService)
  return false;
#undef DO_
}

void UserHarborNpcStealActionService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserHarborNpcStealActionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserHarborNpcStealActionService.ActionRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserHarborNpcStealActionService.ActionResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserHarborNpcStealActionService)
}

::google::protobuf::uint8* UserHarborNpcStealActionService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserHarborNpcStealActionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserHarborNpcStealActionService.ActionRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserHarborNpcStealActionService.ActionResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserHarborNpcStealActionService)
  return target;
}

size_t UserHarborNpcStealActionService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserHarborNpcStealActionService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserHarborNpcStealActionService.ActionRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserHarborNpcStealActionService.ActionResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHarborNpcStealActionService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserHarborNpcStealActionService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHarborNpcStealActionService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHarborNpcStealActionService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserHarborNpcStealActionService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserHarborNpcStealActionService)
    MergeFrom(*source);
  }
}

void UserHarborNpcStealActionService::MergeFrom(const UserHarborNpcStealActionService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserHarborNpcStealActionService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserHarborNpcStealActionService_ActionRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserHarborNpcStealActionService_ActionResponse::MergeFrom(from.resp());
    }
  }
}

void UserHarborNpcStealActionService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserHarborNpcStealActionService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHarborNpcStealActionService::CopyFrom(const UserHarborNpcStealActionService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserHarborNpcStealActionService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHarborNpcStealActionService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserHarborNpcStealActionService::Swap(UserHarborNpcStealActionService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserHarborNpcStealActionService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserHarborNpcStealActionService::UnsafeArenaSwap(UserHarborNpcStealActionService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserHarborNpcStealActionService::InternalSwap(UserHarborNpcStealActionService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHarborNpcStealActionService::GetMetadata() const {
  protobuf_UserHarbourNpcEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserHarbourNpcEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::HarborNpcEvent* Arena::CreateMaybeMessage< ::sg::HarborNpcEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::HarborNpcEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::HarborNpcEventList* Arena::CreateMaybeMessage< ::sg::HarborNpcEventList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::HarborNpcEventList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserHarborNpcEventService_EventRequest* Arena::CreateMaybeMessage< ::sg::UserHarborNpcEventService_EventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserHarborNpcEventService_EventRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserHarborNpcEventService_EventResponse* Arena::CreateMaybeMessage< ::sg::UserHarborNpcEventService_EventResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserHarborNpcEventService_EventResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserHarborNpcEventService* Arena::CreateMaybeMessage< ::sg::UserHarborNpcEventService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserHarborNpcEventService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserHarborNpcEventNotify* Arena::CreateMaybeMessage< ::sg::UserHarborNpcEventNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserHarborNpcEventNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserHarborNpcStealActionService_ActionRequest* Arena::CreateMaybeMessage< ::sg::UserHarborNpcStealActionService_ActionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserHarborNpcStealActionService_ActionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserHarborNpcStealActionService_ActionResponse* Arena::CreateMaybeMessage< ::sg::UserHarborNpcStealActionService_ActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserHarborNpcStealActionService_ActionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserHarborNpcStealActionService* Arena::CreateMaybeMessage< ::sg::UserHarborNpcStealActionService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserHarborNpcStealActionService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
