// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserExplore.proto

#ifndef PROTOBUF_INCLUDED_UserExplore_2eproto
#define PROTOBUF_INCLUDED_UserExplore_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "BaseStruct.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_UserExplore_2eproto 

namespace protobuf_UserExplore_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_UserExplore_2eproto
namespace sg {
class ActionResult;
class ActionResultDefaultTypeInternal;
extern ActionResultDefaultTypeInternal _ActionResult_default_instance_;
class EventChangeNotify;
class EventChangeNotifyDefaultTypeInternal;
extern EventChangeNotifyDefaultTypeInternal _EventChangeNotify_default_instance_;
class ExploreEvent;
class ExploreEventDefaultTypeInternal;
extern ExploreEventDefaultTypeInternal _ExploreEvent_default_instance_;
class ExploreRecord;
class ExploreRecordDefaultTypeInternal;
extern ExploreRecordDefaultTypeInternal _ExploreRecord_default_instance_;
class ExploreStage;
class ExploreStageDefaultTypeInternal;
extern ExploreStageDefaultTypeInternal _ExploreStage_default_instance_;
class ExploreState;
class ExploreStateDefaultTypeInternal;
extern ExploreStateDefaultTypeInternal _ExploreState_default_instance_;
class NewEventExist;
class NewEventExistDefaultTypeInternal;
extern NewEventExistDefaultTypeInternal _NewEventExist_default_instance_;
class UserExploreActionService;
class UserExploreActionServiceDefaultTypeInternal;
extern UserExploreActionServiceDefaultTypeInternal _UserExploreActionService_default_instance_;
class UserExploreActionService_UserExploreRequest;
class UserExploreActionService_UserExploreRequestDefaultTypeInternal;
extern UserExploreActionService_UserExploreRequestDefaultTypeInternal _UserExploreActionService_UserExploreRequest_default_instance_;
class UserExploreActionService_UserExploreResponse;
class UserExploreActionService_UserExploreResponseDefaultTypeInternal;
extern UserExploreActionService_UserExploreResponseDefaultTypeInternal _UserExploreActionService_UserExploreResponse_default_instance_;
class UserExploreService;
class UserExploreServiceDefaultTypeInternal;
extern UserExploreServiceDefaultTypeInternal _UserExploreService_default_instance_;
class UserExploreService_UserExploreRequest;
class UserExploreService_UserExploreRequestDefaultTypeInternal;
extern UserExploreService_UserExploreRequestDefaultTypeInternal _UserExploreService_UserExploreRequest_default_instance_;
class UserExploreService_UserExploreResponse;
class UserExploreService_UserExploreResponseDefaultTypeInternal;
extern UserExploreService_UserExploreResponseDefaultTypeInternal _UserExploreService_UserExploreResponse_default_instance_;
}  // namespace sg
namespace google {
namespace protobuf {
template<> ::sg::ActionResult* Arena::CreateMaybeMessage<::sg::ActionResult>(Arena*);
template<> ::sg::EventChangeNotify* Arena::CreateMaybeMessage<::sg::EventChangeNotify>(Arena*);
template<> ::sg::ExploreEvent* Arena::CreateMaybeMessage<::sg::ExploreEvent>(Arena*);
template<> ::sg::ExploreRecord* Arena::CreateMaybeMessage<::sg::ExploreRecord>(Arena*);
template<> ::sg::ExploreStage* Arena::CreateMaybeMessage<::sg::ExploreStage>(Arena*);
template<> ::sg::ExploreState* Arena::CreateMaybeMessage<::sg::ExploreState>(Arena*);
template<> ::sg::NewEventExist* Arena::CreateMaybeMessage<::sg::NewEventExist>(Arena*);
template<> ::sg::UserExploreActionService* Arena::CreateMaybeMessage<::sg::UserExploreActionService>(Arena*);
template<> ::sg::UserExploreActionService_UserExploreRequest* Arena::CreateMaybeMessage<::sg::UserExploreActionService_UserExploreRequest>(Arena*);
template<> ::sg::UserExploreActionService_UserExploreResponse* Arena::CreateMaybeMessage<::sg::UserExploreActionService_UserExploreResponse>(Arena*);
template<> ::sg::UserExploreService* Arena::CreateMaybeMessage<::sg::UserExploreService>(Arena*);
template<> ::sg::UserExploreService_UserExploreRequest* Arena::CreateMaybeMessage<::sg::UserExploreService_UserExploreRequest>(Arena*);
template<> ::sg::UserExploreService_UserExploreResponse* Arena::CreateMaybeMessage<::sg::UserExploreService_UserExploreResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sg {

enum UserExploreService_EXPLORE_CMD {
  UserExploreService_EXPLORE_CMD_QUERY = 1
};
bool UserExploreService_EXPLORE_CMD_IsValid(int value);
const UserExploreService_EXPLORE_CMD UserExploreService_EXPLORE_CMD_EXPLORE_CMD_MIN = UserExploreService_EXPLORE_CMD_QUERY;
const UserExploreService_EXPLORE_CMD UserExploreService_EXPLORE_CMD_EXPLORE_CMD_MAX = UserExploreService_EXPLORE_CMD_QUERY;
const int UserExploreService_EXPLORE_CMD_EXPLORE_CMD_ARRAYSIZE = UserExploreService_EXPLORE_CMD_EXPLORE_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserExploreService_EXPLORE_CMD_descriptor();
inline const ::std::string& UserExploreService_EXPLORE_CMD_Name(UserExploreService_EXPLORE_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserExploreService_EXPLORE_CMD_descriptor(), value);
}
inline bool UserExploreService_EXPLORE_CMD_Parse(
    const ::std::string& name, UserExploreService_EXPLORE_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserExploreService_EXPLORE_CMD>(
    UserExploreService_EXPLORE_CMD_descriptor(), name, value);
}
enum UserExploreActionService_EXPLORE_CMD {
  UserExploreActionService_EXPLORE_CMD_ENTER = 1,
  UserExploreActionService_EXPLORE_CMD_MOVE = 2,
  UserExploreActionService_EXPLORE_CMD_ATTEND_TO_EVENT = 3
};
bool UserExploreActionService_EXPLORE_CMD_IsValid(int value);
const UserExploreActionService_EXPLORE_CMD UserExploreActionService_EXPLORE_CMD_EXPLORE_CMD_MIN = UserExploreActionService_EXPLORE_CMD_ENTER;
const UserExploreActionService_EXPLORE_CMD UserExploreActionService_EXPLORE_CMD_EXPLORE_CMD_MAX = UserExploreActionService_EXPLORE_CMD_ATTEND_TO_EVENT;
const int UserExploreActionService_EXPLORE_CMD_EXPLORE_CMD_ARRAYSIZE = UserExploreActionService_EXPLORE_CMD_EXPLORE_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserExploreActionService_EXPLORE_CMD_descriptor();
inline const ::std::string& UserExploreActionService_EXPLORE_CMD_Name(UserExploreActionService_EXPLORE_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserExploreActionService_EXPLORE_CMD_descriptor(), value);
}
inline bool UserExploreActionService_EXPLORE_CMD_Parse(
    const ::std::string& name, UserExploreActionService_EXPLORE_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserExploreActionService_EXPLORE_CMD>(
    UserExploreActionService_EXPLORE_CMD_descriptor(), name, value);
}
enum EXPLORE_RECORD_TYPE {
  EXPLORE_RECORD_TYPE_NORMAL_BATTLE = 1,
  EXPLORE_RECORD_TYPE_EVENT = 2
};
bool EXPLORE_RECORD_TYPE_IsValid(int value);
const EXPLORE_RECORD_TYPE EXPLORE_RECORD_TYPE_MIN = EXPLORE_RECORD_TYPE_NORMAL_BATTLE;
const EXPLORE_RECORD_TYPE EXPLORE_RECORD_TYPE_MAX = EXPLORE_RECORD_TYPE_EVENT;
const int EXPLORE_RECORD_TYPE_ARRAYSIZE = EXPLORE_RECORD_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* EXPLORE_RECORD_TYPE_descriptor();
inline const ::std::string& EXPLORE_RECORD_TYPE_Name(EXPLORE_RECORD_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EXPLORE_RECORD_TYPE_descriptor(), value);
}
inline bool EXPLORE_RECORD_TYPE_Parse(
    const ::std::string& name, EXPLORE_RECORD_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EXPLORE_RECORD_TYPE>(
    EXPLORE_RECORD_TYPE_descriptor(), name, value);
}
enum EXPLORE_EVENT_STATE {
  EXPLORE_EVENT_STATE_ALIVE = 1,
  EXPLORE_EVENT_STATE_INVAILD = 2
};
bool EXPLORE_EVENT_STATE_IsValid(int value);
const EXPLORE_EVENT_STATE EXPLORE_EVENT_STATE_MIN = EXPLORE_EVENT_STATE_ALIVE;
const EXPLORE_EVENT_STATE EXPLORE_EVENT_STATE_MAX = EXPLORE_EVENT_STATE_INVAILD;
const int EXPLORE_EVENT_STATE_ARRAYSIZE = EXPLORE_EVENT_STATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* EXPLORE_EVENT_STATE_descriptor();
inline const ::std::string& EXPLORE_EVENT_STATE_Name(EXPLORE_EVENT_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EXPLORE_EVENT_STATE_descriptor(), value);
}
inline bool EXPLORE_EVENT_STATE_Parse(
    const ::std::string& name, EXPLORE_EVENT_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EXPLORE_EVENT_STATE>(
    EXPLORE_EVENT_STATE_descriptor(), name, value);
}
enum EXPLORE_LOCALE_TYPE {
  EXPLORE_LOCALE_TYPE_LAND = 1,
  EXPLORE_LOCALE_TYPE_OCEAN = 2
};
bool EXPLORE_LOCALE_TYPE_IsValid(int value);
const EXPLORE_LOCALE_TYPE EXPLORE_LOCALE_TYPE_MIN = EXPLORE_LOCALE_TYPE_LAND;
const EXPLORE_LOCALE_TYPE EXPLORE_LOCALE_TYPE_MAX = EXPLORE_LOCALE_TYPE_OCEAN;
const int EXPLORE_LOCALE_TYPE_ARRAYSIZE = EXPLORE_LOCALE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* EXPLORE_LOCALE_TYPE_descriptor();
inline const ::std::string& EXPLORE_LOCALE_TYPE_Name(EXPLORE_LOCALE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EXPLORE_LOCALE_TYPE_descriptor(), value);
}
inline bool EXPLORE_LOCALE_TYPE_Parse(
    const ::std::string& name, EXPLORE_LOCALE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EXPLORE_LOCALE_TYPE>(
    EXPLORE_LOCALE_TYPE_descriptor(), name, value);
}
enum MOVE_DIRECTION {
  MOVE_DIRECTION_UP = 1,
  MOVE_DIRECTION_DOWN = 2,
  MOVE_DIRECTION_LEFT = 3,
  MOVE_DIRECTION_RIGHT = 4,
  MOVE_DIRECTION_LEFT_UP = 5,
  MOVE_DIRECTION_LEFT_DOWN = 6,
  MOVE_DIRECTION_RIGHT_UP = 7,
  MOVE_DIRECTION_RIGHT_DOWN = 8,
  MOVE_DIRECTION_UP_DOWN = 9,
  MOVE_DIRECTION_LEFT_RIGHT = 10
};
bool MOVE_DIRECTION_IsValid(int value);
const MOVE_DIRECTION MOVE_DIRECTION_MIN = MOVE_DIRECTION_UP;
const MOVE_DIRECTION MOVE_DIRECTION_MAX = MOVE_DIRECTION_LEFT_RIGHT;
const int MOVE_DIRECTION_ARRAYSIZE = MOVE_DIRECTION_MAX + 1;

const ::google::protobuf::EnumDescriptor* MOVE_DIRECTION_descriptor();
inline const ::std::string& MOVE_DIRECTION_Name(MOVE_DIRECTION value) {
  return ::google::protobuf::internal::NameOfEnum(
    MOVE_DIRECTION_descriptor(), value);
}
inline bool MOVE_DIRECTION_Parse(
    const ::std::string& name, MOVE_DIRECTION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MOVE_DIRECTION>(
    MOVE_DIRECTION_descriptor(), name, value);
}
// ===================================================================

class ExploreState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.ExploreState) */ {
 public:
  ExploreState();
  virtual ~ExploreState();

  ExploreState(const ExploreState& from);

  inline ExploreState& operator=(const ExploreState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExploreState(ExploreState&& from) noexcept
    : ExploreState() {
    *this = ::std::move(from);
  }

  inline ExploreState& operator=(ExploreState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExploreState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExploreState* internal_default_instance() {
    return reinterpret_cast<const ExploreState*>(
               &_ExploreState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ExploreState* other);
  void Swap(ExploreState* other);
  friend void swap(ExploreState& a, ExploreState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExploreState* New() const final {
    return CreateMaybeMessage<ExploreState>(NULL);
  }

  ExploreState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExploreState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExploreState& from);
  void MergeFrom(const ExploreState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExploreState* other);
  protected:
  explicit ExploreState(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 location = 1;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  ::google::protobuf::int32 location() const;
  void set_location(::google::protobuf::int32 value);

  // required int32 step = 2;
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 2;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // required int32 pos_x = 3;
  bool has_pos_x() const;
  void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  ::google::protobuf::int32 pos_x() const;
  void set_pos_x(::google::protobuf::int32 value);

  // required int32 pos_y = 4;
  bool has_pos_y() const;
  void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  ::google::protobuf::int32 pos_y() const;
  void set_pos_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.ExploreState)
 private:
  void set_has_location();
  void clear_has_location();
  void set_has_step();
  void clear_has_step();
  void set_has_pos_x();
  void clear_has_pos_x();
  void set_has_pos_y();
  void clear_has_pos_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 location_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExploreStage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.ExploreStage) */ {
 public:
  ExploreStage();
  virtual ~ExploreStage();

  ExploreStage(const ExploreStage& from);

  inline ExploreStage& operator=(const ExploreStage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExploreStage(ExploreStage&& from) noexcept
    : ExploreStage() {
    *this = ::std::move(from);
  }

  inline ExploreStage& operator=(ExploreStage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExploreStage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExploreStage* internal_default_instance() {
    return reinterpret_cast<const ExploreStage*>(
               &_ExploreStage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ExploreStage* other);
  void Swap(ExploreStage* other);
  friend void swap(ExploreStage& a, ExploreStage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExploreStage* New() const final {
    return CreateMaybeMessage<ExploreStage>(NULL);
  }

  ExploreStage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExploreStage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExploreStage& from);
  void MergeFrom(const ExploreStage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExploreStage* other);
  protected:
  explicit ExploreStage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes fog = 2;
  bool has_fog() const;
  void clear_fog();
  static const int kFogFieldNumber = 2;
  const ::std::string& fog() const;
  void set_fog(const ::std::string& value);
  #if LANG_CXX11
  void set_fog(::std::string&& value);
  #endif
  void set_fog(const char* value);
  void set_fog(const void* value, size_t size);
  ::std::string* mutable_fog();
  ::std::string* release_fog();
  void set_allocated_fog(::std::string* fog);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_fog();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_fog(
      ::std::string* fog);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.ExploreStage)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_fog();
  void clear_has_fog();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fog_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExploreRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.ExploreRecord) */ {
 public:
  ExploreRecord();
  virtual ~ExploreRecord();

  ExploreRecord(const ExploreRecord& from);

  inline ExploreRecord& operator=(const ExploreRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExploreRecord(ExploreRecord&& from) noexcept
    : ExploreRecord() {
    *this = ::std::move(from);
  }

  inline ExploreRecord& operator=(ExploreRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExploreRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExploreRecord* internal_default_instance() {
    return reinterpret_cast<const ExploreRecord*>(
               &_ExploreRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ExploreRecord* other);
  void Swap(ExploreRecord* other);
  friend void swap(ExploreRecord& a, ExploreRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExploreRecord* New() const final {
    return CreateMaybeMessage<ExploreRecord>(NULL);
  }

  ExploreRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExploreRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExploreRecord& from);
  void MergeFrom(const ExploreRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExploreRecord* other);
  protected:
  explicit ExploreRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content(
      ::std::string* content);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 object = 3;
  bool has_object() const;
  void clear_object();
  static const int kObjectFieldNumber = 3;
  ::google::protobuf::int32 object() const;
  void set_object(::google::protobuf::int32 value);

  // required sfixed64 timestamp = 5;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // required .sg.EXPLORE_RECORD_TYPE type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::sg::EXPLORE_RECORD_TYPE type() const;
  void set_type(::sg::EXPLORE_RECORD_TYPE value);

  // @@protoc_insertion_point(class_scope:sg.ExploreRecord)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_object();
  void clear_has_object();
  void set_has_content();
  void clear_has_content();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 object_;
  ::google::protobuf::int64 timestamp_;
  int type_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExploreEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.ExploreEvent) */ {
 public:
  ExploreEvent();
  virtual ~ExploreEvent();

  ExploreEvent(const ExploreEvent& from);

  inline ExploreEvent& operator=(const ExploreEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExploreEvent(ExploreEvent&& from) noexcept
    : ExploreEvent() {
    *this = ::std::move(from);
  }

  inline ExploreEvent& operator=(ExploreEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExploreEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExploreEvent* internal_default_instance() {
    return reinterpret_cast<const ExploreEvent*>(
               &_ExploreEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ExploreEvent* other);
  void Swap(ExploreEvent* other);
  friend void swap(ExploreEvent& a, ExploreEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExploreEvent* New() const final {
    return CreateMaybeMessage<ExploreEvent>(NULL);
  }

  ExploreEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExploreEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExploreEvent& from);
  void MergeFrom(const ExploreEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExploreEvent* other);
  protected:
  explicit ExploreEvent(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes content = 9;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 9;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content(
      ::std::string* content);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 typeid = 4;
  bool has_typeid_() const;
  void clear_typeid_();
  static const int kTypeidFieldNumber = 4;
  ::google::protobuf::int32 typeid_() const;
  void set_typeid_(::google::protobuf::int32 value);

  // required int32 locale_type = 5;
  bool has_locale_type() const;
  void clear_locale_type();
  static const int kLocaleTypeFieldNumber = 5;
  ::google::protobuf::int32 locale_type() const;
  void set_locale_type(::google::protobuf::int32 value);

  // required int32 locale = 6;
  bool has_locale() const;
  void clear_locale();
  static const int kLocaleFieldNumber = 6;
  ::google::protobuf::int32 locale() const;
  void set_locale(::google::protobuf::int32 value);

  // required int32 pos_x = 7;
  bool has_pos_x() const;
  void clear_pos_x();
  static const int kPosXFieldNumber = 7;
  ::google::protobuf::int32 pos_x() const;
  void set_pos_x(::google::protobuf::int32 value);

  // required sfixed64 timestamp = 10;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 10;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // required sfixed64 deadline = 11;
  bool has_deadline() const;
  void clear_deadline();
  static const int kDeadlineFieldNumber = 11;
  ::google::protobuf::int64 deadline() const;
  void set_deadline(::google::protobuf::int64 value);

  // required int32 pos_y = 8;
  bool has_pos_y() const;
  void clear_pos_y();
  static const int kPosYFieldNumber = 8;
  ::google::protobuf::int32 pos_y() const;
  void set_pos_y(::google::protobuf::int32 value);

  // required .sg.EXPLORE_EVENT_STATE state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::sg::EXPLORE_EVENT_STATE state() const;
  void set_state(::sg::EXPLORE_EVENT_STATE value);

  // @@protoc_insertion_point(class_scope:sg.ExploreEvent)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_state();
  void clear_has_state();
  void set_has_type();
  void clear_has_type();
  void set_has_typeid_();
  void clear_has_typeid_();
  void set_has_locale_type();
  void clear_has_locale_type();
  void set_has_locale();
  void clear_has_locale();
  void set_has_pos_x();
  void clear_has_pos_x();
  void set_has_pos_y();
  void clear_has_pos_y();
  void set_has_content();
  void clear_has_content();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_deadline();
  void clear_has_deadline();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 typeid__;
  ::google::protobuf::int32 locale_type_;
  ::google::protobuf::int32 locale_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int64 deadline_;
  ::google::protobuf::int32 pos_y_;
  int state_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.ActionResult) */ {
 public:
  ActionResult();
  virtual ~ActionResult();

  ActionResult(const ActionResult& from);

  inline ActionResult& operator=(const ActionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionResult(ActionResult&& from) noexcept
    : ActionResult() {
    *this = ::std::move(from);
  }

  inline ActionResult& operator=(ActionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionResult* internal_default_instance() {
    return reinterpret_cast<const ActionResult*>(
               &_ActionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ActionResult* other);
  void Swap(ActionResult* other);
  friend void swap(ActionResult& a, ActionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionResult* New() const final {
    return CreateMaybeMessage<ActionResult>(NULL);
  }

  ActionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionResult& from);
  void MergeFrom(const ActionResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionResult* other);
  protected:
  explicit ActionResult(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sg.ExploreEvent event = 1;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  private:
  const ::sg::ExploreEvent& _internal_event() const;
  public:
  const ::sg::ExploreEvent& event() const;
  ::sg::ExploreEvent* release_event();
  ::sg::ExploreEvent* mutable_event();
  void set_allocated_event(::sg::ExploreEvent* event);
  void unsafe_arena_set_allocated_event(
      ::sg::ExploreEvent* event);
  ::sg::ExploreEvent* unsafe_arena_release_event();

  // optional .sg.Reward reward = 2;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  private:
  const ::sg::Reward& _internal_reward() const;
  public:
  const ::sg::Reward& reward() const;
  ::sg::Reward* release_reward();
  ::sg::Reward* mutable_reward();
  void set_allocated_reward(::sg::Reward* reward);
  void unsafe_arena_set_allocated_reward(
      ::sg::Reward* reward);
  ::sg::Reward* unsafe_arena_release_reward();

  // optional .sg.ExploreRecord record = 3;
  bool has_record() const;
  void clear_record();
  static const int kRecordFieldNumber = 3;
  private:
  const ::sg::ExploreRecord& _internal_record() const;
  public:
  const ::sg::ExploreRecord& record() const;
  ::sg::ExploreRecord* release_record();
  ::sg::ExploreRecord* mutable_record();
  void set_allocated_record(::sg::ExploreRecord* record);
  void unsafe_arena_set_allocated_record(
      ::sg::ExploreRecord* record);
  ::sg::ExploreRecord* unsafe_arena_release_record();

  // @@protoc_insertion_point(class_scope:sg.ActionResult)
 private:
  void set_has_event();
  void clear_has_event();
  void set_has_reward();
  void clear_has_reward();
  void set_has_record();
  void clear_has_record();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::ExploreEvent* event_;
  ::sg::Reward* reward_;
  ::sg::ExploreRecord* record_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserExploreService_UserExploreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserExploreService.UserExploreRequest) */ {
 public:
  UserExploreService_UserExploreRequest();
  virtual ~UserExploreService_UserExploreRequest();

  UserExploreService_UserExploreRequest(const UserExploreService_UserExploreRequest& from);

  inline UserExploreService_UserExploreRequest& operator=(const UserExploreService_UserExploreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserExploreService_UserExploreRequest(UserExploreService_UserExploreRequest&& from) noexcept
    : UserExploreService_UserExploreRequest() {
    *this = ::std::move(from);
  }

  inline UserExploreService_UserExploreRequest& operator=(UserExploreService_UserExploreRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserExploreService_UserExploreRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserExploreService_UserExploreRequest* internal_default_instance() {
    return reinterpret_cast<const UserExploreService_UserExploreRequest*>(
               &_UserExploreService_UserExploreRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(UserExploreService_UserExploreRequest* other);
  void Swap(UserExploreService_UserExploreRequest* other);
  friend void swap(UserExploreService_UserExploreRequest& a, UserExploreService_UserExploreRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserExploreService_UserExploreRequest* New() const final {
    return CreateMaybeMessage<UserExploreService_UserExploreRequest>(NULL);
  }

  UserExploreService_UserExploreRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserExploreService_UserExploreRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserExploreService_UserExploreRequest& from);
  void MergeFrom(const UserExploreService_UserExploreRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserExploreService_UserExploreRequest* other);
  protected:
  explicit UserExploreService_UserExploreRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eventid = 2;
  bool has_eventid() const;
  void clear_eventid();
  static const int kEventidFieldNumber = 2;
  ::google::protobuf::int32 eventid() const;
  void set_eventid(::google::protobuf::int32 value);

  // optional int32 action = 3;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 3;
  ::google::protobuf::int32 action() const;
  void set_action(::google::protobuf::int32 value);

  // optional int32 distance = 5;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 5;
  ::google::protobuf::int32 distance() const;
  void set_distance(::google::protobuf::int32 value);

  // required .sg.UserExploreService.EXPLORE_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserExploreService_EXPLORE_CMD cmd() const;
  void set_cmd(::sg::UserExploreService_EXPLORE_CMD value);

  // optional .sg.MOVE_DIRECTION direction = 4;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 4;
  ::sg::MOVE_DIRECTION direction() const;
  void set_direction(::sg::MOVE_DIRECTION value);

  // @@protoc_insertion_point(class_scope:sg.UserExploreService.UserExploreRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_eventid();
  void clear_has_eventid();
  void set_has_action();
  void clear_has_action();
  void set_has_direction();
  void clear_has_direction();
  void set_has_distance();
  void clear_has_distance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 eventid_;
  ::google::protobuf::int32 action_;
  ::google::protobuf::int32 distance_;
  int cmd_;
  int direction_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserExploreService_UserExploreResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserExploreService.UserExploreResponse) */ {
 public:
  UserExploreService_UserExploreResponse();
  virtual ~UserExploreService_UserExploreResponse();

  UserExploreService_UserExploreResponse(const UserExploreService_UserExploreResponse& from);

  inline UserExploreService_UserExploreResponse& operator=(const UserExploreService_UserExploreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserExploreService_UserExploreResponse(UserExploreService_UserExploreResponse&& from) noexcept
    : UserExploreService_UserExploreResponse() {
    *this = ::std::move(from);
  }

  inline UserExploreService_UserExploreResponse& operator=(UserExploreService_UserExploreResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserExploreService_UserExploreResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserExploreService_UserExploreResponse* internal_default_instance() {
    return reinterpret_cast<const UserExploreService_UserExploreResponse*>(
               &_UserExploreService_UserExploreResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(UserExploreService_UserExploreResponse* other);
  void Swap(UserExploreService_UserExploreResponse* other);
  friend void swap(UserExploreService_UserExploreResponse& a, UserExploreService_UserExploreResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserExploreService_UserExploreResponse* New() const final {
    return CreateMaybeMessage<UserExploreService_UserExploreResponse>(NULL);
  }

  UserExploreService_UserExploreResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserExploreService_UserExploreResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserExploreService_UserExploreResponse& from);
  void MergeFrom(const UserExploreService_UserExploreResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserExploreService_UserExploreResponse* other);
  protected:
  explicit UserExploreService_UserExploreResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.ExploreRecord records = 4;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 4;
  ::sg::ExploreRecord* mutable_records(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::ExploreRecord >*
      mutable_records();
  const ::sg::ExploreRecord& records(int index) const;
  ::sg::ExploreRecord* add_records();
  const ::google::protobuf::RepeatedPtrField< ::sg::ExploreRecord >&
      records() const;

  // repeated .sg.ExploreEvent events = 5;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 5;
  ::sg::ExploreEvent* mutable_events(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::ExploreEvent >*
      mutable_events();
  const ::sg::ExploreEvent& events(int index) const;
  ::sg::ExploreEvent* add_events();
  const ::google::protobuf::RepeatedPtrField< ::sg::ExploreEvent >&
      events() const;

  // optional .sg.ExploreState state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  private:
  const ::sg::ExploreState& _internal_state() const;
  public:
  const ::sg::ExploreState& state() const;
  ::sg::ExploreState* release_state();
  ::sg::ExploreState* mutable_state();
  void set_allocated_state(::sg::ExploreState* state);
  void unsafe_arena_set_allocated_state(
      ::sg::ExploreState* state);
  ::sg::ExploreState* unsafe_arena_release_state();

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserExploreService.UserExploreResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::ExploreRecord > records_;
  ::google::protobuf::RepeatedPtrField< ::sg::ExploreEvent > events_;
  ::sg::ExploreState* state_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserExploreService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserExploreService) */ {
 public:
  UserExploreService();
  virtual ~UserExploreService();

  UserExploreService(const UserExploreService& from);

  inline UserExploreService& operator=(const UserExploreService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserExploreService(UserExploreService&& from) noexcept
    : UserExploreService() {
    *this = ::std::move(from);
  }

  inline UserExploreService& operator=(UserExploreService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserExploreService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserExploreService* internal_default_instance() {
    return reinterpret_cast<const UserExploreService*>(
               &_UserExploreService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(UserExploreService* other);
  void Swap(UserExploreService* other);
  friend void swap(UserExploreService& a, UserExploreService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserExploreService* New() const final {
    return CreateMaybeMessage<UserExploreService>(NULL);
  }

  UserExploreService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserExploreService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserExploreService& from);
  void MergeFrom(const UserExploreService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserExploreService* other);
  protected:
  explicit UserExploreService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserExploreService_UserExploreRequest UserExploreRequest;
  typedef UserExploreService_UserExploreResponse UserExploreResponse;

  typedef UserExploreService_EXPLORE_CMD EXPLORE_CMD;
  static const EXPLORE_CMD QUERY =
    UserExploreService_EXPLORE_CMD_QUERY;
  static inline bool EXPLORE_CMD_IsValid(int value) {
    return UserExploreService_EXPLORE_CMD_IsValid(value);
  }
  static const EXPLORE_CMD EXPLORE_CMD_MIN =
    UserExploreService_EXPLORE_CMD_EXPLORE_CMD_MIN;
  static const EXPLORE_CMD EXPLORE_CMD_MAX =
    UserExploreService_EXPLORE_CMD_EXPLORE_CMD_MAX;
  static const int EXPLORE_CMD_ARRAYSIZE =
    UserExploreService_EXPLORE_CMD_EXPLORE_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EXPLORE_CMD_descriptor() {
    return UserExploreService_EXPLORE_CMD_descriptor();
  }
  static inline const ::std::string& EXPLORE_CMD_Name(EXPLORE_CMD value) {
    return UserExploreService_EXPLORE_CMD_Name(value);
  }
  static inline bool EXPLORE_CMD_Parse(const ::std::string& name,
      EXPLORE_CMD* value) {
    return UserExploreService_EXPLORE_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserExploreService.UserExploreRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserExploreService_UserExploreRequest& _internal_req() const;
  public:
  const ::sg::UserExploreService_UserExploreRequest& req() const;
  ::sg::UserExploreService_UserExploreRequest* release_req();
  ::sg::UserExploreService_UserExploreRequest* mutable_req();
  void set_allocated_req(::sg::UserExploreService_UserExploreRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserExploreService_UserExploreRequest* req);
  ::sg::UserExploreService_UserExploreRequest* unsafe_arena_release_req();

  // optional .sg.UserExploreService.UserExploreResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserExploreService_UserExploreResponse& _internal_resp() const;
  public:
  const ::sg::UserExploreService_UserExploreResponse& resp() const;
  ::sg::UserExploreService_UserExploreResponse* release_resp();
  ::sg::UserExploreService_UserExploreResponse* mutable_resp();
  void set_allocated_resp(::sg::UserExploreService_UserExploreResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserExploreService_UserExploreResponse* resp);
  ::sg::UserExploreService_UserExploreResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserExploreService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserExploreService_UserExploreRequest* req_;
  ::sg::UserExploreService_UserExploreResponse* resp_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserExploreActionService_UserExploreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserExploreActionService.UserExploreRequest) */ {
 public:
  UserExploreActionService_UserExploreRequest();
  virtual ~UserExploreActionService_UserExploreRequest();

  UserExploreActionService_UserExploreRequest(const UserExploreActionService_UserExploreRequest& from);

  inline UserExploreActionService_UserExploreRequest& operator=(const UserExploreActionService_UserExploreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserExploreActionService_UserExploreRequest(UserExploreActionService_UserExploreRequest&& from) noexcept
    : UserExploreActionService_UserExploreRequest() {
    *this = ::std::move(from);
  }

  inline UserExploreActionService_UserExploreRequest& operator=(UserExploreActionService_UserExploreRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserExploreActionService_UserExploreRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserExploreActionService_UserExploreRequest* internal_default_instance() {
    return reinterpret_cast<const UserExploreActionService_UserExploreRequest*>(
               &_UserExploreActionService_UserExploreRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(UserExploreActionService_UserExploreRequest* other);
  void Swap(UserExploreActionService_UserExploreRequest* other);
  friend void swap(UserExploreActionService_UserExploreRequest& a, UserExploreActionService_UserExploreRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserExploreActionService_UserExploreRequest* New() const final {
    return CreateMaybeMessage<UserExploreActionService_UserExploreRequest>(NULL);
  }

  UserExploreActionService_UserExploreRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserExploreActionService_UserExploreRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserExploreActionService_UserExploreRequest& from);
  void MergeFrom(const UserExploreActionService_UserExploreRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserExploreActionService_UserExploreRequest* other);
  protected:
  explicit UserExploreActionService_UserExploreRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eventid = 2;
  bool has_eventid() const;
  void clear_eventid();
  static const int kEventidFieldNumber = 2;
  ::google::protobuf::int32 eventid() const;
  void set_eventid(::google::protobuf::int32 value);

  // optional int32 action = 3;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 3;
  ::google::protobuf::int32 action() const;
  void set_action(::google::protobuf::int32 value);

  // optional int32 distance = 5;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 5;
  ::google::protobuf::int32 distance() const;
  void set_distance(::google::protobuf::int32 value);

  // optional int32 stageid = 6;
  bool has_stageid() const;
  void clear_stageid();
  static const int kStageidFieldNumber = 6;
  ::google::protobuf::int32 stageid() const;
  void set_stageid(::google::protobuf::int32 value);

  // required .sg.UserExploreActionService.EXPLORE_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserExploreActionService_EXPLORE_CMD cmd() const;
  void set_cmd(::sg::UserExploreActionService_EXPLORE_CMD value);

  // optional .sg.MOVE_DIRECTION direction = 4;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 4;
  ::sg::MOVE_DIRECTION direction() const;
  void set_direction(::sg::MOVE_DIRECTION value);

  // @@protoc_insertion_point(class_scope:sg.UserExploreActionService.UserExploreRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_eventid();
  void clear_has_eventid();
  void set_has_action();
  void clear_has_action();
  void set_has_direction();
  void clear_has_direction();
  void set_has_distance();
  void clear_has_distance();
  void set_has_stageid();
  void clear_has_stageid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 eventid_;
  ::google::protobuf::int32 action_;
  ::google::protobuf::int32 distance_;
  ::google::protobuf::int32 stageid_;
  int cmd_;
  int direction_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserExploreActionService_UserExploreResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserExploreActionService.UserExploreResponse) */ {
 public:
  UserExploreActionService_UserExploreResponse();
  virtual ~UserExploreActionService_UserExploreResponse();

  UserExploreActionService_UserExploreResponse(const UserExploreActionService_UserExploreResponse& from);

  inline UserExploreActionService_UserExploreResponse& operator=(const UserExploreActionService_UserExploreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserExploreActionService_UserExploreResponse(UserExploreActionService_UserExploreResponse&& from) noexcept
    : UserExploreActionService_UserExploreResponse() {
    *this = ::std::move(from);
  }

  inline UserExploreActionService_UserExploreResponse& operator=(UserExploreActionService_UserExploreResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserExploreActionService_UserExploreResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserExploreActionService_UserExploreResponse* internal_default_instance() {
    return reinterpret_cast<const UserExploreActionService_UserExploreResponse*>(
               &_UserExploreActionService_UserExploreResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(UserExploreActionService_UserExploreResponse* other);
  void Swap(UserExploreActionService_UserExploreResponse* other);
  friend void swap(UserExploreActionService_UserExploreResponse& a, UserExploreActionService_UserExploreResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserExploreActionService_UserExploreResponse* New() const final {
    return CreateMaybeMessage<UserExploreActionService_UserExploreResponse>(NULL);
  }

  UserExploreActionService_UserExploreResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserExploreActionService_UserExploreResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserExploreActionService_UserExploreResponse& from);
  void MergeFrom(const UserExploreActionService_UserExploreResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserExploreActionService_UserExploreResponse* other);
  protected:
  explicit UserExploreActionService_UserExploreResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sg.ExploreState state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  private:
  const ::sg::ExploreState& _internal_state() const;
  public:
  const ::sg::ExploreState& state() const;
  ::sg::ExploreState* release_state();
  ::sg::ExploreState* mutable_state();
  void set_allocated_state(::sg::ExploreState* state);
  void unsafe_arena_set_allocated_state(
      ::sg::ExploreState* state);
  ::sg::ExploreState* unsafe_arena_release_state();

  // optional .sg.ExploreStage stage = 3;
  bool has_stage() const;
  void clear_stage();
  static const int kStageFieldNumber = 3;
  private:
  const ::sg::ExploreStage& _internal_stage() const;
  public:
  const ::sg::ExploreStage& stage() const;
  ::sg::ExploreStage* release_stage();
  ::sg::ExploreStage* mutable_stage();
  void set_allocated_stage(::sg::ExploreStage* stage);
  void unsafe_arena_set_allocated_stage(
      ::sg::ExploreStage* stage);
  ::sg::ExploreStage* unsafe_arena_release_stage();

  // optional .sg.ActionResult action_result = 6;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 6;
  private:
  const ::sg::ActionResult& _internal_action_result() const;
  public:
  const ::sg::ActionResult& action_result() const;
  ::sg::ActionResult* release_action_result();
  ::sg::ActionResult* mutable_action_result();
  void set_allocated_action_result(::sg::ActionResult* action_result);
  void unsafe_arena_set_allocated_action_result(
      ::sg::ActionResult* action_result);
  ::sg::ActionResult* unsafe_arena_release_action_result();

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserExploreActionService.UserExploreResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_state();
  void clear_has_state();
  void set_has_stage();
  void clear_has_stage();
  void set_has_action_result();
  void clear_has_action_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::ExploreState* state_;
  ::sg::ExploreStage* stage_;
  ::sg::ActionResult* action_result_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserExploreActionService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserExploreActionService) */ {
 public:
  UserExploreActionService();
  virtual ~UserExploreActionService();

  UserExploreActionService(const UserExploreActionService& from);

  inline UserExploreActionService& operator=(const UserExploreActionService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserExploreActionService(UserExploreActionService&& from) noexcept
    : UserExploreActionService() {
    *this = ::std::move(from);
  }

  inline UserExploreActionService& operator=(UserExploreActionService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserExploreActionService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserExploreActionService* internal_default_instance() {
    return reinterpret_cast<const UserExploreActionService*>(
               &_UserExploreActionService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(UserExploreActionService* other);
  void Swap(UserExploreActionService* other);
  friend void swap(UserExploreActionService& a, UserExploreActionService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserExploreActionService* New() const final {
    return CreateMaybeMessage<UserExploreActionService>(NULL);
  }

  UserExploreActionService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserExploreActionService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserExploreActionService& from);
  void MergeFrom(const UserExploreActionService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserExploreActionService* other);
  protected:
  explicit UserExploreActionService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserExploreActionService_UserExploreRequest UserExploreRequest;
  typedef UserExploreActionService_UserExploreResponse UserExploreResponse;

  typedef UserExploreActionService_EXPLORE_CMD EXPLORE_CMD;
  static const EXPLORE_CMD ENTER =
    UserExploreActionService_EXPLORE_CMD_ENTER;
  static const EXPLORE_CMD MOVE =
    UserExploreActionService_EXPLORE_CMD_MOVE;
  static const EXPLORE_CMD ATTEND_TO_EVENT =
    UserExploreActionService_EXPLORE_CMD_ATTEND_TO_EVENT;
  static inline bool EXPLORE_CMD_IsValid(int value) {
    return UserExploreActionService_EXPLORE_CMD_IsValid(value);
  }
  static const EXPLORE_CMD EXPLORE_CMD_MIN =
    UserExploreActionService_EXPLORE_CMD_EXPLORE_CMD_MIN;
  static const EXPLORE_CMD EXPLORE_CMD_MAX =
    UserExploreActionService_EXPLORE_CMD_EXPLORE_CMD_MAX;
  static const int EXPLORE_CMD_ARRAYSIZE =
    UserExploreActionService_EXPLORE_CMD_EXPLORE_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EXPLORE_CMD_descriptor() {
    return UserExploreActionService_EXPLORE_CMD_descriptor();
  }
  static inline const ::std::string& EXPLORE_CMD_Name(EXPLORE_CMD value) {
    return UserExploreActionService_EXPLORE_CMD_Name(value);
  }
  static inline bool EXPLORE_CMD_Parse(const ::std::string& name,
      EXPLORE_CMD* value) {
    return UserExploreActionService_EXPLORE_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserExploreActionService.UserExploreRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserExploreActionService_UserExploreRequest& _internal_req() const;
  public:
  const ::sg::UserExploreActionService_UserExploreRequest& req() const;
  ::sg::UserExploreActionService_UserExploreRequest* release_req();
  ::sg::UserExploreActionService_UserExploreRequest* mutable_req();
  void set_allocated_req(::sg::UserExploreActionService_UserExploreRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserExploreActionService_UserExploreRequest* req);
  ::sg::UserExploreActionService_UserExploreRequest* unsafe_arena_release_req();

  // optional .sg.UserExploreActionService.UserExploreResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserExploreActionService_UserExploreResponse& _internal_resp() const;
  public:
  const ::sg::UserExploreActionService_UserExploreResponse& resp() const;
  ::sg::UserExploreActionService_UserExploreResponse* release_resp();
  ::sg::UserExploreActionService_UserExploreResponse* mutable_resp();
  void set_allocated_resp(::sg::UserExploreActionService_UserExploreResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserExploreActionService_UserExploreResponse* resp);
  ::sg::UserExploreActionService_UserExploreResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserExploreActionService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserExploreActionService_UserExploreRequest* req_;
  ::sg::UserExploreActionService_UserExploreResponse* resp_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewEventExist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.NewEventExist) */ {
 public:
  NewEventExist();
  virtual ~NewEventExist();

  NewEventExist(const NewEventExist& from);

  inline NewEventExist& operator=(const NewEventExist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NewEventExist(NewEventExist&& from) noexcept
    : NewEventExist() {
    *this = ::std::move(from);
  }

  inline NewEventExist& operator=(NewEventExist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewEventExist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewEventExist* internal_default_instance() {
    return reinterpret_cast<const NewEventExist*>(
               &_NewEventExist_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(NewEventExist* other);
  void Swap(NewEventExist* other);
  friend void swap(NewEventExist& a, NewEventExist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NewEventExist* New() const final {
    return CreateMaybeMessage<NewEventExist>(NULL);
  }

  NewEventExist* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NewEventExist>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NewEventExist& from);
  void MergeFrom(const NewEventExist& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewEventExist* other);
  protected:
  explicit NewEventExist(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sg.ExploreEvent event = 1;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  private:
  const ::sg::ExploreEvent& _internal_event() const;
  public:
  const ::sg::ExploreEvent& event() const;
  ::sg::ExploreEvent* release_event();
  ::sg::ExploreEvent* mutable_event();
  void set_allocated_event(::sg::ExploreEvent* event);
  void unsafe_arena_set_allocated_event(
      ::sg::ExploreEvent* event);
  ::sg::ExploreEvent* unsafe_arena_release_event();

  // required .sg.ExploreRecord record = 3;
  bool has_record() const;
  void clear_record();
  static const int kRecordFieldNumber = 3;
  private:
  const ::sg::ExploreRecord& _internal_record() const;
  public:
  const ::sg::ExploreRecord& record() const;
  ::sg::ExploreRecord* release_record();
  ::sg::ExploreRecord* mutable_record();
  void set_allocated_record(::sg::ExploreRecord* record);
  void unsafe_arena_set_allocated_record(
      ::sg::ExploreRecord* record);
  ::sg::ExploreRecord* unsafe_arena_release_record();

  // @@protoc_insertion_point(class_scope:sg.NewEventExist)
 private:
  void set_has_event();
  void clear_has_event();
  void set_has_record();
  void clear_has_record();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::ExploreEvent* event_;
  ::sg::ExploreRecord* record_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.EventChangeNotify) */ {
 public:
  EventChangeNotify();
  virtual ~EventChangeNotify();

  EventChangeNotify(const EventChangeNotify& from);

  inline EventChangeNotify& operator=(const EventChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventChangeNotify(EventChangeNotify&& from) noexcept
    : EventChangeNotify() {
    *this = ::std::move(from);
  }

  inline EventChangeNotify& operator=(EventChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventChangeNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventChangeNotify* internal_default_instance() {
    return reinterpret_cast<const EventChangeNotify*>(
               &_EventChangeNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(EventChangeNotify* other);
  void Swap(EventChangeNotify* other);
  friend void swap(EventChangeNotify& a, EventChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventChangeNotify* New() const final {
    return CreateMaybeMessage<EventChangeNotify>(NULL);
  }

  EventChangeNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventChangeNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventChangeNotify& from);
  void MergeFrom(const EventChangeNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventChangeNotify* other);
  protected:
  explicit EventChangeNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sg.ExploreEvent event = 1;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  private:
  const ::sg::ExploreEvent& _internal_event() const;
  public:
  const ::sg::ExploreEvent& event() const;
  ::sg::ExploreEvent* release_event();
  ::sg::ExploreEvent* mutable_event();
  void set_allocated_event(::sg::ExploreEvent* event);
  void unsafe_arena_set_allocated_event(
      ::sg::ExploreEvent* event);
  ::sg::ExploreEvent* unsafe_arena_release_event();

  // @@protoc_insertion_point(class_scope:sg.EventChangeNotify)
 private:
  void set_has_event();
  void clear_has_event();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::ExploreEvent* event_;
  friend struct ::protobuf_UserExplore_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ExploreState

// required int32 location = 1;
inline bool ExploreState::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExploreState::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExploreState::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExploreState::clear_location() {
  location_ = 0;
  clear_has_location();
}
inline ::google::protobuf::int32 ExploreState::location() const {
  // @@protoc_insertion_point(field_get:sg.ExploreState.location)
  return location_;
}
inline void ExploreState::set_location(::google::protobuf::int32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreState.location)
}

// required int32 step = 2;
inline bool ExploreState::has_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExploreState::set_has_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExploreState::clear_has_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExploreState::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 ExploreState::step() const {
  // @@protoc_insertion_point(field_get:sg.ExploreState.step)
  return step_;
}
inline void ExploreState::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreState.step)
}

// required int32 pos_x = 3;
inline bool ExploreState::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExploreState::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExploreState::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExploreState::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 ExploreState::pos_x() const {
  // @@protoc_insertion_point(field_get:sg.ExploreState.pos_x)
  return pos_x_;
}
inline void ExploreState::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreState.pos_x)
}

// required int32 pos_y = 4;
inline bool ExploreState::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExploreState::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExploreState::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExploreState::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 ExploreState::pos_y() const {
  // @@protoc_insertion_point(field_get:sg.ExploreState.pos_y)
  return pos_y_;
}
inline void ExploreState::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreState.pos_y)
}

// -------------------------------------------------------------------

// ExploreStage

// required int32 id = 1;
inline bool ExploreStage::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExploreStage::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExploreStage::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExploreStage::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ExploreStage::id() const {
  // @@protoc_insertion_point(field_get:sg.ExploreStage.id)
  return id_;
}
inline void ExploreStage::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreStage.id)
}

// required bytes fog = 2;
inline bool ExploreStage::has_fog() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExploreStage::set_has_fog() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExploreStage::clear_has_fog() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExploreStage::clear_fog() {
  fog_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_fog();
}
inline const ::std::string& ExploreStage::fog() const {
  // @@protoc_insertion_point(field_get:sg.ExploreStage.fog)
  return fog_.Get();
}
inline void ExploreStage::set_fog(const ::std::string& value) {
  set_has_fog();
  fog_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.ExploreStage.fog)
}
#if LANG_CXX11
inline void ExploreStage::set_fog(::std::string&& value) {
  set_has_fog();
  fog_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.ExploreStage.fog)
}
#endif
inline void ExploreStage::set_fog(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fog();
  fog_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.ExploreStage.fog)
}
inline void ExploreStage::set_fog(const void* value,
    size_t size) {
  set_has_fog();
  fog_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.ExploreStage.fog)
}
inline ::std::string* ExploreStage::mutable_fog() {
  set_has_fog();
  // @@protoc_insertion_point(field_mutable:sg.ExploreStage.fog)
  return fog_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExploreStage::release_fog() {
  // @@protoc_insertion_point(field_release:sg.ExploreStage.fog)
  if (!has_fog()) {
    return NULL;
  }
  clear_has_fog();
  return fog_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ExploreStage::set_allocated_fog(::std::string* fog) {
  if (fog != NULL) {
    set_has_fog();
  } else {
    clear_has_fog();
  }
  fog_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fog,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.ExploreStage.fog)
}
inline ::std::string* ExploreStage::unsafe_arena_release_fog() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.ExploreStage.fog)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_fog();
  return fog_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExploreStage::unsafe_arena_set_allocated_fog(
    ::std::string* fog) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (fog != NULL) {
    set_has_fog();
  } else {
    clear_has_fog();
  }
  fog_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      fog, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ExploreStage.fog)
}

// -------------------------------------------------------------------

// ExploreRecord

// required int32 id = 1;
inline bool ExploreRecord::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExploreRecord::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExploreRecord::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExploreRecord::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ExploreRecord::id() const {
  // @@protoc_insertion_point(field_get:sg.ExploreRecord.id)
  return id_;
}
inline void ExploreRecord::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreRecord.id)
}

// required .sg.EXPLORE_RECORD_TYPE type = 2;
inline bool ExploreRecord::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExploreRecord::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExploreRecord::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExploreRecord::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::sg::EXPLORE_RECORD_TYPE ExploreRecord::type() const {
  // @@protoc_insertion_point(field_get:sg.ExploreRecord.type)
  return static_cast< ::sg::EXPLORE_RECORD_TYPE >(type_);
}
inline void ExploreRecord::set_type(::sg::EXPLORE_RECORD_TYPE value) {
  assert(::sg::EXPLORE_RECORD_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreRecord.type)
}

// required int32 object = 3;
inline bool ExploreRecord::has_object() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExploreRecord::set_has_object() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExploreRecord::clear_has_object() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExploreRecord::clear_object() {
  object_ = 0;
  clear_has_object();
}
inline ::google::protobuf::int32 ExploreRecord::object() const {
  // @@protoc_insertion_point(field_get:sg.ExploreRecord.object)
  return object_;
}
inline void ExploreRecord::set_object(::google::protobuf::int32 value) {
  set_has_object();
  object_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreRecord.object)
}

// required bytes content = 4;
inline bool ExploreRecord::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExploreRecord::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExploreRecord::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExploreRecord::clear_content() {
  content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_content();
}
inline const ::std::string& ExploreRecord::content() const {
  // @@protoc_insertion_point(field_get:sg.ExploreRecord.content)
  return content_.Get();
}
inline void ExploreRecord::set_content(const ::std::string& value) {
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.ExploreRecord.content)
}
#if LANG_CXX11
inline void ExploreRecord::set_content(::std::string&& value) {
  set_has_content();
  content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.ExploreRecord.content)
}
#endif
inline void ExploreRecord::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.ExploreRecord.content)
}
inline void ExploreRecord::set_content(const void* value,
    size_t size) {
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.ExploreRecord.content)
}
inline ::std::string* ExploreRecord::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:sg.ExploreRecord.content)
  return content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExploreRecord::release_content() {
  // @@protoc_insertion_point(field_release:sg.ExploreRecord.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ExploreRecord::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.ExploreRecord.content)
}
inline ::std::string* ExploreRecord::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.ExploreRecord.content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_content();
  return content_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExploreRecord::unsafe_arena_set_allocated_content(
    ::std::string* content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      content, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ExploreRecord.content)
}

// required sfixed64 timestamp = 5;
inline bool ExploreRecord::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExploreRecord::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExploreRecord::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExploreRecord::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 ExploreRecord::timestamp() const {
  // @@protoc_insertion_point(field_get:sg.ExploreRecord.timestamp)
  return timestamp_;
}
inline void ExploreRecord::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreRecord.timestamp)
}

// -------------------------------------------------------------------

// ExploreEvent

// required int32 id = 1;
inline bool ExploreEvent::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExploreEvent::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExploreEvent::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExploreEvent::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ExploreEvent::id() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.id)
  return id_;
}
inline void ExploreEvent::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.id)
}

// required .sg.EXPLORE_EVENT_STATE state = 2;
inline bool ExploreEvent::has_state() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ExploreEvent::set_has_state() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ExploreEvent::clear_has_state() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ExploreEvent::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::sg::EXPLORE_EVENT_STATE ExploreEvent::state() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.state)
  return static_cast< ::sg::EXPLORE_EVENT_STATE >(state_);
}
inline void ExploreEvent::set_state(::sg::EXPLORE_EVENT_STATE value) {
  assert(::sg::EXPLORE_EVENT_STATE_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.state)
}

// required int32 type = 3;
inline bool ExploreEvent::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExploreEvent::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExploreEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExploreEvent::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ExploreEvent::type() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.type)
  return type_;
}
inline void ExploreEvent::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.type)
}

// required int32 typeid = 4;
inline bool ExploreEvent::has_typeid_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExploreEvent::set_has_typeid_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExploreEvent::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExploreEvent::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 ExploreEvent::typeid_() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.typeid)
  return typeid__;
}
inline void ExploreEvent::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.typeid)
}

// required int32 locale_type = 5;
inline bool ExploreEvent::has_locale_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExploreEvent::set_has_locale_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExploreEvent::clear_has_locale_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExploreEvent::clear_locale_type() {
  locale_type_ = 0;
  clear_has_locale_type();
}
inline ::google::protobuf::int32 ExploreEvent::locale_type() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.locale_type)
  return locale_type_;
}
inline void ExploreEvent::set_locale_type(::google::protobuf::int32 value) {
  set_has_locale_type();
  locale_type_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.locale_type)
}

// required int32 locale = 6;
inline bool ExploreEvent::has_locale() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExploreEvent::set_has_locale() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExploreEvent::clear_has_locale() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExploreEvent::clear_locale() {
  locale_ = 0;
  clear_has_locale();
}
inline ::google::protobuf::int32 ExploreEvent::locale() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.locale)
  return locale_;
}
inline void ExploreEvent::set_locale(::google::protobuf::int32 value) {
  set_has_locale();
  locale_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.locale)
}

// required int32 pos_x = 7;
inline bool ExploreEvent::has_pos_x() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExploreEvent::set_has_pos_x() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ExploreEvent::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ExploreEvent::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 ExploreEvent::pos_x() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.pos_x)
  return pos_x_;
}
inline void ExploreEvent::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.pos_x)
}

// required int32 pos_y = 8;
inline bool ExploreEvent::has_pos_y() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ExploreEvent::set_has_pos_y() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ExploreEvent::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ExploreEvent::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 ExploreEvent::pos_y() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.pos_y)
  return pos_y_;
}
inline void ExploreEvent::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.pos_y)
}

// required bytes content = 9;
inline bool ExploreEvent::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExploreEvent::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExploreEvent::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExploreEvent::clear_content() {
  content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_content();
}
inline const ::std::string& ExploreEvent::content() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.content)
  return content_.Get();
}
inline void ExploreEvent::set_content(const ::std::string& value) {
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.content)
}
#if LANG_CXX11
inline void ExploreEvent::set_content(::std::string&& value) {
  set_has_content();
  content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.ExploreEvent.content)
}
#endif
inline void ExploreEvent::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.ExploreEvent.content)
}
inline void ExploreEvent::set_content(const void* value,
    size_t size) {
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.ExploreEvent.content)
}
inline ::std::string* ExploreEvent::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:sg.ExploreEvent.content)
  return content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExploreEvent::release_content() {
  // @@protoc_insertion_point(field_release:sg.ExploreEvent.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ExploreEvent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.ExploreEvent.content)
}
inline ::std::string* ExploreEvent::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.ExploreEvent.content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_content();
  return content_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExploreEvent::unsafe_arena_set_allocated_content(
    ::std::string* content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      content, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ExploreEvent.content)
}

// required sfixed64 timestamp = 10;
inline bool ExploreEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ExploreEvent::set_has_timestamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ExploreEvent::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ExploreEvent::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 ExploreEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.timestamp)
  return timestamp_;
}
inline void ExploreEvent::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.timestamp)
}

// required sfixed64 deadline = 11;
inline bool ExploreEvent::has_deadline() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ExploreEvent::set_has_deadline() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ExploreEvent::clear_has_deadline() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ExploreEvent::clear_deadline() {
  deadline_ = GOOGLE_LONGLONG(0);
  clear_has_deadline();
}
inline ::google::protobuf::int64 ExploreEvent::deadline() const {
  // @@protoc_insertion_point(field_get:sg.ExploreEvent.deadline)
  return deadline_;
}
inline void ExploreEvent::set_deadline(::google::protobuf::int64 value) {
  set_has_deadline();
  deadline_ = value;
  // @@protoc_insertion_point(field_set:sg.ExploreEvent.deadline)
}

// -------------------------------------------------------------------

// ActionResult

// optional .sg.ExploreEvent event = 1;
inline bool ActionResult::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionResult::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionResult::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionResult::clear_event() {
  if (event_ != NULL) event_->Clear();
  clear_has_event();
}
inline const ::sg::ExploreEvent& ActionResult::_internal_event() const {
  return *event_;
}
inline const ::sg::ExploreEvent& ActionResult::event() const {
  const ::sg::ExploreEvent* p = event_;
  // @@protoc_insertion_point(field_get:sg.ActionResult.event)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ExploreEvent*>(
      &::sg::_ExploreEvent_default_instance_);
}
inline ::sg::ExploreEvent* ActionResult::release_event() {
  // @@protoc_insertion_point(field_release:sg.ActionResult.event)
  clear_has_event();
  ::sg::ExploreEvent* temp = event_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  event_ = NULL;
  return temp;
}
inline ::sg::ExploreEvent* ActionResult::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.ActionResult.event)
  clear_has_event();
  ::sg::ExploreEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::sg::ExploreEvent* ActionResult::mutable_event() {
  set_has_event();
  if (event_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ExploreEvent>(GetArenaNoVirtual());
    event_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.ActionResult.event)
  return event_;
}
inline void ActionResult::set_allocated_event(::sg::ExploreEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(event);
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
  } else {
    clear_has_event();
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:sg.ActionResult.event)
}

// optional .sg.Reward reward = 2;
inline bool ActionResult::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionResult::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionResult::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::sg::Reward& ActionResult::_internal_reward() const {
  return *reward_;
}
inline const ::sg::Reward& ActionResult::reward() const {
  const ::sg::Reward* p = reward_;
  // @@protoc_insertion_point(field_get:sg.ActionResult.reward)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::Reward*>(
      &::sg::_Reward_default_instance_);
}
inline ::sg::Reward* ActionResult::release_reward() {
  // @@protoc_insertion_point(field_release:sg.ActionResult.reward)
  clear_has_reward();
  ::sg::Reward* temp = reward_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  reward_ = NULL;
  return temp;
}
inline ::sg::Reward* ActionResult::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.ActionResult.reward)
  clear_has_reward();
  ::sg::Reward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline ::sg::Reward* ActionResult::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::Reward>(GetArenaNoVirtual());
    reward_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.ActionResult.reward)
  return reward_;
}
inline void ActionResult::set_allocated_reward(::sg::Reward* reward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reward_);
  }
  if (reward) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(reward)->GetArena();
    if (message_arena != submessage_arena) {
      reward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reward, submessage_arena);
    }
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_ = reward;
  // @@protoc_insertion_point(field_set_allocated:sg.ActionResult.reward)
}

// optional .sg.ExploreRecord record = 3;
inline bool ActionResult::has_record() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionResult::set_has_record() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionResult::clear_has_record() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionResult::clear_record() {
  if (record_ != NULL) record_->Clear();
  clear_has_record();
}
inline const ::sg::ExploreRecord& ActionResult::_internal_record() const {
  return *record_;
}
inline const ::sg::ExploreRecord& ActionResult::record() const {
  const ::sg::ExploreRecord* p = record_;
  // @@protoc_insertion_point(field_get:sg.ActionResult.record)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ExploreRecord*>(
      &::sg::_ExploreRecord_default_instance_);
}
inline ::sg::ExploreRecord* ActionResult::release_record() {
  // @@protoc_insertion_point(field_release:sg.ActionResult.record)
  clear_has_record();
  ::sg::ExploreRecord* temp = record_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  record_ = NULL;
  return temp;
}
inline ::sg::ExploreRecord* ActionResult::unsafe_arena_release_record() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.ActionResult.record)
  clear_has_record();
  ::sg::ExploreRecord* temp = record_;
  record_ = NULL;
  return temp;
}
inline ::sg::ExploreRecord* ActionResult::mutable_record() {
  set_has_record();
  if (record_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ExploreRecord>(GetArenaNoVirtual());
    record_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.ActionResult.record)
  return record_;
}
inline void ActionResult::set_allocated_record(::sg::ExploreRecord* record) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete record_;
  }
  if (record) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(record);
    if (message_arena != submessage_arena) {
      record = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, record, submessage_arena);
    }
    set_has_record();
  } else {
    clear_has_record();
  }
  record_ = record;
  // @@protoc_insertion_point(field_set_allocated:sg.ActionResult.record)
}

// -------------------------------------------------------------------

// UserExploreService_UserExploreRequest

// required .sg.UserExploreService.EXPLORE_CMD cmd = 1;
inline bool UserExploreService_UserExploreRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserExploreService_UserExploreRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserExploreService_UserExploreRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserExploreService_UserExploreRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserExploreService_EXPLORE_CMD UserExploreService_UserExploreRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreRequest.cmd)
  return static_cast< ::sg::UserExploreService_EXPLORE_CMD >(cmd_);
}
inline void UserExploreService_UserExploreRequest::set_cmd(::sg::UserExploreService_EXPLORE_CMD value) {
  assert(::sg::UserExploreService_EXPLORE_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreService.UserExploreRequest.cmd)
}

// optional int32 eventid = 2;
inline bool UserExploreService_UserExploreRequest::has_eventid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserExploreService_UserExploreRequest::set_has_eventid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserExploreService_UserExploreRequest::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserExploreService_UserExploreRequest::clear_eventid() {
  eventid_ = 0;
  clear_has_eventid();
}
inline ::google::protobuf::int32 UserExploreService_UserExploreRequest::eventid() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreRequest.eventid)
  return eventid_;
}
inline void UserExploreService_UserExploreRequest::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreService.UserExploreRequest.eventid)
}

// optional int32 action = 3;
inline bool UserExploreService_UserExploreRequest::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserExploreService_UserExploreRequest::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserExploreService_UserExploreRequest::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserExploreService_UserExploreRequest::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 UserExploreService_UserExploreRequest::action() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreRequest.action)
  return action_;
}
inline void UserExploreService_UserExploreRequest::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreService.UserExploreRequest.action)
}

// optional .sg.MOVE_DIRECTION direction = 4;
inline bool UserExploreService_UserExploreRequest::has_direction() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserExploreService_UserExploreRequest::set_has_direction() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserExploreService_UserExploreRequest::clear_has_direction() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserExploreService_UserExploreRequest::clear_direction() {
  direction_ = 1;
  clear_has_direction();
}
inline ::sg::MOVE_DIRECTION UserExploreService_UserExploreRequest::direction() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreRequest.direction)
  return static_cast< ::sg::MOVE_DIRECTION >(direction_);
}
inline void UserExploreService_UserExploreRequest::set_direction(::sg::MOVE_DIRECTION value) {
  assert(::sg::MOVE_DIRECTION_IsValid(value));
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreService.UserExploreRequest.direction)
}

// optional int32 distance = 5;
inline bool UserExploreService_UserExploreRequest::has_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserExploreService_UserExploreRequest::set_has_distance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserExploreService_UserExploreRequest::clear_has_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserExploreService_UserExploreRequest::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline ::google::protobuf::int32 UserExploreService_UserExploreRequest::distance() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreRequest.distance)
  return distance_;
}
inline void UserExploreService_UserExploreRequest::set_distance(::google::protobuf::int32 value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreService.UserExploreRequest.distance)
}

// -------------------------------------------------------------------

// UserExploreService_UserExploreResponse

// required int32 result = 1;
inline bool UserExploreService_UserExploreResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserExploreService_UserExploreResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserExploreService_UserExploreResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserExploreService_UserExploreResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserExploreService_UserExploreResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreResponse.result)
  return result_;
}
inline void UserExploreService_UserExploreResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreService.UserExploreResponse.result)
}

// optional .sg.ExploreState state = 2;
inline bool UserExploreService_UserExploreResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserExploreService_UserExploreResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserExploreService_UserExploreResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserExploreService_UserExploreResponse::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::sg::ExploreState& UserExploreService_UserExploreResponse::_internal_state() const {
  return *state_;
}
inline const ::sg::ExploreState& UserExploreService_UserExploreResponse::state() const {
  const ::sg::ExploreState* p = state_;
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreResponse.state)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ExploreState*>(
      &::sg::_ExploreState_default_instance_);
}
inline ::sg::ExploreState* UserExploreService_UserExploreResponse::release_state() {
  // @@protoc_insertion_point(field_release:sg.UserExploreService.UserExploreResponse.state)
  clear_has_state();
  ::sg::ExploreState* temp = state_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  state_ = NULL;
  return temp;
}
inline ::sg::ExploreState* UserExploreService_UserExploreResponse::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserExploreService.UserExploreResponse.state)
  clear_has_state();
  ::sg::ExploreState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::sg::ExploreState* UserExploreService_UserExploreResponse::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ExploreState>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserExploreService.UserExploreResponse.state)
  return state_;
}
inline void UserExploreService_UserExploreResponse::set_allocated_state(::sg::ExploreState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(state);
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:sg.UserExploreService.UserExploreResponse.state)
}

// repeated .sg.ExploreRecord records = 4;
inline int UserExploreService_UserExploreResponse::records_size() const {
  return records_.size();
}
inline void UserExploreService_UserExploreResponse::clear_records() {
  records_.Clear();
}
inline ::sg::ExploreRecord* UserExploreService_UserExploreResponse::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserExploreService.UserExploreResponse.records)
  return records_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::ExploreRecord >*
UserExploreService_UserExploreResponse::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserExploreService.UserExploreResponse.records)
  return &records_;
}
inline const ::sg::ExploreRecord& UserExploreService_UserExploreResponse::records(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreResponse.records)
  return records_.Get(index);
}
inline ::sg::ExploreRecord* UserExploreService_UserExploreResponse::add_records() {
  // @@protoc_insertion_point(field_add:sg.UserExploreService.UserExploreResponse.records)
  return records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::ExploreRecord >&
UserExploreService_UserExploreResponse::records() const {
  // @@protoc_insertion_point(field_list:sg.UserExploreService.UserExploreResponse.records)
  return records_;
}

// repeated .sg.ExploreEvent events = 5;
inline int UserExploreService_UserExploreResponse::events_size() const {
  return events_.size();
}
inline void UserExploreService_UserExploreResponse::clear_events() {
  events_.Clear();
}
inline ::sg::ExploreEvent* UserExploreService_UserExploreResponse::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserExploreService.UserExploreResponse.events)
  return events_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::ExploreEvent >*
UserExploreService_UserExploreResponse::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserExploreService.UserExploreResponse.events)
  return &events_;
}
inline const ::sg::ExploreEvent& UserExploreService_UserExploreResponse::events(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserExploreService.UserExploreResponse.events)
  return events_.Get(index);
}
inline ::sg::ExploreEvent* UserExploreService_UserExploreResponse::add_events() {
  // @@protoc_insertion_point(field_add:sg.UserExploreService.UserExploreResponse.events)
  return events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::ExploreEvent >&
UserExploreService_UserExploreResponse::events() const {
  // @@protoc_insertion_point(field_list:sg.UserExploreService.UserExploreResponse.events)
  return events_;
}

// -------------------------------------------------------------------

// UserExploreService

// optional .sg.UserExploreService.UserExploreRequest req = 1;
inline bool UserExploreService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserExploreService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserExploreService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserExploreService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserExploreService_UserExploreRequest& UserExploreService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserExploreService_UserExploreRequest& UserExploreService::req() const {
  const ::sg::UserExploreService_UserExploreRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserExploreService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserExploreService_UserExploreRequest*>(
      &::sg::_UserExploreService_UserExploreRequest_default_instance_);
}
inline ::sg::UserExploreService_UserExploreRequest* UserExploreService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserExploreService.req)
  clear_has_req();
  ::sg::UserExploreService_UserExploreRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserExploreService_UserExploreRequest* UserExploreService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserExploreService.req)
  clear_has_req();
  ::sg::UserExploreService_UserExploreRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserExploreService_UserExploreRequest* UserExploreService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserExploreService_UserExploreRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserExploreService.req)
  return req_;
}
inline void UserExploreService::set_allocated_req(::sg::UserExploreService_UserExploreRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserExploreService.req)
}

// optional .sg.UserExploreService.UserExploreResponse resp = 2;
inline bool UserExploreService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserExploreService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserExploreService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserExploreService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserExploreService_UserExploreResponse& UserExploreService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserExploreService_UserExploreResponse& UserExploreService::resp() const {
  const ::sg::UserExploreService_UserExploreResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserExploreService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserExploreService_UserExploreResponse*>(
      &::sg::_UserExploreService_UserExploreResponse_default_instance_);
}
inline ::sg::UserExploreService_UserExploreResponse* UserExploreService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserExploreService.resp)
  clear_has_resp();
  ::sg::UserExploreService_UserExploreResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserExploreService_UserExploreResponse* UserExploreService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserExploreService.resp)
  clear_has_resp();
  ::sg::UserExploreService_UserExploreResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserExploreService_UserExploreResponse* UserExploreService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserExploreService_UserExploreResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserExploreService.resp)
  return resp_;
}
inline void UserExploreService::set_allocated_resp(::sg::UserExploreService_UserExploreResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserExploreService.resp)
}

// -------------------------------------------------------------------

// UserExploreActionService_UserExploreRequest

// required .sg.UserExploreActionService.EXPLORE_CMD cmd = 1;
inline bool UserExploreActionService_UserExploreRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserExploreActionService_UserExploreRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserExploreActionService_UserExploreRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserExploreActionService_UserExploreRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserExploreActionService_EXPLORE_CMD UserExploreActionService_UserExploreRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreRequest.cmd)
  return static_cast< ::sg::UserExploreActionService_EXPLORE_CMD >(cmd_);
}
inline void UserExploreActionService_UserExploreRequest::set_cmd(::sg::UserExploreActionService_EXPLORE_CMD value) {
  assert(::sg::UserExploreActionService_EXPLORE_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreActionService.UserExploreRequest.cmd)
}

// optional int32 eventid = 2;
inline bool UserExploreActionService_UserExploreRequest::has_eventid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserExploreActionService_UserExploreRequest::set_has_eventid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserExploreActionService_UserExploreRequest::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserExploreActionService_UserExploreRequest::clear_eventid() {
  eventid_ = 0;
  clear_has_eventid();
}
inline ::google::protobuf::int32 UserExploreActionService_UserExploreRequest::eventid() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreRequest.eventid)
  return eventid_;
}
inline void UserExploreActionService_UserExploreRequest::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreActionService.UserExploreRequest.eventid)
}

// optional int32 action = 3;
inline bool UserExploreActionService_UserExploreRequest::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserExploreActionService_UserExploreRequest::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserExploreActionService_UserExploreRequest::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserExploreActionService_UserExploreRequest::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 UserExploreActionService_UserExploreRequest::action() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreRequest.action)
  return action_;
}
inline void UserExploreActionService_UserExploreRequest::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreActionService.UserExploreRequest.action)
}

// optional .sg.MOVE_DIRECTION direction = 4;
inline bool UserExploreActionService_UserExploreRequest::has_direction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserExploreActionService_UserExploreRequest::set_has_direction() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserExploreActionService_UserExploreRequest::clear_has_direction() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserExploreActionService_UserExploreRequest::clear_direction() {
  direction_ = 1;
  clear_has_direction();
}
inline ::sg::MOVE_DIRECTION UserExploreActionService_UserExploreRequest::direction() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreRequest.direction)
  return static_cast< ::sg::MOVE_DIRECTION >(direction_);
}
inline void UserExploreActionService_UserExploreRequest::set_direction(::sg::MOVE_DIRECTION value) {
  assert(::sg::MOVE_DIRECTION_IsValid(value));
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreActionService.UserExploreRequest.direction)
}

// optional int32 distance = 5;
inline bool UserExploreActionService_UserExploreRequest::has_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserExploreActionService_UserExploreRequest::set_has_distance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserExploreActionService_UserExploreRequest::clear_has_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserExploreActionService_UserExploreRequest::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline ::google::protobuf::int32 UserExploreActionService_UserExploreRequest::distance() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreRequest.distance)
  return distance_;
}
inline void UserExploreActionService_UserExploreRequest::set_distance(::google::protobuf::int32 value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreActionService.UserExploreRequest.distance)
}

// optional int32 stageid = 6;
inline bool UserExploreActionService_UserExploreRequest::has_stageid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserExploreActionService_UserExploreRequest::set_has_stageid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserExploreActionService_UserExploreRequest::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserExploreActionService_UserExploreRequest::clear_stageid() {
  stageid_ = 0;
  clear_has_stageid();
}
inline ::google::protobuf::int32 UserExploreActionService_UserExploreRequest::stageid() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreRequest.stageid)
  return stageid_;
}
inline void UserExploreActionService_UserExploreRequest::set_stageid(::google::protobuf::int32 value) {
  set_has_stageid();
  stageid_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreActionService.UserExploreRequest.stageid)
}

// -------------------------------------------------------------------

// UserExploreActionService_UserExploreResponse

// required int32 result = 1;
inline bool UserExploreActionService_UserExploreResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserExploreActionService_UserExploreResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserExploreActionService_UserExploreResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserExploreActionService_UserExploreResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserExploreActionService_UserExploreResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreResponse.result)
  return result_;
}
inline void UserExploreActionService_UserExploreResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserExploreActionService.UserExploreResponse.result)
}

// optional .sg.ExploreState state = 2;
inline bool UserExploreActionService_UserExploreResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserExploreActionService_UserExploreResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserExploreActionService_UserExploreResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserExploreActionService_UserExploreResponse::clear_state() {
  if (state_ != NULL) state_->Clear();
  clear_has_state();
}
inline const ::sg::ExploreState& UserExploreActionService_UserExploreResponse::_internal_state() const {
  return *state_;
}
inline const ::sg::ExploreState& UserExploreActionService_UserExploreResponse::state() const {
  const ::sg::ExploreState* p = state_;
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreResponse.state)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ExploreState*>(
      &::sg::_ExploreState_default_instance_);
}
inline ::sg::ExploreState* UserExploreActionService_UserExploreResponse::release_state() {
  // @@protoc_insertion_point(field_release:sg.UserExploreActionService.UserExploreResponse.state)
  clear_has_state();
  ::sg::ExploreState* temp = state_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  state_ = NULL;
  return temp;
}
inline ::sg::ExploreState* UserExploreActionService_UserExploreResponse::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserExploreActionService.UserExploreResponse.state)
  clear_has_state();
  ::sg::ExploreState* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::sg::ExploreState* UserExploreActionService_UserExploreResponse::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ExploreState>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserExploreActionService.UserExploreResponse.state)
  return state_;
}
inline void UserExploreActionService_UserExploreResponse::set_allocated_state(::sg::ExploreState* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(state);
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    set_has_state();
  } else {
    clear_has_state();
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:sg.UserExploreActionService.UserExploreResponse.state)
}

// optional .sg.ExploreStage stage = 3;
inline bool UserExploreActionService_UserExploreResponse::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserExploreActionService_UserExploreResponse::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserExploreActionService_UserExploreResponse::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserExploreActionService_UserExploreResponse::clear_stage() {
  if (stage_ != NULL) stage_->Clear();
  clear_has_stage();
}
inline const ::sg::ExploreStage& UserExploreActionService_UserExploreResponse::_internal_stage() const {
  return *stage_;
}
inline const ::sg::ExploreStage& UserExploreActionService_UserExploreResponse::stage() const {
  const ::sg::ExploreStage* p = stage_;
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreResponse.stage)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ExploreStage*>(
      &::sg::_ExploreStage_default_instance_);
}
inline ::sg::ExploreStage* UserExploreActionService_UserExploreResponse::release_stage() {
  // @@protoc_insertion_point(field_release:sg.UserExploreActionService.UserExploreResponse.stage)
  clear_has_stage();
  ::sg::ExploreStage* temp = stage_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  stage_ = NULL;
  return temp;
}
inline ::sg::ExploreStage* UserExploreActionService_UserExploreResponse::unsafe_arena_release_stage() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserExploreActionService.UserExploreResponse.stage)
  clear_has_stage();
  ::sg::ExploreStage* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline ::sg::ExploreStage* UserExploreActionService_UserExploreResponse::mutable_stage() {
  set_has_stage();
  if (stage_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ExploreStage>(GetArenaNoVirtual());
    stage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserExploreActionService.UserExploreResponse.stage)
  return stage_;
}
inline void UserExploreActionService_UserExploreResponse::set_allocated_stage(::sg::ExploreStage* stage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stage_;
  }
  if (stage) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(stage);
    if (message_arena != submessage_arena) {
      stage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stage, submessage_arena);
    }
    set_has_stage();
  } else {
    clear_has_stage();
  }
  stage_ = stage;
  // @@protoc_insertion_point(field_set_allocated:sg.UserExploreActionService.UserExploreResponse.stage)
}

// optional .sg.ActionResult action_result = 6;
inline bool UserExploreActionService_UserExploreResponse::has_action_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserExploreActionService_UserExploreResponse::set_has_action_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserExploreActionService_UserExploreResponse::clear_has_action_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserExploreActionService_UserExploreResponse::clear_action_result() {
  if (action_result_ != NULL) action_result_->Clear();
  clear_has_action_result();
}
inline const ::sg::ActionResult& UserExploreActionService_UserExploreResponse::_internal_action_result() const {
  return *action_result_;
}
inline const ::sg::ActionResult& UserExploreActionService_UserExploreResponse::action_result() const {
  const ::sg::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.UserExploreResponse.action_result)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ActionResult*>(
      &::sg::_ActionResult_default_instance_);
}
inline ::sg::ActionResult* UserExploreActionService_UserExploreResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:sg.UserExploreActionService.UserExploreResponse.action_result)
  clear_has_action_result();
  ::sg::ActionResult* temp = action_result_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  action_result_ = NULL;
  return temp;
}
inline ::sg::ActionResult* UserExploreActionService_UserExploreResponse::unsafe_arena_release_action_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserExploreActionService.UserExploreResponse.action_result)
  clear_has_action_result();
  ::sg::ActionResult* temp = action_result_;
  action_result_ = NULL;
  return temp;
}
inline ::sg::ActionResult* UserExploreActionService_UserExploreResponse::mutable_action_result() {
  set_has_action_result();
  if (action_result_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserExploreActionService.UserExploreResponse.action_result)
  return action_result_;
}
inline void UserExploreActionService_UserExploreResponse::set_allocated_action_result(::sg::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(action_result);
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    set_has_action_result();
  } else {
    clear_has_action_result();
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:sg.UserExploreActionService.UserExploreResponse.action_result)
}

// -------------------------------------------------------------------

// UserExploreActionService

// optional .sg.UserExploreActionService.UserExploreRequest req = 1;
inline bool UserExploreActionService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserExploreActionService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserExploreActionService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserExploreActionService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserExploreActionService_UserExploreRequest& UserExploreActionService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserExploreActionService_UserExploreRequest& UserExploreActionService::req() const {
  const ::sg::UserExploreActionService_UserExploreRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserExploreActionService_UserExploreRequest*>(
      &::sg::_UserExploreActionService_UserExploreRequest_default_instance_);
}
inline ::sg::UserExploreActionService_UserExploreRequest* UserExploreActionService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserExploreActionService.req)
  clear_has_req();
  ::sg::UserExploreActionService_UserExploreRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserExploreActionService_UserExploreRequest* UserExploreActionService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserExploreActionService.req)
  clear_has_req();
  ::sg::UserExploreActionService_UserExploreRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserExploreActionService_UserExploreRequest* UserExploreActionService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserExploreActionService_UserExploreRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserExploreActionService.req)
  return req_;
}
inline void UserExploreActionService::set_allocated_req(::sg::UserExploreActionService_UserExploreRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserExploreActionService.req)
}

// optional .sg.UserExploreActionService.UserExploreResponse resp = 2;
inline bool UserExploreActionService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserExploreActionService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserExploreActionService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserExploreActionService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserExploreActionService_UserExploreResponse& UserExploreActionService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserExploreActionService_UserExploreResponse& UserExploreActionService::resp() const {
  const ::sg::UserExploreActionService_UserExploreResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserExploreActionService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserExploreActionService_UserExploreResponse*>(
      &::sg::_UserExploreActionService_UserExploreResponse_default_instance_);
}
inline ::sg::UserExploreActionService_UserExploreResponse* UserExploreActionService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserExploreActionService.resp)
  clear_has_resp();
  ::sg::UserExploreActionService_UserExploreResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserExploreActionService_UserExploreResponse* UserExploreActionService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserExploreActionService.resp)
  clear_has_resp();
  ::sg::UserExploreActionService_UserExploreResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserExploreActionService_UserExploreResponse* UserExploreActionService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserExploreActionService_UserExploreResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserExploreActionService.resp)
  return resp_;
}
inline void UserExploreActionService::set_allocated_resp(::sg::UserExploreActionService_UserExploreResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserExploreActionService.resp)
}

// -------------------------------------------------------------------

// NewEventExist

// required .sg.ExploreEvent event = 1;
inline bool NewEventExist::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewEventExist::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewEventExist::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewEventExist::clear_event() {
  if (event_ != NULL) event_->Clear();
  clear_has_event();
}
inline const ::sg::ExploreEvent& NewEventExist::_internal_event() const {
  return *event_;
}
inline const ::sg::ExploreEvent& NewEventExist::event() const {
  const ::sg::ExploreEvent* p = event_;
  // @@protoc_insertion_point(field_get:sg.NewEventExist.event)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ExploreEvent*>(
      &::sg::_ExploreEvent_default_instance_);
}
inline ::sg::ExploreEvent* NewEventExist::release_event() {
  // @@protoc_insertion_point(field_release:sg.NewEventExist.event)
  clear_has_event();
  ::sg::ExploreEvent* temp = event_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  event_ = NULL;
  return temp;
}
inline ::sg::ExploreEvent* NewEventExist::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.NewEventExist.event)
  clear_has_event();
  ::sg::ExploreEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::sg::ExploreEvent* NewEventExist::mutable_event() {
  set_has_event();
  if (event_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ExploreEvent>(GetArenaNoVirtual());
    event_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.NewEventExist.event)
  return event_;
}
inline void NewEventExist::set_allocated_event(::sg::ExploreEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(event);
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
  } else {
    clear_has_event();
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:sg.NewEventExist.event)
}

// required .sg.ExploreRecord record = 3;
inline bool NewEventExist::has_record() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewEventExist::set_has_record() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewEventExist::clear_has_record() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewEventExist::clear_record() {
  if (record_ != NULL) record_->Clear();
  clear_has_record();
}
inline const ::sg::ExploreRecord& NewEventExist::_internal_record() const {
  return *record_;
}
inline const ::sg::ExploreRecord& NewEventExist::record() const {
  const ::sg::ExploreRecord* p = record_;
  // @@protoc_insertion_point(field_get:sg.NewEventExist.record)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ExploreRecord*>(
      &::sg::_ExploreRecord_default_instance_);
}
inline ::sg::ExploreRecord* NewEventExist::release_record() {
  // @@protoc_insertion_point(field_release:sg.NewEventExist.record)
  clear_has_record();
  ::sg::ExploreRecord* temp = record_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  record_ = NULL;
  return temp;
}
inline ::sg::ExploreRecord* NewEventExist::unsafe_arena_release_record() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.NewEventExist.record)
  clear_has_record();
  ::sg::ExploreRecord* temp = record_;
  record_ = NULL;
  return temp;
}
inline ::sg::ExploreRecord* NewEventExist::mutable_record() {
  set_has_record();
  if (record_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ExploreRecord>(GetArenaNoVirtual());
    record_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.NewEventExist.record)
  return record_;
}
inline void NewEventExist::set_allocated_record(::sg::ExploreRecord* record) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete record_;
  }
  if (record) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(record);
    if (message_arena != submessage_arena) {
      record = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, record, submessage_arena);
    }
    set_has_record();
  } else {
    clear_has_record();
  }
  record_ = record;
  // @@protoc_insertion_point(field_set_allocated:sg.NewEventExist.record)
}

// -------------------------------------------------------------------

// EventChangeNotify

// required .sg.ExploreEvent event = 1;
inline bool EventChangeNotify::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventChangeNotify::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventChangeNotify::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventChangeNotify::clear_event() {
  if (event_ != NULL) event_->Clear();
  clear_has_event();
}
inline const ::sg::ExploreEvent& EventChangeNotify::_internal_event() const {
  return *event_;
}
inline const ::sg::ExploreEvent& EventChangeNotify::event() const {
  const ::sg::ExploreEvent* p = event_;
  // @@protoc_insertion_point(field_get:sg.EventChangeNotify.event)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ExploreEvent*>(
      &::sg::_ExploreEvent_default_instance_);
}
inline ::sg::ExploreEvent* EventChangeNotify::release_event() {
  // @@protoc_insertion_point(field_release:sg.EventChangeNotify.event)
  clear_has_event();
  ::sg::ExploreEvent* temp = event_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  event_ = NULL;
  return temp;
}
inline ::sg::ExploreEvent* EventChangeNotify::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.EventChangeNotify.event)
  clear_has_event();
  ::sg::ExploreEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::sg::ExploreEvent* EventChangeNotify::mutable_event() {
  set_has_event();
  if (event_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ExploreEvent>(GetArenaNoVirtual());
    event_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.EventChangeNotify.event)
  return event_;
}
inline void EventChangeNotify::set_allocated_event(::sg::ExploreEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(event);
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
  } else {
    clear_has_event();
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:sg.EventChangeNotify.event)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sg::UserExploreService_EXPLORE_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserExploreService_EXPLORE_CMD>() {
  return ::sg::UserExploreService_EXPLORE_CMD_descriptor();
}
template <> struct is_proto_enum< ::sg::UserExploreActionService_EXPLORE_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserExploreActionService_EXPLORE_CMD>() {
  return ::sg::UserExploreActionService_EXPLORE_CMD_descriptor();
}
template <> struct is_proto_enum< ::sg::EXPLORE_RECORD_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::EXPLORE_RECORD_TYPE>() {
  return ::sg::EXPLORE_RECORD_TYPE_descriptor();
}
template <> struct is_proto_enum< ::sg::EXPLORE_EVENT_STATE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::EXPLORE_EVENT_STATE>() {
  return ::sg::EXPLORE_EVENT_STATE_descriptor();
}
template <> struct is_proto_enum< ::sg::EXPLORE_LOCALE_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::EXPLORE_LOCALE_TYPE>() {
  return ::sg::EXPLORE_LOCALE_TYPE_descriptor();
}
template <> struct is_proto_enum< ::sg::MOVE_DIRECTION> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::MOVE_DIRECTION>() {
  return ::sg::MOVE_DIRECTION_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_UserExplore_2eproto
