// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Development.proto

#include "Development.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Item;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_Development_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Development_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserDevelopmentService_UserDevelopmentResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Development_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserDevelopmentService_UserDevelopmentRequest;
}  // namespace protobuf_Development_2eproto
namespace sg {
class UserDevelopmentService_UserDevelopmentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserDevelopmentService_UserDevelopmentRequest>
      _instance;
} _UserDevelopmentService_UserDevelopmentRequest_default_instance_;
class UserDevelopmentService_UserDevelopmentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserDevelopmentService_UserDevelopmentResponse>
      _instance;
} _UserDevelopmentService_UserDevelopmentResponse_default_instance_;
class UserDevelopmentServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserDevelopmentService>
      _instance;
} _UserDevelopmentService_default_instance_;
}  // namespace sg
namespace protobuf_Development_2eproto {
static void InitDefaultsUserDevelopmentService_UserDevelopmentRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserDevelopmentService_UserDevelopmentRequest_default_instance_;
    new (ptr) ::sg::UserDevelopmentService_UserDevelopmentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserDevelopmentService_UserDevelopmentRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserDevelopmentService_UserDevelopmentRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserDevelopmentService_UserDevelopmentRequest}, {
      &protobuf_BaseStruct_2eproto::scc_info_Item.base,}};

static void InitDefaultsUserDevelopmentService_UserDevelopmentResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserDevelopmentService_UserDevelopmentResponse_default_instance_;
    new (ptr) ::sg::UserDevelopmentService_UserDevelopmentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserDevelopmentService_UserDevelopmentResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserDevelopmentService_UserDevelopmentResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserDevelopmentService_UserDevelopmentResponse}, {}};

static void InitDefaultsUserDevelopmentService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserDevelopmentService_default_instance_;
    new (ptr) ::sg::UserDevelopmentService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserDevelopmentService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserDevelopmentService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserDevelopmentService}, {
      &protobuf_Development_2eproto::scc_info_UserDevelopmentService_UserDevelopmentRequest.base,
      &protobuf_Development_2eproto::scc_info_UserDevelopmentService_UserDevelopmentResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UserDevelopmentService_UserDevelopmentRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserDevelopmentService_UserDevelopmentResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserDevelopmentService.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentRequest, develop_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentRequest, materials_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentResponse, formula_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService_UserDevelopmentResponse, unlock_formula_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserDevelopmentService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::sg::UserDevelopmentService_UserDevelopmentRequest)},
  { 11, 19, sizeof(::sg::UserDevelopmentService_UserDevelopmentResponse)},
  { 22, 29, sizeof(::sg::UserDevelopmentService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserDevelopmentService_UserDevelopmentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserDevelopmentService_UserDevelopmentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserDevelopmentService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Development.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021Development.proto\022\002sg\032\020BaseStruct.prot"
      "o\"\214\003\n\026UserDevelopmentService\022>\n\003req\030\001 \001("
      "\01321.sg.UserDevelopmentService.UserDevelo"
      "pmentRequest\022@\n\004resp\030\002 \001(\01322.sg.UserDeve"
      "lopmentService.UserDevelopmentResponse\032x"
      "\n\026UserDevelopmentRequest\022+\n\003cmd\030\001 \002(\0162\036."
      "sg.UserDevelopmentService.CMD\022\024\n\014develop"
      "_type\030\002 \001(\005\022\033\n\tmaterials\030\003 \003(\0132\010.sg.Item"
      "\032W\n\027UserDevelopmentResponse\022\016\n\006result\030\001 "
      "\002(\005\022\024\n\014formula_list\030\002 \003(\005\022\026\n\016unlock_form"
      "ula\030\003 \001(\005\"\035\n\003CMD\022\t\n\005QUERY\020\001\022\013\n\007DEVELOP\020\002"
      "B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 445);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Development.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Development_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserDevelopmentService_CMD_descriptor() {
  protobuf_Development_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Development_2eproto::file_level_enum_descriptors[0];
}
bool UserDevelopmentService_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserDevelopmentService_CMD UserDevelopmentService::QUERY;
const UserDevelopmentService_CMD UserDevelopmentService::DEVELOP;
const UserDevelopmentService_CMD UserDevelopmentService::CMD_MIN;
const UserDevelopmentService_CMD UserDevelopmentService::CMD_MAX;
const int UserDevelopmentService::CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void UserDevelopmentService_UserDevelopmentRequest::InitAsDefaultInstance() {
}
void UserDevelopmentService_UserDevelopmentRequest::clear_materials() {
  materials_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserDevelopmentService_UserDevelopmentRequest::kCmdFieldNumber;
const int UserDevelopmentService_UserDevelopmentRequest::kDevelopTypeFieldNumber;
const int UserDevelopmentService_UserDevelopmentRequest::kMaterialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserDevelopmentService_UserDevelopmentRequest::UserDevelopmentService_UserDevelopmentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Development_2eproto::scc_info_UserDevelopmentService_UserDevelopmentRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserDevelopmentService.UserDevelopmentRequest)
}
UserDevelopmentService_UserDevelopmentRequest::UserDevelopmentService_UserDevelopmentRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  materials_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Development_2eproto::scc_info_UserDevelopmentService_UserDevelopmentRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserDevelopmentService.UserDevelopmentRequest)
}
UserDevelopmentService_UserDevelopmentRequest::UserDevelopmentService_UserDevelopmentRequest(const UserDevelopmentService_UserDevelopmentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      materials_(from.materials_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&develop_type_, &from.develop_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&develop_type_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.UserDevelopmentService.UserDevelopmentRequest)
}

void UserDevelopmentService_UserDevelopmentRequest::SharedCtor() {
  develop_type_ = 0;
  cmd_ = 1;
}

UserDevelopmentService_UserDevelopmentRequest::~UserDevelopmentService_UserDevelopmentRequest() {
  // @@protoc_insertion_point(destructor:sg.UserDevelopmentService.UserDevelopmentRequest)
  SharedDtor();
}

void UserDevelopmentService_UserDevelopmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserDevelopmentService_UserDevelopmentRequest::ArenaDtor(void* object) {
  UserDevelopmentService_UserDevelopmentRequest* _this = reinterpret_cast< UserDevelopmentService_UserDevelopmentRequest* >(object);
  (void)_this;
}
void UserDevelopmentService_UserDevelopmentRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserDevelopmentService_UserDevelopmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserDevelopmentService_UserDevelopmentRequest::descriptor() {
  ::protobuf_Development_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Development_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserDevelopmentService_UserDevelopmentRequest& UserDevelopmentService_UserDevelopmentRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Development_2eproto::scc_info_UserDevelopmentService_UserDevelopmentRequest.base);
  return *internal_default_instance();
}


void UserDevelopmentService_UserDevelopmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  materials_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    develop_type_ = 0;
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserDevelopmentService_UserDevelopmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserDevelopmentService.CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserDevelopmentService_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserDevelopmentService_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 develop_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_develop_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &develop_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Item materials = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_materials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserDevelopmentService.UserDevelopmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserDevelopmentService.UserDevelopmentRequest)
  return false;
#undef DO_
}

void UserDevelopmentService_UserDevelopmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserDevelopmentService.CMD cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 develop_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->develop_type(), output);
  }

  // repeated .sg.Item materials = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->materials(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserDevelopmentService.UserDevelopmentRequest)
}

::google::protobuf::uint8* UserDevelopmentService_UserDevelopmentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserDevelopmentService.CMD cmd = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 develop_type = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->develop_type(), target);
  }

  // repeated .sg.Item materials = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->materials(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserDevelopmentService.UserDevelopmentRequest)
  return target;
}

size_t UserDevelopmentService_UserDevelopmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserDevelopmentService.CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // repeated .sg.Item materials = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->materials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->materials(static_cast<int>(i)));
    }
  }

  // optional int32 develop_type = 2;
  if (has_develop_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->develop_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserDevelopmentService_UserDevelopmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserDevelopmentService_UserDevelopmentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserDevelopmentService_UserDevelopmentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserDevelopmentService.UserDevelopmentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserDevelopmentService.UserDevelopmentRequest)
    MergeFrom(*source);
  }
}

void UserDevelopmentService_UserDevelopmentRequest::MergeFrom(const UserDevelopmentService_UserDevelopmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  materials_.MergeFrom(from.materials_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      develop_type_ = from.develop_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserDevelopmentService_UserDevelopmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserDevelopmentService_UserDevelopmentRequest::CopyFrom(const UserDevelopmentService_UserDevelopmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserDevelopmentService.UserDevelopmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserDevelopmentService_UserDevelopmentRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->materials())) return false;
  return true;
}

void UserDevelopmentService_UserDevelopmentRequest::Swap(UserDevelopmentService_UserDevelopmentRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserDevelopmentService_UserDevelopmentRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserDevelopmentService_UserDevelopmentRequest::UnsafeArenaSwap(UserDevelopmentService_UserDevelopmentRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserDevelopmentService_UserDevelopmentRequest::InternalSwap(UserDevelopmentService_UserDevelopmentRequest* other) {
  using std::swap;
  CastToBase(&materials_)->InternalSwap(CastToBase(&other->materials_));
  swap(develop_type_, other->develop_type_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserDevelopmentService_UserDevelopmentRequest::GetMetadata() const {
  protobuf_Development_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Development_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserDevelopmentService_UserDevelopmentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserDevelopmentService_UserDevelopmentResponse::kResultFieldNumber;
const int UserDevelopmentService_UserDevelopmentResponse::kFormulaListFieldNumber;
const int UserDevelopmentService_UserDevelopmentResponse::kUnlockFormulaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserDevelopmentService_UserDevelopmentResponse::UserDevelopmentService_UserDevelopmentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Development_2eproto::scc_info_UserDevelopmentService_UserDevelopmentResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserDevelopmentService.UserDevelopmentResponse)
}
UserDevelopmentService_UserDevelopmentResponse::UserDevelopmentService_UserDevelopmentResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  formula_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Development_2eproto::scc_info_UserDevelopmentService_UserDevelopmentResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserDevelopmentService.UserDevelopmentResponse)
}
UserDevelopmentService_UserDevelopmentResponse::UserDevelopmentService_UserDevelopmentResponse(const UserDevelopmentService_UserDevelopmentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      formula_list_(from.formula_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&unlock_formula_) -
    reinterpret_cast<char*>(&result_)) + sizeof(unlock_formula_));
  // @@protoc_insertion_point(copy_constructor:sg.UserDevelopmentService.UserDevelopmentResponse)
}

void UserDevelopmentService_UserDevelopmentResponse::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unlock_formula_) -
      reinterpret_cast<char*>(&result_)) + sizeof(unlock_formula_));
}

UserDevelopmentService_UserDevelopmentResponse::~UserDevelopmentService_UserDevelopmentResponse() {
  // @@protoc_insertion_point(destructor:sg.UserDevelopmentService.UserDevelopmentResponse)
  SharedDtor();
}

void UserDevelopmentService_UserDevelopmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserDevelopmentService_UserDevelopmentResponse::ArenaDtor(void* object) {
  UserDevelopmentService_UserDevelopmentResponse* _this = reinterpret_cast< UserDevelopmentService_UserDevelopmentResponse* >(object);
  (void)_this;
}
void UserDevelopmentService_UserDevelopmentResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserDevelopmentService_UserDevelopmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserDevelopmentService_UserDevelopmentResponse::descriptor() {
  ::protobuf_Development_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Development_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserDevelopmentService_UserDevelopmentResponse& UserDevelopmentService_UserDevelopmentResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Development_2eproto::scc_info_UserDevelopmentService_UserDevelopmentResponse.base);
  return *internal_default_instance();
}


void UserDevelopmentService_UserDevelopmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  formula_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unlock_formula_) -
        reinterpret_cast<char*>(&result_)) + sizeof(unlock_formula_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserDevelopmentService_UserDevelopmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 formula_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_formula_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_formula_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unlock_formula = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_unlock_formula();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unlock_formula_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserDevelopmentService.UserDevelopmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserDevelopmentService.UserDevelopmentResponse)
  return false;
#undef DO_
}

void UserDevelopmentService_UserDevelopmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated int32 formula_list = 2;
  for (int i = 0, n = this->formula_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->formula_list(i), output);
  }

  // optional int32 unlock_formula = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unlock_formula(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserDevelopmentService.UserDevelopmentResponse)
}

::google::protobuf::uint8* UserDevelopmentService_UserDevelopmentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated int32 formula_list = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->formula_list_, target);

  // optional int32 unlock_formula = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unlock_formula(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserDevelopmentService.UserDevelopmentResponse)
  return target;
}

size_t UserDevelopmentService_UserDevelopmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated int32 formula_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->formula_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->formula_list_size());
    total_size += data_size;
  }

  // optional int32 unlock_formula = 3;
  if (has_unlock_formula()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unlock_formula());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserDevelopmentService_UserDevelopmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserDevelopmentService_UserDevelopmentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserDevelopmentService_UserDevelopmentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserDevelopmentService.UserDevelopmentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserDevelopmentService.UserDevelopmentResponse)
    MergeFrom(*source);
  }
}

void UserDevelopmentService_UserDevelopmentResponse::MergeFrom(const UserDevelopmentService_UserDevelopmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  formula_list_.MergeFrom(from.formula_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      unlock_formula_ = from.unlock_formula_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserDevelopmentService_UserDevelopmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserDevelopmentService_UserDevelopmentResponse::CopyFrom(const UserDevelopmentService_UserDevelopmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserDevelopmentService.UserDevelopmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserDevelopmentService_UserDevelopmentResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserDevelopmentService_UserDevelopmentResponse::Swap(UserDevelopmentService_UserDevelopmentResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserDevelopmentService_UserDevelopmentResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserDevelopmentService_UserDevelopmentResponse::UnsafeArenaSwap(UserDevelopmentService_UserDevelopmentResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserDevelopmentService_UserDevelopmentResponse::InternalSwap(UserDevelopmentService_UserDevelopmentResponse* other) {
  using std::swap;
  formula_list_.InternalSwap(&other->formula_list_);
  swap(result_, other->result_);
  swap(unlock_formula_, other->unlock_formula_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserDevelopmentService_UserDevelopmentResponse::GetMetadata() const {
  protobuf_Development_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Development_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserDevelopmentService::InitAsDefaultInstance() {
  ::sg::_UserDevelopmentService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserDevelopmentService_UserDevelopmentRequest*>(
      ::sg::UserDevelopmentService_UserDevelopmentRequest::internal_default_instance());
  ::sg::_UserDevelopmentService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserDevelopmentService_UserDevelopmentResponse*>(
      ::sg::UserDevelopmentService_UserDevelopmentResponse::internal_default_instance());
}
void UserDevelopmentService::unsafe_arena_set_allocated_req(
    ::sg::UserDevelopmentService_UserDevelopmentRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserDevelopmentService.req)
}
void UserDevelopmentService::unsafe_arena_set_allocated_resp(
    ::sg::UserDevelopmentService_UserDevelopmentResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserDevelopmentService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserDevelopmentService::kReqFieldNumber;
const int UserDevelopmentService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserDevelopmentService::UserDevelopmentService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Development_2eproto::scc_info_UserDevelopmentService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserDevelopmentService)
}
UserDevelopmentService::UserDevelopmentService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Development_2eproto::scc_info_UserDevelopmentService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserDevelopmentService)
}
UserDevelopmentService::UserDevelopmentService(const UserDevelopmentService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserDevelopmentService_UserDevelopmentRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserDevelopmentService_UserDevelopmentResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserDevelopmentService)
}

void UserDevelopmentService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserDevelopmentService::~UserDevelopmentService() {
  // @@protoc_insertion_point(destructor:sg.UserDevelopmentService)
  SharedDtor();
}

void UserDevelopmentService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserDevelopmentService::ArenaDtor(void* object) {
  UserDevelopmentService* _this = reinterpret_cast< UserDevelopmentService* >(object);
  (void)_this;
}
void UserDevelopmentService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserDevelopmentService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserDevelopmentService::descriptor() {
  ::protobuf_Development_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Development_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserDevelopmentService& UserDevelopmentService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Development_2eproto::scc_info_UserDevelopmentService.base);
  return *internal_default_instance();
}


void UserDevelopmentService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserDevelopmentService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserDevelopmentService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserDevelopmentService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserDevelopmentService.UserDevelopmentRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserDevelopmentService.UserDevelopmentResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserDevelopmentService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserDevelopmentService)
  return false;
#undef DO_
}

void UserDevelopmentService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserDevelopmentService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserDevelopmentService.UserDevelopmentRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserDevelopmentService.UserDevelopmentResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserDevelopmentService)
}

::google::protobuf::uint8* UserDevelopmentService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserDevelopmentService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserDevelopmentService.UserDevelopmentRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserDevelopmentService.UserDevelopmentResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserDevelopmentService)
  return target;
}

size_t UserDevelopmentService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserDevelopmentService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserDevelopmentService.UserDevelopmentRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserDevelopmentService.UserDevelopmentResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserDevelopmentService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserDevelopmentService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserDevelopmentService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserDevelopmentService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserDevelopmentService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserDevelopmentService)
    MergeFrom(*source);
  }
}

void UserDevelopmentService::MergeFrom(const UserDevelopmentService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserDevelopmentService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserDevelopmentService_UserDevelopmentRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserDevelopmentService_UserDevelopmentResponse::MergeFrom(from.resp());
    }
  }
}

void UserDevelopmentService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserDevelopmentService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserDevelopmentService::CopyFrom(const UserDevelopmentService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserDevelopmentService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserDevelopmentService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserDevelopmentService::Swap(UserDevelopmentService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserDevelopmentService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserDevelopmentService::UnsafeArenaSwap(UserDevelopmentService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserDevelopmentService::InternalSwap(UserDevelopmentService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserDevelopmentService::GetMetadata() const {
  protobuf_Development_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Development_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserDevelopmentService_UserDevelopmentRequest* Arena::CreateMaybeMessage< ::sg::UserDevelopmentService_UserDevelopmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserDevelopmentService_UserDevelopmentRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserDevelopmentService_UserDevelopmentResponse* Arena::CreateMaybeMessage< ::sg::UserDevelopmentService_UserDevelopmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserDevelopmentService_UserDevelopmentResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserDevelopmentService* Arena::CreateMaybeMessage< ::sg::UserDevelopmentService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserDevelopmentService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
