// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ShipEvent.proto

#include "ShipEvent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Item;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Reward;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_ShipEvent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ShipEvent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShipEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ShipEvent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShipEventService_ShipEventRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ShipEvent_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ShipEventService_ShipEventResponse;
}  // namespace protobuf_ShipEvent_2eproto
namespace sg {
class ShipEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShipEvent>
      _instance;
} _ShipEvent_default_instance_;
class ShipEventService_ShipEventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShipEventService_ShipEventRequest>
      _instance;
} _ShipEventService_ShipEventRequest_default_instance_;
class ShipEventService_ShipEventResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShipEventService_ShipEventResponse>
      _instance;
} _ShipEventService_ShipEventResponse_default_instance_;
class ShipEventServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShipEventService>
      _instance;
} _ShipEventService_default_instance_;
class ShipEventNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShipEventNotify>
      _instance;
} _ShipEventNotify_default_instance_;
class ShipEventDisappearNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShipEventDisappearNotify>
      _instance;
} _ShipEventDisappearNotify_default_instance_;
}  // namespace sg
namespace protobuf_ShipEvent_2eproto {
static void InitDefaultsShipEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShipEvent_default_instance_;
    new (ptr) ::sg::ShipEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShipEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShipEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShipEvent}, {}};

static void InitDefaultsShipEventService_ShipEventRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShipEventService_ShipEventRequest_default_instance_;
    new (ptr) ::sg::ShipEventService_ShipEventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShipEventService_ShipEventRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShipEventService_ShipEventRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShipEventService_ShipEventRequest}, {}};

static void InitDefaultsShipEventService_ShipEventResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShipEventService_ShipEventResponse_default_instance_;
    new (ptr) ::sg::ShipEventService_ShipEventResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShipEventService_ShipEventResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ShipEventService_ShipEventResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsShipEventService_ShipEventResponse}, {
      &protobuf_ShipEvent_2eproto::scc_info_ShipEvent.base,
      &protobuf_BaseStruct_2eproto::scc_info_Reward.base,}};

static void InitDefaultsShipEventService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShipEventService_default_instance_;
    new (ptr) ::sg::ShipEventService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShipEventService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ShipEventService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsShipEventService}, {
      &protobuf_ShipEvent_2eproto::scc_info_ShipEventService_ShipEventRequest.base,
      &protobuf_ShipEvent_2eproto::scc_info_ShipEventService_ShipEventResponse.base,}};

static void InitDefaultsShipEventNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShipEventNotify_default_instance_;
    new (ptr) ::sg::ShipEventNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShipEventNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShipEventNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShipEventNotify}, {
      &protobuf_ShipEvent_2eproto::scc_info_ShipEvent.base,}};

static void InitDefaultsShipEventDisappearNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShipEventDisappearNotify_default_instance_;
    new (ptr) ::sg::ShipEventDisappearNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShipEventDisappearNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ShipEventDisappearNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsShipEventDisappearNotify}, {
      &protobuf_ShipEvent_2eproto::scc_info_ShipEvent.base,
      &protobuf_BaseStruct_2eproto::scc_info_Item.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ShipEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShipEventService_ShipEventRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShipEventService_ShipEventResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShipEventService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShipEventNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShipEventDisappearNotify.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, typeid__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, seat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEvent, region_),
  1,
  0,
  2,
  4,
  3,
  6,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventRequest, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventRequest, choice_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventResponse, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventResponse, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService_ShipEventResponse, lose_),
  2,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventNotify, event_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventDisappearNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventDisappearNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventDisappearNotify, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShipEventDisappearNotify, lose_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::sg::ShipEvent)},
  { 19, 27, sizeof(::sg::ShipEventService_ShipEventRequest)},
  { 30, 39, sizeof(::sg::ShipEventService_ShipEventResponse)},
  { 43, 50, sizeof(::sg::ShipEventService)},
  { 52, 58, sizeof(::sg::ShipEventNotify)},
  { 59, 66, sizeof(::sg::ShipEventDisappearNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShipEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShipEventService_ShipEventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShipEventService_ShipEventResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShipEventService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShipEventNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShipEventDisappearNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ShipEvent.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017ShipEvent.proto\022\002sg\032\020BaseStruct.proto\""
      "y\n\tShipEvent\022\n\n\002id\030\001 \002(\005\022\016\n\006typeid\030\002 \002(\003"
      "\022\r\n\005state\030\003 \002(\005\022\014\n\004seat\030\004 \002(\005\022\021\n\ttimesta"
      "mp\030\005 \002(\020\022\020\n\010duration\030\006 \002(\003\022\016\n\006region\030\007 \001"
      "(\005\"\355\002\n\020ShipEventService\0222\n\003req\030\001 \001(\0132%.s"
      "g.ShipEventService.ShipEventRequest\0224\n\004r"
      "esp\030\002 \001(\0132&.sg.ShipEventService.ShipEven"
      "tResponse\032Y\n\020ShipEventRequest\022%\n\003cmd\030\001 \002"
      "(\0162\030.sg.ShipEventService.CMD\022\016\n\006target\030\002"
      " \001(\005\022\016\n\006choice\030\003 \001(\005\032x\n\021ShipEventRespons"
      "e\022\016\n\006result\030\001 \002(\005\022\035\n\006events\030\002 \003(\0132\r.sg.S"
      "hipEvent\022\032\n\006reward\030\003 \001(\0132\n.sg.Reward\022\030\n\004"
      "lose\030\004 \001(\0132\n.sg.Reward\"\032\n\003CMD\022\t\n\005QUERY\020\001"
      "\022\010\n\004DEAL\020\002\"/\n\017ShipEventNotify\022\034\n\005event\030\001"
      " \002(\0132\r.sg.ShipEvent\"P\n\030ShipEventDisappea"
      "rNotify\022\034\n\005event\030\001 \002(\0132\r.sg.ShipEvent\022\026\n"
      "\004lose\030\002 \003(\0132\010.sg.ItemB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 666);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ShipEvent.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ShipEvent_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* ShipEventService_CMD_descriptor() {
  protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShipEvent_2eproto::file_level_enum_descriptors[0];
}
bool ShipEventService_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ShipEventService_CMD ShipEventService::QUERY;
const ShipEventService_CMD ShipEventService::DEAL;
const ShipEventService_CMD ShipEventService::CMD_MIN;
const ShipEventService_CMD ShipEventService::CMD_MAX;
const int ShipEventService::CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ShipEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShipEvent::kIdFieldNumber;
const int ShipEvent::kTypeidFieldNumber;
const int ShipEvent::kStateFieldNumber;
const int ShipEvent::kSeatFieldNumber;
const int ShipEvent::kTimestampFieldNumber;
const int ShipEvent::kDurationFieldNumber;
const int ShipEvent::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShipEvent::ShipEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ShipEvent_2eproto::scc_info_ShipEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShipEvent)
}
ShipEvent::ShipEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEvent.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShipEvent)
}
ShipEvent::ShipEvent(const ShipEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&typeid__, &from.typeid__,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&typeid__)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:sg.ShipEvent)
}

void ShipEvent::SharedCtor() {
  ::memset(&typeid__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&typeid__)) + sizeof(duration_));
}

ShipEvent::~ShipEvent() {
  // @@protoc_insertion_point(destructor:sg.ShipEvent)
  SharedDtor();
}

void ShipEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ShipEvent::ArenaDtor(void* object) {
  ShipEvent* _this = reinterpret_cast< ShipEvent* >(object);
  (void)_this;
}
void ShipEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShipEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShipEvent::descriptor() {
  ::protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShipEvent& ShipEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEvent.base);
  return *internal_default_instance();
}


void ShipEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShipEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&typeid__, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&typeid__)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShipEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShipEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 typeid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_typeid_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &typeid__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 seat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_seat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_region();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShipEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShipEvent)
  return false;
#undef DO_
}

void ShipEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShipEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int64 typeid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->typeid_(), output);
  }

  // required int32 state = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // required int32 seat = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->seat(), output);
  }

  // required sfixed64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(5, this->timestamp(), output);
  }

  // required int64 duration = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->duration(), output);
  }

  // optional int32 region = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->region(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShipEvent)
}

::google::protobuf::uint8* ShipEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShipEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int64 typeid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->typeid_(), target);
  }

  // required int32 state = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // required int32 seat = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->seat(), target);
  }

  // required sfixed64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(5, this->timestamp(), target);
  }

  // required int64 duration = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->duration(), target);
  }

  // optional int32 region = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->region(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShipEvent)
  return target;
}

size_t ShipEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.ShipEvent)
  size_t total_size = 0;

  if (has_typeid_()) {
    // required int64 typeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->typeid_());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_state()) {
    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_timestamp()) {
    // required sfixed64 timestamp = 5;
    total_size += 1 + 8;
  }

  if (has_seat()) {
    // required int32 seat = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());
  }

  if (has_duration()) {
    // required int64 duration = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->duration());
  }

  return total_size;
}
size_t ShipEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShipEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000005f) ^ 0x0000005f) == 0) {  // All required fields are present.
    // required int64 typeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->typeid_());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required sfixed64 timestamp = 5;
    total_size += 1 + 8;

    // required int32 seat = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());

    // required int64 duration = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->duration());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 region = 7;
  if (has_region()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->region());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShipEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShipEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ShipEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShipEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShipEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShipEvent)
    MergeFrom(*source);
  }
}

void ShipEvent::MergeFrom(const ShipEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShipEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      typeid__ = from.typeid__;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      seat_ = from.seat_;
    }
    if (cached_has_bits & 0x00000020u) {
      region_ = from.region_;
    }
    if (cached_has_bits & 0x00000040u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShipEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShipEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShipEvent::CopyFrom(const ShipEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShipEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000005f) != 0x0000005f) return false;
  return true;
}

void ShipEvent::Swap(ShipEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShipEvent* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShipEvent::UnsafeArenaSwap(ShipEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShipEvent::InternalSwap(ShipEvent* other) {
  using std::swap;
  swap(typeid__, other->typeid__);
  swap(id_, other->id_);
  swap(state_, other->state_);
  swap(timestamp_, other->timestamp_);
  swap(seat_, other->seat_);
  swap(region_, other->region_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShipEvent::GetMetadata() const {
  protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShipEventService_ShipEventRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShipEventService_ShipEventRequest::kCmdFieldNumber;
const int ShipEventService_ShipEventRequest::kTargetFieldNumber;
const int ShipEventService_ShipEventRequest::kChoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShipEventService_ShipEventRequest::ShipEventService_ShipEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ShipEvent_2eproto::scc_info_ShipEventService_ShipEventRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShipEventService.ShipEventRequest)
}
ShipEventService_ShipEventRequest::ShipEventService_ShipEventRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventService_ShipEventRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShipEventService.ShipEventRequest)
}
ShipEventService_ShipEventRequest::ShipEventService_ShipEventRequest(const ShipEventService_ShipEventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&target_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.ShipEventService.ShipEventRequest)
}

void ShipEventService_ShipEventRequest::SharedCtor() {
  ::memset(&target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&choice_) -
      reinterpret_cast<char*>(&target_)) + sizeof(choice_));
  cmd_ = 1;
}

ShipEventService_ShipEventRequest::~ShipEventService_ShipEventRequest() {
  // @@protoc_insertion_point(destructor:sg.ShipEventService.ShipEventRequest)
  SharedDtor();
}

void ShipEventService_ShipEventRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ShipEventService_ShipEventRequest::ArenaDtor(void* object) {
  ShipEventService_ShipEventRequest* _this = reinterpret_cast< ShipEventService_ShipEventRequest* >(object);
  (void)_this;
}
void ShipEventService_ShipEventRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShipEventService_ShipEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShipEventService_ShipEventRequest::descriptor() {
  ::protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShipEventService_ShipEventRequest& ShipEventService_ShipEventRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventService_ShipEventRequest.base);
  return *internal_default_instance();
}


void ShipEventService_ShipEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShipEventService.ShipEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&target_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&choice_) -
        reinterpret_cast<char*>(&target_)) + sizeof(choice_));
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShipEventService_ShipEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShipEventService.ShipEventRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ShipEventService.CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::ShipEventService_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::ShipEventService_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 choice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_choice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &choice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShipEventService.ShipEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShipEventService.ShipEventRequest)
  return false;
#undef DO_
}

void ShipEventService_ShipEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShipEventService.ShipEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ShipEventService.CMD cmd = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 target = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target(), output);
  }

  // optional int32 choice = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->choice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShipEventService.ShipEventRequest)
}

::google::protobuf::uint8* ShipEventService_ShipEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShipEventService.ShipEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ShipEventService.CMD cmd = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 target = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target(), target);
  }

  // optional int32 choice = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->choice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShipEventService.ShipEventRequest)
  return target;
}

size_t ShipEventService_ShipEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShipEventService.ShipEventRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ShipEventService.CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 target = 2;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target());
    }

    // optional int32 choice = 3;
    if (has_choice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->choice());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShipEventService_ShipEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShipEventService.ShipEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShipEventService_ShipEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShipEventService_ShipEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShipEventService.ShipEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShipEventService.ShipEventRequest)
    MergeFrom(*source);
  }
}

void ShipEventService_ShipEventRequest::MergeFrom(const ShipEventService_ShipEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShipEventService.ShipEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      target_ = from.target_;
    }
    if (cached_has_bits & 0x00000002u) {
      choice_ = from.choice_;
    }
    if (cached_has_bits & 0x00000004u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShipEventService_ShipEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShipEventService.ShipEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShipEventService_ShipEventRequest::CopyFrom(const ShipEventService_ShipEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShipEventService.ShipEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipEventService_ShipEventRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void ShipEventService_ShipEventRequest::Swap(ShipEventService_ShipEventRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShipEventService_ShipEventRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShipEventService_ShipEventRequest::UnsafeArenaSwap(ShipEventService_ShipEventRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShipEventService_ShipEventRequest::InternalSwap(ShipEventService_ShipEventRequest* other) {
  using std::swap;
  swap(target_, other->target_);
  swap(choice_, other->choice_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShipEventService_ShipEventRequest::GetMetadata() const {
  protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShipEventService_ShipEventResponse::InitAsDefaultInstance() {
  ::sg::_ShipEventService_ShipEventResponse_default_instance_._instance.get_mutable()->reward_ = const_cast< ::sg::Reward*>(
      ::sg::Reward::internal_default_instance());
  ::sg::_ShipEventService_ShipEventResponse_default_instance_._instance.get_mutable()->lose_ = const_cast< ::sg::Reward*>(
      ::sg::Reward::internal_default_instance());
}
void ShipEventService_ShipEventResponse::unsafe_arena_set_allocated_reward(
    ::sg::Reward* reward) {
  if (GetArenaNoVirtual() == NULL) {
    delete reward_;
  }
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShipEventService.ShipEventResponse.reward)
}
void ShipEventService_ShipEventResponse::clear_reward() {
  if (reward_ != NULL) reward_->Clear();
  clear_has_reward();
}
void ShipEventService_ShipEventResponse::unsafe_arena_set_allocated_lose(
    ::sg::Reward* lose) {
  if (GetArenaNoVirtual() == NULL) {
    delete lose_;
  }
  lose_ = lose;
  if (lose) {
    set_has_lose();
  } else {
    clear_has_lose();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShipEventService.ShipEventResponse.lose)
}
void ShipEventService_ShipEventResponse::clear_lose() {
  if (lose_ != NULL) lose_->Clear();
  clear_has_lose();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShipEventService_ShipEventResponse::kResultFieldNumber;
const int ShipEventService_ShipEventResponse::kEventsFieldNumber;
const int ShipEventService_ShipEventResponse::kRewardFieldNumber;
const int ShipEventService_ShipEventResponse::kLoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShipEventService_ShipEventResponse::ShipEventService_ShipEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ShipEvent_2eproto::scc_info_ShipEventService_ShipEventResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShipEventService.ShipEventResponse)
}
ShipEventService_ShipEventResponse::ShipEventService_ShipEventResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  events_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventService_ShipEventResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShipEventService.ShipEventResponse)
}
ShipEventService_ShipEventResponse::ShipEventService_ShipEventResponse(const ShipEventService_ShipEventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reward()) {
    reward_ = new ::sg::Reward(*from.reward_);
  } else {
    reward_ = NULL;
  }
  if (from.has_lose()) {
    lose_ = new ::sg::Reward(*from.lose_);
  } else {
    lose_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.ShipEventService.ShipEventResponse)
}

void ShipEventService_ShipEventResponse::SharedCtor() {
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(result_));
}

ShipEventService_ShipEventResponse::~ShipEventService_ShipEventResponse() {
  // @@protoc_insertion_point(destructor:sg.ShipEventService.ShipEventResponse)
  SharedDtor();
}

void ShipEventService_ShipEventResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete reward_;
  if (this != internal_default_instance()) delete lose_;
}

void ShipEventService_ShipEventResponse::ArenaDtor(void* object) {
  ShipEventService_ShipEventResponse* _this = reinterpret_cast< ShipEventService_ShipEventResponse* >(object);
  (void)_this;
}
void ShipEventService_ShipEventResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShipEventService_ShipEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShipEventService_ShipEventResponse::descriptor() {
  ::protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShipEventService_ShipEventResponse& ShipEventService_ShipEventResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventService_ShipEventResponse.base);
  return *internal_default_instance();
}


void ShipEventService_ShipEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShipEventService.ShipEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(reward_ != NULL);
      reward_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(lose_ != NULL);
      lose_->Clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShipEventService_ShipEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShipEventService.ShipEventResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.ShipEvent events = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Reward reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Reward lose = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShipEventService.ShipEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShipEventService.ShipEventResponse)
  return false;
#undef DO_
}

void ShipEventService_ShipEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShipEventService.ShipEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .sg.ShipEvent events = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->events(static_cast<int>(i)),
      output);
  }

  // optional .sg.Reward reward = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_reward(), output);
  }

  // optional .sg.Reward lose = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_lose(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShipEventService.ShipEventResponse)
}

::google::protobuf::uint8* ShipEventService_ShipEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShipEventService.ShipEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .sg.ShipEvent events = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->events(static_cast<int>(i)), deterministic, target);
  }

  // optional .sg.Reward reward = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_reward(), deterministic, target);
  }

  // optional .sg.Reward lose = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_lose(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShipEventService.ShipEventResponse)
  return target;
}

size_t ShipEventService_ShipEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShipEventService.ShipEventResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.ShipEvent events = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.Reward reward = 3;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reward_);
    }

    // optional .sg.Reward lose = 4;
    if (has_lose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *lose_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShipEventService_ShipEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShipEventService.ShipEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShipEventService_ShipEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShipEventService_ShipEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShipEventService.ShipEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShipEventService.ShipEventResponse)
    MergeFrom(*source);
  }
}

void ShipEventService_ShipEventResponse::MergeFrom(const ShipEventService_ShipEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShipEventService.ShipEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_reward()->::sg::Reward::MergeFrom(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_lose()->::sg::Reward::MergeFrom(from.lose());
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShipEventService_ShipEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShipEventService.ShipEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShipEventService_ShipEventResponse::CopyFrom(const ShipEventService_ShipEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShipEventService.ShipEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipEventService_ShipEventResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->events())) return false;
  if (has_reward()) {
    if (!this->reward_->IsInitialized()) return false;
  }
  if (has_lose()) {
    if (!this->lose_->IsInitialized()) return false;
  }
  return true;
}

void ShipEventService_ShipEventResponse::Swap(ShipEventService_ShipEventResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShipEventService_ShipEventResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShipEventService_ShipEventResponse::UnsafeArenaSwap(ShipEventService_ShipEventResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShipEventService_ShipEventResponse::InternalSwap(ShipEventService_ShipEventResponse* other) {
  using std::swap;
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  swap(reward_, other->reward_);
  swap(lose_, other->lose_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShipEventService_ShipEventResponse::GetMetadata() const {
  protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShipEventService::InitAsDefaultInstance() {
  ::sg::_ShipEventService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::ShipEventService_ShipEventRequest*>(
      ::sg::ShipEventService_ShipEventRequest::internal_default_instance());
  ::sg::_ShipEventService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::ShipEventService_ShipEventResponse*>(
      ::sg::ShipEventService_ShipEventResponse::internal_default_instance());
}
void ShipEventService::unsafe_arena_set_allocated_req(
    ::sg::ShipEventService_ShipEventRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShipEventService.req)
}
void ShipEventService::unsafe_arena_set_allocated_resp(
    ::sg::ShipEventService_ShipEventResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShipEventService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShipEventService::kReqFieldNumber;
const int ShipEventService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShipEventService::ShipEventService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ShipEvent_2eproto::scc_info_ShipEventService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShipEventService)
}
ShipEventService::ShipEventService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShipEventService)
}
ShipEventService::ShipEventService(const ShipEventService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::ShipEventService_ShipEventRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::ShipEventService_ShipEventResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.ShipEventService)
}

void ShipEventService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

ShipEventService::~ShipEventService() {
  // @@protoc_insertion_point(destructor:sg.ShipEventService)
  SharedDtor();
}

void ShipEventService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void ShipEventService::ArenaDtor(void* object) {
  ShipEventService* _this = reinterpret_cast< ShipEventService* >(object);
  (void)_this;
}
void ShipEventService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShipEventService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShipEventService::descriptor() {
  ::protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShipEventService& ShipEventService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventService.base);
  return *internal_default_instance();
}


void ShipEventService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShipEventService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShipEventService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShipEventService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.ShipEventService.ShipEventRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.ShipEventService.ShipEventResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShipEventService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShipEventService)
  return false;
#undef DO_
}

void ShipEventService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShipEventService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.ShipEventService.ShipEventRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.ShipEventService.ShipEventResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShipEventService)
}

::google::protobuf::uint8* ShipEventService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShipEventService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.ShipEventService.ShipEventRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.ShipEventService.ShipEventResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShipEventService)
  return target;
}

size_t ShipEventService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShipEventService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.ShipEventService.ShipEventRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.ShipEventService.ShipEventResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShipEventService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShipEventService)
  GOOGLE_DCHECK_NE(&from, this);
  const ShipEventService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShipEventService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShipEventService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShipEventService)
    MergeFrom(*source);
  }
}

void ShipEventService::MergeFrom(const ShipEventService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShipEventService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::ShipEventService_ShipEventRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::ShipEventService_ShipEventResponse::MergeFrom(from.resp());
    }
  }
}

void ShipEventService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShipEventService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShipEventService::CopyFrom(const ShipEventService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShipEventService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipEventService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void ShipEventService::Swap(ShipEventService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShipEventService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShipEventService::UnsafeArenaSwap(ShipEventService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShipEventService::InternalSwap(ShipEventService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShipEventService::GetMetadata() const {
  protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShipEventNotify::InitAsDefaultInstance() {
  ::sg::_ShipEventNotify_default_instance_._instance.get_mutable()->event_ = const_cast< ::sg::ShipEvent*>(
      ::sg::ShipEvent::internal_default_instance());
}
void ShipEventNotify::unsafe_arena_set_allocated_event(
    ::sg::ShipEvent* event) {
  if (GetArenaNoVirtual() == NULL) {
    delete event_;
  }
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShipEventNotify.event)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShipEventNotify::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShipEventNotify::ShipEventNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ShipEvent_2eproto::scc_info_ShipEventNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShipEventNotify)
}
ShipEventNotify::ShipEventNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShipEventNotify)
}
ShipEventNotify::ShipEventNotify(const ShipEventNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::sg::ShipEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.ShipEventNotify)
}

void ShipEventNotify::SharedCtor() {
  event_ = NULL;
}

ShipEventNotify::~ShipEventNotify() {
  // @@protoc_insertion_point(destructor:sg.ShipEventNotify)
  SharedDtor();
}

void ShipEventNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete event_;
}

void ShipEventNotify::ArenaDtor(void* object) {
  ShipEventNotify* _this = reinterpret_cast< ShipEventNotify* >(object);
  (void)_this;
}
void ShipEventNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShipEventNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShipEventNotify::descriptor() {
  ::protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShipEventNotify& ShipEventNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventNotify.base);
  return *internal_default_instance();
}


void ShipEventNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShipEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(event_ != NULL);
    event_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShipEventNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShipEventNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ShipEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShipEventNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShipEventNotify)
  return false;
#undef DO_
}

void ShipEventNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShipEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ShipEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_event(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShipEventNotify)
}

::google::protobuf::uint8* ShipEventNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShipEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ShipEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_event(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShipEventNotify)
  return target;
}

size_t ShipEventNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShipEventNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ShipEvent event = 1;
  if (has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShipEventNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShipEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ShipEventNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShipEventNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShipEventNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShipEventNotify)
    MergeFrom(*source);
  }
}

void ShipEventNotify::MergeFrom(const ShipEventNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShipEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_event()) {
    mutable_event()->::sg::ShipEvent::MergeFrom(from.event());
  }
}

void ShipEventNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShipEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShipEventNotify::CopyFrom(const ShipEventNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShipEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipEventNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_event()) {
    if (!this->event_->IsInitialized()) return false;
  }
  return true;
}

void ShipEventNotify::Swap(ShipEventNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShipEventNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShipEventNotify::UnsafeArenaSwap(ShipEventNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShipEventNotify::InternalSwap(ShipEventNotify* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShipEventNotify::GetMetadata() const {
  protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShipEventDisappearNotify::InitAsDefaultInstance() {
  ::sg::_ShipEventDisappearNotify_default_instance_._instance.get_mutable()->event_ = const_cast< ::sg::ShipEvent*>(
      ::sg::ShipEvent::internal_default_instance());
}
void ShipEventDisappearNotify::unsafe_arena_set_allocated_event(
    ::sg::ShipEvent* event) {
  if (GetArenaNoVirtual() == NULL) {
    delete event_;
  }
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShipEventDisappearNotify.event)
}
void ShipEventDisappearNotify::clear_lose() {
  lose_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShipEventDisappearNotify::kEventFieldNumber;
const int ShipEventDisappearNotify::kLoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShipEventDisappearNotify::ShipEventDisappearNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ShipEvent_2eproto::scc_info_ShipEventDisappearNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShipEventDisappearNotify)
}
ShipEventDisappearNotify::ShipEventDisappearNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  lose_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventDisappearNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShipEventDisappearNotify)
}
ShipEventDisappearNotify::ShipEventDisappearNotify(const ShipEventDisappearNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lose_(from.lose_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::sg::ShipEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.ShipEventDisappearNotify)
}

void ShipEventDisappearNotify::SharedCtor() {
  event_ = NULL;
}

ShipEventDisappearNotify::~ShipEventDisappearNotify() {
  // @@protoc_insertion_point(destructor:sg.ShipEventDisappearNotify)
  SharedDtor();
}

void ShipEventDisappearNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete event_;
}

void ShipEventDisappearNotify::ArenaDtor(void* object) {
  ShipEventDisappearNotify* _this = reinterpret_cast< ShipEventDisappearNotify* >(object);
  (void)_this;
}
void ShipEventDisappearNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShipEventDisappearNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShipEventDisappearNotify::descriptor() {
  ::protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShipEventDisappearNotify& ShipEventDisappearNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ShipEvent_2eproto::scc_info_ShipEventDisappearNotify.base);
  return *internal_default_instance();
}


void ShipEventDisappearNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShipEventDisappearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lose_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(event_ != NULL);
    event_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShipEventDisappearNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShipEventDisappearNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ShipEvent event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Item lose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShipEventDisappearNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShipEventDisappearNotify)
  return false;
#undef DO_
}

void ShipEventDisappearNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShipEventDisappearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ShipEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_event(), output);
  }

  // repeated .sg.Item lose = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lose_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->lose(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShipEventDisappearNotify)
}

::google::protobuf::uint8* ShipEventDisappearNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShipEventDisappearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ShipEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_event(), deterministic, target);
  }

  // repeated .sg.Item lose = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lose_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->lose(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShipEventDisappearNotify)
  return target;
}

size_t ShipEventDisappearNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShipEventDisappearNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ShipEvent event = 1;
  if (has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);
  }
  // repeated .sg.Item lose = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lose_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lose(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShipEventDisappearNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShipEventDisappearNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ShipEventDisappearNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShipEventDisappearNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShipEventDisappearNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShipEventDisappearNotify)
    MergeFrom(*source);
  }
}

void ShipEventDisappearNotify::MergeFrom(const ShipEventDisappearNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShipEventDisappearNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lose_.MergeFrom(from.lose_);
  if (from.has_event()) {
    mutable_event()->::sg::ShipEvent::MergeFrom(from.event());
  }
}

void ShipEventDisappearNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShipEventDisappearNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShipEventDisappearNotify::CopyFrom(const ShipEventDisappearNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShipEventDisappearNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShipEventDisappearNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lose())) return false;
  if (has_event()) {
    if (!this->event_->IsInitialized()) return false;
  }
  return true;
}

void ShipEventDisappearNotify::Swap(ShipEventDisappearNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShipEventDisappearNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShipEventDisappearNotify::UnsafeArenaSwap(ShipEventDisappearNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShipEventDisappearNotify::InternalSwap(ShipEventDisappearNotify* other) {
  using std::swap;
  CastToBase(&lose_)->InternalSwap(CastToBase(&other->lose_));
  swap(event_, other->event_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShipEventDisappearNotify::GetMetadata() const {
  protobuf_ShipEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ShipEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShipEvent* Arena::CreateMaybeMessage< ::sg::ShipEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShipEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShipEventService_ShipEventRequest* Arena::CreateMaybeMessage< ::sg::ShipEventService_ShipEventRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShipEventService_ShipEventRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShipEventService_ShipEventResponse* Arena::CreateMaybeMessage< ::sg::ShipEventService_ShipEventResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShipEventService_ShipEventResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShipEventService* Arena::CreateMaybeMessage< ::sg::ShipEventService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShipEventService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShipEventNotify* Arena::CreateMaybeMessage< ::sg::ShipEventNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShipEventNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShipEventDisappearNotify* Arena::CreateMaybeMessage< ::sg::ShipEventDisappearNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShipEventDisappearNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
