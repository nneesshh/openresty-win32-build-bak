// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GhostShip.proto

#ifndef PROTOBUF_INCLUDED_GhostShip_2eproto
#define PROTOBUF_INCLUDED_GhostShip_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "BaseStruct.pb.h"
#include "PVE.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_GhostShip_2eproto 

namespace protobuf_GhostShip_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_GhostShip_2eproto
namespace sg {
class GhostShipService;
class GhostShipServiceDefaultTypeInternal;
extern GhostShipServiceDefaultTypeInternal _GhostShipService_default_instance_;
class GhostShipService_GhostShipRequest;
class GhostShipService_GhostShipRequestDefaultTypeInternal;
extern GhostShipService_GhostShipRequestDefaultTypeInternal _GhostShipService_GhostShipRequest_default_instance_;
class GhostShipService_GhostShipResponse;
class GhostShipService_GhostShipResponseDefaultTypeInternal;
extern GhostShipService_GhostShipResponseDefaultTypeInternal _GhostShipService_GhostShipResponse_default_instance_;
class GhostStage;
class GhostStageDefaultTypeInternal;
extern GhostStageDefaultTypeInternal _GhostStage_default_instance_;
class GhostStageBattleData;
class GhostStageBattleDataDefaultTypeInternal;
extern GhostStageBattleDataDefaultTypeInternal _GhostStageBattleData_default_instance_;
class UserInformationInGhostShip;
class UserInformationInGhostShipDefaultTypeInternal;
extern UserInformationInGhostShipDefaultTypeInternal _UserInformationInGhostShip_default_instance_;
}  // namespace sg
namespace google {
namespace protobuf {
template<> ::sg::GhostShipService* Arena::CreateMaybeMessage<::sg::GhostShipService>(Arena*);
template<> ::sg::GhostShipService_GhostShipRequest* Arena::CreateMaybeMessage<::sg::GhostShipService_GhostShipRequest>(Arena*);
template<> ::sg::GhostShipService_GhostShipResponse* Arena::CreateMaybeMessage<::sg::GhostShipService_GhostShipResponse>(Arena*);
template<> ::sg::GhostStage* Arena::CreateMaybeMessage<::sg::GhostStage>(Arena*);
template<> ::sg::GhostStageBattleData* Arena::CreateMaybeMessage<::sg::GhostStageBattleData>(Arena*);
template<> ::sg::UserInformationInGhostShip* Arena::CreateMaybeMessage<::sg::UserInformationInGhostShip>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sg {

enum GhostShipService_CMD {
  GhostShipService_CMD_QUERY = 1,
  GhostShipService_CMD_READY = 2,
  GhostShipService_CMD_ATTACK = 3,
  GhostShipService_CMD_OVER = 4,
  GhostShipService_CMD_RESET = 5,
  GhostShipService_CMD_PREVIEW = 6,
  GhostShipService_CMD_GET_REWARD = 7
};
bool GhostShipService_CMD_IsValid(int value);
const GhostShipService_CMD GhostShipService_CMD_CMD_MIN = GhostShipService_CMD_QUERY;
const GhostShipService_CMD GhostShipService_CMD_CMD_MAX = GhostShipService_CMD_GET_REWARD;
const int GhostShipService_CMD_CMD_ARRAYSIZE = GhostShipService_CMD_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* GhostShipService_CMD_descriptor();
inline const ::std::string& GhostShipService_CMD_Name(GhostShipService_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    GhostShipService_CMD_descriptor(), value);
}
inline bool GhostShipService_CMD_Parse(
    const ::std::string& name, GhostShipService_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GhostShipService_CMD>(
    GhostShipService_CMD_descriptor(), name, value);
}
// ===================================================================

class GhostStage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.GhostStage) */ {
 public:
  GhostStage();
  virtual ~GhostStage();

  GhostStage(const GhostStage& from);

  inline GhostStage& operator=(const GhostStage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GhostStage(GhostStage&& from) noexcept
    : GhostStage() {
    *this = ::std::move(from);
  }

  inline GhostStage& operator=(GhostStage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostStage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GhostStage* internal_default_instance() {
    return reinterpret_cast<const GhostStage*>(
               &_GhostStage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(GhostStage* other);
  void Swap(GhostStage* other);
  friend void swap(GhostStage& a, GhostStage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GhostStage* New() const final {
    return CreateMaybeMessage<GhostStage>(NULL);
  }

  GhostStage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GhostStage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GhostStage& from);
  void MergeFrom(const GhostStage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GhostStage* other);
  protected:
  explicit GhostStage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.GhostStage)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_state();
  void clear_has_state();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_level();
  void clear_has_level();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 level_;
  friend struct ::protobuf_GhostShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GhostStageBattleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.GhostStageBattleData) */ {
 public:
  GhostStageBattleData();
  virtual ~GhostStageBattleData();

  GhostStageBattleData(const GhostStageBattleData& from);

  inline GhostStageBattleData& operator=(const GhostStageBattleData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GhostStageBattleData(GhostStageBattleData&& from) noexcept
    : GhostStageBattleData() {
    *this = ::std::move(from);
  }

  inline GhostStageBattleData& operator=(GhostStageBattleData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostStageBattleData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GhostStageBattleData* internal_default_instance() {
    return reinterpret_cast<const GhostStageBattleData*>(
               &_GhostStageBattleData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(GhostStageBattleData* other);
  void Swap(GhostStageBattleData* other);
  friend void swap(GhostStageBattleData& a, GhostStageBattleData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GhostStageBattleData* New() const final {
    return CreateMaybeMessage<GhostStageBattleData>(NULL);
  }

  GhostStageBattleData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GhostStageBattleData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GhostStageBattleData& from);
  void MergeFrom(const GhostStageBattleData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GhostStageBattleData* other);
  protected:
  explicit GhostStageBattleData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.Enemy enemys = 2;
  int enemys_size() const;
  void clear_enemys();
  static const int kEnemysFieldNumber = 2;
  ::sg::Enemy* mutable_enemys(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Enemy >*
      mutable_enemys();
  const ::sg::Enemy& enemys(int index) const;
  ::sg::Enemy* add_enemys();
  const ::google::protobuf::RepeatedPtrField< ::sg::Enemy >&
      enemys() const;

  // repeated .sg.pb_pair_int_float buff = 3;
  int buff_size() const;
  void clear_buff();
  static const int kBuffFieldNumber = 3;
  ::sg::pb_pair_int_float* mutable_buff(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float >*
      mutable_buff();
  const ::sg::pb_pair_int_float& buff(int index) const;
  ::sg::pb_pair_int_float* add_buff();
  const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float >&
      buff() const;

  // optional bytes map_data = 1;
  bool has_map_data() const;
  void clear_map_data();
  static const int kMapDataFieldNumber = 1;
  const ::std::string& map_data() const;
  void set_map_data(const ::std::string& value);
  #if LANG_CXX11
  void set_map_data(::std::string&& value);
  #endif
  void set_map_data(const char* value);
  void set_map_data(const void* value, size_t size);
  ::std::string* mutable_map_data();
  ::std::string* release_map_data();
  void set_allocated_map_data(::std::string* map_data);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_map_data();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_map_data(
      ::std::string* map_data);

  // @@protoc_insertion_point(class_scope:sg.GhostStageBattleData)
 private:
  void set_has_map_data();
  void clear_has_map_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::Enemy > enemys_;
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float > buff_;
  ::google::protobuf::internal::ArenaStringPtr map_data_;
  friend struct ::protobuf_GhostShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInformationInGhostShip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserInformationInGhostShip) */ {
 public:
  UserInformationInGhostShip();
  virtual ~UserInformationInGhostShip();

  UserInformationInGhostShip(const UserInformationInGhostShip& from);

  inline UserInformationInGhostShip& operator=(const UserInformationInGhostShip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInformationInGhostShip(UserInformationInGhostShip&& from) noexcept
    : UserInformationInGhostShip() {
    *this = ::std::move(from);
  }

  inline UserInformationInGhostShip& operator=(UserInformationInGhostShip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInformationInGhostShip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserInformationInGhostShip* internal_default_instance() {
    return reinterpret_cast<const UserInformationInGhostShip*>(
               &_UserInformationInGhostShip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(UserInformationInGhostShip* other);
  void Swap(UserInformationInGhostShip* other);
  friend void swap(UserInformationInGhostShip& a, UserInformationInGhostShip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInformationInGhostShip* New() const final {
    return CreateMaybeMessage<UserInformationInGhostShip>(NULL);
  }

  UserInformationInGhostShip* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserInformationInGhostShip>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserInformationInGhostShip& from);
  void MergeFrom(const UserInformationInGhostShip& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserInformationInGhostShip* other);
  protected:
  explicit UserInformationInGhostShip(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.pb_pair_int_float buff = 3;
  int buff_size() const;
  void clear_buff();
  static const int kBuffFieldNumber = 3;
  ::sg::pb_pair_int_float* mutable_buff(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float >*
      mutable_buff();
  const ::sg::pb_pair_int_float& buff(int index) const;
  ::sg::pb_pair_int_float* add_buff();
  const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float >&
      buff() const;

  // repeated .sg.SailorInDungeon my_team = 4;
  int my_team_size() const;
  void clear_my_team();
  static const int kMyTeamFieldNumber = 4;
  ::sg::SailorInDungeon* mutable_my_team(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon >*
      mutable_my_team();
  const ::sg::SailorInDungeon& my_team(int index) const;
  ::sg::SailorInDungeon* add_my_team();
  const ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon >&
      my_team() const;

  // required int32 reset_times = 1;
  bool has_reset_times() const;
  void clear_reset_times();
  static const int kResetTimesFieldNumber = 1;
  ::google::protobuf::int32 reset_times() const;
  void set_reset_times(::google::protobuf::int32 value);

  // required int32 state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // optional int32 rank = 5;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 5;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // optional int32 max_reset_times = 6;
  bool has_max_reset_times() const;
  void clear_max_reset_times();
  static const int kMaxResetTimesFieldNumber = 6;
  ::google::protobuf::int32 max_reset_times() const;
  void set_max_reset_times(::google::protobuf::int32 value);

  // optional int32 reset_cost = 7;
  bool has_reset_cost() const;
  void clear_reset_cost();
  static const int kResetCostFieldNumber = 7;
  ::google::protobuf::int32 reset_cost() const;
  void set_reset_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserInformationInGhostShip)
 private:
  void set_has_reset_times();
  void clear_has_reset_times();
  void set_has_state();
  void clear_has_state();
  void set_has_rank();
  void clear_has_rank();
  void set_has_max_reset_times();
  void clear_has_max_reset_times();
  void set_has_reset_cost();
  void clear_has_reset_cost();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float > buff_;
  ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon > my_team_;
  ::google::protobuf::int32 reset_times_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 max_reset_times_;
  ::google::protobuf::int32 reset_cost_;
  friend struct ::protobuf_GhostShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GhostShipService_GhostShipRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.GhostShipService.GhostShipRequest) */ {
 public:
  GhostShipService_GhostShipRequest();
  virtual ~GhostShipService_GhostShipRequest();

  GhostShipService_GhostShipRequest(const GhostShipService_GhostShipRequest& from);

  inline GhostShipService_GhostShipRequest& operator=(const GhostShipService_GhostShipRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GhostShipService_GhostShipRequest(GhostShipService_GhostShipRequest&& from) noexcept
    : GhostShipService_GhostShipRequest() {
    *this = ::std::move(from);
  }

  inline GhostShipService_GhostShipRequest& operator=(GhostShipService_GhostShipRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostShipService_GhostShipRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GhostShipService_GhostShipRequest* internal_default_instance() {
    return reinterpret_cast<const GhostShipService_GhostShipRequest*>(
               &_GhostShipService_GhostShipRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(GhostShipService_GhostShipRequest* other);
  void Swap(GhostShipService_GhostShipRequest* other);
  friend void swap(GhostShipService_GhostShipRequest& a, GhostShipService_GhostShipRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GhostShipService_GhostShipRequest* New() const final {
    return CreateMaybeMessage<GhostShipService_GhostShipRequest>(NULL);
  }

  GhostShipService_GhostShipRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GhostShipService_GhostShipRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GhostShipService_GhostShipRequest& from);
  void MergeFrom(const GhostShipService_GhostShipRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GhostShipService_GhostShipRequest* other);
  protected:
  explicit GhostShipService_GhostShipRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 choice_sailors = 3;
  int choice_sailors_size() const;
  void clear_choice_sailors();
  static const int kChoiceSailorsFieldNumber = 3;
  ::google::protobuf::int32 choice_sailors(int index) const;
  void set_choice_sailors(int index, ::google::protobuf::int32 value);
  void add_choice_sailors(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      choice_sailors() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_choice_sailors();

  // repeated .sg.SailorInDungeon my_team = 4;
  int my_team_size() const;
  void clear_my_team();
  static const int kMyTeamFieldNumber = 4;
  ::sg::SailorInDungeon* mutable_my_team(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon >*
      mutable_my_team();
  const ::sg::SailorInDungeon& my_team(int index) const;
  ::sg::SailorInDungeon* add_my_team();
  const ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon >&
      my_team() const;

  // repeated .sg.Enemy enemys = 5;
  int enemys_size() const;
  void clear_enemys();
  static const int kEnemysFieldNumber = 5;
  ::sg::Enemy* mutable_enemys(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Enemy >*
      mutable_enemys();
  const ::sg::Enemy& enemys(int index) const;
  ::sg::Enemy* add_enemys();
  const ::google::protobuf::RepeatedPtrField< ::sg::Enemy >&
      enemys() const;

  // optional int32 stage_id = 2;
  bool has_stage_id() const;
  void clear_stage_id();
  static const int kStageIdFieldNumber = 2;
  ::google::protobuf::int32 stage_id() const;
  void set_stage_id(::google::protobuf::int32 value);

  // required .sg.GhostShipService.CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::GhostShipService_CMD cmd() const;
  void set_cmd(::sg::GhostShipService_CMD value);

  // @@protoc_insertion_point(class_scope:sg.GhostShipService.GhostShipRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_stage_id();
  void clear_has_stage_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > choice_sailors_;
  ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon > my_team_;
  ::google::protobuf::RepeatedPtrField< ::sg::Enemy > enemys_;
  ::google::protobuf::int32 stage_id_;
  int cmd_;
  friend struct ::protobuf_GhostShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GhostShipService_GhostShipResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.GhostShipService.GhostShipResponse) */ {
 public:
  GhostShipService_GhostShipResponse();
  virtual ~GhostShipService_GhostShipResponse();

  GhostShipService_GhostShipResponse(const GhostShipService_GhostShipResponse& from);

  inline GhostShipService_GhostShipResponse& operator=(const GhostShipService_GhostShipResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GhostShipService_GhostShipResponse(GhostShipService_GhostShipResponse&& from) noexcept
    : GhostShipService_GhostShipResponse() {
    *this = ::std::move(from);
  }

  inline GhostShipService_GhostShipResponse& operator=(GhostShipService_GhostShipResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostShipService_GhostShipResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GhostShipService_GhostShipResponse* internal_default_instance() {
    return reinterpret_cast<const GhostShipService_GhostShipResponse*>(
               &_GhostShipService_GhostShipResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(GhostShipService_GhostShipResponse* other);
  void Swap(GhostShipService_GhostShipResponse* other);
  friend void swap(GhostShipService_GhostShipResponse& a, GhostShipService_GhostShipResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GhostShipService_GhostShipResponse* New() const final {
    return CreateMaybeMessage<GhostShipService_GhostShipResponse>(NULL);
  }

  GhostShipService_GhostShipResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GhostShipService_GhostShipResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GhostShipService_GhostShipResponse& from);
  void MergeFrom(const GhostShipService_GhostShipResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GhostShipService_GhostShipResponse* other);
  protected:
  explicit GhostShipService_GhostShipResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.GhostStage stages = 3;
  int stages_size() const;
  void clear_stages();
  static const int kStagesFieldNumber = 3;
  ::sg::GhostStage* mutable_stages(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::GhostStage >*
      mutable_stages();
  const ::sg::GhostStage& stages(int index) const;
  ::sg::GhostStage* add_stages();
  const ::google::protobuf::RepeatedPtrField< ::sg::GhostStage >&
      stages() const;

  // optional .sg.UserInformationInGhostShip user_info = 2;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 2;
  private:
  const ::sg::UserInformationInGhostShip& _internal_user_info() const;
  public:
  const ::sg::UserInformationInGhostShip& user_info() const;
  ::sg::UserInformationInGhostShip* release_user_info();
  ::sg::UserInformationInGhostShip* mutable_user_info();
  void set_allocated_user_info(::sg::UserInformationInGhostShip* user_info);
  void unsafe_arena_set_allocated_user_info(
      ::sg::UserInformationInGhostShip* user_info);
  ::sg::UserInformationInGhostShip* unsafe_arena_release_user_info();

  // optional .sg.GhostStageBattleData battle_data = 4;
  bool has_battle_data() const;
  void clear_battle_data();
  static const int kBattleDataFieldNumber = 4;
  private:
  const ::sg::GhostStageBattleData& _internal_battle_data() const;
  public:
  const ::sg::GhostStageBattleData& battle_data() const;
  ::sg::GhostStageBattleData* release_battle_data();
  ::sg::GhostStageBattleData* mutable_battle_data();
  void set_allocated_battle_data(::sg::GhostStageBattleData* battle_data);
  void unsafe_arena_set_allocated_battle_data(
      ::sg::GhostStageBattleData* battle_data);
  ::sg::GhostStageBattleData* unsafe_arena_release_battle_data();

  // optional .sg.pb_pair_int_float get_buff = 5;
  bool has_get_buff() const;
  void clear_get_buff();
  static const int kGetBuffFieldNumber = 5;
  private:
  const ::sg::pb_pair_int_float& _internal_get_buff() const;
  public:
  const ::sg::pb_pair_int_float& get_buff() const;
  ::sg::pb_pair_int_float* release_get_buff();
  ::sg::pb_pair_int_float* mutable_get_buff();
  void set_allocated_get_buff(::sg::pb_pair_int_float* get_buff);
  void unsafe_arena_set_allocated_get_buff(
      ::sg::pb_pair_int_float* get_buff);
  ::sg::pb_pair_int_float* unsafe_arena_release_get_buff();

  // optional .sg.Reward reward = 6;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 6;
  private:
  const ::sg::Reward& _internal_reward() const;
  public:
  const ::sg::Reward& reward() const;
  ::sg::Reward* release_reward();
  ::sg::Reward* mutable_reward();
  void set_allocated_reward(::sg::Reward* reward);
  void unsafe_arena_set_allocated_reward(
      ::sg::Reward* reward);
  ::sg::Reward* unsafe_arena_release_reward();

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 battle_result = 7;
  bool has_battle_result() const;
  void clear_battle_result();
  static const int kBattleResultFieldNumber = 7;
  ::google::protobuf::int32 battle_result() const;
  void set_battle_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.GhostShipService.GhostShipResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_user_info();
  void clear_has_user_info();
  void set_has_battle_data();
  void clear_has_battle_data();
  void set_has_get_buff();
  void clear_has_get_buff();
  void set_has_reward();
  void clear_has_reward();
  void set_has_battle_result();
  void clear_has_battle_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::GhostStage > stages_;
  ::sg::UserInformationInGhostShip* user_info_;
  ::sg::GhostStageBattleData* battle_data_;
  ::sg::pb_pair_int_float* get_buff_;
  ::sg::Reward* reward_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 battle_result_;
  friend struct ::protobuf_GhostShip_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GhostShipService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.GhostShipService) */ {
 public:
  GhostShipService();
  virtual ~GhostShipService();

  GhostShipService(const GhostShipService& from);

  inline GhostShipService& operator=(const GhostShipService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GhostShipService(GhostShipService&& from) noexcept
    : GhostShipService() {
    *this = ::std::move(from);
  }

  inline GhostShipService& operator=(GhostShipService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GhostShipService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GhostShipService* internal_default_instance() {
    return reinterpret_cast<const GhostShipService*>(
               &_GhostShipService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(GhostShipService* other);
  void Swap(GhostShipService* other);
  friend void swap(GhostShipService& a, GhostShipService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GhostShipService* New() const final {
    return CreateMaybeMessage<GhostShipService>(NULL);
  }

  GhostShipService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GhostShipService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GhostShipService& from);
  void MergeFrom(const GhostShipService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GhostShipService* other);
  protected:
  explicit GhostShipService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GhostShipService_GhostShipRequest GhostShipRequest;
  typedef GhostShipService_GhostShipResponse GhostShipResponse;

  typedef GhostShipService_CMD CMD;
  static const CMD QUERY =
    GhostShipService_CMD_QUERY;
  static const CMD READY =
    GhostShipService_CMD_READY;
  static const CMD ATTACK =
    GhostShipService_CMD_ATTACK;
  static const CMD OVER =
    GhostShipService_CMD_OVER;
  static const CMD RESET =
    GhostShipService_CMD_RESET;
  static const CMD PREVIEW =
    GhostShipService_CMD_PREVIEW;
  static const CMD GET_REWARD =
    GhostShipService_CMD_GET_REWARD;
  static inline bool CMD_IsValid(int value) {
    return GhostShipService_CMD_IsValid(value);
  }
  static const CMD CMD_MIN =
    GhostShipService_CMD_CMD_MIN;
  static const CMD CMD_MAX =
    GhostShipService_CMD_CMD_MAX;
  static const int CMD_ARRAYSIZE =
    GhostShipService_CMD_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CMD_descriptor() {
    return GhostShipService_CMD_descriptor();
  }
  static inline const ::std::string& CMD_Name(CMD value) {
    return GhostShipService_CMD_Name(value);
  }
  static inline bool CMD_Parse(const ::std::string& name,
      CMD* value) {
    return GhostShipService_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.GhostShipService.GhostShipRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::GhostShipService_GhostShipRequest& _internal_req() const;
  public:
  const ::sg::GhostShipService_GhostShipRequest& req() const;
  ::sg::GhostShipService_GhostShipRequest* release_req();
  ::sg::GhostShipService_GhostShipRequest* mutable_req();
  void set_allocated_req(::sg::GhostShipService_GhostShipRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::GhostShipService_GhostShipRequest* req);
  ::sg::GhostShipService_GhostShipRequest* unsafe_arena_release_req();

  // optional .sg.GhostShipService.GhostShipResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::GhostShipService_GhostShipResponse& _internal_resp() const;
  public:
  const ::sg::GhostShipService_GhostShipResponse& resp() const;
  ::sg::GhostShipService_GhostShipResponse* release_resp();
  ::sg::GhostShipService_GhostShipResponse* mutable_resp();
  void set_allocated_resp(::sg::GhostShipService_GhostShipResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::GhostShipService_GhostShipResponse* resp);
  ::sg::GhostShipService_GhostShipResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.GhostShipService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::GhostShipService_GhostShipRequest* req_;
  ::sg::GhostShipService_GhostShipResponse* resp_;
  friend struct ::protobuf_GhostShip_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GhostStage

// required int32 id = 1;
inline bool GhostStage::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GhostStage::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GhostStage::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GhostStage::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GhostStage::id() const {
  // @@protoc_insertion_point(field_get:sg.GhostStage.id)
  return id_;
}
inline void GhostStage::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:sg.GhostStage.id)
}

// required int32 state = 2;
inline bool GhostStage::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GhostStage::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GhostStage::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GhostStage::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GhostStage::state() const {
  // @@protoc_insertion_point(field_get:sg.GhostStage.state)
  return state_;
}
inline void GhostStage::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:sg.GhostStage.state)
}

// required int32 type = 3;
inline bool GhostStage::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GhostStage::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GhostStage::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GhostStage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GhostStage::type() const {
  // @@protoc_insertion_point(field_get:sg.GhostStage.type)
  return type_;
}
inline void GhostStage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:sg.GhostStage.type)
}

// optional bytes name = 4;
inline bool GhostStage::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GhostStage::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GhostStage::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GhostStage::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& GhostStage::name() const {
  // @@protoc_insertion_point(field_get:sg.GhostStage.name)
  return name_.Get();
}
inline void GhostStage::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.GhostStage.name)
}
#if LANG_CXX11
inline void GhostStage::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.GhostStage.name)
}
#endif
inline void GhostStage::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.GhostStage.name)
}
inline void GhostStage::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.GhostStage.name)
}
inline ::std::string* GhostStage::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:sg.GhostStage.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GhostStage::release_name() {
  // @@protoc_insertion_point(field_release:sg.GhostStage.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GhostStage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.GhostStage.name)
}
inline ::std::string* GhostStage::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.GhostStage.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GhostStage::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.GhostStage.name)
}

// optional int32 level = 5;
inline bool GhostStage::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GhostStage::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GhostStage::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GhostStage::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GhostStage::level() const {
  // @@protoc_insertion_point(field_get:sg.GhostStage.level)
  return level_;
}
inline void GhostStage::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:sg.GhostStage.level)
}

// -------------------------------------------------------------------

// GhostStageBattleData

// optional bytes map_data = 1;
inline bool GhostStageBattleData::has_map_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GhostStageBattleData::set_has_map_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GhostStageBattleData::clear_has_map_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GhostStageBattleData::clear_map_data() {
  map_data_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_map_data();
}
inline const ::std::string& GhostStageBattleData::map_data() const {
  // @@protoc_insertion_point(field_get:sg.GhostStageBattleData.map_data)
  return map_data_.Get();
}
inline void GhostStageBattleData::set_map_data(const ::std::string& value) {
  set_has_map_data();
  map_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:sg.GhostStageBattleData.map_data)
}
#if LANG_CXX11
inline void GhostStageBattleData::set_map_data(::std::string&& value) {
  set_has_map_data();
  map_data_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:sg.GhostStageBattleData.map_data)
}
#endif
inline void GhostStageBattleData::set_map_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_map_data();
  map_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:sg.GhostStageBattleData.map_data)
}
inline void GhostStageBattleData::set_map_data(const void* value,
    size_t size) {
  set_has_map_data();
  map_data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:sg.GhostStageBattleData.map_data)
}
inline ::std::string* GhostStageBattleData::mutable_map_data() {
  set_has_map_data();
  // @@protoc_insertion_point(field_mutable:sg.GhostStageBattleData.map_data)
  return map_data_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GhostStageBattleData::release_map_data() {
  // @@protoc_insertion_point(field_release:sg.GhostStageBattleData.map_data)
  if (!has_map_data()) {
    return NULL;
  }
  clear_has_map_data();
  return map_data_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GhostStageBattleData::set_allocated_map_data(::std::string* map_data) {
  if (map_data != NULL) {
    set_has_map_data();
  } else {
    clear_has_map_data();
  }
  map_data_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_data,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:sg.GhostStageBattleData.map_data)
}
inline ::std::string* GhostStageBattleData::unsafe_arena_release_map_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.GhostStageBattleData.map_data)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_map_data();
  return map_data_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GhostStageBattleData::unsafe_arena_set_allocated_map_data(
    ::std::string* map_data) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (map_data != NULL) {
    set_has_map_data();
  } else {
    clear_has_map_data();
  }
  map_data_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      map_data, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.GhostStageBattleData.map_data)
}

// repeated .sg.Enemy enemys = 2;
inline int GhostStageBattleData::enemys_size() const {
  return enemys_.size();
}
inline ::sg::Enemy* GhostStageBattleData::mutable_enemys(int index) {
  // @@protoc_insertion_point(field_mutable:sg.GhostStageBattleData.enemys)
  return enemys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Enemy >*
GhostStageBattleData::mutable_enemys() {
  // @@protoc_insertion_point(field_mutable_list:sg.GhostStageBattleData.enemys)
  return &enemys_;
}
inline const ::sg::Enemy& GhostStageBattleData::enemys(int index) const {
  // @@protoc_insertion_point(field_get:sg.GhostStageBattleData.enemys)
  return enemys_.Get(index);
}
inline ::sg::Enemy* GhostStageBattleData::add_enemys() {
  // @@protoc_insertion_point(field_add:sg.GhostStageBattleData.enemys)
  return enemys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Enemy >&
GhostStageBattleData::enemys() const {
  // @@protoc_insertion_point(field_list:sg.GhostStageBattleData.enemys)
  return enemys_;
}

// repeated .sg.pb_pair_int_float buff = 3;
inline int GhostStageBattleData::buff_size() const {
  return buff_.size();
}
inline ::sg::pb_pair_int_float* GhostStageBattleData::mutable_buff(int index) {
  // @@protoc_insertion_point(field_mutable:sg.GhostStageBattleData.buff)
  return buff_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float >*
GhostStageBattleData::mutable_buff() {
  // @@protoc_insertion_point(field_mutable_list:sg.GhostStageBattleData.buff)
  return &buff_;
}
inline const ::sg::pb_pair_int_float& GhostStageBattleData::buff(int index) const {
  // @@protoc_insertion_point(field_get:sg.GhostStageBattleData.buff)
  return buff_.Get(index);
}
inline ::sg::pb_pair_int_float* GhostStageBattleData::add_buff() {
  // @@protoc_insertion_point(field_add:sg.GhostStageBattleData.buff)
  return buff_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float >&
GhostStageBattleData::buff() const {
  // @@protoc_insertion_point(field_list:sg.GhostStageBattleData.buff)
  return buff_;
}

// -------------------------------------------------------------------

// UserInformationInGhostShip

// required int32 reset_times = 1;
inline bool UserInformationInGhostShip::has_reset_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInformationInGhostShip::set_has_reset_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInformationInGhostShip::clear_has_reset_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInformationInGhostShip::clear_reset_times() {
  reset_times_ = 0;
  clear_has_reset_times();
}
inline ::google::protobuf::int32 UserInformationInGhostShip::reset_times() const {
  // @@protoc_insertion_point(field_get:sg.UserInformationInGhostShip.reset_times)
  return reset_times_;
}
inline void UserInformationInGhostShip::set_reset_times(::google::protobuf::int32 value) {
  set_has_reset_times();
  reset_times_ = value;
  // @@protoc_insertion_point(field_set:sg.UserInformationInGhostShip.reset_times)
}

// required int32 state = 2;
inline bool UserInformationInGhostShip::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInformationInGhostShip::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInformationInGhostShip::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInformationInGhostShip::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UserInformationInGhostShip::state() const {
  // @@protoc_insertion_point(field_get:sg.UserInformationInGhostShip.state)
  return state_;
}
inline void UserInformationInGhostShip::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:sg.UserInformationInGhostShip.state)
}

// repeated .sg.pb_pair_int_float buff = 3;
inline int UserInformationInGhostShip::buff_size() const {
  return buff_.size();
}
inline ::sg::pb_pair_int_float* UserInformationInGhostShip::mutable_buff(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserInformationInGhostShip.buff)
  return buff_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float >*
UserInformationInGhostShip::mutable_buff() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserInformationInGhostShip.buff)
  return &buff_;
}
inline const ::sg::pb_pair_int_float& UserInformationInGhostShip::buff(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserInformationInGhostShip.buff)
  return buff_.Get(index);
}
inline ::sg::pb_pair_int_float* UserInformationInGhostShip::add_buff() {
  // @@protoc_insertion_point(field_add:sg.UserInformationInGhostShip.buff)
  return buff_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_float >&
UserInformationInGhostShip::buff() const {
  // @@protoc_insertion_point(field_list:sg.UserInformationInGhostShip.buff)
  return buff_;
}

// repeated .sg.SailorInDungeon my_team = 4;
inline int UserInformationInGhostShip::my_team_size() const {
  return my_team_.size();
}
inline ::sg::SailorInDungeon* UserInformationInGhostShip::mutable_my_team(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserInformationInGhostShip.my_team)
  return my_team_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon >*
UserInformationInGhostShip::mutable_my_team() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserInformationInGhostShip.my_team)
  return &my_team_;
}
inline const ::sg::SailorInDungeon& UserInformationInGhostShip::my_team(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserInformationInGhostShip.my_team)
  return my_team_.Get(index);
}
inline ::sg::SailorInDungeon* UserInformationInGhostShip::add_my_team() {
  // @@protoc_insertion_point(field_add:sg.UserInformationInGhostShip.my_team)
  return my_team_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon >&
UserInformationInGhostShip::my_team() const {
  // @@protoc_insertion_point(field_list:sg.UserInformationInGhostShip.my_team)
  return my_team_;
}

// optional int32 rank = 5;
inline bool UserInformationInGhostShip::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInformationInGhostShip::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInformationInGhostShip::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInformationInGhostShip::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 UserInformationInGhostShip::rank() const {
  // @@protoc_insertion_point(field_get:sg.UserInformationInGhostShip.rank)
  return rank_;
}
inline void UserInformationInGhostShip::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:sg.UserInformationInGhostShip.rank)
}

// optional int32 max_reset_times = 6;
inline bool UserInformationInGhostShip::has_max_reset_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserInformationInGhostShip::set_has_max_reset_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserInformationInGhostShip::clear_has_max_reset_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserInformationInGhostShip::clear_max_reset_times() {
  max_reset_times_ = 0;
  clear_has_max_reset_times();
}
inline ::google::protobuf::int32 UserInformationInGhostShip::max_reset_times() const {
  // @@protoc_insertion_point(field_get:sg.UserInformationInGhostShip.max_reset_times)
  return max_reset_times_;
}
inline void UserInformationInGhostShip::set_max_reset_times(::google::protobuf::int32 value) {
  set_has_max_reset_times();
  max_reset_times_ = value;
  // @@protoc_insertion_point(field_set:sg.UserInformationInGhostShip.max_reset_times)
}

// optional int32 reset_cost = 7;
inline bool UserInformationInGhostShip::has_reset_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserInformationInGhostShip::set_has_reset_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserInformationInGhostShip::clear_has_reset_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserInformationInGhostShip::clear_reset_cost() {
  reset_cost_ = 0;
  clear_has_reset_cost();
}
inline ::google::protobuf::int32 UserInformationInGhostShip::reset_cost() const {
  // @@protoc_insertion_point(field_get:sg.UserInformationInGhostShip.reset_cost)
  return reset_cost_;
}
inline void UserInformationInGhostShip::set_reset_cost(::google::protobuf::int32 value) {
  set_has_reset_cost();
  reset_cost_ = value;
  // @@protoc_insertion_point(field_set:sg.UserInformationInGhostShip.reset_cost)
}

// -------------------------------------------------------------------

// GhostShipService_GhostShipRequest

// required .sg.GhostShipService.CMD cmd = 1;
inline bool GhostShipService_GhostShipRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GhostShipService_GhostShipRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GhostShipService_GhostShipRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GhostShipService_GhostShipRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::GhostShipService_CMD GhostShipService_GhostShipRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipRequest.cmd)
  return static_cast< ::sg::GhostShipService_CMD >(cmd_);
}
inline void GhostShipService_GhostShipRequest::set_cmd(::sg::GhostShipService_CMD value) {
  assert(::sg::GhostShipService_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.GhostShipService.GhostShipRequest.cmd)
}

// optional int32 stage_id = 2;
inline bool GhostShipService_GhostShipRequest::has_stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GhostShipService_GhostShipRequest::set_has_stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GhostShipService_GhostShipRequest::clear_has_stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GhostShipService_GhostShipRequest::clear_stage_id() {
  stage_id_ = 0;
  clear_has_stage_id();
}
inline ::google::protobuf::int32 GhostShipService_GhostShipRequest::stage_id() const {
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipRequest.stage_id)
  return stage_id_;
}
inline void GhostShipService_GhostShipRequest::set_stage_id(::google::protobuf::int32 value) {
  set_has_stage_id();
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:sg.GhostShipService.GhostShipRequest.stage_id)
}

// repeated int32 choice_sailors = 3;
inline int GhostShipService_GhostShipRequest::choice_sailors_size() const {
  return choice_sailors_.size();
}
inline void GhostShipService_GhostShipRequest::clear_choice_sailors() {
  choice_sailors_.Clear();
}
inline ::google::protobuf::int32 GhostShipService_GhostShipRequest::choice_sailors(int index) const {
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipRequest.choice_sailors)
  return choice_sailors_.Get(index);
}
inline void GhostShipService_GhostShipRequest::set_choice_sailors(int index, ::google::protobuf::int32 value) {
  choice_sailors_.Set(index, value);
  // @@protoc_insertion_point(field_set:sg.GhostShipService.GhostShipRequest.choice_sailors)
}
inline void GhostShipService_GhostShipRequest::add_choice_sailors(::google::protobuf::int32 value) {
  choice_sailors_.Add(value);
  // @@protoc_insertion_point(field_add:sg.GhostShipService.GhostShipRequest.choice_sailors)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GhostShipService_GhostShipRequest::choice_sailors() const {
  // @@protoc_insertion_point(field_list:sg.GhostShipService.GhostShipRequest.choice_sailors)
  return choice_sailors_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GhostShipService_GhostShipRequest::mutable_choice_sailors() {
  // @@protoc_insertion_point(field_mutable_list:sg.GhostShipService.GhostShipRequest.choice_sailors)
  return &choice_sailors_;
}

// repeated .sg.SailorInDungeon my_team = 4;
inline int GhostShipService_GhostShipRequest::my_team_size() const {
  return my_team_.size();
}
inline ::sg::SailorInDungeon* GhostShipService_GhostShipRequest::mutable_my_team(int index) {
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.GhostShipRequest.my_team)
  return my_team_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon >*
GhostShipService_GhostShipRequest::mutable_my_team() {
  // @@protoc_insertion_point(field_mutable_list:sg.GhostShipService.GhostShipRequest.my_team)
  return &my_team_;
}
inline const ::sg::SailorInDungeon& GhostShipService_GhostShipRequest::my_team(int index) const {
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipRequest.my_team)
  return my_team_.Get(index);
}
inline ::sg::SailorInDungeon* GhostShipService_GhostShipRequest::add_my_team() {
  // @@protoc_insertion_point(field_add:sg.GhostShipService.GhostShipRequest.my_team)
  return my_team_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::SailorInDungeon >&
GhostShipService_GhostShipRequest::my_team() const {
  // @@protoc_insertion_point(field_list:sg.GhostShipService.GhostShipRequest.my_team)
  return my_team_;
}

// repeated .sg.Enemy enemys = 5;
inline int GhostShipService_GhostShipRequest::enemys_size() const {
  return enemys_.size();
}
inline ::sg::Enemy* GhostShipService_GhostShipRequest::mutable_enemys(int index) {
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.GhostShipRequest.enemys)
  return enemys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Enemy >*
GhostShipService_GhostShipRequest::mutable_enemys() {
  // @@protoc_insertion_point(field_mutable_list:sg.GhostShipService.GhostShipRequest.enemys)
  return &enemys_;
}
inline const ::sg::Enemy& GhostShipService_GhostShipRequest::enemys(int index) const {
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipRequest.enemys)
  return enemys_.Get(index);
}
inline ::sg::Enemy* GhostShipService_GhostShipRequest::add_enemys() {
  // @@protoc_insertion_point(field_add:sg.GhostShipService.GhostShipRequest.enemys)
  return enemys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Enemy >&
GhostShipService_GhostShipRequest::enemys() const {
  // @@protoc_insertion_point(field_list:sg.GhostShipService.GhostShipRequest.enemys)
  return enemys_;
}

// -------------------------------------------------------------------

// GhostShipService_GhostShipResponse

// required int32 result = 1;
inline bool GhostShipService_GhostShipResponse::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GhostShipService_GhostShipResponse::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GhostShipService_GhostShipResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GhostShipService_GhostShipResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GhostShipService_GhostShipResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipResponse.result)
  return result_;
}
inline void GhostShipService_GhostShipResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.GhostShipService.GhostShipResponse.result)
}

// optional .sg.UserInformationInGhostShip user_info = 2;
inline bool GhostShipService_GhostShipResponse::has_user_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GhostShipService_GhostShipResponse::set_has_user_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GhostShipService_GhostShipResponse::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GhostShipService_GhostShipResponse::clear_user_info() {
  if (user_info_ != NULL) user_info_->Clear();
  clear_has_user_info();
}
inline const ::sg::UserInformationInGhostShip& GhostShipService_GhostShipResponse::_internal_user_info() const {
  return *user_info_;
}
inline const ::sg::UserInformationInGhostShip& GhostShipService_GhostShipResponse::user_info() const {
  const ::sg::UserInformationInGhostShip* p = user_info_;
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipResponse.user_info)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserInformationInGhostShip*>(
      &::sg::_UserInformationInGhostShip_default_instance_);
}
inline ::sg::UserInformationInGhostShip* GhostShipService_GhostShipResponse::release_user_info() {
  // @@protoc_insertion_point(field_release:sg.GhostShipService.GhostShipResponse.user_info)
  clear_has_user_info();
  ::sg::UserInformationInGhostShip* temp = user_info_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  user_info_ = NULL;
  return temp;
}
inline ::sg::UserInformationInGhostShip* GhostShipService_GhostShipResponse::unsafe_arena_release_user_info() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.GhostShipService.GhostShipResponse.user_info)
  clear_has_user_info();
  ::sg::UserInformationInGhostShip* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline ::sg::UserInformationInGhostShip* GhostShipService_GhostShipResponse::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserInformationInGhostShip>(GetArenaNoVirtual());
    user_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.GhostShipResponse.user_info)
  return user_info_;
}
inline void GhostShipService_GhostShipResponse::set_allocated_user_info(::sg::UserInformationInGhostShip* user_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_info_;
  }
  if (user_info) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(user_info);
    if (message_arena != submessage_arena) {
      user_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_info, submessage_arena);
    }
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  user_info_ = user_info;
  // @@protoc_insertion_point(field_set_allocated:sg.GhostShipService.GhostShipResponse.user_info)
}

// repeated .sg.GhostStage stages = 3;
inline int GhostShipService_GhostShipResponse::stages_size() const {
  return stages_.size();
}
inline void GhostShipService_GhostShipResponse::clear_stages() {
  stages_.Clear();
}
inline ::sg::GhostStage* GhostShipService_GhostShipResponse::mutable_stages(int index) {
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.GhostShipResponse.stages)
  return stages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::GhostStage >*
GhostShipService_GhostShipResponse::mutable_stages() {
  // @@protoc_insertion_point(field_mutable_list:sg.GhostShipService.GhostShipResponse.stages)
  return &stages_;
}
inline const ::sg::GhostStage& GhostShipService_GhostShipResponse::stages(int index) const {
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipResponse.stages)
  return stages_.Get(index);
}
inline ::sg::GhostStage* GhostShipService_GhostShipResponse::add_stages() {
  // @@protoc_insertion_point(field_add:sg.GhostShipService.GhostShipResponse.stages)
  return stages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::GhostStage >&
GhostShipService_GhostShipResponse::stages() const {
  // @@protoc_insertion_point(field_list:sg.GhostShipService.GhostShipResponse.stages)
  return stages_;
}

// optional .sg.GhostStageBattleData battle_data = 4;
inline bool GhostShipService_GhostShipResponse::has_battle_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GhostShipService_GhostShipResponse::set_has_battle_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GhostShipService_GhostShipResponse::clear_has_battle_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GhostShipService_GhostShipResponse::clear_battle_data() {
  if (battle_data_ != NULL) battle_data_->Clear();
  clear_has_battle_data();
}
inline const ::sg::GhostStageBattleData& GhostShipService_GhostShipResponse::_internal_battle_data() const {
  return *battle_data_;
}
inline const ::sg::GhostStageBattleData& GhostShipService_GhostShipResponse::battle_data() const {
  const ::sg::GhostStageBattleData* p = battle_data_;
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipResponse.battle_data)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::GhostStageBattleData*>(
      &::sg::_GhostStageBattleData_default_instance_);
}
inline ::sg::GhostStageBattleData* GhostShipService_GhostShipResponse::release_battle_data() {
  // @@protoc_insertion_point(field_release:sg.GhostShipService.GhostShipResponse.battle_data)
  clear_has_battle_data();
  ::sg::GhostStageBattleData* temp = battle_data_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  battle_data_ = NULL;
  return temp;
}
inline ::sg::GhostStageBattleData* GhostShipService_GhostShipResponse::unsafe_arena_release_battle_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.GhostShipService.GhostShipResponse.battle_data)
  clear_has_battle_data();
  ::sg::GhostStageBattleData* temp = battle_data_;
  battle_data_ = NULL;
  return temp;
}
inline ::sg::GhostStageBattleData* GhostShipService_GhostShipResponse::mutable_battle_data() {
  set_has_battle_data();
  if (battle_data_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::GhostStageBattleData>(GetArenaNoVirtual());
    battle_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.GhostShipResponse.battle_data)
  return battle_data_;
}
inline void GhostShipService_GhostShipResponse::set_allocated_battle_data(::sg::GhostStageBattleData* battle_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete battle_data_;
  }
  if (battle_data) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(battle_data);
    if (message_arena != submessage_arena) {
      battle_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, battle_data, submessage_arena);
    }
    set_has_battle_data();
  } else {
    clear_has_battle_data();
  }
  battle_data_ = battle_data;
  // @@protoc_insertion_point(field_set_allocated:sg.GhostShipService.GhostShipResponse.battle_data)
}

// optional .sg.pb_pair_int_float get_buff = 5;
inline bool GhostShipService_GhostShipResponse::has_get_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GhostShipService_GhostShipResponse::set_has_get_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GhostShipService_GhostShipResponse::clear_has_get_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::sg::pb_pair_int_float& GhostShipService_GhostShipResponse::_internal_get_buff() const {
  return *get_buff_;
}
inline const ::sg::pb_pair_int_float& GhostShipService_GhostShipResponse::get_buff() const {
  const ::sg::pb_pair_int_float* p = get_buff_;
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipResponse.get_buff)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::pb_pair_int_float*>(
      &::sg::_pb_pair_int_float_default_instance_);
}
inline ::sg::pb_pair_int_float* GhostShipService_GhostShipResponse::release_get_buff() {
  // @@protoc_insertion_point(field_release:sg.GhostShipService.GhostShipResponse.get_buff)
  clear_has_get_buff();
  ::sg::pb_pair_int_float* temp = get_buff_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  get_buff_ = NULL;
  return temp;
}
inline ::sg::pb_pair_int_float* GhostShipService_GhostShipResponse::unsafe_arena_release_get_buff() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.GhostShipService.GhostShipResponse.get_buff)
  clear_has_get_buff();
  ::sg::pb_pair_int_float* temp = get_buff_;
  get_buff_ = NULL;
  return temp;
}
inline ::sg::pb_pair_int_float* GhostShipService_GhostShipResponse::mutable_get_buff() {
  set_has_get_buff();
  if (get_buff_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::pb_pair_int_float>(GetArenaNoVirtual());
    get_buff_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.GhostShipResponse.get_buff)
  return get_buff_;
}
inline void GhostShipService_GhostShipResponse::set_allocated_get_buff(::sg::pb_pair_int_float* get_buff) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(get_buff_);
  }
  if (get_buff) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(get_buff)->GetArena();
    if (message_arena != submessage_arena) {
      get_buff = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_buff, submessage_arena);
    }
    set_has_get_buff();
  } else {
    clear_has_get_buff();
  }
  get_buff_ = get_buff;
  // @@protoc_insertion_point(field_set_allocated:sg.GhostShipService.GhostShipResponse.get_buff)
}

// optional .sg.Reward reward = 6;
inline bool GhostShipService_GhostShipResponse::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GhostShipService_GhostShipResponse::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GhostShipService_GhostShipResponse::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::sg::Reward& GhostShipService_GhostShipResponse::_internal_reward() const {
  return *reward_;
}
inline const ::sg::Reward& GhostShipService_GhostShipResponse::reward() const {
  const ::sg::Reward* p = reward_;
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipResponse.reward)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::Reward*>(
      &::sg::_Reward_default_instance_);
}
inline ::sg::Reward* GhostShipService_GhostShipResponse::release_reward() {
  // @@protoc_insertion_point(field_release:sg.GhostShipService.GhostShipResponse.reward)
  clear_has_reward();
  ::sg::Reward* temp = reward_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  reward_ = NULL;
  return temp;
}
inline ::sg::Reward* GhostShipService_GhostShipResponse::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.GhostShipService.GhostShipResponse.reward)
  clear_has_reward();
  ::sg::Reward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline ::sg::Reward* GhostShipService_GhostShipResponse::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::Reward>(GetArenaNoVirtual());
    reward_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.GhostShipResponse.reward)
  return reward_;
}
inline void GhostShipService_GhostShipResponse::set_allocated_reward(::sg::Reward* reward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reward_);
  }
  if (reward) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(reward)->GetArena();
    if (message_arena != submessage_arena) {
      reward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reward, submessage_arena);
    }
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_ = reward;
  // @@protoc_insertion_point(field_set_allocated:sg.GhostShipService.GhostShipResponse.reward)
}

// optional int32 battle_result = 7;
inline bool GhostShipService_GhostShipResponse::has_battle_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GhostShipService_GhostShipResponse::set_has_battle_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GhostShipService_GhostShipResponse::clear_has_battle_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GhostShipService_GhostShipResponse::clear_battle_result() {
  battle_result_ = 0;
  clear_has_battle_result();
}
inline ::google::protobuf::int32 GhostShipService_GhostShipResponse::battle_result() const {
  // @@protoc_insertion_point(field_get:sg.GhostShipService.GhostShipResponse.battle_result)
  return battle_result_;
}
inline void GhostShipService_GhostShipResponse::set_battle_result(::google::protobuf::int32 value) {
  set_has_battle_result();
  battle_result_ = value;
  // @@protoc_insertion_point(field_set:sg.GhostShipService.GhostShipResponse.battle_result)
}

// -------------------------------------------------------------------

// GhostShipService

// optional .sg.GhostShipService.GhostShipRequest req = 1;
inline bool GhostShipService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GhostShipService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GhostShipService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GhostShipService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::GhostShipService_GhostShipRequest& GhostShipService::_internal_req() const {
  return *req_;
}
inline const ::sg::GhostShipService_GhostShipRequest& GhostShipService::req() const {
  const ::sg::GhostShipService_GhostShipRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.GhostShipService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::GhostShipService_GhostShipRequest*>(
      &::sg::_GhostShipService_GhostShipRequest_default_instance_);
}
inline ::sg::GhostShipService_GhostShipRequest* GhostShipService::release_req() {
  // @@protoc_insertion_point(field_release:sg.GhostShipService.req)
  clear_has_req();
  ::sg::GhostShipService_GhostShipRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::GhostShipService_GhostShipRequest* GhostShipService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.GhostShipService.req)
  clear_has_req();
  ::sg::GhostShipService_GhostShipRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::GhostShipService_GhostShipRequest* GhostShipService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::GhostShipService_GhostShipRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.req)
  return req_;
}
inline void GhostShipService::set_allocated_req(::sg::GhostShipService_GhostShipRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.GhostShipService.req)
}

// optional .sg.GhostShipService.GhostShipResponse resp = 2;
inline bool GhostShipService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GhostShipService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GhostShipService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GhostShipService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::GhostShipService_GhostShipResponse& GhostShipService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::GhostShipService_GhostShipResponse& GhostShipService::resp() const {
  const ::sg::GhostShipService_GhostShipResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.GhostShipService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::GhostShipService_GhostShipResponse*>(
      &::sg::_GhostShipService_GhostShipResponse_default_instance_);
}
inline ::sg::GhostShipService_GhostShipResponse* GhostShipService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.GhostShipService.resp)
  clear_has_resp();
  ::sg::GhostShipService_GhostShipResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::GhostShipService_GhostShipResponse* GhostShipService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.GhostShipService.resp)
  clear_has_resp();
  ::sg::GhostShipService_GhostShipResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::GhostShipService_GhostShipResponse* GhostShipService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::GhostShipService_GhostShipResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.GhostShipService.resp)
  return resp_;
}
inline void GhostShipService::set_allocated_resp(::sg::GhostShipService_GhostShipResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.GhostShipService.resp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sg::GhostShipService_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::GhostShipService_CMD>() {
  return ::sg::GhostShipService_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_GhostShip_2eproto
