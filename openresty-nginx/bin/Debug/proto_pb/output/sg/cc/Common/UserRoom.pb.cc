// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserRoom.proto

#include "UserRoom.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserRoom;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_UserRoom_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserRoom_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserRoomService_UserRoomRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserRoom_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserRoomService_UserRoomResponse;
}  // namespace protobuf_UserRoom_2eproto
namespace sg {
class UserRoomService_UserRoomRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRoomService_UserRoomRequest>
      _instance;
} _UserRoomService_UserRoomRequest_default_instance_;
class UserRoomService_UserRoomResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRoomService_UserRoomResponse>
      _instance;
} _UserRoomService_UserRoomResponse_default_instance_;
class UserRoomServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRoomService>
      _instance;
} _UserRoomService_default_instance_;
}  // namespace sg
namespace protobuf_UserRoom_2eproto {
static void InitDefaultsUserRoomService_UserRoomRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserRoomService_UserRoomRequest_default_instance_;
    new (ptr) ::sg::UserRoomService_UserRoomRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserRoomService_UserRoomRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserRoomService_UserRoomRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserRoomService_UserRoomRequest}, {
      &protobuf_BaseStruct_2eproto::scc_info_UserRoom.base,}};

static void InitDefaultsUserRoomService_UserRoomResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserRoomService_UserRoomResponse_default_instance_;
    new (ptr) ::sg::UserRoomService_UserRoomResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserRoomService_UserRoomResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserRoomService_UserRoomResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserRoomService_UserRoomResponse}, {
      &protobuf_BaseStruct_2eproto::scc_info_UserRoom.base,}};

static void InitDefaultsUserRoomService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserRoomService_default_instance_;
    new (ptr) ::sg::UserRoomService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserRoomService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserRoomService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserRoomService}, {
      &protobuf_UserRoom_2eproto::scc_info_UserRoomService_UserRoomRequest.base,
      &protobuf_UserRoom_2eproto::scc_info_UserRoomService_UserRoomResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UserRoomService_UserRoomRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRoomService_UserRoomResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRoomService.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService_UserRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService_UserRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService_UserRoomRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService_UserRoomRequest, rooms_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService_UserRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService_UserRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService_UserRoomResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService_UserRoomResponse, rooms_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRoomService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::sg::UserRoomService_UserRoomRequest)},
  { 9, 16, sizeof(::sg::UserRoomService_UserRoomResponse)},
  { 18, 25, sizeof(::sg::UserRoomService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserRoomService_UserRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserRoomService_UserRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserRoomService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserRoom.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016UserRoom.proto\022\002sg\032\020BaseStruct.proto\"\266"
      "\002\n\017UserRoomService\0220\n\003req\030\001 \001(\0132#.sg.Use"
      "rRoomService.UserRoomRequest\0222\n\004resp\030\002 \001"
      "(\0132$.sg.UserRoomService.UserRoomResponse"
      "\032Y\n\017UserRoomRequest\022)\n\003cmd\030\001 \002(\0162\034.sg.Us"
      "erRoomService.ROOM_CMD\022\033\n\005rooms\030\004 \003(\0132\014."
      "sg.UserRoom\032\?\n\020UserRoomResponse\022\016\n\006resul"
      "t\030\001 \002(\005\022\033\n\005rooms\030\004 \003(\0132\014.sg.UserRoom\"!\n\010"
      "ROOM_CMD\022\t\n\005QUERY\020\001\022\n\n\006CHANGE\020\002B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 356);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserRoom.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserRoom_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserRoomService_ROOM_CMD_descriptor() {
  protobuf_UserRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserRoom_2eproto::file_level_enum_descriptors[0];
}
bool UserRoomService_ROOM_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserRoomService_ROOM_CMD UserRoomService::QUERY;
const UserRoomService_ROOM_CMD UserRoomService::CHANGE;
const UserRoomService_ROOM_CMD UserRoomService::ROOM_CMD_MIN;
const UserRoomService_ROOM_CMD UserRoomService::ROOM_CMD_MAX;
const int UserRoomService::ROOM_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void UserRoomService_UserRoomRequest::InitAsDefaultInstance() {
}
void UserRoomService_UserRoomRequest::clear_rooms() {
  rooms_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRoomService_UserRoomRequest::kCmdFieldNumber;
const int UserRoomService_UserRoomRequest::kRoomsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRoomService_UserRoomRequest::UserRoomService_UserRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserRoom_2eproto::scc_info_UserRoomService_UserRoomRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserRoomService.UserRoomRequest)
}
UserRoomService_UserRoomRequest::UserRoomService_UserRoomRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  rooms_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserRoom_2eproto::scc_info_UserRoomService_UserRoomRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserRoomService.UserRoomRequest)
}
UserRoomService_UserRoomRequest::UserRoomService_UserRoomRequest(const UserRoomService_UserRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rooms_(from.rooms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_ = from.cmd_;
  // @@protoc_insertion_point(copy_constructor:sg.UserRoomService.UserRoomRequest)
}

void UserRoomService_UserRoomRequest::SharedCtor() {
  cmd_ = 1;
}

UserRoomService_UserRoomRequest::~UserRoomService_UserRoomRequest() {
  // @@protoc_insertion_point(destructor:sg.UserRoomService.UserRoomRequest)
  SharedDtor();
}

void UserRoomService_UserRoomRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserRoomService_UserRoomRequest::ArenaDtor(void* object) {
  UserRoomService_UserRoomRequest* _this = reinterpret_cast< UserRoomService_UserRoomRequest* >(object);
  (void)_this;
}
void UserRoomService_UserRoomRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserRoomService_UserRoomRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRoomService_UserRoomRequest::descriptor() {
  ::protobuf_UserRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRoomService_UserRoomRequest& UserRoomService_UserRoomRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserRoom_2eproto::scc_info_UserRoomService_UserRoomRequest.base);
  return *internal_default_instance();
}


void UserRoomService_UserRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserRoomService.UserRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rooms_.Clear();
  cmd_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRoomService_UserRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserRoomService.UserRoomRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserRoomService.ROOM_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserRoomService_ROOM_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserRoomService_ROOM_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.UserRoom rooms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rooms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserRoomService.UserRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserRoomService.UserRoomRequest)
  return false;
#undef DO_
}

void UserRoomService_UserRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserRoomService.UserRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserRoomService.ROOM_CMD cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // repeated .sg.UserRoom rooms = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rooms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->rooms(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserRoomService.UserRoomRequest)
}

::google::protobuf::uint8* UserRoomService_UserRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserRoomService.UserRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserRoomService.ROOM_CMD cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // repeated .sg.UserRoom rooms = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rooms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->rooms(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserRoomService.UserRoomRequest)
  return target;
}

size_t UserRoomService_UserRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserRoomService.UserRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserRoomService.ROOM_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // repeated .sg.UserRoom rooms = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->rooms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rooms(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRoomService_UserRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserRoomService.UserRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRoomService_UserRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRoomService_UserRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserRoomService.UserRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserRoomService.UserRoomRequest)
    MergeFrom(*source);
  }
}

void UserRoomService_UserRoomRequest::MergeFrom(const UserRoomService_UserRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserRoomService.UserRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rooms_.MergeFrom(from.rooms_);
  if (from.has_cmd()) {
    set_cmd(from.cmd());
  }
}

void UserRoomService_UserRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserRoomService.UserRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRoomService_UserRoomRequest::CopyFrom(const UserRoomService_UserRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserRoomService.UserRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoomService_UserRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rooms())) return false;
  return true;
}

void UserRoomService_UserRoomRequest::Swap(UserRoomService_UserRoomRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserRoomService_UserRoomRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserRoomService_UserRoomRequest::UnsafeArenaSwap(UserRoomService_UserRoomRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserRoomService_UserRoomRequest::InternalSwap(UserRoomService_UserRoomRequest* other) {
  using std::swap;
  CastToBase(&rooms_)->InternalSwap(CastToBase(&other->rooms_));
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRoomService_UserRoomRequest::GetMetadata() const {
  protobuf_UserRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRoomService_UserRoomResponse::InitAsDefaultInstance() {
}
void UserRoomService_UserRoomResponse::clear_rooms() {
  rooms_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRoomService_UserRoomResponse::kResultFieldNumber;
const int UserRoomService_UserRoomResponse::kRoomsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRoomService_UserRoomResponse::UserRoomService_UserRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserRoom_2eproto::scc_info_UserRoomService_UserRoomResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserRoomService.UserRoomResponse)
}
UserRoomService_UserRoomResponse::UserRoomService_UserRoomResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  rooms_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserRoom_2eproto::scc_info_UserRoomService_UserRoomResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserRoomService.UserRoomResponse)
}
UserRoomService_UserRoomResponse::UserRoomService_UserRoomResponse(const UserRoomService_UserRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rooms_(from.rooms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserRoomService.UserRoomResponse)
}

void UserRoomService_UserRoomResponse::SharedCtor() {
  result_ = 0;
}

UserRoomService_UserRoomResponse::~UserRoomService_UserRoomResponse() {
  // @@protoc_insertion_point(destructor:sg.UserRoomService.UserRoomResponse)
  SharedDtor();
}

void UserRoomService_UserRoomResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserRoomService_UserRoomResponse::ArenaDtor(void* object) {
  UserRoomService_UserRoomResponse* _this = reinterpret_cast< UserRoomService_UserRoomResponse* >(object);
  (void)_this;
}
void UserRoomService_UserRoomResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserRoomService_UserRoomResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRoomService_UserRoomResponse::descriptor() {
  ::protobuf_UserRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRoomService_UserRoomResponse& UserRoomService_UserRoomResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserRoom_2eproto::scc_info_UserRoomService_UserRoomResponse.base);
  return *internal_default_instance();
}


void UserRoomService_UserRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserRoomService.UserRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rooms_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRoomService_UserRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserRoomService.UserRoomResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.UserRoom rooms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rooms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserRoomService.UserRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserRoomService.UserRoomResponse)
  return false;
#undef DO_
}

void UserRoomService_UserRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserRoomService.UserRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .sg.UserRoom rooms = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rooms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->rooms(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserRoomService.UserRoomResponse)
}

::google::protobuf::uint8* UserRoomService_UserRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserRoomService.UserRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .sg.UserRoom rooms = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rooms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->rooms(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserRoomService.UserRoomResponse)
  return target;
}

size_t UserRoomService_UserRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserRoomService.UserRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.UserRoom rooms = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->rooms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rooms(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRoomService_UserRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserRoomService.UserRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRoomService_UserRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRoomService_UserRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserRoomService.UserRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserRoomService.UserRoomResponse)
    MergeFrom(*source);
  }
}

void UserRoomService_UserRoomResponse::MergeFrom(const UserRoomService_UserRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserRoomService.UserRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rooms_.MergeFrom(from.rooms_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void UserRoomService_UserRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserRoomService.UserRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRoomService_UserRoomResponse::CopyFrom(const UserRoomService_UserRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserRoomService.UserRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoomService_UserRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rooms())) return false;
  return true;
}

void UserRoomService_UserRoomResponse::Swap(UserRoomService_UserRoomResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserRoomService_UserRoomResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserRoomService_UserRoomResponse::UnsafeArenaSwap(UserRoomService_UserRoomResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserRoomService_UserRoomResponse::InternalSwap(UserRoomService_UserRoomResponse* other) {
  using std::swap;
  CastToBase(&rooms_)->InternalSwap(CastToBase(&other->rooms_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRoomService_UserRoomResponse::GetMetadata() const {
  protobuf_UserRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRoomService::InitAsDefaultInstance() {
  ::sg::_UserRoomService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserRoomService_UserRoomRequest*>(
      ::sg::UserRoomService_UserRoomRequest::internal_default_instance());
  ::sg::_UserRoomService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserRoomService_UserRoomResponse*>(
      ::sg::UserRoomService_UserRoomResponse::internal_default_instance());
}
void UserRoomService::unsafe_arena_set_allocated_req(
    ::sg::UserRoomService_UserRoomRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRoomService.req)
}
void UserRoomService::unsafe_arena_set_allocated_resp(
    ::sg::UserRoomService_UserRoomResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRoomService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRoomService::kReqFieldNumber;
const int UserRoomService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRoomService::UserRoomService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserRoom_2eproto::scc_info_UserRoomService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserRoomService)
}
UserRoomService::UserRoomService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserRoom_2eproto::scc_info_UserRoomService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserRoomService)
}
UserRoomService::UserRoomService(const UserRoomService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserRoomService_UserRoomRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserRoomService_UserRoomResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserRoomService)
}

void UserRoomService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserRoomService::~UserRoomService() {
  // @@protoc_insertion_point(destructor:sg.UserRoomService)
  SharedDtor();
}

void UserRoomService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserRoomService::ArenaDtor(void* object) {
  UserRoomService* _this = reinterpret_cast< UserRoomService* >(object);
  (void)_this;
}
void UserRoomService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserRoomService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRoomService::descriptor() {
  ::protobuf_UserRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRoomService& UserRoomService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserRoom_2eproto::scc_info_UserRoomService.base);
  return *internal_default_instance();
}


void UserRoomService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserRoomService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRoomService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserRoomService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserRoomService.UserRoomRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserRoomService.UserRoomResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserRoomService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserRoomService)
  return false;
#undef DO_
}

void UserRoomService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserRoomService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserRoomService.UserRoomRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserRoomService.UserRoomResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserRoomService)
}

::google::protobuf::uint8* UserRoomService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserRoomService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserRoomService.UserRoomRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserRoomService.UserRoomResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserRoomService)
  return target;
}

size_t UserRoomService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserRoomService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserRoomService.UserRoomRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserRoomService.UserRoomResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRoomService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserRoomService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRoomService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRoomService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserRoomService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserRoomService)
    MergeFrom(*source);
  }
}

void UserRoomService::MergeFrom(const UserRoomService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserRoomService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserRoomService_UserRoomRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserRoomService_UserRoomResponse::MergeFrom(from.resp());
    }
  }
}

void UserRoomService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserRoomService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRoomService::CopyFrom(const UserRoomService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserRoomService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoomService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserRoomService::Swap(UserRoomService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserRoomService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserRoomService::UnsafeArenaSwap(UserRoomService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserRoomService::InternalSwap(UserRoomService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRoomService::GetMetadata() const {
  protobuf_UserRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserRoomService_UserRoomRequest* Arena::CreateMaybeMessage< ::sg::UserRoomService_UserRoomRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserRoomService_UserRoomRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserRoomService_UserRoomResponse* Arena::CreateMaybeMessage< ::sg::UserRoomService_UserRoomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserRoomService_UserRoomResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserRoomService* Arena::CreateMaybeMessage< ::sg::UserRoomService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserRoomService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
