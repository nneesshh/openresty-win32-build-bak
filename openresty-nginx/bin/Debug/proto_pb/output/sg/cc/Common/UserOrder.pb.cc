// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserOrder.proto

#include "UserOrder.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Item;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Reward;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_UserOrder_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserOrder_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OrderBasic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserOrder_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProduceOrder;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserOrder_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserProduceOrderService_UserProduceOrderRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserOrder_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_UserProduceOrderService_UserProduceOrderResponse;
}  // namespace protobuf_UserOrder_2eproto
namespace sg {
class OrderBasicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderBasic>
      _instance;
} _OrderBasic_default_instance_;
class ProduceOrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProduceOrder>
      _instance;
} _ProduceOrder_default_instance_;
class UserProduceOrderService_UserProduceOrderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserProduceOrderService_UserProduceOrderRequest>
      _instance;
} _UserProduceOrderService_UserProduceOrderRequest_default_instance_;
class UserProduceOrderService_UserProduceOrderResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserProduceOrderService_UserProduceOrderResponse>
      _instance;
} _UserProduceOrderService_UserProduceOrderResponse_default_instance_;
class UserProduceOrderServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserProduceOrderService>
      _instance;
} _UserProduceOrderService_default_instance_;
class OrderCreateNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderCreateNotify>
      _instance;
} _OrderCreateNotify_default_instance_;
class OrderFinishNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderFinishNotify>
      _instance;
} _OrderFinishNotify_default_instance_;
class OrderBeginNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderBeginNotify>
      _instance;
} _OrderBeginNotify_default_instance_;
class OrderPauserNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderPauserNotify>
      _instance;
} _OrderPauserNotify_default_instance_;
class OrderStateNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderStateNotify>
      _instance;
} _OrderStateNotify_default_instance_;
}  // namespace sg
namespace protobuf_UserOrder_2eproto {
static void InitDefaultsOrderBasic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_OrderBasic_default_instance_;
    new (ptr) ::sg::OrderBasic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::OrderBasic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrderBasic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrderBasic}, {}};

static void InitDefaultsProduceOrder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ProduceOrder_default_instance_;
    new (ptr) ::sg::ProduceOrder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ProduceOrder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProduceOrder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProduceOrder}, {
      &protobuf_UserOrder_2eproto::scc_info_OrderBasic.base,}};

static void InitDefaultsUserProduceOrderService_UserProduceOrderRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserProduceOrderService_UserProduceOrderRequest_default_instance_;
    new (ptr) ::sg::UserProduceOrderService_UserProduceOrderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserProduceOrderService_UserProduceOrderRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserProduceOrderService_UserProduceOrderRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserProduceOrderService_UserProduceOrderRequest}, {
      &protobuf_UserOrder_2eproto::scc_info_OrderBasic.base,}};

static void InitDefaultsUserProduceOrderService_UserProduceOrderResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserProduceOrderService_UserProduceOrderResponse_default_instance_;
    new (ptr) ::sg::UserProduceOrderService_UserProduceOrderResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserProduceOrderService_UserProduceOrderResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UserProduceOrderService_UserProduceOrderResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUserProduceOrderService_UserProduceOrderResponse}, {
      &protobuf_UserOrder_2eproto::scc_info_ProduceOrder.base,
      &protobuf_BaseStruct_2eproto::scc_info_Reward.base,
      &protobuf_BaseStruct_2eproto::scc_info_Item.base,}};

static void InitDefaultsUserProduceOrderService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserProduceOrderService_default_instance_;
    new (ptr) ::sg::UserProduceOrderService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserProduceOrderService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserProduceOrderService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserProduceOrderService}, {
      &protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService_UserProduceOrderRequest.base,
      &protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService_UserProduceOrderResponse.base,}};

static void InitDefaultsOrderCreateNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_OrderCreateNotify_default_instance_;
    new (ptr) ::sg::OrderCreateNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::OrderCreateNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderCreateNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderCreateNotify}, {
      &protobuf_UserOrder_2eproto::scc_info_ProduceOrder.base,}};

static void InitDefaultsOrderFinishNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_OrderFinishNotify_default_instance_;
    new (ptr) ::sg::OrderFinishNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::OrderFinishNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderFinishNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderFinishNotify}, {
      &protobuf_BaseStruct_2eproto::scc_info_Item.base,}};

static void InitDefaultsOrderBeginNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_OrderBeginNotify_default_instance_;
    new (ptr) ::sg::OrderBeginNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::OrderBeginNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderBeginNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderBeginNotify}, {
      &protobuf_UserOrder_2eproto::scc_info_ProduceOrder.base,}};

static void InitDefaultsOrderPauserNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_OrderPauserNotify_default_instance_;
    new (ptr) ::sg::OrderPauserNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::OrderPauserNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderPauserNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderPauserNotify}, {
      &protobuf_UserOrder_2eproto::scc_info_ProduceOrder.base,}};

static void InitDefaultsOrderStateNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_OrderStateNotify_default_instance_;
    new (ptr) ::sg::OrderStateNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::OrderStateNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderStateNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderStateNotify}, {
      &protobuf_UserOrder_2eproto::scc_info_ProduceOrder.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_OrderBasic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProduceOrder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserProduceOrderService_UserProduceOrderRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserProduceOrderService_UserProduceOrderResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserProduceOrderService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderCreateNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderFinishNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderBeginNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderPauserNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderStateNotify.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderBasic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderBasic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderBasic, basic_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderBasic, basic_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, production_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, production_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, output_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, circle_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, finish_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, basics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, pre_order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ProduceOrder, next_order_),
  0,
  1,
  11,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  ~0u,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, basics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, facility_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, slot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, production_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, production_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, circle_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderRequest, harvest_list_),
  5,
  ~0u,
  0,
  1,
  6,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderResponse, orders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderResponse, gain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService_UserProduceOrderResponse, cost_items_),
  1,
  ~0u,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserProduceOrderService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderCreateNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderCreateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderCreateNotify, order_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderFinishNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderFinishNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderFinishNotify, finish_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderFinishNotify, item_get_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderBeginNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderBeginNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderBeginNotify, order_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderPauserNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderPauserNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderPauserNotify, order_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderStateNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::OrderStateNotify, order_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::sg::OrderBasic)},
  { 9, 27, sizeof(::sg::ProduceOrder)},
  { 40, 54, sizeof(::sg::UserProduceOrderService_UserProduceOrderRequest)},
  { 63, 72, sizeof(::sg::UserProduceOrderService_UserProduceOrderResponse)},
  { 76, 83, sizeof(::sg::UserProduceOrderService)},
  { 85, 91, sizeof(::sg::OrderCreateNotify)},
  { 92, 99, sizeof(::sg::OrderFinishNotify)},
  { 101, 107, sizeof(::sg::OrderBeginNotify)},
  { 108, 114, sizeof(::sg::OrderPauserNotify)},
  { 115, 121, sizeof(::sg::OrderStateNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_OrderBasic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ProduceOrder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserProduceOrderService_UserProduceOrderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserProduceOrderService_UserProduceOrderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserProduceOrderService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_OrderCreateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_OrderFinishNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_OrderBeginNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_OrderPauserNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_OrderStateNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserOrder.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017UserOrder.proto\022\002sg\032\020BaseStruct.proto\""
      "2\n\nOrderBasic\022\022\n\nbasic_type\030\001 \002(\005\022\020\n\010bas"
      "ic_id\030\002 \002(\005\"\270\002\n\014ProduceOrder\022\n\n\002id\030\001 \002(\005"
      "\022&\n\005state\030\002 \001(\0162\027.sg.PRODUCE_ORDER_STATE"
      "\022,\n\017production_type\030\003 \001(\0162\023.sg.PRODUCTIO"
      "N_TYPE\022\022\n\nproduction\030\004 \001(\005\022\022\n\noutput_num"
      "\030\005 \001(\005\022\022\n\ncircle_num\030\006 \001(\005\022\022\n\nfinish_num"
      "\030\007 \001(\005\022\r\n\005speed\030\010 \001(\002\022\r\n\005ratio\030\t \001(\002\022\021\n\t"
      "timestamp\030\n \001(\020\022\036\n\006basics\030\013 \003(\0132\016.sg.Ord"
      "erBasic\022\021\n\tpre_order\030\014 \001(\005\022\022\n\nnext_order"
      "\030\r \001(\005\"\237\005\n\027UserProduceOrderService\022@\n\003re"
      "q\030\001 \001(\01323.sg.UserProduceOrderService.Use"
      "rProduceOrderRequest\022B\n\004resp\030\002 \001(\01324.sg."
      "UserProduceOrderService.UserProduceOrder"
      "Response\032\230\002\n\027UserProduceOrderRequest\022:\n\003"
      "cmd\030\001 \002(\0162-.sg.UserProduceOrderService.P"
      "RODUCE_ORDER_CMD\022\036\n\006basics\030\002 \003(\0132\016.sg.Or"
      "derBasic\022\023\n\013facility_id\030\003 \001(\005\022\017\n\007slot_id"
      "\030\004 \001(\005\022,\n\017production_type\030\005 \001(\0162\023.sg.PRO"
      "DUCTION_TYPE\022\022\n\nproduction\030\006 \001(\005\022\022\n\ncirc"
      "le_num\030\007 \001(\005\022\017\n\007orderid\030\t \001(\005\022\024\n\014harvest"
      "_list\030\n \003(\005\032\204\001\n\030UserProduceOrderResponse"
      "\022\016\n\006result\030\001 \002(\005\022 \n\006orders\030\002 \003(\0132\020.sg.Pr"
      "oduceOrder\022\030\n\004gain\030\003 \001(\0132\n.sg.Reward\022\034\n\n"
      "cost_items\030\004 \003(\0132\010.sg.Item\"\\\n\021PRODUCE_OR"
      "DER_CMD\022\t\n\005QUERY\020\001\022\007\n\003ADD\020\002\022\n\n\006CANCEL\020\003\022"
      "\t\n\005START\020\004\022\013\n\007HARVEST\020\005\022\017\n\013FAST_FINISH\020\006"
      "\"4\n\021OrderCreateNotify\022\037\n\005order\030\001 \002(\0132\020.s"
      "g.ProduceOrder\"B\n\021OrderFinishNotify\022\021\n\tf"
      "inish_id\030\001 \002(\005\022\032\n\010item_get\030\002 \001(\0132\010.sg.It"
      "em\"3\n\020OrderBeginNotify\022\037\n\005order\030\001 \002(\0132\020."
      "sg.ProduceOrder\"4\n\021OrderPauserNotify\022\037\n\005"
      "order\030\001 \002(\0132\020.sg.ProduceOrder\"3\n\020OrderSt"
      "ateNotify\022\037\n\005order\030\001 \002(\0132\020.sg.ProduceOrd"
      "er*\302\001\n\023PRODUCE_ORDER_STATE\022\034\n\030PRODUCE_OR"
      "DER_STATE_IDLE\020\000\022\037\n\033PRODUCE_ORDER_STATE_"
      "WAITING\020\001\022\037\n\033PRODUCE_ORDER_STATE_WORKING"
      "\020\002\022\'\n#PRODUCE_ORDER_STATE_WAITING_HARVES"
      "T\020\003\022\"\n\036PRODUCE_ORDER_STATE_HARVESTING\020\004*"
      "f\n\017PRODUCTION_TYPE\022\034\n\030PRODUCTION_TYPE_RE"
      "SOURCE\020\001\022\030\n\024PRODUCTION_TYPE_ITEM\020\002\022\033\n\027PR"
      "ODUCTION_TYPE_CULTURE\020\003B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1668);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserOrder.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserOrder_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserProduceOrderService_PRODUCE_ORDER_CMD_descriptor() {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserOrder_2eproto::file_level_enum_descriptors[0];
}
bool UserProduceOrderService_PRODUCE_ORDER_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService::QUERY;
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService::ADD;
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService::CANCEL;
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService::START;
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService::HARVEST;
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService::FAST_FINISH;
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService::PRODUCE_ORDER_CMD_MIN;
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService::PRODUCE_ORDER_CMD_MAX;
const int UserProduceOrderService::PRODUCE_ORDER_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PRODUCE_ORDER_STATE_descriptor() {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserOrder_2eproto::file_level_enum_descriptors[1];
}
bool PRODUCE_ORDER_STATE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PRODUCTION_TYPE_descriptor() {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserOrder_2eproto::file_level_enum_descriptors[2];
}
bool PRODUCTION_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void OrderBasic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderBasic::kBasicTypeFieldNumber;
const int OrderBasic::kBasicIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderBasic::OrderBasic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_OrderBasic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.OrderBasic)
}
OrderBasic::OrderBasic(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderBasic.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.OrderBasic)
}
OrderBasic::OrderBasic(const OrderBasic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&basic_type_, &from.basic_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&basic_id_) -
    reinterpret_cast<char*>(&basic_type_)) + sizeof(basic_id_));
  // @@protoc_insertion_point(copy_constructor:sg.OrderBasic)
}

void OrderBasic::SharedCtor() {
  ::memset(&basic_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&basic_id_) -
      reinterpret_cast<char*>(&basic_type_)) + sizeof(basic_id_));
}

OrderBasic::~OrderBasic() {
  // @@protoc_insertion_point(destructor:sg.OrderBasic)
  SharedDtor();
}

void OrderBasic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void OrderBasic::ArenaDtor(void* object) {
  OrderBasic* _this = reinterpret_cast< OrderBasic* >(object);
  (void)_this;
}
void OrderBasic::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OrderBasic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderBasic::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderBasic& OrderBasic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderBasic.base);
  return *internal_default_instance();
}


void OrderBasic::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.OrderBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&basic_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&basic_id_) -
        reinterpret_cast<char*>(&basic_type_)) + sizeof(basic_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderBasic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.OrderBasic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 basic_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_basic_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &basic_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 basic_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_basic_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &basic_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.OrderBasic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.OrderBasic)
  return false;
#undef DO_
}

void OrderBasic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.OrderBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 basic_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->basic_type(), output);
  }

  // required int32 basic_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->basic_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.OrderBasic)
}

::google::protobuf::uint8* OrderBasic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.OrderBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 basic_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->basic_type(), target);
  }

  // required int32 basic_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->basic_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.OrderBasic)
  return target;
}

size_t OrderBasic::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.OrderBasic)
  size_t total_size = 0;

  if (has_basic_type()) {
    // required int32 basic_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->basic_type());
  }

  if (has_basic_id()) {
    // required int32 basic_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->basic_id());
  }

  return total_size;
}
size_t OrderBasic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.OrderBasic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 basic_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->basic_type());

    // required int32 basic_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->basic_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderBasic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.OrderBasic)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderBasic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderBasic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.OrderBasic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.OrderBasic)
    MergeFrom(*source);
  }
}

void OrderBasic::MergeFrom(const OrderBasic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.OrderBasic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      basic_type_ = from.basic_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      basic_id_ = from.basic_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrderBasic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.OrderBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderBasic::CopyFrom(const OrderBasic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.OrderBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderBasic::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void OrderBasic::Swap(OrderBasic* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OrderBasic* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OrderBasic::UnsafeArenaSwap(OrderBasic* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OrderBasic::InternalSwap(OrderBasic* other) {
  using std::swap;
  swap(basic_type_, other->basic_type_);
  swap(basic_id_, other->basic_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderBasic::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProduceOrder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProduceOrder::kIdFieldNumber;
const int ProduceOrder::kStateFieldNumber;
const int ProduceOrder::kProductionTypeFieldNumber;
const int ProduceOrder::kProductionFieldNumber;
const int ProduceOrder::kOutputNumFieldNumber;
const int ProduceOrder::kCircleNumFieldNumber;
const int ProduceOrder::kFinishNumFieldNumber;
const int ProduceOrder::kSpeedFieldNumber;
const int ProduceOrder::kRatioFieldNumber;
const int ProduceOrder::kTimestampFieldNumber;
const int ProduceOrder::kBasicsFieldNumber;
const int ProduceOrder::kPreOrderFieldNumber;
const int ProduceOrder::kNextOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProduceOrder::ProduceOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_ProduceOrder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ProduceOrder)
}
ProduceOrder::ProduceOrder(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  basics_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_ProduceOrder.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ProduceOrder)
}
ProduceOrder::ProduceOrder(const ProduceOrder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      basics_(from.basics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&production_type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(production_type_));
  // @@protoc_insertion_point(copy_constructor:sg.ProduceOrder)
}

void ProduceOrder::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_order_) -
      reinterpret_cast<char*>(&id_)) + sizeof(next_order_));
  production_type_ = 1;
}

ProduceOrder::~ProduceOrder() {
  // @@protoc_insertion_point(destructor:sg.ProduceOrder)
  SharedDtor();
}

void ProduceOrder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ProduceOrder::ArenaDtor(void* object) {
  ProduceOrder* _this = reinterpret_cast< ProduceOrder* >(object);
  (void)_this;
}
void ProduceOrder::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ProduceOrder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProduceOrder::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProduceOrder& ProduceOrder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_ProduceOrder.base);
  return *internal_default_instance();
}


void ProduceOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ProduceOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  basics_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ratio_) -
        reinterpret_cast<char*>(&id_)) + sizeof(ratio_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&next_order_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(next_order_));
    production_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProduceOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ProduceOrder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.PRODUCE_ORDER_STATE state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::PRODUCE_ORDER_STATE_IsValid(value)) {
            set_state(static_cast< ::sg::PRODUCE_ORDER_STATE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.PRODUCTION_TYPE production_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::PRODUCTION_TYPE_IsValid(value)) {
            set_production_type(static_cast< ::sg::PRODUCTION_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 production = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_production();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &production_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 output_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_output_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 circle_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_circle_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &circle_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 finish_num = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_finish_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &finish_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float speed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ratio = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 timestamp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.OrderBasic basics = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_basics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pre_order = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_pre_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 next_order = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_next_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ProduceOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ProduceOrder)
  return false;
#undef DO_
}

void ProduceOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ProduceOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .sg.PRODUCE_ORDER_STATE state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // optional .sg.PRODUCTION_TYPE production_type = 3;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->production_type(), output);
  }

  // optional int32 production = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->production(), output);
  }

  // optional int32 output_num = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->output_num(), output);
  }

  // optional int32 circle_num = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->circle_num(), output);
  }

  // optional int32 finish_num = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->finish_num(), output);
  }

  // optional float speed = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->speed(), output);
  }

  // optional float ratio = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->ratio(), output);
  }

  // optional sfixed64 timestamp = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->timestamp(), output);
  }

  // repeated .sg.OrderBasic basics = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->basics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->basics(static_cast<int>(i)),
      output);
  }

  // optional int32 pre_order = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->pre_order(), output);
  }

  // optional int32 next_order = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->next_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ProduceOrder)
}

::google::protobuf::uint8* ProduceOrder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ProduceOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .sg.PRODUCE_ORDER_STATE state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // optional .sg.PRODUCTION_TYPE production_type = 3;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->production_type(), target);
  }

  // optional int32 production = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->production(), target);
  }

  // optional int32 output_num = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->output_num(), target);
  }

  // optional int32 circle_num = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->circle_num(), target);
  }

  // optional int32 finish_num = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->finish_num(), target);
  }

  // optional float speed = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->speed(), target);
  }

  // optional float ratio = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->ratio(), target);
  }

  // optional sfixed64 timestamp = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->timestamp(), target);
  }

  // repeated .sg.OrderBasic basics = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->basics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->basics(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 pre_order = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->pre_order(), target);
  }

  // optional int32 next_order = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->next_order(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ProduceOrder)
  return target;
}

size_t ProduceOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ProduceOrder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  // repeated .sg.OrderBasic basics = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->basics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->basics(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 254u) {
    // optional .sg.PRODUCE_ORDER_STATE state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional int32 production = 4;
    if (has_production()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->production());
    }

    // optional int32 output_num = 5;
    if (has_output_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->output_num());
    }

    // optional int32 circle_num = 6;
    if (has_circle_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->circle_num());
    }

    // optional int32 finish_num = 7;
    if (has_finish_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->finish_num());
    }

    // optional float speed = 8;
    if (has_speed()) {
      total_size += 1 + 4;
    }

    // optional float ratio = 9;
    if (has_ratio()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional sfixed64 timestamp = 10;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional int32 pre_order = 12;
    if (has_pre_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_order());
    }

    // optional int32 next_order = 13;
    if (has_next_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_order());
    }

    // optional .sg.PRODUCTION_TYPE production_type = 3;
    if (has_production_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->production_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProduceOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ProduceOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const ProduceOrder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProduceOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ProduceOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ProduceOrder)
    MergeFrom(*source);
  }
}

void ProduceOrder::MergeFrom(const ProduceOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ProduceOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  basics_.MergeFrom(from.basics_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000004u) {
      production_ = from.production_;
    }
    if (cached_has_bits & 0x00000008u) {
      output_num_ = from.output_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      circle_num_ = from.circle_num_;
    }
    if (cached_has_bits & 0x00000020u) {
      finish_num_ = from.finish_num_;
    }
    if (cached_has_bits & 0x00000040u) {
      speed_ = from.speed_;
    }
    if (cached_has_bits & 0x00000080u) {
      ratio_ = from.ratio_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000200u) {
      pre_order_ = from.pre_order_;
    }
    if (cached_has_bits & 0x00000400u) {
      next_order_ = from.next_order_;
    }
    if (cached_has_bits & 0x00000800u) {
      production_type_ = from.production_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProduceOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ProduceOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProduceOrder::CopyFrom(const ProduceOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ProduceOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProduceOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->basics())) return false;
  return true;
}

void ProduceOrder::Swap(ProduceOrder* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ProduceOrder* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ProduceOrder::UnsafeArenaSwap(ProduceOrder* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ProduceOrder::InternalSwap(ProduceOrder* other) {
  using std::swap;
  CastToBase(&basics_)->InternalSwap(CastToBase(&other->basics_));
  swap(id_, other->id_);
  swap(state_, other->state_);
  swap(production_, other->production_);
  swap(output_num_, other->output_num_);
  swap(circle_num_, other->circle_num_);
  swap(finish_num_, other->finish_num_);
  swap(speed_, other->speed_);
  swap(ratio_, other->ratio_);
  swap(timestamp_, other->timestamp_);
  swap(pre_order_, other->pre_order_);
  swap(next_order_, other->next_order_);
  swap(production_type_, other->production_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProduceOrder::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserProduceOrderService_UserProduceOrderRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserProduceOrderService_UserProduceOrderRequest::kCmdFieldNumber;
const int UserProduceOrderService_UserProduceOrderRequest::kBasicsFieldNumber;
const int UserProduceOrderService_UserProduceOrderRequest::kFacilityIdFieldNumber;
const int UserProduceOrderService_UserProduceOrderRequest::kSlotIdFieldNumber;
const int UserProduceOrderService_UserProduceOrderRequest::kProductionTypeFieldNumber;
const int UserProduceOrderService_UserProduceOrderRequest::kProductionFieldNumber;
const int UserProduceOrderService_UserProduceOrderRequest::kCircleNumFieldNumber;
const int UserProduceOrderService_UserProduceOrderRequest::kOrderidFieldNumber;
const int UserProduceOrderService_UserProduceOrderRequest::kHarvestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserProduceOrderService_UserProduceOrderRequest::UserProduceOrderService_UserProduceOrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService_UserProduceOrderRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserProduceOrderService.UserProduceOrderRequest)
}
UserProduceOrderService_UserProduceOrderRequest::UserProduceOrderService_UserProduceOrderRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  basics_(arena),
  harvest_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService_UserProduceOrderRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserProduceOrderService.UserProduceOrderRequest)
}
UserProduceOrderService_UserProduceOrderRequest::UserProduceOrderService_UserProduceOrderRequest(const UserProduceOrderService_UserProduceOrderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      basics_(from.basics_),
      harvest_list_(from.harvest_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&facility_id_, &from.facility_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&production_type_) -
    reinterpret_cast<char*>(&facility_id_)) + sizeof(production_type_));
  // @@protoc_insertion_point(copy_constructor:sg.UserProduceOrderService.UserProduceOrderRequest)
}

void UserProduceOrderService_UserProduceOrderRequest::SharedCtor() {
  ::memset(&facility_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orderid_) -
      reinterpret_cast<char*>(&facility_id_)) + sizeof(orderid_));
  cmd_ = 1;
  production_type_ = 1;
}

UserProduceOrderService_UserProduceOrderRequest::~UserProduceOrderService_UserProduceOrderRequest() {
  // @@protoc_insertion_point(destructor:sg.UserProduceOrderService.UserProduceOrderRequest)
  SharedDtor();
}

void UserProduceOrderService_UserProduceOrderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserProduceOrderService_UserProduceOrderRequest::ArenaDtor(void* object) {
  UserProduceOrderService_UserProduceOrderRequest* _this = reinterpret_cast< UserProduceOrderService_UserProduceOrderRequest* >(object);
  (void)_this;
}
void UserProduceOrderService_UserProduceOrderRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserProduceOrderService_UserProduceOrderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserProduceOrderService_UserProduceOrderRequest::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserProduceOrderService_UserProduceOrderRequest& UserProduceOrderService_UserProduceOrderRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService_UserProduceOrderRequest.base);
  return *internal_default_instance();
}


void UserProduceOrderService_UserProduceOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  basics_.Clear();
  harvest_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&facility_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&orderid_) -
        reinterpret_cast<char*>(&facility_id_)) + sizeof(orderid_));
    cmd_ = 1;
    production_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserProduceOrderService_UserProduceOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserProduceOrderService.PRODUCE_ORDER_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserProduceOrderService_PRODUCE_ORDER_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserProduceOrderService_PRODUCE_ORDER_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.OrderBasic basics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_basics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 facility_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_facility_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &facility_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slot_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_slot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.PRODUCTION_TYPE production_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::PRODUCTION_TYPE_IsValid(value)) {
            set_production_type(static_cast< ::sg::PRODUCTION_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 production = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_production();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &production_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 circle_num = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_circle_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &circle_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 orderid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_orderid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 harvest_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80u, input, this->mutable_harvest_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_harvest_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserProduceOrderService.UserProduceOrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserProduceOrderService.UserProduceOrderRequest)
  return false;
#undef DO_
}

void UserProduceOrderService_UserProduceOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserProduceOrderService.PRODUCE_ORDER_CMD cmd = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // repeated .sg.OrderBasic basics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->basics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->basics(static_cast<int>(i)),
      output);
  }

  // optional int32 facility_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->facility_id(), output);
  }

  // optional int32 slot_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->slot_id(), output);
  }

  // optional .sg.PRODUCTION_TYPE production_type = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->production_type(), output);
  }

  // optional int32 production = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->production(), output);
  }

  // optional int32 circle_num = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->circle_num(), output);
  }

  // optional int32 orderid = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->orderid(), output);
  }

  // repeated int32 harvest_list = 10;
  for (int i = 0, n = this->harvest_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->harvest_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserProduceOrderService.UserProduceOrderRequest)
}

::google::protobuf::uint8* UserProduceOrderService_UserProduceOrderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserProduceOrderService.PRODUCE_ORDER_CMD cmd = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // repeated .sg.OrderBasic basics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->basics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->basics(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 facility_id = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->facility_id(), target);
  }

  // optional int32 slot_id = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->slot_id(), target);
  }

  // optional .sg.PRODUCTION_TYPE production_type = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->production_type(), target);
  }

  // optional int32 production = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->production(), target);
  }

  // optional int32 circle_num = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->circle_num(), target);
  }

  // optional int32 orderid = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->orderid(), target);
  }

  // repeated int32 harvest_list = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(10, this->harvest_list_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserProduceOrderService.UserProduceOrderRequest)
  return target;
}

size_t UserProduceOrderService_UserProduceOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserProduceOrderService.PRODUCE_ORDER_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // repeated .sg.OrderBasic basics = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->basics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->basics(static_cast<int>(i)));
    }
  }

  // repeated int32 harvest_list = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->harvest_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->harvest_list_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 facility_id = 3;
    if (has_facility_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->facility_id());
    }

    // optional int32 slot_id = 4;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_id());
    }

    // optional int32 production = 6;
    if (has_production()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->production());
    }

    // optional int32 circle_num = 7;
    if (has_circle_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->circle_num());
    }

    // optional int32 orderid = 9;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->orderid());
    }

  }
  // optional .sg.PRODUCTION_TYPE production_type = 5;
  if (has_production_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->production_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserProduceOrderService_UserProduceOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserProduceOrderService_UserProduceOrderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserProduceOrderService_UserProduceOrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserProduceOrderService.UserProduceOrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserProduceOrderService.UserProduceOrderRequest)
    MergeFrom(*source);
  }
}

void UserProduceOrderService_UserProduceOrderRequest::MergeFrom(const UserProduceOrderService_UserProduceOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  basics_.MergeFrom(from.basics_);
  harvest_list_.MergeFrom(from.harvest_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      facility_id_ = from.facility_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_id_ = from.slot_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      production_ = from.production_;
    }
    if (cached_has_bits & 0x00000008u) {
      circle_num_ = from.circle_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000020u) {
      cmd_ = from.cmd_;
    }
    if (cached_has_bits & 0x00000040u) {
      production_type_ = from.production_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserProduceOrderService_UserProduceOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserProduceOrderService_UserProduceOrderRequest::CopyFrom(const UserProduceOrderService_UserProduceOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserProduceOrderService.UserProduceOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserProduceOrderService_UserProduceOrderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->basics())) return false;
  return true;
}

void UserProduceOrderService_UserProduceOrderRequest::Swap(UserProduceOrderService_UserProduceOrderRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserProduceOrderService_UserProduceOrderRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserProduceOrderService_UserProduceOrderRequest::UnsafeArenaSwap(UserProduceOrderService_UserProduceOrderRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserProduceOrderService_UserProduceOrderRequest::InternalSwap(UserProduceOrderService_UserProduceOrderRequest* other) {
  using std::swap;
  CastToBase(&basics_)->InternalSwap(CastToBase(&other->basics_));
  harvest_list_.InternalSwap(&other->harvest_list_);
  swap(facility_id_, other->facility_id_);
  swap(slot_id_, other->slot_id_);
  swap(production_, other->production_);
  swap(circle_num_, other->circle_num_);
  swap(orderid_, other->orderid_);
  swap(cmd_, other->cmd_);
  swap(production_type_, other->production_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserProduceOrderService_UserProduceOrderRequest::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserProduceOrderService_UserProduceOrderResponse::InitAsDefaultInstance() {
  ::sg::_UserProduceOrderService_UserProduceOrderResponse_default_instance_._instance.get_mutable()->gain_ = const_cast< ::sg::Reward*>(
      ::sg::Reward::internal_default_instance());
}
void UserProduceOrderService_UserProduceOrderResponse::unsafe_arena_set_allocated_gain(
    ::sg::Reward* gain) {
  if (GetArenaNoVirtual() == NULL) {
    delete gain_;
  }
  gain_ = gain;
  if (gain) {
    set_has_gain();
  } else {
    clear_has_gain();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserProduceOrderService.UserProduceOrderResponse.gain)
}
void UserProduceOrderService_UserProduceOrderResponse::clear_gain() {
  if (gain_ != NULL) gain_->Clear();
  clear_has_gain();
}
void UserProduceOrderService_UserProduceOrderResponse::clear_cost_items() {
  cost_items_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserProduceOrderService_UserProduceOrderResponse::kResultFieldNumber;
const int UserProduceOrderService_UserProduceOrderResponse::kOrdersFieldNumber;
const int UserProduceOrderService_UserProduceOrderResponse::kGainFieldNumber;
const int UserProduceOrderService_UserProduceOrderResponse::kCostItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserProduceOrderService_UserProduceOrderResponse::UserProduceOrderService_UserProduceOrderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService_UserProduceOrderResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserProduceOrderService.UserProduceOrderResponse)
}
UserProduceOrderService_UserProduceOrderResponse::UserProduceOrderService_UserProduceOrderResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  orders_(arena),
  cost_items_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService_UserProduceOrderResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserProduceOrderService.UserProduceOrderResponse)
}
UserProduceOrderService_UserProduceOrderResponse::UserProduceOrderService_UserProduceOrderResponse(const UserProduceOrderService_UserProduceOrderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      orders_(from.orders_),
      cost_items_(from.cost_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gain()) {
    gain_ = new ::sg::Reward(*from.gain_);
  } else {
    gain_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserProduceOrderService.UserProduceOrderResponse)
}

void UserProduceOrderService_UserProduceOrderResponse::SharedCtor() {
  ::memset(&gain_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gain_)) + sizeof(result_));
}

UserProduceOrderService_UserProduceOrderResponse::~UserProduceOrderService_UserProduceOrderResponse() {
  // @@protoc_insertion_point(destructor:sg.UserProduceOrderService.UserProduceOrderResponse)
  SharedDtor();
}

void UserProduceOrderService_UserProduceOrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete gain_;
}

void UserProduceOrderService_UserProduceOrderResponse::ArenaDtor(void* object) {
  UserProduceOrderService_UserProduceOrderResponse* _this = reinterpret_cast< UserProduceOrderService_UserProduceOrderResponse* >(object);
  (void)_this;
}
void UserProduceOrderService_UserProduceOrderResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserProduceOrderService_UserProduceOrderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserProduceOrderService_UserProduceOrderResponse::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserProduceOrderService_UserProduceOrderResponse& UserProduceOrderService_UserProduceOrderResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService_UserProduceOrderResponse.base);
  return *internal_default_instance();
}


void UserProduceOrderService_UserProduceOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  cost_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(gain_ != NULL);
    gain_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserProduceOrderService_UserProduceOrderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.ProduceOrder orders = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Reward gain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Item cost_items = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cost_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserProduceOrderService.UserProduceOrderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserProduceOrderService.UserProduceOrderResponse)
  return false;
#undef DO_
}

void UserProduceOrderService_UserProduceOrderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .sg.ProduceOrder orders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->orders(static_cast<int>(i)),
      output);
  }

  // optional .sg.Reward gain = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_gain(), output);
  }

  // repeated .sg.Item cost_items = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cost_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->cost_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserProduceOrderService.UserProduceOrderResponse)
}

::google::protobuf::uint8* UserProduceOrderService_UserProduceOrderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .sg.ProduceOrder orders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->orders(static_cast<int>(i)), deterministic, target);
  }

  // optional .sg.Reward gain = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_gain(), deterministic, target);
  }

  // repeated .sg.Item cost_items = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cost_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->cost_items(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserProduceOrderService.UserProduceOrderResponse)
  return target;
}

size_t UserProduceOrderService_UserProduceOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.ProduceOrder orders = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->orders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orders(static_cast<int>(i)));
    }
  }

  // repeated .sg.Item cost_items = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->cost_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cost_items(static_cast<int>(i)));
    }
  }

  // optional .sg.Reward gain = 3;
  if (has_gain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gain_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserProduceOrderService_UserProduceOrderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserProduceOrderService_UserProduceOrderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserProduceOrderService_UserProduceOrderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserProduceOrderService.UserProduceOrderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserProduceOrderService.UserProduceOrderResponse)
    MergeFrom(*source);
  }
}

void UserProduceOrderService_UserProduceOrderResponse::MergeFrom(const UserProduceOrderService_UserProduceOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
  cost_items_.MergeFrom(from.cost_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_gain()->::sg::Reward::MergeFrom(from.gain());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserProduceOrderService_UserProduceOrderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserProduceOrderService_UserProduceOrderResponse::CopyFrom(const UserProduceOrderService_UserProduceOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserProduceOrderService.UserProduceOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserProduceOrderService_UserProduceOrderResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->orders())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->cost_items())) return false;
  if (has_gain()) {
    if (!this->gain_->IsInitialized()) return false;
  }
  return true;
}

void UserProduceOrderService_UserProduceOrderResponse::Swap(UserProduceOrderService_UserProduceOrderResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserProduceOrderService_UserProduceOrderResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserProduceOrderService_UserProduceOrderResponse::UnsafeArenaSwap(UserProduceOrderService_UserProduceOrderResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserProduceOrderService_UserProduceOrderResponse::InternalSwap(UserProduceOrderService_UserProduceOrderResponse* other) {
  using std::swap;
  CastToBase(&orders_)->InternalSwap(CastToBase(&other->orders_));
  CastToBase(&cost_items_)->InternalSwap(CastToBase(&other->cost_items_));
  swap(gain_, other->gain_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserProduceOrderService_UserProduceOrderResponse::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserProduceOrderService::InitAsDefaultInstance() {
  ::sg::_UserProduceOrderService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserProduceOrderService_UserProduceOrderRequest*>(
      ::sg::UserProduceOrderService_UserProduceOrderRequest::internal_default_instance());
  ::sg::_UserProduceOrderService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserProduceOrderService_UserProduceOrderResponse*>(
      ::sg::UserProduceOrderService_UserProduceOrderResponse::internal_default_instance());
}
void UserProduceOrderService::unsafe_arena_set_allocated_req(
    ::sg::UserProduceOrderService_UserProduceOrderRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserProduceOrderService.req)
}
void UserProduceOrderService::unsafe_arena_set_allocated_resp(
    ::sg::UserProduceOrderService_UserProduceOrderResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserProduceOrderService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserProduceOrderService::kReqFieldNumber;
const int UserProduceOrderService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserProduceOrderService::UserProduceOrderService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserProduceOrderService)
}
UserProduceOrderService::UserProduceOrderService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserProduceOrderService)
}
UserProduceOrderService::UserProduceOrderService(const UserProduceOrderService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserProduceOrderService_UserProduceOrderRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserProduceOrderService_UserProduceOrderResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserProduceOrderService)
}

void UserProduceOrderService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserProduceOrderService::~UserProduceOrderService() {
  // @@protoc_insertion_point(destructor:sg.UserProduceOrderService)
  SharedDtor();
}

void UserProduceOrderService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserProduceOrderService::ArenaDtor(void* object) {
  UserProduceOrderService* _this = reinterpret_cast< UserProduceOrderService* >(object);
  (void)_this;
}
void UserProduceOrderService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserProduceOrderService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserProduceOrderService::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserProduceOrderService& UserProduceOrderService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_UserProduceOrderService.base);
  return *internal_default_instance();
}


void UserProduceOrderService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserProduceOrderService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserProduceOrderService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserProduceOrderService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserProduceOrderService.UserProduceOrderRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserProduceOrderService.UserProduceOrderResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserProduceOrderService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserProduceOrderService)
  return false;
#undef DO_
}

void UserProduceOrderService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserProduceOrderService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserProduceOrderService.UserProduceOrderRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserProduceOrderService.UserProduceOrderResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserProduceOrderService)
}

::google::protobuf::uint8* UserProduceOrderService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserProduceOrderService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserProduceOrderService.UserProduceOrderRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserProduceOrderService.UserProduceOrderResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserProduceOrderService)
  return target;
}

size_t UserProduceOrderService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserProduceOrderService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserProduceOrderService.UserProduceOrderRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserProduceOrderService.UserProduceOrderResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserProduceOrderService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserProduceOrderService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserProduceOrderService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserProduceOrderService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserProduceOrderService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserProduceOrderService)
    MergeFrom(*source);
  }
}

void UserProduceOrderService::MergeFrom(const UserProduceOrderService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserProduceOrderService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserProduceOrderService_UserProduceOrderRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserProduceOrderService_UserProduceOrderResponse::MergeFrom(from.resp());
    }
  }
}

void UserProduceOrderService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserProduceOrderService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserProduceOrderService::CopyFrom(const UserProduceOrderService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserProduceOrderService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserProduceOrderService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserProduceOrderService::Swap(UserProduceOrderService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserProduceOrderService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserProduceOrderService::UnsafeArenaSwap(UserProduceOrderService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserProduceOrderService::InternalSwap(UserProduceOrderService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserProduceOrderService::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderCreateNotify::InitAsDefaultInstance() {
  ::sg::_OrderCreateNotify_default_instance_._instance.get_mutable()->order_ = const_cast< ::sg::ProduceOrder*>(
      ::sg::ProduceOrder::internal_default_instance());
}
void OrderCreateNotify::unsafe_arena_set_allocated_order(
    ::sg::ProduceOrder* order) {
  if (GetArenaNoVirtual() == NULL) {
    delete order_;
  }
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.OrderCreateNotify.order)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderCreateNotify::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderCreateNotify::OrderCreateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_OrderCreateNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.OrderCreateNotify)
}
OrderCreateNotify::OrderCreateNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderCreateNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.OrderCreateNotify)
}
OrderCreateNotify::OrderCreateNotify(const OrderCreateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::sg::ProduceOrder(*from.order_);
  } else {
    order_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.OrderCreateNotify)
}

void OrderCreateNotify::SharedCtor() {
  order_ = NULL;
}

OrderCreateNotify::~OrderCreateNotify() {
  // @@protoc_insertion_point(destructor:sg.OrderCreateNotify)
  SharedDtor();
}

void OrderCreateNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete order_;
}

void OrderCreateNotify::ArenaDtor(void* object) {
  OrderCreateNotify* _this = reinterpret_cast< OrderCreateNotify* >(object);
  (void)_this;
}
void OrderCreateNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OrderCreateNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderCreateNotify::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderCreateNotify& OrderCreateNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderCreateNotify.base);
  return *internal_default_instance();
}


void OrderCreateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.OrderCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(order_ != NULL);
    order_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderCreateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.OrderCreateNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ProduceOrder order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.OrderCreateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.OrderCreateNotify)
  return false;
#undef DO_
}

void OrderCreateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.OrderCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ProduceOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.OrderCreateNotify)
}

::google::protobuf::uint8* OrderCreateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.OrderCreateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ProduceOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_order(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.OrderCreateNotify)
  return target;
}

size_t OrderCreateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.OrderCreateNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ProduceOrder order = 1;
  if (has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *order_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderCreateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.OrderCreateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderCreateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderCreateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.OrderCreateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.OrderCreateNotify)
    MergeFrom(*source);
  }
}

void OrderCreateNotify::MergeFrom(const OrderCreateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.OrderCreateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    mutable_order()->::sg::ProduceOrder::MergeFrom(from.order());
  }
}

void OrderCreateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.OrderCreateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderCreateNotify::CopyFrom(const OrderCreateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.OrderCreateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderCreateNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_order()) {
    if (!this->order_->IsInitialized()) return false;
  }
  return true;
}

void OrderCreateNotify::Swap(OrderCreateNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OrderCreateNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OrderCreateNotify::UnsafeArenaSwap(OrderCreateNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OrderCreateNotify::InternalSwap(OrderCreateNotify* other) {
  using std::swap;
  swap(order_, other->order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderCreateNotify::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderFinishNotify::InitAsDefaultInstance() {
  ::sg::_OrderFinishNotify_default_instance_._instance.get_mutable()->item_get_ = const_cast< ::sg::Item*>(
      ::sg::Item::internal_default_instance());
}
void OrderFinishNotify::unsafe_arena_set_allocated_item_get(
    ::sg::Item* item_get) {
  if (GetArenaNoVirtual() == NULL) {
    delete item_get_;
  }
  item_get_ = item_get;
  if (item_get) {
    set_has_item_get();
  } else {
    clear_has_item_get();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.OrderFinishNotify.item_get)
}
void OrderFinishNotify::clear_item_get() {
  if (item_get_ != NULL) item_get_->Clear();
  clear_has_item_get();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderFinishNotify::kFinishIdFieldNumber;
const int OrderFinishNotify::kItemGetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderFinishNotify::OrderFinishNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_OrderFinishNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.OrderFinishNotify)
}
OrderFinishNotify::OrderFinishNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderFinishNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.OrderFinishNotify)
}
OrderFinishNotify::OrderFinishNotify(const OrderFinishNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item_get()) {
    item_get_ = new ::sg::Item(*from.item_get_);
  } else {
    item_get_ = NULL;
  }
  finish_id_ = from.finish_id_;
  // @@protoc_insertion_point(copy_constructor:sg.OrderFinishNotify)
}

void OrderFinishNotify::SharedCtor() {
  ::memset(&item_get_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_id_) -
      reinterpret_cast<char*>(&item_get_)) + sizeof(finish_id_));
}

OrderFinishNotify::~OrderFinishNotify() {
  // @@protoc_insertion_point(destructor:sg.OrderFinishNotify)
  SharedDtor();
}

void OrderFinishNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete item_get_;
}

void OrderFinishNotify::ArenaDtor(void* object) {
  OrderFinishNotify* _this = reinterpret_cast< OrderFinishNotify* >(object);
  (void)_this;
}
void OrderFinishNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OrderFinishNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderFinishNotify::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderFinishNotify& OrderFinishNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderFinishNotify.base);
  return *internal_default_instance();
}


void OrderFinishNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(item_get_ != NULL);
    item_get_->Clear();
  }
  finish_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderFinishNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.OrderFinishNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 finish_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_finish_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &finish_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Item item_get = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item_get()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.OrderFinishNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.OrderFinishNotify)
  return false;
#undef DO_
}

void OrderFinishNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 finish_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->finish_id(), output);
  }

  // optional .sg.Item item_get = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_item_get(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.OrderFinishNotify)
}

::google::protobuf::uint8* OrderFinishNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 finish_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->finish_id(), target);
  }

  // optional .sg.Item item_get = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_item_get(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.OrderFinishNotify)
  return target;
}

size_t OrderFinishNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.OrderFinishNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 finish_id = 1;
  if (has_finish_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->finish_id());
  }
  // optional .sg.Item item_get = 2;
  if (has_item_get()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_get_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderFinishNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.OrderFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderFinishNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderFinishNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.OrderFinishNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.OrderFinishNotify)
    MergeFrom(*source);
  }
}

void OrderFinishNotify::MergeFrom(const OrderFinishNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.OrderFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_item_get()->::sg::Item::MergeFrom(from.item_get());
    }
    if (cached_has_bits & 0x00000002u) {
      finish_id_ = from.finish_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrderFinishNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.OrderFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderFinishNotify::CopyFrom(const OrderFinishNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.OrderFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderFinishNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_item_get()) {
    if (!this->item_get_->IsInitialized()) return false;
  }
  return true;
}

void OrderFinishNotify::Swap(OrderFinishNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OrderFinishNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OrderFinishNotify::UnsafeArenaSwap(OrderFinishNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OrderFinishNotify::InternalSwap(OrderFinishNotify* other) {
  using std::swap;
  swap(item_get_, other->item_get_);
  swap(finish_id_, other->finish_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderFinishNotify::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderBeginNotify::InitAsDefaultInstance() {
  ::sg::_OrderBeginNotify_default_instance_._instance.get_mutable()->order_ = const_cast< ::sg::ProduceOrder*>(
      ::sg::ProduceOrder::internal_default_instance());
}
void OrderBeginNotify::unsafe_arena_set_allocated_order(
    ::sg::ProduceOrder* order) {
  if (GetArenaNoVirtual() == NULL) {
    delete order_;
  }
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.OrderBeginNotify.order)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderBeginNotify::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderBeginNotify::OrderBeginNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_OrderBeginNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.OrderBeginNotify)
}
OrderBeginNotify::OrderBeginNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderBeginNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.OrderBeginNotify)
}
OrderBeginNotify::OrderBeginNotify(const OrderBeginNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::sg::ProduceOrder(*from.order_);
  } else {
    order_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.OrderBeginNotify)
}

void OrderBeginNotify::SharedCtor() {
  order_ = NULL;
}

OrderBeginNotify::~OrderBeginNotify() {
  // @@protoc_insertion_point(destructor:sg.OrderBeginNotify)
  SharedDtor();
}

void OrderBeginNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete order_;
}

void OrderBeginNotify::ArenaDtor(void* object) {
  OrderBeginNotify* _this = reinterpret_cast< OrderBeginNotify* >(object);
  (void)_this;
}
void OrderBeginNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OrderBeginNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderBeginNotify::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderBeginNotify& OrderBeginNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderBeginNotify.base);
  return *internal_default_instance();
}


void OrderBeginNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.OrderBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(order_ != NULL);
    order_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderBeginNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.OrderBeginNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ProduceOrder order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.OrderBeginNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.OrderBeginNotify)
  return false;
#undef DO_
}

void OrderBeginNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.OrderBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ProduceOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.OrderBeginNotify)
}

::google::protobuf::uint8* OrderBeginNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.OrderBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ProduceOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_order(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.OrderBeginNotify)
  return target;
}

size_t OrderBeginNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.OrderBeginNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ProduceOrder order = 1;
  if (has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *order_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderBeginNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.OrderBeginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderBeginNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderBeginNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.OrderBeginNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.OrderBeginNotify)
    MergeFrom(*source);
  }
}

void OrderBeginNotify::MergeFrom(const OrderBeginNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.OrderBeginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    mutable_order()->::sg::ProduceOrder::MergeFrom(from.order());
  }
}

void OrderBeginNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.OrderBeginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderBeginNotify::CopyFrom(const OrderBeginNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.OrderBeginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderBeginNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_order()) {
    if (!this->order_->IsInitialized()) return false;
  }
  return true;
}

void OrderBeginNotify::Swap(OrderBeginNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OrderBeginNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OrderBeginNotify::UnsafeArenaSwap(OrderBeginNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OrderBeginNotify::InternalSwap(OrderBeginNotify* other) {
  using std::swap;
  swap(order_, other->order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderBeginNotify::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderPauserNotify::InitAsDefaultInstance() {
  ::sg::_OrderPauserNotify_default_instance_._instance.get_mutable()->order_ = const_cast< ::sg::ProduceOrder*>(
      ::sg::ProduceOrder::internal_default_instance());
}
void OrderPauserNotify::unsafe_arena_set_allocated_order(
    ::sg::ProduceOrder* order) {
  if (GetArenaNoVirtual() == NULL) {
    delete order_;
  }
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.OrderPauserNotify.order)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderPauserNotify::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderPauserNotify::OrderPauserNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_OrderPauserNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.OrderPauserNotify)
}
OrderPauserNotify::OrderPauserNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderPauserNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.OrderPauserNotify)
}
OrderPauserNotify::OrderPauserNotify(const OrderPauserNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::sg::ProduceOrder(*from.order_);
  } else {
    order_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.OrderPauserNotify)
}

void OrderPauserNotify::SharedCtor() {
  order_ = NULL;
}

OrderPauserNotify::~OrderPauserNotify() {
  // @@protoc_insertion_point(destructor:sg.OrderPauserNotify)
  SharedDtor();
}

void OrderPauserNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete order_;
}

void OrderPauserNotify::ArenaDtor(void* object) {
  OrderPauserNotify* _this = reinterpret_cast< OrderPauserNotify* >(object);
  (void)_this;
}
void OrderPauserNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OrderPauserNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderPauserNotify::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderPauserNotify& OrderPauserNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderPauserNotify.base);
  return *internal_default_instance();
}


void OrderPauserNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.OrderPauserNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(order_ != NULL);
    order_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderPauserNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.OrderPauserNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ProduceOrder order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.OrderPauserNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.OrderPauserNotify)
  return false;
#undef DO_
}

void OrderPauserNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.OrderPauserNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ProduceOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.OrderPauserNotify)
}

::google::protobuf::uint8* OrderPauserNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.OrderPauserNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ProduceOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_order(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.OrderPauserNotify)
  return target;
}

size_t OrderPauserNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.OrderPauserNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ProduceOrder order = 1;
  if (has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *order_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderPauserNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.OrderPauserNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderPauserNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderPauserNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.OrderPauserNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.OrderPauserNotify)
    MergeFrom(*source);
  }
}

void OrderPauserNotify::MergeFrom(const OrderPauserNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.OrderPauserNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    mutable_order()->::sg::ProduceOrder::MergeFrom(from.order());
  }
}

void OrderPauserNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.OrderPauserNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderPauserNotify::CopyFrom(const OrderPauserNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.OrderPauserNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderPauserNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_order()) {
    if (!this->order_->IsInitialized()) return false;
  }
  return true;
}

void OrderPauserNotify::Swap(OrderPauserNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OrderPauserNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OrderPauserNotify::UnsafeArenaSwap(OrderPauserNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OrderPauserNotify::InternalSwap(OrderPauserNotify* other) {
  using std::swap;
  swap(order_, other->order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderPauserNotify::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderStateNotify::InitAsDefaultInstance() {
  ::sg::_OrderStateNotify_default_instance_._instance.get_mutable()->order_ = const_cast< ::sg::ProduceOrder*>(
      ::sg::ProduceOrder::internal_default_instance());
}
void OrderStateNotify::unsafe_arena_set_allocated_order(
    ::sg::ProduceOrder* order) {
  if (GetArenaNoVirtual() == NULL) {
    delete order_;
  }
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.OrderStateNotify.order)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderStateNotify::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderStateNotify::OrderStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserOrder_2eproto::scc_info_OrderStateNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.OrderStateNotify)
}
OrderStateNotify::OrderStateNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderStateNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.OrderStateNotify)
}
OrderStateNotify::OrderStateNotify(const OrderStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::sg::ProduceOrder(*from.order_);
  } else {
    order_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.OrderStateNotify)
}

void OrderStateNotify::SharedCtor() {
  order_ = NULL;
}

OrderStateNotify::~OrderStateNotify() {
  // @@protoc_insertion_point(destructor:sg.OrderStateNotify)
  SharedDtor();
}

void OrderStateNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete order_;
}

void OrderStateNotify::ArenaDtor(void* object) {
  OrderStateNotify* _this = reinterpret_cast< OrderStateNotify* >(object);
  (void)_this;
}
void OrderStateNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void OrderStateNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderStateNotify::descriptor() {
  ::protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderStateNotify& OrderStateNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserOrder_2eproto::scc_info_OrderStateNotify.base);
  return *internal_default_instance();
}


void OrderStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.OrderStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(order_ != NULL);
    order_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.OrderStateNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ProduceOrder order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.OrderStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.OrderStateNotify)
  return false;
#undef DO_
}

void OrderStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.OrderStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ProduceOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.OrderStateNotify)
}

::google::protobuf::uint8* OrderStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.OrderStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ProduceOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_order(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.OrderStateNotify)
  return target;
}

size_t OrderStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.OrderStateNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ProduceOrder order = 1;
  if (has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *order_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.OrderStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.OrderStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.OrderStateNotify)
    MergeFrom(*source);
  }
}

void OrderStateNotify::MergeFrom(const OrderStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.OrderStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    mutable_order()->::sg::ProduceOrder::MergeFrom(from.order());
  }
}

void OrderStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.OrderStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderStateNotify::CopyFrom(const OrderStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.OrderStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderStateNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_order()) {
    if (!this->order_->IsInitialized()) return false;
  }
  return true;
}

void OrderStateNotify::Swap(OrderStateNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    OrderStateNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void OrderStateNotify::UnsafeArenaSwap(OrderStateNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void OrderStateNotify::InternalSwap(OrderStateNotify* other) {
  using std::swap;
  swap(order_, other->order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderStateNotify::GetMetadata() const {
  protobuf_UserOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::OrderBasic* Arena::CreateMaybeMessage< ::sg::OrderBasic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::OrderBasic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ProduceOrder* Arena::CreateMaybeMessage< ::sg::ProduceOrder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ProduceOrder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserProduceOrderService_UserProduceOrderRequest* Arena::CreateMaybeMessage< ::sg::UserProduceOrderService_UserProduceOrderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserProduceOrderService_UserProduceOrderRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserProduceOrderService_UserProduceOrderResponse* Arena::CreateMaybeMessage< ::sg::UserProduceOrderService_UserProduceOrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserProduceOrderService_UserProduceOrderResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserProduceOrderService* Arena::CreateMaybeMessage< ::sg::UserProduceOrderService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserProduceOrderService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::OrderCreateNotify* Arena::CreateMaybeMessage< ::sg::OrderCreateNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::OrderCreateNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::OrderFinishNotify* Arena::CreateMaybeMessage< ::sg::OrderFinishNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::OrderFinishNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::OrderBeginNotify* Arena::CreateMaybeMessage< ::sg::OrderBeginNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::OrderBeginNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::OrderPauserNotify* Arena::CreateMaybeMessage< ::sg::OrderPauserNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::OrderPauserNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::OrderStateNotify* Arena::CreateMaybeMessage< ::sg::OrderStateNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::OrderStateNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
