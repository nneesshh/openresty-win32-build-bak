// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Shop.proto

#include "Shop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Reward;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_Shop_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Shop_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShoppingGoods;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Shop_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShoppingService_ShoppingRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Shop_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GameStore;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Shop_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ShoppingService_ShoppingResponse;
}  // namespace protobuf_Shop_2eproto
namespace sg {
class ShoppingGoodsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShoppingGoods>
      _instance;
} _ShoppingGoods_default_instance_;
class GameStoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameStore>
      _instance;
} _GameStore_default_instance_;
class ShoppingService_ShoppingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShoppingService_ShoppingRequest>
      _instance;
} _ShoppingService_ShoppingRequest_default_instance_;
class ShoppingService_ShoppingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShoppingService_ShoppingResponse>
      _instance;
} _ShoppingService_ShoppingResponse_default_instance_;
class ShoppingServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShoppingService>
      _instance;
} _ShoppingService_default_instance_;
}  // namespace sg
namespace protobuf_Shop_2eproto {
static void InitDefaultsShoppingGoods() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShoppingGoods_default_instance_;
    new (ptr) ::sg::ShoppingGoods();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShoppingGoods::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShoppingGoods =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShoppingGoods}, {}};

static void InitDefaultsGameStore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_GameStore_default_instance_;
    new (ptr) ::sg::GameStore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::GameStore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GameStore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGameStore}, {
      &protobuf_Shop_2eproto::scc_info_ShoppingGoods.base,}};

static void InitDefaultsShoppingService_ShoppingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShoppingService_ShoppingRequest_default_instance_;
    new (ptr) ::sg::ShoppingService_ShoppingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShoppingService_ShoppingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShoppingService_ShoppingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShoppingService_ShoppingRequest}, {}};

static void InitDefaultsShoppingService_ShoppingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShoppingService_ShoppingResponse_default_instance_;
    new (ptr) ::sg::ShoppingService_ShoppingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShoppingService_ShoppingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ShoppingService_ShoppingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsShoppingService_ShoppingResponse}, {
      &protobuf_Shop_2eproto::scc_info_GameStore.base,
      &protobuf_BaseStruct_2eproto::scc_info_Reward.base,
      &protobuf_Shop_2eproto::scc_info_ShoppingGoods.base,}};

static void InitDefaultsShoppingService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_ShoppingService_default_instance_;
    new (ptr) ::sg::ShoppingService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::ShoppingService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ShoppingService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsShoppingService}, {
      &protobuf_Shop_2eproto::scc_info_ShoppingService_ShoppingRequest.base,
      &protobuf_Shop_2eproto::scc_info_ShoppingService_ShoppingResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ShoppingGoods.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameStore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShoppingService_ShoppingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShoppingService_ShoppingResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShoppingService.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, belong_store_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, typeid__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, need_item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, remain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingGoods, first_charge_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::GameStore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::GameStore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::GameStore, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::GameStore, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::GameStore, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::GameStore, goods_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::GameStore, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::GameStore, timestamp_),
  0,
  1,
  2,
  ~0u,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingRequest, buy_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingRequest, store_id_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingResponse, store_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingResponse, goods_accept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService_ShoppingResponse, goods_),
  2,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::ShoppingService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(::sg::ShoppingGoods)},
  { 27, 38, sizeof(::sg::GameStore)},
  { 44, 52, sizeof(::sg::ShoppingService_ShoppingRequest)},
  { 55, 64, sizeof(::sg::ShoppingService_ShoppingResponse)},
  { 68, 75, sizeof(::sg::ShoppingService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShoppingGoods_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_GameStore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShoppingService_ShoppingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShoppingService_ShoppingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_ShoppingService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Shop.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nShop.proto\022\002sg\032\020BaseStruct.proto\"\322\001\n\rS"
      "hoppingGoods\022\n\n\002id\030\001 \002(\005\022\024\n\014belong_store"
      "\030\002 \002(\003\022\016\n\006typeid\030\003 \002(\005\022\020\n\010category\030\004 \002(\005"
      "\022\021\n\tneed_item\030\005 \002(\005\022\r\n\005price\030\006 \002(\005\022\016\n\006re"
      "main\030\007 \002(\005\022\021\n\ttimestamp\030\010 \002(\020\022\020\n\010duratio"
      "n\030\t \002(\020\022\020\n\010discount\030\n \001(\002\022\024\n\014first_charg"
      "e\030\013 \001(\010\"\200\001\n\tGameStore\022\n\n\002id\030\001 \002(\003\022\014\n\004typ"
      "e\030\002 \002(\005\022\r\n\005state\030\003 \002(\005\022%\n\ngoods_list\030\004 \003"
      "(\0132\021.sg.ShoppingGoods\022\020\n\010duration\030\005 \001(\005\022"
      "\021\n\ttimestamp\030\006 \001(\020\"\320\003\n\017ShoppingService\0220"
      "\n\003req\030\001 \001(\0132#.sg.ShoppingService.Shoppin"
      "gRequest\0222\n\004resp\030\002 \001(\0132$.sg.ShoppingServ"
      "ice.ShoppingResponse\032f\n\017ShoppingRequest\022"
      "1\n\003cmd\030\001 \002(\0162$.sg.ShoppingService.SHOPPI"
      "NG_COMMAND\022\016\n\006buy_id\030\002 \001(\005\022\020\n\010store_id\030\003"
      " \001(\003\032\211\001\n\020ShoppingResponse\022\016\n\006result\030\001 \002("
      "\005\022!\n\nstore_list\030\002 \003(\0132\r.sg.GameStore\022 \n\014"
      "goods_accept\030\013 \001(\0132\n.sg.Reward\022 \n\005goods\030"
      "\014 \001(\0132\021.sg.ShoppingGoods\"c\n\020SHOPPING_COM"
      "MAND\022\t\n\005QUERY\020\001\022\007\n\003BUY\020\002\022\013\n\007REFRESH\020\003\022\020\n"
      "\014BUY_VITALITY\020\004\022\017\n\013QUERY_STORE\020\005\022\013\n\007BARG"
      "AIN\020\006*\255\002\n\017GAME_STORE_TYPE\022\032\n\026GAME_STORE_"
      "TYPE_SYSTEM\020\001\022\031\n\025GAME_STORE_TYPE_GUILD\020\002"
      "\022\027\n\023GAME_STORE_TYPE_NPC\020\003\022\034\n\030GAME_STORE_"
      "TYPE_CUSTOMER\020\004\022\027\n\023GAME_STORE_TYPE_JJC\020\005"
      "\022\031\n\025GAME_STORE_TYPE_DAILY\020\006\022\032\n\026GAME_STOR"
      "E_TYPE_WEEKLY\020\007\022\033\n\027GAME_STORE_TYPE_MONTH"
      "LY\020\010\022\036\n\032GAME_STORE_TYPE_DAILY_GIFT\020\t\022\037\n\033"
      "GAME_STORE_TYPE_WEEKLY_GIFT\020\n*\273\001\n\016GOODS_"
      "CATEGORY\022\032\n\026GOODS_CATEGORY_DIAMOND\020\001\022\027\n\023"
      "GOODS_CATEGORY_GIFT\020\002\022\032\n\026GOODS_CATEGORY_"
      "FORMULA\020\003\022\031\n\025GOODS_CATEGORY_SAILOR\020\004\022\035\n\031"
      "GOODS_CATEGORY_DAILY_GIFT\020\005\022\036\n\032GOODS_CAT"
      "EGORY_WEEKLY_GIFT\020\006*P\n\013TRADE_ERROR\022\037\n\033TR"
      "ADE_ERROR_GOODS_NOT_EXIST\020\001\022 \n\034TRADE_ERR"
      "OR_NOT_ENOUGH_MONEY\020\002B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1426);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Shop.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Shop_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* ShoppingService_SHOPPING_COMMAND_descriptor() {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Shop_2eproto::file_level_enum_descriptors[0];
}
bool ShoppingService_SHOPPING_COMMAND_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ShoppingService_SHOPPING_COMMAND ShoppingService::QUERY;
const ShoppingService_SHOPPING_COMMAND ShoppingService::BUY;
const ShoppingService_SHOPPING_COMMAND ShoppingService::REFRESH;
const ShoppingService_SHOPPING_COMMAND ShoppingService::BUY_VITALITY;
const ShoppingService_SHOPPING_COMMAND ShoppingService::QUERY_STORE;
const ShoppingService_SHOPPING_COMMAND ShoppingService::BARGAIN;
const ShoppingService_SHOPPING_COMMAND ShoppingService::SHOPPING_COMMAND_MIN;
const ShoppingService_SHOPPING_COMMAND ShoppingService::SHOPPING_COMMAND_MAX;
const int ShoppingService::SHOPPING_COMMAND_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GAME_STORE_TYPE_descriptor() {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Shop_2eproto::file_level_enum_descriptors[1];
}
bool GAME_STORE_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GOODS_CATEGORY_descriptor() {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Shop_2eproto::file_level_enum_descriptors[2];
}
bool GOODS_CATEGORY_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TRADE_ERROR_descriptor() {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Shop_2eproto::file_level_enum_descriptors[3];
}
bool TRADE_ERROR_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ShoppingGoods::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShoppingGoods::kIdFieldNumber;
const int ShoppingGoods::kBelongStoreFieldNumber;
const int ShoppingGoods::kTypeidFieldNumber;
const int ShoppingGoods::kCategoryFieldNumber;
const int ShoppingGoods::kNeedItemFieldNumber;
const int ShoppingGoods::kPriceFieldNumber;
const int ShoppingGoods::kRemainFieldNumber;
const int ShoppingGoods::kTimestampFieldNumber;
const int ShoppingGoods::kDurationFieldNumber;
const int ShoppingGoods::kDiscountFieldNumber;
const int ShoppingGoods::kFirstChargeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShoppingGoods::ShoppingGoods()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Shop_2eproto::scc_info_ShoppingGoods.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShoppingGoods)
}
ShoppingGoods::ShoppingGoods(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_ShoppingGoods.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShoppingGoods)
}
ShoppingGoods::ShoppingGoods(const ShoppingGoods& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&belong_store_, &from.belong_store_,
    static_cast<size_t>(reinterpret_cast<char*>(&first_charge_) -
    reinterpret_cast<char*>(&belong_store_)) + sizeof(first_charge_));
  // @@protoc_insertion_point(copy_constructor:sg.ShoppingGoods)
}

void ShoppingGoods::SharedCtor() {
  ::memset(&belong_store_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_charge_) -
      reinterpret_cast<char*>(&belong_store_)) + sizeof(first_charge_));
}

ShoppingGoods::~ShoppingGoods() {
  // @@protoc_insertion_point(destructor:sg.ShoppingGoods)
  SharedDtor();
}

void ShoppingGoods::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ShoppingGoods::ArenaDtor(void* object) {
  ShoppingGoods* _this = reinterpret_cast< ShoppingGoods* >(object);
  (void)_this;
}
void ShoppingGoods::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShoppingGoods::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShoppingGoods::descriptor() {
  ::protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShoppingGoods& ShoppingGoods::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_ShoppingGoods.base);
  return *internal_default_instance();
}


void ShoppingGoods::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShoppingGoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&belong_store_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&belong_store_)) + sizeof(timestamp_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&duration_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&first_charge_) -
        reinterpret_cast<char*>(&duration_)) + sizeof(first_charge_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShoppingGoods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShoppingGoods)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 belong_store = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_belong_store();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &belong_store_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 typeid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_typeid_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typeid__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 category = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_category();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 need_item = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_need_item();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_item_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 price = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 remain = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_remain();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 timestamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 duration = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float discount = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_discount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool first_charge = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_first_charge();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_charge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShoppingGoods)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShoppingGoods)
  return false;
#undef DO_
}

void ShoppingGoods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShoppingGoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int64 belong_store = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->belong_store(), output);
  }

  // required int32 typeid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->typeid_(), output);
  }

  // required int32 category = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->category(), output);
  }

  // required int32 need_item = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->need_item(), output);
  }

  // required int32 price = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->price(), output);
  }

  // required int32 remain = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->remain(), output);
  }

  // required sfixed64 timestamp = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(8, this->timestamp(), output);
  }

  // required sfixed64 duration = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(9, this->duration(), output);
  }

  // optional float discount = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->discount(), output);
  }

  // optional bool first_charge = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->first_charge(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShoppingGoods)
}

::google::protobuf::uint8* ShoppingGoods::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShoppingGoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int64 belong_store = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->belong_store(), target);
  }

  // required int32 typeid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->typeid_(), target);
  }

  // required int32 category = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->category(), target);
  }

  // required int32 need_item = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->need_item(), target);
  }

  // required int32 price = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->price(), target);
  }

  // required int32 remain = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->remain(), target);
  }

  // required sfixed64 timestamp = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(8, this->timestamp(), target);
  }

  // required sfixed64 duration = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(9, this->duration(), target);
  }

  // optional float discount = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->discount(), target);
  }

  // optional bool first_charge = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->first_charge(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShoppingGoods)
  return target;
}

size_t ShoppingGoods::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.ShoppingGoods)
  size_t total_size = 0;

  if (has_belong_store()) {
    // required int64 belong_store = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->belong_store());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_typeid_()) {
    // required int32 typeid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typeid_());
  }

  if (has_category()) {
    // required int32 category = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->category());
  }

  if (has_need_item()) {
    // required int32 need_item = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->need_item());
  }

  if (has_price()) {
    // required int32 price = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  if (has_remain()) {
    // required int32 remain = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remain());
  }

  if (has_timestamp()) {
    // required sfixed64 timestamp = 8;
    total_size += 1 + 8;
  }

  if (has_duration()) {
    // required sfixed64 duration = 9;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t ShoppingGoods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShoppingGoods)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required int64 belong_store = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->belong_store());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 typeid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typeid_());

    // required int32 category = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->category());

    // required int32 need_item = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->need_item());

    // required int32 price = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());

    // required int32 remain = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remain());

    // required sfixed64 timestamp = 8;
    total_size += 1 + 8;

    // required sfixed64 duration = 9;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[8 / 32] & 1536u) {
    // optional float discount = 10;
    if (has_discount()) {
      total_size += 1 + 4;
    }

    // optional bool first_charge = 11;
    if (has_first_charge()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShoppingGoods::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShoppingGoods)
  GOOGLE_DCHECK_NE(&from, this);
  const ShoppingGoods* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShoppingGoods>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShoppingGoods)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShoppingGoods)
    MergeFrom(*source);
  }
}

void ShoppingGoods::MergeFrom(const ShoppingGoods& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShoppingGoods)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      belong_store_ = from.belong_store_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      typeid__ = from.typeid__;
    }
    if (cached_has_bits & 0x00000008u) {
      category_ = from.category_;
    }
    if (cached_has_bits & 0x00000010u) {
      need_item_ = from.need_item_;
    }
    if (cached_has_bits & 0x00000020u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000040u) {
      remain_ = from.remain_;
    }
    if (cached_has_bits & 0x00000080u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000200u) {
      discount_ = from.discount_;
    }
    if (cached_has_bits & 0x00000400u) {
      first_charge_ = from.first_charge_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShoppingGoods::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShoppingGoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShoppingGoods::CopyFrom(const ShoppingGoods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShoppingGoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShoppingGoods::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void ShoppingGoods::Swap(ShoppingGoods* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShoppingGoods* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShoppingGoods::UnsafeArenaSwap(ShoppingGoods* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShoppingGoods::InternalSwap(ShoppingGoods* other) {
  using std::swap;
  swap(belong_store_, other->belong_store_);
  swap(id_, other->id_);
  swap(typeid__, other->typeid__);
  swap(category_, other->category_);
  swap(need_item_, other->need_item_);
  swap(price_, other->price_);
  swap(remain_, other->remain_);
  swap(timestamp_, other->timestamp_);
  swap(duration_, other->duration_);
  swap(discount_, other->discount_);
  swap(first_charge_, other->first_charge_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShoppingGoods::GetMetadata() const {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameStore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameStore::kIdFieldNumber;
const int GameStore::kTypeFieldNumber;
const int GameStore::kStateFieldNumber;
const int GameStore::kGoodsListFieldNumber;
const int GameStore::kDurationFieldNumber;
const int GameStore::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStore::GameStore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Shop_2eproto::scc_info_GameStore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.GameStore)
}
GameStore::GameStore(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  goods_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_GameStore.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.GameStore)
}
GameStore::GameStore(const GameStore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      goods_list_(from.goods_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&id_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:sg.GameStore)
}

void GameStore::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&id_)) + sizeof(duration_));
}

GameStore::~GameStore() {
  // @@protoc_insertion_point(destructor:sg.GameStore)
  SharedDtor();
}

void GameStore::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameStore::ArenaDtor(void* object) {
  GameStore* _this = reinterpret_cast< GameStore* >(object);
  (void)_this;
}
void GameStore::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameStore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameStore::descriptor() {
  ::protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameStore& GameStore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_GameStore.base);
  return *internal_default_instance();
}


void GameStore::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.GameStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goods_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&id_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameStore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.GameStore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.ShoppingGoods goods_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_goods_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.GameStore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.GameStore)
  return false;
#undef DO_
}

void GameStore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.GameStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required int32 state = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // repeated .sg.ShoppingGoods goods_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->goods_list(static_cast<int>(i)),
      output);
  }

  // optional int32 duration = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->duration(), output);
  }

  // optional sfixed64 timestamp = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(6, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.GameStore)
}

::google::protobuf::uint8* GameStore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.GameStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required int32 state = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // repeated .sg.ShoppingGoods goods_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->goods_list(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 duration = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->duration(), target);
  }

  // optional sfixed64 timestamp = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(6, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.GameStore)
  return target;
}

size_t GameStore::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.GameStore)
  size_t total_size = 0;

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_state()) {
    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  return total_size;
}
size_t GameStore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.GameStore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .sg.ShoppingGoods goods_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->goods_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->goods_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional sfixed64 timestamp = 6;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional int32 duration = 5;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameStore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.GameStore)
  GOOGLE_DCHECK_NE(&from, this);
  const GameStore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.GameStore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.GameStore)
    MergeFrom(*source);
  }
}

void GameStore::MergeFrom(const GameStore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.GameStore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  goods_list_.MergeFrom(from.goods_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameStore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.GameStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStore::CopyFrom(const GameStore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.GameStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameStore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->goods_list())) return false;
  return true;
}

void GameStore::Swap(GameStore* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameStore* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameStore::UnsafeArenaSwap(GameStore* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameStore::InternalSwap(GameStore* other) {
  using std::swap;
  CastToBase(&goods_list_)->InternalSwap(CastToBase(&other->goods_list_));
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  swap(timestamp_, other->timestamp_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameStore::GetMetadata() const {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShoppingService_ShoppingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShoppingService_ShoppingRequest::kCmdFieldNumber;
const int ShoppingService_ShoppingRequest::kBuyIdFieldNumber;
const int ShoppingService_ShoppingRequest::kStoreIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShoppingService_ShoppingRequest::ShoppingService_ShoppingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Shop_2eproto::scc_info_ShoppingService_ShoppingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShoppingService.ShoppingRequest)
}
ShoppingService_ShoppingRequest::ShoppingService_ShoppingRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_ShoppingService_ShoppingRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShoppingService.ShoppingRequest)
}
ShoppingService_ShoppingRequest::ShoppingService_ShoppingRequest(const ShoppingService_ShoppingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&store_id_, &from.store_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&store_id_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.ShoppingService.ShoppingRequest)
}

void ShoppingService_ShoppingRequest::SharedCtor() {
  ::memset(&store_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buy_id_) -
      reinterpret_cast<char*>(&store_id_)) + sizeof(buy_id_));
  cmd_ = 1;
}

ShoppingService_ShoppingRequest::~ShoppingService_ShoppingRequest() {
  // @@protoc_insertion_point(destructor:sg.ShoppingService.ShoppingRequest)
  SharedDtor();
}

void ShoppingService_ShoppingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ShoppingService_ShoppingRequest::ArenaDtor(void* object) {
  ShoppingService_ShoppingRequest* _this = reinterpret_cast< ShoppingService_ShoppingRequest* >(object);
  (void)_this;
}
void ShoppingService_ShoppingRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShoppingService_ShoppingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShoppingService_ShoppingRequest::descriptor() {
  ::protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShoppingService_ShoppingRequest& ShoppingService_ShoppingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_ShoppingService_ShoppingRequest.base);
  return *internal_default_instance();
}


void ShoppingService_ShoppingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShoppingService.ShoppingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&store_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&buy_id_) -
        reinterpret_cast<char*>(&store_id_)) + sizeof(buy_id_));
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShoppingService_ShoppingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShoppingService.ShoppingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.ShoppingService.SHOPPING_COMMAND cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::ShoppingService_SHOPPING_COMMAND_IsValid(value)) {
            set_cmd(static_cast< ::sg::ShoppingService_SHOPPING_COMMAND >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 buy_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_buy_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 store_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_store_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &store_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShoppingService.ShoppingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShoppingService.ShoppingRequest)
  return false;
#undef DO_
}

void ShoppingService_ShoppingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShoppingService.ShoppingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ShoppingService.SHOPPING_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 buy_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy_id(), output);
  }

  // optional int64 store_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->store_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShoppingService.ShoppingRequest)
}

::google::protobuf::uint8* ShoppingService_ShoppingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShoppingService.ShoppingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.ShoppingService.SHOPPING_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 buy_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy_id(), target);
  }

  // optional int64 store_id = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->store_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShoppingService.ShoppingRequest)
  return target;
}

size_t ShoppingService_ShoppingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShoppingService.ShoppingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.ShoppingService.SHOPPING_COMMAND cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 store_id = 3;
    if (has_store_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->store_id());
    }

    // optional int32 buy_id = 2;
    if (has_buy_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShoppingService_ShoppingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShoppingService.ShoppingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShoppingService_ShoppingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShoppingService_ShoppingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShoppingService.ShoppingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShoppingService.ShoppingRequest)
    MergeFrom(*source);
  }
}

void ShoppingService_ShoppingRequest::MergeFrom(const ShoppingService_ShoppingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShoppingService.ShoppingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      store_id_ = from.store_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      buy_id_ = from.buy_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShoppingService_ShoppingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShoppingService.ShoppingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShoppingService_ShoppingRequest::CopyFrom(const ShoppingService_ShoppingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShoppingService.ShoppingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShoppingService_ShoppingRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void ShoppingService_ShoppingRequest::Swap(ShoppingService_ShoppingRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShoppingService_ShoppingRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShoppingService_ShoppingRequest::UnsafeArenaSwap(ShoppingService_ShoppingRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShoppingService_ShoppingRequest::InternalSwap(ShoppingService_ShoppingRequest* other) {
  using std::swap;
  swap(store_id_, other->store_id_);
  swap(buy_id_, other->buy_id_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShoppingService_ShoppingRequest::GetMetadata() const {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShoppingService_ShoppingResponse::InitAsDefaultInstance() {
  ::sg::_ShoppingService_ShoppingResponse_default_instance_._instance.get_mutable()->goods_accept_ = const_cast< ::sg::Reward*>(
      ::sg::Reward::internal_default_instance());
  ::sg::_ShoppingService_ShoppingResponse_default_instance_._instance.get_mutable()->goods_ = const_cast< ::sg::ShoppingGoods*>(
      ::sg::ShoppingGoods::internal_default_instance());
}
void ShoppingService_ShoppingResponse::unsafe_arena_set_allocated_goods_accept(
    ::sg::Reward* goods_accept) {
  if (GetArenaNoVirtual() == NULL) {
    delete goods_accept_;
  }
  goods_accept_ = goods_accept;
  if (goods_accept) {
    set_has_goods_accept();
  } else {
    clear_has_goods_accept();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShoppingService.ShoppingResponse.goods_accept)
}
void ShoppingService_ShoppingResponse::clear_goods_accept() {
  if (goods_accept_ != NULL) goods_accept_->Clear();
  clear_has_goods_accept();
}
void ShoppingService_ShoppingResponse::unsafe_arena_set_allocated_goods(
    ::sg::ShoppingGoods* goods) {
  if (GetArenaNoVirtual() == NULL) {
    delete goods_;
  }
  goods_ = goods;
  if (goods) {
    set_has_goods();
  } else {
    clear_has_goods();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShoppingService.ShoppingResponse.goods)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShoppingService_ShoppingResponse::kResultFieldNumber;
const int ShoppingService_ShoppingResponse::kStoreListFieldNumber;
const int ShoppingService_ShoppingResponse::kGoodsAcceptFieldNumber;
const int ShoppingService_ShoppingResponse::kGoodsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShoppingService_ShoppingResponse::ShoppingService_ShoppingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Shop_2eproto::scc_info_ShoppingService_ShoppingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShoppingService.ShoppingResponse)
}
ShoppingService_ShoppingResponse::ShoppingService_ShoppingResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  store_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_ShoppingService_ShoppingResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShoppingService.ShoppingResponse)
}
ShoppingService_ShoppingResponse::ShoppingService_ShoppingResponse(const ShoppingService_ShoppingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      store_list_(from.store_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_goods_accept()) {
    goods_accept_ = new ::sg::Reward(*from.goods_accept_);
  } else {
    goods_accept_ = NULL;
  }
  if (from.has_goods()) {
    goods_ = new ::sg::ShoppingGoods(*from.goods_);
  } else {
    goods_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.ShoppingService.ShoppingResponse)
}

void ShoppingService_ShoppingResponse::SharedCtor() {
  ::memset(&goods_accept_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&goods_accept_)) + sizeof(result_));
}

ShoppingService_ShoppingResponse::~ShoppingService_ShoppingResponse() {
  // @@protoc_insertion_point(destructor:sg.ShoppingService.ShoppingResponse)
  SharedDtor();
}

void ShoppingService_ShoppingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete goods_accept_;
  if (this != internal_default_instance()) delete goods_;
}

void ShoppingService_ShoppingResponse::ArenaDtor(void* object) {
  ShoppingService_ShoppingResponse* _this = reinterpret_cast< ShoppingService_ShoppingResponse* >(object);
  (void)_this;
}
void ShoppingService_ShoppingResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShoppingService_ShoppingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShoppingService_ShoppingResponse::descriptor() {
  ::protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShoppingService_ShoppingResponse& ShoppingService_ShoppingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_ShoppingService_ShoppingResponse.base);
  return *internal_default_instance();
}


void ShoppingService_ShoppingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShoppingService.ShoppingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  store_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(goods_accept_ != NULL);
      goods_accept_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(goods_ != NULL);
      goods_->Clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShoppingService_ShoppingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShoppingService.ShoppingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.GameStore store_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_store_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Reward goods_accept = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_goods_accept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.ShoppingGoods goods = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_goods()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShoppingService.ShoppingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShoppingService.ShoppingResponse)
  return false;
#undef DO_
}

void ShoppingService_ShoppingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShoppingService.ShoppingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .sg.GameStore store_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->store_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->store_list(static_cast<int>(i)),
      output);
  }

  // optional .sg.Reward goods_accept = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_goods_accept(), output);
  }

  // optional .sg.ShoppingGoods goods = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_goods(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShoppingService.ShoppingResponse)
}

::google::protobuf::uint8* ShoppingService_ShoppingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShoppingService.ShoppingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .sg.GameStore store_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->store_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->store_list(static_cast<int>(i)), deterministic, target);
  }

  // optional .sg.Reward goods_accept = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_goods_accept(), deterministic, target);
  }

  // optional .sg.ShoppingGoods goods = 12;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_goods(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShoppingService.ShoppingResponse)
  return target;
}

size_t ShoppingService_ShoppingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShoppingService.ShoppingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.GameStore store_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->store_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->store_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.Reward goods_accept = 11;
    if (has_goods_accept()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *goods_accept_);
    }

    // optional .sg.ShoppingGoods goods = 12;
    if (has_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *goods_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShoppingService_ShoppingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShoppingService.ShoppingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShoppingService_ShoppingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShoppingService_ShoppingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShoppingService.ShoppingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShoppingService.ShoppingResponse)
    MergeFrom(*source);
  }
}

void ShoppingService_ShoppingResponse::MergeFrom(const ShoppingService_ShoppingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShoppingService.ShoppingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  store_list_.MergeFrom(from.store_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_goods_accept()->::sg::Reward::MergeFrom(from.goods_accept());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_goods()->::sg::ShoppingGoods::MergeFrom(from.goods());
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShoppingService_ShoppingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShoppingService.ShoppingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShoppingService_ShoppingResponse::CopyFrom(const ShoppingService_ShoppingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShoppingService.ShoppingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShoppingService_ShoppingResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->store_list())) return false;
  if (has_goods_accept()) {
    if (!this->goods_accept_->IsInitialized()) return false;
  }
  if (has_goods()) {
    if (!this->goods_->IsInitialized()) return false;
  }
  return true;
}

void ShoppingService_ShoppingResponse::Swap(ShoppingService_ShoppingResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShoppingService_ShoppingResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShoppingService_ShoppingResponse::UnsafeArenaSwap(ShoppingService_ShoppingResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShoppingService_ShoppingResponse::InternalSwap(ShoppingService_ShoppingResponse* other) {
  using std::swap;
  CastToBase(&store_list_)->InternalSwap(CastToBase(&other->store_list_));
  swap(goods_accept_, other->goods_accept_);
  swap(goods_, other->goods_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShoppingService_ShoppingResponse::GetMetadata() const {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShoppingService::InitAsDefaultInstance() {
  ::sg::_ShoppingService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::ShoppingService_ShoppingRequest*>(
      ::sg::ShoppingService_ShoppingRequest::internal_default_instance());
  ::sg::_ShoppingService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::ShoppingService_ShoppingResponse*>(
      ::sg::ShoppingService_ShoppingResponse::internal_default_instance());
}
void ShoppingService::unsafe_arena_set_allocated_req(
    ::sg::ShoppingService_ShoppingRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShoppingService.req)
}
void ShoppingService::unsafe_arena_set_allocated_resp(
    ::sg::ShoppingService_ShoppingResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.ShoppingService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShoppingService::kReqFieldNumber;
const int ShoppingService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShoppingService::ShoppingService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Shop_2eproto::scc_info_ShoppingService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.ShoppingService)
}
ShoppingService::ShoppingService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_ShoppingService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.ShoppingService)
}
ShoppingService::ShoppingService(const ShoppingService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::ShoppingService_ShoppingRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::ShoppingService_ShoppingResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.ShoppingService)
}

void ShoppingService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

ShoppingService::~ShoppingService() {
  // @@protoc_insertion_point(destructor:sg.ShoppingService)
  SharedDtor();
}

void ShoppingService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void ShoppingService::ArenaDtor(void* object) {
  ShoppingService* _this = reinterpret_cast< ShoppingService* >(object);
  (void)_this;
}
void ShoppingService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ShoppingService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShoppingService::descriptor() {
  ::protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShoppingService& ShoppingService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Shop_2eproto::scc_info_ShoppingService.base);
  return *internal_default_instance();
}


void ShoppingService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.ShoppingService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShoppingService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.ShoppingService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.ShoppingService.ShoppingRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.ShoppingService.ShoppingResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.ShoppingService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.ShoppingService)
  return false;
#undef DO_
}

void ShoppingService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.ShoppingService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.ShoppingService.ShoppingRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.ShoppingService.ShoppingResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.ShoppingService)
}

::google::protobuf::uint8* ShoppingService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.ShoppingService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.ShoppingService.ShoppingRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.ShoppingService.ShoppingResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.ShoppingService)
  return target;
}

size_t ShoppingService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.ShoppingService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.ShoppingService.ShoppingRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.ShoppingService.ShoppingResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShoppingService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.ShoppingService)
  GOOGLE_DCHECK_NE(&from, this);
  const ShoppingService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShoppingService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.ShoppingService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.ShoppingService)
    MergeFrom(*source);
  }
}

void ShoppingService::MergeFrom(const ShoppingService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.ShoppingService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::ShoppingService_ShoppingRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::ShoppingService_ShoppingResponse::MergeFrom(from.resp());
    }
  }
}

void ShoppingService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.ShoppingService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShoppingService::CopyFrom(const ShoppingService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.ShoppingService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShoppingService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void ShoppingService::Swap(ShoppingService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ShoppingService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ShoppingService::UnsafeArenaSwap(ShoppingService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ShoppingService::InternalSwap(ShoppingService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShoppingService::GetMetadata() const {
  protobuf_Shop_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Shop_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShoppingGoods* Arena::CreateMaybeMessage< ::sg::ShoppingGoods >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShoppingGoods >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::GameStore* Arena::CreateMaybeMessage< ::sg::GameStore >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::GameStore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShoppingService_ShoppingRequest* Arena::CreateMaybeMessage< ::sg::ShoppingService_ShoppingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShoppingService_ShoppingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShoppingService_ShoppingResponse* Arena::CreateMaybeMessage< ::sg::ShoppingService_ShoppingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShoppingService_ShoppingResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::ShoppingService* Arena::CreateMaybeMessage< ::sg::ShoppingService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::ShoppingService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
