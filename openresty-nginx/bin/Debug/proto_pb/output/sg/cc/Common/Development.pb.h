// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Development.proto

#ifndef PROTOBUF_INCLUDED_Development_2eproto
#define PROTOBUF_INCLUDED_Development_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "BaseStruct.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Development_2eproto 

namespace protobuf_Development_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Development_2eproto
namespace sg {
class UserDevelopmentService;
class UserDevelopmentServiceDefaultTypeInternal;
extern UserDevelopmentServiceDefaultTypeInternal _UserDevelopmentService_default_instance_;
class UserDevelopmentService_UserDevelopmentRequest;
class UserDevelopmentService_UserDevelopmentRequestDefaultTypeInternal;
extern UserDevelopmentService_UserDevelopmentRequestDefaultTypeInternal _UserDevelopmentService_UserDevelopmentRequest_default_instance_;
class UserDevelopmentService_UserDevelopmentResponse;
class UserDevelopmentService_UserDevelopmentResponseDefaultTypeInternal;
extern UserDevelopmentService_UserDevelopmentResponseDefaultTypeInternal _UserDevelopmentService_UserDevelopmentResponse_default_instance_;
}  // namespace sg
namespace google {
namespace protobuf {
template<> ::sg::UserDevelopmentService* Arena::CreateMaybeMessage<::sg::UserDevelopmentService>(Arena*);
template<> ::sg::UserDevelopmentService_UserDevelopmentRequest* Arena::CreateMaybeMessage<::sg::UserDevelopmentService_UserDevelopmentRequest>(Arena*);
template<> ::sg::UserDevelopmentService_UserDevelopmentResponse* Arena::CreateMaybeMessage<::sg::UserDevelopmentService_UserDevelopmentResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sg {

enum UserDevelopmentService_CMD {
  UserDevelopmentService_CMD_QUERY = 1,
  UserDevelopmentService_CMD_DEVELOP = 2
};
bool UserDevelopmentService_CMD_IsValid(int value);
const UserDevelopmentService_CMD UserDevelopmentService_CMD_CMD_MIN = UserDevelopmentService_CMD_QUERY;
const UserDevelopmentService_CMD UserDevelopmentService_CMD_CMD_MAX = UserDevelopmentService_CMD_DEVELOP;
const int UserDevelopmentService_CMD_CMD_ARRAYSIZE = UserDevelopmentService_CMD_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserDevelopmentService_CMD_descriptor();
inline const ::std::string& UserDevelopmentService_CMD_Name(UserDevelopmentService_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserDevelopmentService_CMD_descriptor(), value);
}
inline bool UserDevelopmentService_CMD_Parse(
    const ::std::string& name, UserDevelopmentService_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserDevelopmentService_CMD>(
    UserDevelopmentService_CMD_descriptor(), name, value);
}
// ===================================================================

class UserDevelopmentService_UserDevelopmentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserDevelopmentService.UserDevelopmentRequest) */ {
 public:
  UserDevelopmentService_UserDevelopmentRequest();
  virtual ~UserDevelopmentService_UserDevelopmentRequest();

  UserDevelopmentService_UserDevelopmentRequest(const UserDevelopmentService_UserDevelopmentRequest& from);

  inline UserDevelopmentService_UserDevelopmentRequest& operator=(const UserDevelopmentService_UserDevelopmentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserDevelopmentService_UserDevelopmentRequest(UserDevelopmentService_UserDevelopmentRequest&& from) noexcept
    : UserDevelopmentService_UserDevelopmentRequest() {
    *this = ::std::move(from);
  }

  inline UserDevelopmentService_UserDevelopmentRequest& operator=(UserDevelopmentService_UserDevelopmentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDevelopmentService_UserDevelopmentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserDevelopmentService_UserDevelopmentRequest* internal_default_instance() {
    return reinterpret_cast<const UserDevelopmentService_UserDevelopmentRequest*>(
               &_UserDevelopmentService_UserDevelopmentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(UserDevelopmentService_UserDevelopmentRequest* other);
  void Swap(UserDevelopmentService_UserDevelopmentRequest* other);
  friend void swap(UserDevelopmentService_UserDevelopmentRequest& a, UserDevelopmentService_UserDevelopmentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserDevelopmentService_UserDevelopmentRequest* New() const final {
    return CreateMaybeMessage<UserDevelopmentService_UserDevelopmentRequest>(NULL);
  }

  UserDevelopmentService_UserDevelopmentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserDevelopmentService_UserDevelopmentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserDevelopmentService_UserDevelopmentRequest& from);
  void MergeFrom(const UserDevelopmentService_UserDevelopmentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserDevelopmentService_UserDevelopmentRequest* other);
  protected:
  explicit UserDevelopmentService_UserDevelopmentRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.Item materials = 3;
  int materials_size() const;
  void clear_materials();
  static const int kMaterialsFieldNumber = 3;
  ::sg::Item* mutable_materials(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Item >*
      mutable_materials();
  const ::sg::Item& materials(int index) const;
  ::sg::Item* add_materials();
  const ::google::protobuf::RepeatedPtrField< ::sg::Item >&
      materials() const;

  // optional int32 develop_type = 2;
  bool has_develop_type() const;
  void clear_develop_type();
  static const int kDevelopTypeFieldNumber = 2;
  ::google::protobuf::int32 develop_type() const;
  void set_develop_type(::google::protobuf::int32 value);

  // required .sg.UserDevelopmentService.CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserDevelopmentService_CMD cmd() const;
  void set_cmd(::sg::UserDevelopmentService_CMD value);

  // @@protoc_insertion_point(class_scope:sg.UserDevelopmentService.UserDevelopmentRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_develop_type();
  void clear_has_develop_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::Item > materials_;
  ::google::protobuf::int32 develop_type_;
  int cmd_;
  friend struct ::protobuf_Development_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserDevelopmentService_UserDevelopmentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserDevelopmentService.UserDevelopmentResponse) */ {
 public:
  UserDevelopmentService_UserDevelopmentResponse();
  virtual ~UserDevelopmentService_UserDevelopmentResponse();

  UserDevelopmentService_UserDevelopmentResponse(const UserDevelopmentService_UserDevelopmentResponse& from);

  inline UserDevelopmentService_UserDevelopmentResponse& operator=(const UserDevelopmentService_UserDevelopmentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserDevelopmentService_UserDevelopmentResponse(UserDevelopmentService_UserDevelopmentResponse&& from) noexcept
    : UserDevelopmentService_UserDevelopmentResponse() {
    *this = ::std::move(from);
  }

  inline UserDevelopmentService_UserDevelopmentResponse& operator=(UserDevelopmentService_UserDevelopmentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDevelopmentService_UserDevelopmentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserDevelopmentService_UserDevelopmentResponse* internal_default_instance() {
    return reinterpret_cast<const UserDevelopmentService_UserDevelopmentResponse*>(
               &_UserDevelopmentService_UserDevelopmentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(UserDevelopmentService_UserDevelopmentResponse* other);
  void Swap(UserDevelopmentService_UserDevelopmentResponse* other);
  friend void swap(UserDevelopmentService_UserDevelopmentResponse& a, UserDevelopmentService_UserDevelopmentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserDevelopmentService_UserDevelopmentResponse* New() const final {
    return CreateMaybeMessage<UserDevelopmentService_UserDevelopmentResponse>(NULL);
  }

  UserDevelopmentService_UserDevelopmentResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserDevelopmentService_UserDevelopmentResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserDevelopmentService_UserDevelopmentResponse& from);
  void MergeFrom(const UserDevelopmentService_UserDevelopmentResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserDevelopmentService_UserDevelopmentResponse* other);
  protected:
  explicit UserDevelopmentService_UserDevelopmentResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 formula_list = 2;
  int formula_list_size() const;
  void clear_formula_list();
  static const int kFormulaListFieldNumber = 2;
  ::google::protobuf::int32 formula_list(int index) const;
  void set_formula_list(int index, ::google::protobuf::int32 value);
  void add_formula_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      formula_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_formula_list();

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 unlock_formula = 3;
  bool has_unlock_formula() const;
  void clear_unlock_formula();
  static const int kUnlockFormulaFieldNumber = 3;
  ::google::protobuf::int32 unlock_formula() const;
  void set_unlock_formula(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserDevelopmentService.UserDevelopmentResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_unlock_formula();
  void clear_has_unlock_formula();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > formula_list_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 unlock_formula_;
  friend struct ::protobuf_Development_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserDevelopmentService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserDevelopmentService) */ {
 public:
  UserDevelopmentService();
  virtual ~UserDevelopmentService();

  UserDevelopmentService(const UserDevelopmentService& from);

  inline UserDevelopmentService& operator=(const UserDevelopmentService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserDevelopmentService(UserDevelopmentService&& from) noexcept
    : UserDevelopmentService() {
    *this = ::std::move(from);
  }

  inline UserDevelopmentService& operator=(UserDevelopmentService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDevelopmentService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserDevelopmentService* internal_default_instance() {
    return reinterpret_cast<const UserDevelopmentService*>(
               &_UserDevelopmentService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(UserDevelopmentService* other);
  void Swap(UserDevelopmentService* other);
  friend void swap(UserDevelopmentService& a, UserDevelopmentService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserDevelopmentService* New() const final {
    return CreateMaybeMessage<UserDevelopmentService>(NULL);
  }

  UserDevelopmentService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserDevelopmentService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserDevelopmentService& from);
  void MergeFrom(const UserDevelopmentService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserDevelopmentService* other);
  protected:
  explicit UserDevelopmentService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserDevelopmentService_UserDevelopmentRequest UserDevelopmentRequest;
  typedef UserDevelopmentService_UserDevelopmentResponse UserDevelopmentResponse;

  typedef UserDevelopmentService_CMD CMD;
  static const CMD QUERY =
    UserDevelopmentService_CMD_QUERY;
  static const CMD DEVELOP =
    UserDevelopmentService_CMD_DEVELOP;
  static inline bool CMD_IsValid(int value) {
    return UserDevelopmentService_CMD_IsValid(value);
  }
  static const CMD CMD_MIN =
    UserDevelopmentService_CMD_CMD_MIN;
  static const CMD CMD_MAX =
    UserDevelopmentService_CMD_CMD_MAX;
  static const int CMD_ARRAYSIZE =
    UserDevelopmentService_CMD_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CMD_descriptor() {
    return UserDevelopmentService_CMD_descriptor();
  }
  static inline const ::std::string& CMD_Name(CMD value) {
    return UserDevelopmentService_CMD_Name(value);
  }
  static inline bool CMD_Parse(const ::std::string& name,
      CMD* value) {
    return UserDevelopmentService_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserDevelopmentService.UserDevelopmentRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserDevelopmentService_UserDevelopmentRequest& _internal_req() const;
  public:
  const ::sg::UserDevelopmentService_UserDevelopmentRequest& req() const;
  ::sg::UserDevelopmentService_UserDevelopmentRequest* release_req();
  ::sg::UserDevelopmentService_UserDevelopmentRequest* mutable_req();
  void set_allocated_req(::sg::UserDevelopmentService_UserDevelopmentRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserDevelopmentService_UserDevelopmentRequest* req);
  ::sg::UserDevelopmentService_UserDevelopmentRequest* unsafe_arena_release_req();

  // optional .sg.UserDevelopmentService.UserDevelopmentResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserDevelopmentService_UserDevelopmentResponse& _internal_resp() const;
  public:
  const ::sg::UserDevelopmentService_UserDevelopmentResponse& resp() const;
  ::sg::UserDevelopmentService_UserDevelopmentResponse* release_resp();
  ::sg::UserDevelopmentService_UserDevelopmentResponse* mutable_resp();
  void set_allocated_resp(::sg::UserDevelopmentService_UserDevelopmentResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserDevelopmentService_UserDevelopmentResponse* resp);
  ::sg::UserDevelopmentService_UserDevelopmentResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserDevelopmentService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserDevelopmentService_UserDevelopmentRequest* req_;
  ::sg::UserDevelopmentService_UserDevelopmentResponse* resp_;
  friend struct ::protobuf_Development_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserDevelopmentService_UserDevelopmentRequest

// required .sg.UserDevelopmentService.CMD cmd = 1;
inline bool UserDevelopmentService_UserDevelopmentRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserDevelopmentService_UserDevelopmentRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserDevelopmentService_UserDevelopmentRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserDevelopmentService_UserDevelopmentRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserDevelopmentService_CMD UserDevelopmentService_UserDevelopmentRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserDevelopmentService.UserDevelopmentRequest.cmd)
  return static_cast< ::sg::UserDevelopmentService_CMD >(cmd_);
}
inline void UserDevelopmentService_UserDevelopmentRequest::set_cmd(::sg::UserDevelopmentService_CMD value) {
  assert(::sg::UserDevelopmentService_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserDevelopmentService.UserDevelopmentRequest.cmd)
}

// optional int32 develop_type = 2;
inline bool UserDevelopmentService_UserDevelopmentRequest::has_develop_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserDevelopmentService_UserDevelopmentRequest::set_has_develop_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserDevelopmentService_UserDevelopmentRequest::clear_has_develop_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserDevelopmentService_UserDevelopmentRequest::clear_develop_type() {
  develop_type_ = 0;
  clear_has_develop_type();
}
inline ::google::protobuf::int32 UserDevelopmentService_UserDevelopmentRequest::develop_type() const {
  // @@protoc_insertion_point(field_get:sg.UserDevelopmentService.UserDevelopmentRequest.develop_type)
  return develop_type_;
}
inline void UserDevelopmentService_UserDevelopmentRequest::set_develop_type(::google::protobuf::int32 value) {
  set_has_develop_type();
  develop_type_ = value;
  // @@protoc_insertion_point(field_set:sg.UserDevelopmentService.UserDevelopmentRequest.develop_type)
}

// repeated .sg.Item materials = 3;
inline int UserDevelopmentService_UserDevelopmentRequest::materials_size() const {
  return materials_.size();
}
inline ::sg::Item* UserDevelopmentService_UserDevelopmentRequest::mutable_materials(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserDevelopmentService.UserDevelopmentRequest.materials)
  return materials_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Item >*
UserDevelopmentService_UserDevelopmentRequest::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserDevelopmentService.UserDevelopmentRequest.materials)
  return &materials_;
}
inline const ::sg::Item& UserDevelopmentService_UserDevelopmentRequest::materials(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserDevelopmentService.UserDevelopmentRequest.materials)
  return materials_.Get(index);
}
inline ::sg::Item* UserDevelopmentService_UserDevelopmentRequest::add_materials() {
  // @@protoc_insertion_point(field_add:sg.UserDevelopmentService.UserDevelopmentRequest.materials)
  return materials_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Item >&
UserDevelopmentService_UserDevelopmentRequest::materials() const {
  // @@protoc_insertion_point(field_list:sg.UserDevelopmentService.UserDevelopmentRequest.materials)
  return materials_;
}

// -------------------------------------------------------------------

// UserDevelopmentService_UserDevelopmentResponse

// required int32 result = 1;
inline bool UserDevelopmentService_UserDevelopmentResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserDevelopmentService_UserDevelopmentResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserDevelopmentService_UserDevelopmentResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserDevelopmentService_UserDevelopmentResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserDevelopmentService_UserDevelopmentResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserDevelopmentService.UserDevelopmentResponse.result)
  return result_;
}
inline void UserDevelopmentService_UserDevelopmentResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserDevelopmentService.UserDevelopmentResponse.result)
}

// repeated int32 formula_list = 2;
inline int UserDevelopmentService_UserDevelopmentResponse::formula_list_size() const {
  return formula_list_.size();
}
inline void UserDevelopmentService_UserDevelopmentResponse::clear_formula_list() {
  formula_list_.Clear();
}
inline ::google::protobuf::int32 UserDevelopmentService_UserDevelopmentResponse::formula_list(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserDevelopmentService.UserDevelopmentResponse.formula_list)
  return formula_list_.Get(index);
}
inline void UserDevelopmentService_UserDevelopmentResponse::set_formula_list(int index, ::google::protobuf::int32 value) {
  formula_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:sg.UserDevelopmentService.UserDevelopmentResponse.formula_list)
}
inline void UserDevelopmentService_UserDevelopmentResponse::add_formula_list(::google::protobuf::int32 value) {
  formula_list_.Add(value);
  // @@protoc_insertion_point(field_add:sg.UserDevelopmentService.UserDevelopmentResponse.formula_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserDevelopmentService_UserDevelopmentResponse::formula_list() const {
  // @@protoc_insertion_point(field_list:sg.UserDevelopmentService.UserDevelopmentResponse.formula_list)
  return formula_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserDevelopmentService_UserDevelopmentResponse::mutable_formula_list() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserDevelopmentService.UserDevelopmentResponse.formula_list)
  return &formula_list_;
}

// optional int32 unlock_formula = 3;
inline bool UserDevelopmentService_UserDevelopmentResponse::has_unlock_formula() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserDevelopmentService_UserDevelopmentResponse::set_has_unlock_formula() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserDevelopmentService_UserDevelopmentResponse::clear_has_unlock_formula() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserDevelopmentService_UserDevelopmentResponse::clear_unlock_formula() {
  unlock_formula_ = 0;
  clear_has_unlock_formula();
}
inline ::google::protobuf::int32 UserDevelopmentService_UserDevelopmentResponse::unlock_formula() const {
  // @@protoc_insertion_point(field_get:sg.UserDevelopmentService.UserDevelopmentResponse.unlock_formula)
  return unlock_formula_;
}
inline void UserDevelopmentService_UserDevelopmentResponse::set_unlock_formula(::google::protobuf::int32 value) {
  set_has_unlock_formula();
  unlock_formula_ = value;
  // @@protoc_insertion_point(field_set:sg.UserDevelopmentService.UserDevelopmentResponse.unlock_formula)
}

// -------------------------------------------------------------------

// UserDevelopmentService

// optional .sg.UserDevelopmentService.UserDevelopmentRequest req = 1;
inline bool UserDevelopmentService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserDevelopmentService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserDevelopmentService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserDevelopmentService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserDevelopmentService_UserDevelopmentRequest& UserDevelopmentService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserDevelopmentService_UserDevelopmentRequest& UserDevelopmentService::req() const {
  const ::sg::UserDevelopmentService_UserDevelopmentRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserDevelopmentService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserDevelopmentService_UserDevelopmentRequest*>(
      &::sg::_UserDevelopmentService_UserDevelopmentRequest_default_instance_);
}
inline ::sg::UserDevelopmentService_UserDevelopmentRequest* UserDevelopmentService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserDevelopmentService.req)
  clear_has_req();
  ::sg::UserDevelopmentService_UserDevelopmentRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserDevelopmentService_UserDevelopmentRequest* UserDevelopmentService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserDevelopmentService.req)
  clear_has_req();
  ::sg::UserDevelopmentService_UserDevelopmentRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserDevelopmentService_UserDevelopmentRequest* UserDevelopmentService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserDevelopmentService_UserDevelopmentRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserDevelopmentService.req)
  return req_;
}
inline void UserDevelopmentService::set_allocated_req(::sg::UserDevelopmentService_UserDevelopmentRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserDevelopmentService.req)
}

// optional .sg.UserDevelopmentService.UserDevelopmentResponse resp = 2;
inline bool UserDevelopmentService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserDevelopmentService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserDevelopmentService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserDevelopmentService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserDevelopmentService_UserDevelopmentResponse& UserDevelopmentService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserDevelopmentService_UserDevelopmentResponse& UserDevelopmentService::resp() const {
  const ::sg::UserDevelopmentService_UserDevelopmentResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserDevelopmentService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserDevelopmentService_UserDevelopmentResponse*>(
      &::sg::_UserDevelopmentService_UserDevelopmentResponse_default_instance_);
}
inline ::sg::UserDevelopmentService_UserDevelopmentResponse* UserDevelopmentService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserDevelopmentService.resp)
  clear_has_resp();
  ::sg::UserDevelopmentService_UserDevelopmentResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserDevelopmentService_UserDevelopmentResponse* UserDevelopmentService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserDevelopmentService.resp)
  clear_has_resp();
  ::sg::UserDevelopmentService_UserDevelopmentResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserDevelopmentService_UserDevelopmentResponse* UserDevelopmentService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserDevelopmentService_UserDevelopmentResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserDevelopmentService.resp)
  return resp_;
}
inline void UserDevelopmentService::set_allocated_resp(::sg::UserDevelopmentService_UserDevelopmentResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserDevelopmentService.resp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sg::UserDevelopmentService_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserDevelopmentService_CMD>() {
  return ::sg::UserDevelopmentService_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Development_2eproto
