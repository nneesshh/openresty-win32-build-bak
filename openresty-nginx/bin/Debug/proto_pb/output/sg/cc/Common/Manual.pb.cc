// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Manual.proto

#include "Manual.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Manual_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Manual_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Manual;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Manual_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserManualService_UserManualRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Manual_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserManualService_UserManualResponse;
}  // namespace protobuf_Manual_2eproto
namespace sg {
class ManualDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Manual>
      _instance;
} _Manual_default_instance_;
class UserManualService_UserManualRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserManualService_UserManualRequest>
      _instance;
} _UserManualService_UserManualRequest_default_instance_;
class UserManualService_UserManualResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserManualService_UserManualResponse>
      _instance;
} _UserManualService_UserManualResponse_default_instance_;
class UserManualServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserManualService>
      _instance;
} _UserManualService_default_instance_;
}  // namespace sg
namespace protobuf_Manual_2eproto {
static void InitDefaultsManual() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_Manual_default_instance_;
    new (ptr) ::sg::Manual();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::Manual::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Manual =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManual}, {}};

static void InitDefaultsUserManualService_UserManualRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserManualService_UserManualRequest_default_instance_;
    new (ptr) ::sg::UserManualService_UserManualRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserManualService_UserManualRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserManualService_UserManualRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserManualService_UserManualRequest}, {}};

static void InitDefaultsUserManualService_UserManualResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserManualService_UserManualResponse_default_instance_;
    new (ptr) ::sg::UserManualService_UserManualResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserManualService_UserManualResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserManualService_UserManualResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserManualService_UserManualResponse}, {
      &protobuf_Manual_2eproto::scc_info_Manual.base,}};

static void InitDefaultsUserManualService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserManualService_default_instance_;
    new (ptr) ::sg::UserManualService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserManualService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserManualService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserManualService}, {
      &protobuf_Manual_2eproto::scc_info_UserManualService_UserManualRequest.base,
      &protobuf_Manual_2eproto::scc_info_UserManualService_UserManualResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Manual.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserManualService_UserManualRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserManualService_UserManualResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserManualService.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Manual, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Manual, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Manual, typeid__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Manual, optime_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualRequest, add_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualRequest, add_typeid_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualResponse, manual_customer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualResponse, manual_facility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService_UserManualResponse, manual_equip_),
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserManualService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::sg::Manual)},
  { 9, 17, sizeof(::sg::UserManualService_UserManualRequest)},
  { 20, 29, sizeof(::sg::UserManualService_UserManualResponse)},
  { 33, 40, sizeof(::sg::UserManualService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_Manual_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserManualService_UserManualRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserManualService_UserManualResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserManualService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Manual.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Manual.proto\022\002sg\"(\n\006Manual\022\016\n\006typeid\030\002"
      " \002(\005\022\016\n\006optime\030\003 \002(\020\"\240\003\n\021UserManualServi"
      "ce\0224\n\003req\030\001 \001(\0132\'.sg.UserManualService.U"
      "serManualRequest\0226\n\004resp\030\002 \001(\0132(.sg.User"
      "ManualService.UserManualResponse\032h\n\021User"
      "ManualRequest\022-\n\003cmd\030\001 \002(\0162 .sg.UserManu"
      "alService.MANUAL_CMD\022\020\n\010add_type\030\002 \001(\005\022\022"
      "\n\nadd_typeid\030\003 \001(\005\032\220\001\n\022UserManualRespons"
      "e\022\016\n\006result\030\001 \002(\005\022#\n\017manual_customer\030\002 \003"
      "(\0132\n.sg.Manual\022#\n\017manual_facility\030\003 \003(\0132"
      "\n.sg.Manual\022 \n\014manual_equip\030\004 \003(\0132\n.sg.M"
      "anual\" \n\nMANUAL_CMD\022\t\n\005QUERY\020\001\022\007\n\003ADD\020\002B"
      "\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 484);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Manual.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Manual_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserManualService_MANUAL_CMD_descriptor() {
  protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Manual_2eproto::file_level_enum_descriptors[0];
}
bool UserManualService_MANUAL_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserManualService_MANUAL_CMD UserManualService::QUERY;
const UserManualService_MANUAL_CMD UserManualService::ADD;
const UserManualService_MANUAL_CMD UserManualService::MANUAL_CMD_MIN;
const UserManualService_MANUAL_CMD UserManualService::MANUAL_CMD_MAX;
const int UserManualService::MANUAL_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Manual::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Manual::kTypeidFieldNumber;
const int Manual::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Manual::Manual()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Manual_2eproto::scc_info_Manual.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.Manual)
}
Manual::Manual(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Manual_2eproto::scc_info_Manual.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.Manual)
}
Manual::Manual(const Manual& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&optime_, &from.optime_,
    static_cast<size_t>(reinterpret_cast<char*>(&typeid__) -
    reinterpret_cast<char*>(&optime_)) + sizeof(typeid__));
  // @@protoc_insertion_point(copy_constructor:sg.Manual)
}

void Manual::SharedCtor() {
  ::memset(&optime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typeid__) -
      reinterpret_cast<char*>(&optime_)) + sizeof(typeid__));
}

Manual::~Manual() {
  // @@protoc_insertion_point(destructor:sg.Manual)
  SharedDtor();
}

void Manual::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Manual::ArenaDtor(void* object) {
  Manual* _this = reinterpret_cast< Manual* >(object);
  (void)_this;
}
void Manual::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Manual::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Manual::descriptor() {
  ::protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Manual_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Manual& Manual::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Manual_2eproto::scc_info_Manual.base);
  return *internal_default_instance();
}


void Manual::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.Manual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&optime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&typeid__) -
        reinterpret_cast<char*>(&optime_)) + sizeof(typeid__));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Manual::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.Manual)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 typeid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_typeid_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typeid__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 optime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.Manual)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.Manual)
  return false;
#undef DO_
}

void Manual::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.Manual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 typeid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->typeid_(), output);
  }

  // required sfixed64 optime = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.Manual)
}

::google::protobuf::uint8* Manual::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.Manual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 typeid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->typeid_(), target);
  }

  // required sfixed64 optime = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(3, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.Manual)
  return target;
}

size_t Manual::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.Manual)
  size_t total_size = 0;

  if (has_optime()) {
    // required sfixed64 optime = 3;
    total_size += 1 + 8;
  }

  if (has_typeid_()) {
    // required int32 typeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typeid_());
  }

  return total_size;
}
size_t Manual::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.Manual)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required sfixed64 optime = 3;
    total_size += 1 + 8;

    // required int32 typeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typeid_());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Manual::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.Manual)
  GOOGLE_DCHECK_NE(&from, this);
  const Manual* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Manual>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.Manual)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.Manual)
    MergeFrom(*source);
  }
}

void Manual::MergeFrom(const Manual& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.Manual)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      optime_ = from.optime_;
    }
    if (cached_has_bits & 0x00000002u) {
      typeid__ = from.typeid__;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Manual::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.Manual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Manual::CopyFrom(const Manual& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.Manual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Manual::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Manual::Swap(Manual* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Manual* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Manual::UnsafeArenaSwap(Manual* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Manual::InternalSwap(Manual* other) {
  using std::swap;
  swap(optime_, other->optime_);
  swap(typeid__, other->typeid__);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Manual::GetMetadata() const {
  protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Manual_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserManualService_UserManualRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserManualService_UserManualRequest::kCmdFieldNumber;
const int UserManualService_UserManualRequest::kAddTypeFieldNumber;
const int UserManualService_UserManualRequest::kAddTypeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserManualService_UserManualRequest::UserManualService_UserManualRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Manual_2eproto::scc_info_UserManualService_UserManualRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserManualService.UserManualRequest)
}
UserManualService_UserManualRequest::UserManualService_UserManualRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Manual_2eproto::scc_info_UserManualService_UserManualRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserManualService.UserManualRequest)
}
UserManualService_UserManualRequest::UserManualService_UserManualRequest(const UserManualService_UserManualRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&add_type_, &from.add_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&add_type_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.UserManualService.UserManualRequest)
}

void UserManualService_UserManualRequest::SharedCtor() {
  ::memset(&add_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_typeid_) -
      reinterpret_cast<char*>(&add_type_)) + sizeof(add_typeid_));
  cmd_ = 1;
}

UserManualService_UserManualRequest::~UserManualService_UserManualRequest() {
  // @@protoc_insertion_point(destructor:sg.UserManualService.UserManualRequest)
  SharedDtor();
}

void UserManualService_UserManualRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserManualService_UserManualRequest::ArenaDtor(void* object) {
  UserManualService_UserManualRequest* _this = reinterpret_cast< UserManualService_UserManualRequest* >(object);
  (void)_this;
}
void UserManualService_UserManualRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserManualService_UserManualRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserManualService_UserManualRequest::descriptor() {
  ::protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Manual_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserManualService_UserManualRequest& UserManualService_UserManualRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Manual_2eproto::scc_info_UserManualService_UserManualRequest.base);
  return *internal_default_instance();
}


void UserManualService_UserManualRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserManualService.UserManualRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&add_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&add_typeid_) -
        reinterpret_cast<char*>(&add_type_)) + sizeof(add_typeid_));
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserManualService_UserManualRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserManualService.UserManualRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserManualService.MANUAL_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserManualService_MANUAL_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserManualService_MANUAL_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 add_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_add_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 add_typeid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_add_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserManualService.UserManualRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserManualService.UserManualRequest)
  return false;
#undef DO_
}

void UserManualService_UserManualRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserManualService.UserManualRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserManualService.MANUAL_CMD cmd = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 add_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_type(), output);
  }

  // optional int32 add_typeid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->add_typeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserManualService.UserManualRequest)
}

::google::protobuf::uint8* UserManualService_UserManualRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserManualService.UserManualRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserManualService.MANUAL_CMD cmd = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 add_type = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_type(), target);
  }

  // optional int32 add_typeid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->add_typeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserManualService.UserManualRequest)
  return target;
}

size_t UserManualService_UserManualRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserManualService.UserManualRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserManualService.MANUAL_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 add_type = 2;
    if (has_add_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_type());
    }

    // optional int32 add_typeid = 3;
    if (has_add_typeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_typeid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserManualService_UserManualRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserManualService.UserManualRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserManualService_UserManualRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserManualService_UserManualRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserManualService.UserManualRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserManualService.UserManualRequest)
    MergeFrom(*source);
  }
}

void UserManualService_UserManualRequest::MergeFrom(const UserManualService_UserManualRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserManualService.UserManualRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      add_type_ = from.add_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      add_typeid_ = from.add_typeid_;
    }
    if (cached_has_bits & 0x00000004u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserManualService_UserManualRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserManualService.UserManualRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserManualService_UserManualRequest::CopyFrom(const UserManualService_UserManualRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserManualService.UserManualRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserManualService_UserManualRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void UserManualService_UserManualRequest::Swap(UserManualService_UserManualRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserManualService_UserManualRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserManualService_UserManualRequest::UnsafeArenaSwap(UserManualService_UserManualRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserManualService_UserManualRequest::InternalSwap(UserManualService_UserManualRequest* other) {
  using std::swap;
  swap(add_type_, other->add_type_);
  swap(add_typeid_, other->add_typeid_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserManualService_UserManualRequest::GetMetadata() const {
  protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Manual_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserManualService_UserManualResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserManualService_UserManualResponse::kResultFieldNumber;
const int UserManualService_UserManualResponse::kManualCustomerFieldNumber;
const int UserManualService_UserManualResponse::kManualFacilityFieldNumber;
const int UserManualService_UserManualResponse::kManualEquipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserManualService_UserManualResponse::UserManualService_UserManualResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Manual_2eproto::scc_info_UserManualService_UserManualResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserManualService.UserManualResponse)
}
UserManualService_UserManualResponse::UserManualService_UserManualResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  manual_customer_(arena),
  manual_facility_(arena),
  manual_equip_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Manual_2eproto::scc_info_UserManualService_UserManualResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserManualService.UserManualResponse)
}
UserManualService_UserManualResponse::UserManualService_UserManualResponse(const UserManualService_UserManualResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      manual_customer_(from.manual_customer_),
      manual_facility_(from.manual_facility_),
      manual_equip_(from.manual_equip_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserManualService.UserManualResponse)
}

void UserManualService_UserManualResponse::SharedCtor() {
  result_ = 0;
}

UserManualService_UserManualResponse::~UserManualService_UserManualResponse() {
  // @@protoc_insertion_point(destructor:sg.UserManualService.UserManualResponse)
  SharedDtor();
}

void UserManualService_UserManualResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserManualService_UserManualResponse::ArenaDtor(void* object) {
  UserManualService_UserManualResponse* _this = reinterpret_cast< UserManualService_UserManualResponse* >(object);
  (void)_this;
}
void UserManualService_UserManualResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserManualService_UserManualResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserManualService_UserManualResponse::descriptor() {
  ::protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Manual_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserManualService_UserManualResponse& UserManualService_UserManualResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Manual_2eproto::scc_info_UserManualService_UserManualResponse.base);
  return *internal_default_instance();
}


void UserManualService_UserManualResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserManualService.UserManualResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  manual_customer_.Clear();
  manual_facility_.Clear();
  manual_equip_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserManualService_UserManualResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserManualService.UserManualResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Manual manual_customer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_manual_customer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Manual manual_facility = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_manual_facility()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Manual manual_equip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_manual_equip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserManualService.UserManualResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserManualService.UserManualResponse)
  return false;
#undef DO_
}

void UserManualService_UserManualResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserManualService.UserManualResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .sg.Manual manual_customer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->manual_customer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->manual_customer(static_cast<int>(i)),
      output);
  }

  // repeated .sg.Manual manual_facility = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->manual_facility_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->manual_facility(static_cast<int>(i)),
      output);
  }

  // repeated .sg.Manual manual_equip = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->manual_equip_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->manual_equip(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserManualService.UserManualResponse)
}

::google::protobuf::uint8* UserManualService_UserManualResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserManualService.UserManualResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .sg.Manual manual_customer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->manual_customer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->manual_customer(static_cast<int>(i)), deterministic, target);
  }

  // repeated .sg.Manual manual_facility = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->manual_facility_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->manual_facility(static_cast<int>(i)), deterministic, target);
  }

  // repeated .sg.Manual manual_equip = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->manual_equip_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->manual_equip(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserManualService.UserManualResponse)
  return target;
}

size_t UserManualService_UserManualResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserManualService.UserManualResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.Manual manual_customer = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->manual_customer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->manual_customer(static_cast<int>(i)));
    }
  }

  // repeated .sg.Manual manual_facility = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->manual_facility_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->manual_facility(static_cast<int>(i)));
    }
  }

  // repeated .sg.Manual manual_equip = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->manual_equip_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->manual_equip(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserManualService_UserManualResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserManualService.UserManualResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserManualService_UserManualResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserManualService_UserManualResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserManualService.UserManualResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserManualService.UserManualResponse)
    MergeFrom(*source);
  }
}

void UserManualService_UserManualResponse::MergeFrom(const UserManualService_UserManualResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserManualService.UserManualResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  manual_customer_.MergeFrom(from.manual_customer_);
  manual_facility_.MergeFrom(from.manual_facility_);
  manual_equip_.MergeFrom(from.manual_equip_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void UserManualService_UserManualResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserManualService.UserManualResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserManualService_UserManualResponse::CopyFrom(const UserManualService_UserManualResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserManualService.UserManualResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserManualService_UserManualResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->manual_customer())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->manual_facility())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->manual_equip())) return false;
  return true;
}

void UserManualService_UserManualResponse::Swap(UserManualService_UserManualResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserManualService_UserManualResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserManualService_UserManualResponse::UnsafeArenaSwap(UserManualService_UserManualResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserManualService_UserManualResponse::InternalSwap(UserManualService_UserManualResponse* other) {
  using std::swap;
  CastToBase(&manual_customer_)->InternalSwap(CastToBase(&other->manual_customer_));
  CastToBase(&manual_facility_)->InternalSwap(CastToBase(&other->manual_facility_));
  CastToBase(&manual_equip_)->InternalSwap(CastToBase(&other->manual_equip_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserManualService_UserManualResponse::GetMetadata() const {
  protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Manual_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserManualService::InitAsDefaultInstance() {
  ::sg::_UserManualService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserManualService_UserManualRequest*>(
      ::sg::UserManualService_UserManualRequest::internal_default_instance());
  ::sg::_UserManualService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserManualService_UserManualResponse*>(
      ::sg::UserManualService_UserManualResponse::internal_default_instance());
}
void UserManualService::unsafe_arena_set_allocated_req(
    ::sg::UserManualService_UserManualRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserManualService.req)
}
void UserManualService::unsafe_arena_set_allocated_resp(
    ::sg::UserManualService_UserManualResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserManualService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserManualService::kReqFieldNumber;
const int UserManualService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserManualService::UserManualService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Manual_2eproto::scc_info_UserManualService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserManualService)
}
UserManualService::UserManualService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Manual_2eproto::scc_info_UserManualService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserManualService)
}
UserManualService::UserManualService(const UserManualService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserManualService_UserManualRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserManualService_UserManualResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserManualService)
}

void UserManualService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserManualService::~UserManualService() {
  // @@protoc_insertion_point(destructor:sg.UserManualService)
  SharedDtor();
}

void UserManualService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserManualService::ArenaDtor(void* object) {
  UserManualService* _this = reinterpret_cast< UserManualService* >(object);
  (void)_this;
}
void UserManualService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserManualService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserManualService::descriptor() {
  ::protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Manual_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserManualService& UserManualService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Manual_2eproto::scc_info_UserManualService.base);
  return *internal_default_instance();
}


void UserManualService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserManualService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserManualService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserManualService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserManualService.UserManualRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserManualService.UserManualResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserManualService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserManualService)
  return false;
#undef DO_
}

void UserManualService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserManualService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserManualService.UserManualRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserManualService.UserManualResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserManualService)
}

::google::protobuf::uint8* UserManualService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserManualService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserManualService.UserManualRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserManualService.UserManualResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserManualService)
  return target;
}

size_t UserManualService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserManualService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserManualService.UserManualRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserManualService.UserManualResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserManualService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserManualService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserManualService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserManualService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserManualService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserManualService)
    MergeFrom(*source);
  }
}

void UserManualService::MergeFrom(const UserManualService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserManualService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserManualService_UserManualRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserManualService_UserManualResponse::MergeFrom(from.resp());
    }
  }
}

void UserManualService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserManualService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserManualService::CopyFrom(const UserManualService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserManualService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserManualService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserManualService::Swap(UserManualService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserManualService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserManualService::UnsafeArenaSwap(UserManualService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserManualService::InternalSwap(UserManualService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserManualService::GetMetadata() const {
  protobuf_Manual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Manual_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::Manual* Arena::CreateMaybeMessage< ::sg::Manual >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::Manual >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserManualService_UserManualRequest* Arena::CreateMaybeMessage< ::sg::UserManualService_UserManualRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserManualService_UserManualRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserManualService_UserManualResponse* Arena::CreateMaybeMessage< ::sg::UserManualService_UserManualResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserManualService_UserManualResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserManualService* Arena::CreateMaybeMessage< ::sg::UserManualService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserManualService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
