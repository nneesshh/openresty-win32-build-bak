// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserShip.proto

#include "UserShip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BaseStruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegionState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserRoom;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_pb_pair_int_time;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Facility;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BaseStruct_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Reward;
}  // namespace protobuf_BaseStruct_2eproto
namespace protobuf_UserShip_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserShip_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Archive;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserShip_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserRegionService_UserRegionRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserShip_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Region;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserShip_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_UserRegionService_UserRegionResponse;
}  // namespace protobuf_UserShip_2eproto
namespace sg {
class ArchiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Archive>
      _instance;
} _Archive_default_instance_;
class RegionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Region>
      _instance;
} _Region_default_instance_;
class UserRegionService_UserRegionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegionService_UserRegionRequest>
      _instance;
} _UserRegionService_UserRegionRequest_default_instance_;
class UserRegionService_UserRegionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegionService_UserRegionResponse>
      _instance;
} _UserRegionService_UserRegionResponse_default_instance_;
class UserRegionServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegionService>
      _instance;
} _UserRegionService_default_instance_;
}  // namespace sg
namespace protobuf_UserShip_2eproto {
static void InitDefaultsArchive() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_Archive_default_instance_;
    new (ptr) ::sg::Archive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::Archive::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Archive =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArchive}, {}};

static void InitDefaultsRegion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_Region_default_instance_;
    new (ptr) ::sg::Region();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::Region::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Region =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRegion}, {
      &protobuf_BaseStruct_2eproto::scc_info_RegionState.base,
      &protobuf_BaseStruct_2eproto::scc_info_UserRoom.base,}};

static void InitDefaultsUserRegionService_UserRegionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserRegionService_UserRegionRequest_default_instance_;
    new (ptr) ::sg::UserRegionService_UserRegionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserRegionService_UserRegionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserRegionService_UserRegionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserRegionService_UserRegionRequest}, {
      &protobuf_BaseStruct_2eproto::scc_info_Facility.base,}};

static void InitDefaultsUserRegionService_UserRegionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserRegionService_UserRegionResponse_default_instance_;
    new (ptr) ::sg::UserRegionService_UserRegionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserRegionService_UserRegionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_UserRegionService_UserRegionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsUserRegionService_UserRegionResponse}, {
      &protobuf_BaseStruct_2eproto::scc_info_Facility.base,
      &protobuf_UserShip_2eproto::scc_info_Archive.base,
      &protobuf_BaseStruct_2eproto::scc_info_Reward.base,
      &protobuf_UserShip_2eproto::scc_info_Region.base,
      &protobuf_BaseStruct_2eproto::scc_info_pb_pair_int_time.base,}};

static void InitDefaultsUserRegionService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sg::_UserRegionService_default_instance_;
    new (ptr) ::sg::UserRegionService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sg::UserRegionService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserRegionService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserRegionService}, {
      &protobuf_UserShip_2eproto::scc_info_UserRegionService_UserRegionRequest.base,
      &protobuf_UserShip_2eproto::scc_info_UserRegionService_UserRegionResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Archive.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Region.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRegionService_UserRegionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRegionService_UserRegionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRegionService.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, ship_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, ship_tiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, facilitys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Archive, devices_),
  4,
  5,
  0,
  6,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, model_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, fast_finish_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, max_fast_finish_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, region_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, rooms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, id_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, type_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::Region, first_reach_time_),
  3,
  4,
  5,
  6,
  2,
  ~0u,
  0,
  1,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, ship_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, tiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, facility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, archive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, archive_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, unlock_room_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, unlock_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, regions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, simple_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionRequest, unlock_room_model_),
  10,
  3,
  4,
  0,
  1,
  ~0u,
  5,
  2,
  6,
  8,
  ~0u,
  9,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, facility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, model_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, archive_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, regions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, unlock_room_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, reach_time_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService_UserRegionResponse, unlock_room_model_),
  2,
  0,
  ~0u,
  ~0u,
  ~0u,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sg::UserRegionService, resp_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::sg::Archive)},
  { 19, 33, sizeof(::sg::Region)},
  { 42, 60, sizeof(::sg::UserRegionService_UserRegionRequest)},
  { 73, 88, sizeof(::sg::UserRegionService_UserRegionResponse)},
  { 98, 105, sizeof(::sg::UserRegionService)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_Archive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_Region_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserRegionService_UserRegionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserRegionService_UserRegionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sg::_UserRegionService_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "UserShip.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016UserShip.proto\022\002sg\032\020BaseStruct.proto\"~"
      "\n\007Archive\022\n\n\002id\030\002 \002(\005\022\r\n\005state\030\003 \002(\005\022\014\n\004"
      "name\030\004 \002(\014\022\022\n\nship_model\030\005 \002(\005\022\022\n\nship_t"
      "iles\030\006 \002(\014\022\021\n\tfacilitys\030\007 \002(\014\022\017\n\007devices"
      "\030\010 \002(\014\"\340\001\n\006Region\022\n\n\002id\030\001 \002(\005\022\020\n\010model_i"
      "d\030\002 \001(\005\022\031\n\021fast_finish_times\030\003 \001(\005\022\035\n\025ma"
      "x_fast_finish_times\030\004 \001(\005\022%\n\014region_stat"
      "e\030\006 \001(\0132\017.sg.RegionState\022\033\n\005rooms\030\007 \003(\0132"
      "\014.sg.UserRoom\022\016\n\006id_str\030\010 \001(\014\022\020\n\010type_st"
      "r\030\t \001(\014\022\030\n\020first_reach_time\030\n \001(\020\"\313\007\n\021Us"
      "erRegionService\0224\n\003req\030\001 \001(\0132\'.sg.UserRe"
      "gionService.UserRegionRequest\0226\n\004resp\030\002 "
      "\001(\0132(.sg.UserRegionService.UserRegionRes"
      "ponse\032\265\002\n\021UserRegionRequest\022+\n\003cmd\030\001 \002(\016"
      "2\036.sg.UserRegionService.SHIP_CMD\022\016\n\006regi"
      "on\030\002 \001(\005\022\022\n\nship_model\030\003 \001(\005\022\r\n\005tiles\030\004 "
      "\001(\014\022\020\n\010facility\030\005 \001(\014\022\035\n\007devices\030\t \003(\0132\014"
      ".sg.Facility\022\022\n\narchive_id\030\013 \001(\005\022\024\n\014arch"
      "ive_name\030\014 \001(\014\022\023\n\013unlock_room\030\r \001(\005\022\024\n\014u"
      "nlock_model\030\016 \001(\005\022\017\n\007regions\030\017 \003(\005\022\016\n\006si"
      "mple\030\020 \001(\010\022\031\n\021unlock_room_model\030\021 \001(\005\032\244\002"
      "\n\022UserRegionResponse\022\016\n\006result\030\001 \002(\005\022\020\n\010"
      "facility\030\006 \001(\014\022\035\n\007devices\030\t \003(\0132\014.sg.Fac"
      "ility\022\022\n\nmodel_list\030\n \003(\005\022!\n\014archive_lis"
      "t\030\013 \003(\0132\013.sg.Archive\022\032\n\006reward\030\r \001(\0132\n.s"
      "g.Reward\022\033\n\007regions\030\016 \003(\0132\n.sg.Region\022\023\n"
      "\013unlock_room\030\017 \003(\005\022-\n\017reach_time_list\030\020 "
      "\003(\0132\024.sg.pb_pair_int_time\022\031\n\021unlock_room"
      "_model\030\021 \003(\005\"\350\001\n\010SHIP_CMD\022\t\n\005QUERY\020\001\022\n\n\006"
      "CHANGE\020\002\022\013\n\007REBUILD\020\003\022\017\n\013QUERY_MODEL\020\004\022\017"
      "\n\013QUERY_SAVED\020\005\022\013\n\007ARCHIVE\020\006\022\017\n\013UNLOCK_R"
      "OOM\020\007\022\020\n\014UNLOCK_MODEL\020\010\022\024\n\020QUERY_REACH_T"
      "IME\020\t\022\022\n\016SET_REACH_TIME\020\n\022\017\n\013BATCH_QUERY"
      "\020\013\022\024\n\020QUERY_ROOM_MODEL\020\014\022\025\n\021UNLOCK_ROOM_"
      "MODEL\020\rB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1372);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserShip.proto", &protobuf_RegisterTypes);
  ::protobuf_BaseStruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_UserShip_2eproto
namespace sg {
const ::google::protobuf::EnumDescriptor* UserRegionService_SHIP_CMD_descriptor() {
  protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserShip_2eproto::file_level_enum_descriptors[0];
}
bool UserRegionService_SHIP_CMD_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserRegionService_SHIP_CMD UserRegionService::QUERY;
const UserRegionService_SHIP_CMD UserRegionService::CHANGE;
const UserRegionService_SHIP_CMD UserRegionService::REBUILD;
const UserRegionService_SHIP_CMD UserRegionService::QUERY_MODEL;
const UserRegionService_SHIP_CMD UserRegionService::QUERY_SAVED;
const UserRegionService_SHIP_CMD UserRegionService::ARCHIVE;
const UserRegionService_SHIP_CMD UserRegionService::UNLOCK_ROOM;
const UserRegionService_SHIP_CMD UserRegionService::UNLOCK_MODEL;
const UserRegionService_SHIP_CMD UserRegionService::QUERY_REACH_TIME;
const UserRegionService_SHIP_CMD UserRegionService::SET_REACH_TIME;
const UserRegionService_SHIP_CMD UserRegionService::BATCH_QUERY;
const UserRegionService_SHIP_CMD UserRegionService::QUERY_ROOM_MODEL;
const UserRegionService_SHIP_CMD UserRegionService::UNLOCK_ROOM_MODEL;
const UserRegionService_SHIP_CMD UserRegionService::SHIP_CMD_MIN;
const UserRegionService_SHIP_CMD UserRegionService::SHIP_CMD_MAX;
const int UserRegionService::SHIP_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Archive::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Archive::kIdFieldNumber;
const int Archive::kStateFieldNumber;
const int Archive::kNameFieldNumber;
const int Archive::kShipModelFieldNumber;
const int Archive::kShipTilesFieldNumber;
const int Archive::kFacilitysFieldNumber;
const int Archive::kDevicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Archive::Archive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserShip_2eproto::scc_info_Archive.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.Archive)
}
Archive::Archive(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_Archive.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.Archive)
}
Archive::Archive(const Archive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ship_tiles_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ship_tiles()) {
    ship_tiles_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ship_tiles(),
      GetArenaNoVirtual());
  }
  facilitys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_facilitys()) {
    facilitys_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.facilitys(),
      GetArenaNoVirtual());
  }
  devices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devices()) {
    devices_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devices(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ship_model_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ship_model_));
  // @@protoc_insertion_point(copy_constructor:sg.Archive)
}

void Archive::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ship_tiles_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  facilitys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ship_model_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ship_model_));
}

Archive::~Archive() {
  // @@protoc_insertion_point(destructor:sg.Archive)
  SharedDtor();
}

void Archive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ship_tiles_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  facilitys_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devices_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Archive::ArenaDtor(void* object) {
  Archive* _this = reinterpret_cast< Archive* >(object);
  (void)_this;
}
void Archive::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Archive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Archive::descriptor() {
  ::protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Archive& Archive::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_Archive.base);
  return *internal_default_instance();
}


void Archive::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.Archive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ship_tiles_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      facilitys_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      devices_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ship_model_) -
        reinterpret_cast<char*>(&id_)) + sizeof(ship_model_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Archive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.Archive)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ship_model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ship_model();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ship_model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ship_tiles = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ship_tiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes facilitys = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_facilitys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes devices = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.Archive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.Archive)
  return false;
#undef DO_
}

void Archive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.Archive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // required int32 state = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // required bytes name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->name(), output);
  }

  // required int32 ship_model = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ship_model(), output);
  }

  // required bytes ship_tiles = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->ship_tiles(), output);
  }

  // required bytes facilitys = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->facilitys(), output);
  }

  // required bytes devices = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->devices(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.Archive)
}

::google::protobuf::uint8* Archive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.Archive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // required int32 state = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // required bytes name = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->name(), target);
  }

  // required int32 ship_model = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ship_model(), target);
  }

  // required bytes ship_tiles = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->ship_tiles(), target);
  }

  // required bytes facilitys = 7;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->facilitys(), target);
  }

  // required bytes devices = 8;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->devices(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.Archive)
  return target;
}

size_t Archive::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:sg.Archive)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_ship_tiles()) {
    // required bytes ship_tiles = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ship_tiles());
  }

  if (has_facilitys()) {
    // required bytes facilitys = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->facilitys());
  }

  if (has_devices()) {
    // required bytes devices = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->devices());
  }

  if (has_id()) {
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_state()) {
    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_ship_model()) {
    // required int32 ship_model = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ship_model());
  }

  return total_size;
}
size_t Archive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.Archive)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required bytes name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes ship_tiles = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ship_tiles());

    // required bytes facilitys = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->facilitys());

    // required bytes devices = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->devices());

    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required int32 ship_model = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ship_model());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Archive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.Archive)
  GOOGLE_DCHECK_NE(&from, this);
  const Archive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Archive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.Archive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.Archive)
    MergeFrom(*source);
  }
}

void Archive::MergeFrom(const Archive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.Archive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000002u) {
      set_ship_tiles(from.ship_tiles());
    }
    if (cached_has_bits & 0x00000004u) {
      set_facilitys(from.facilitys());
    }
    if (cached_has_bits & 0x00000008u) {
      set_devices(from.devices());
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000020u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000040u) {
      ship_model_ = from.ship_model_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Archive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.Archive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Archive::CopyFrom(const Archive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.Archive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Archive::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void Archive::Swap(Archive* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Archive* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Archive::UnsafeArenaSwap(Archive* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Archive::InternalSwap(Archive* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ship_tiles_.Swap(&other->ship_tiles_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  facilitys_.Swap(&other->facilitys_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devices_.Swap(&other->devices_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(state_, other->state_);
  swap(ship_model_, other->ship_model_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Archive::GetMetadata() const {
  protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Region::InitAsDefaultInstance() {
  ::sg::_Region_default_instance_._instance.get_mutable()->region_state_ = const_cast< ::sg::RegionState*>(
      ::sg::RegionState::internal_default_instance());
}
void Region::unsafe_arena_set_allocated_region_state(
    ::sg::RegionState* region_state) {
  if (GetArenaNoVirtual() == NULL) {
    delete region_state_;
  }
  region_state_ = region_state;
  if (region_state) {
    set_has_region_state();
  } else {
    clear_has_region_state();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.Region.region_state)
}
void Region::clear_region_state() {
  if (region_state_ != NULL) region_state_->Clear();
  clear_has_region_state();
}
void Region::clear_rooms() {
  rooms_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Region::kIdFieldNumber;
const int Region::kModelIdFieldNumber;
const int Region::kFastFinishTimesFieldNumber;
const int Region::kMaxFastFinishTimesFieldNumber;
const int Region::kRegionStateFieldNumber;
const int Region::kRoomsFieldNumber;
const int Region::kIdStrFieldNumber;
const int Region::kTypeStrFieldNumber;
const int Region::kFirstReachTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Region::Region()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserShip_2eproto::scc_info_Region.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.Region)
}
Region::Region(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  rooms_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_Region.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.Region)
}
Region::Region(const Region& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rooms_(from.rooms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id_str()) {
    id_str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_str(),
      GetArenaNoVirtual());
  }
  type_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type_str()) {
    type_str_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_str(),
      GetArenaNoVirtual());
  }
  if (from.has_region_state()) {
    region_state_ = new ::sg::RegionState(*from.region_state_);
  } else {
    region_state_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&first_reach_time_) -
    reinterpret_cast<char*>(&id_)) + sizeof(first_reach_time_));
  // @@protoc_insertion_point(copy_constructor:sg.Region)
}

void Region::SharedCtor() {
  id_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_reach_time_) -
      reinterpret_cast<char*>(&region_state_)) + sizeof(first_reach_time_));
}

Region::~Region() {
  // @@protoc_insertion_point(destructor:sg.Region)
  SharedDtor();
}

void Region::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  id_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_state_;
}

void Region::ArenaDtor(void* object) {
  Region* _this = reinterpret_cast< Region* >(object);
  (void)_this;
}
void Region::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Region::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Region::descriptor() {
  ::protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Region& Region::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_Region.base);
  return *internal_default_instance();
}


void Region::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.Region)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rooms_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_str_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      type_str_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(region_state_ != NULL);
      region_state_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&first_reach_time_) -
        reinterpret_cast<char*>(&id_)) + sizeof(first_reach_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Region::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.Region)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 model_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_model_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fast_finish_times = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_fast_finish_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fast_finish_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_fast_finish_times = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_max_fast_finish_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_fast_finish_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.RegionState region_state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.UserRoom rooms = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rooms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes id_str = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes type_str = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_type_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 first_reach_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_first_reach_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &first_reach_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.Region)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.Region)
  return false;
#undef DO_
}

void Region::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.Region)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 model_id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->model_id(), output);
  }

  // optional int32 fast_finish_times = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fast_finish_times(), output);
  }

  // optional int32 max_fast_finish_times = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_fast_finish_times(), output);
  }

  // optional .sg.RegionState region_state = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_region_state(), output);
  }

  // repeated .sg.UserRoom rooms = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rooms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->rooms(static_cast<int>(i)),
      output);
  }

  // optional bytes id_str = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->id_str(), output);
  }

  // optional bytes type_str = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->type_str(), output);
  }

  // optional sfixed64 first_reach_time = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->first_reach_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.Region)
}

::google::protobuf::uint8* Region::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.Region)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 model_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->model_id(), target);
  }

  // optional int32 fast_finish_times = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fast_finish_times(), target);
  }

  // optional int32 max_fast_finish_times = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_fast_finish_times(), target);
  }

  // optional .sg.RegionState region_state = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_region_state(), deterministic, target);
  }

  // repeated .sg.UserRoom rooms = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rooms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->rooms(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes id_str = 8;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->id_str(), target);
  }

  // optional bytes type_str = 9;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->type_str(), target);
  }

  // optional sfixed64 first_reach_time = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->first_reach_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.Region)
  return target;
}

size_t Region::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.Region)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  // repeated .sg.UserRoom rooms = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->rooms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rooms(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes id_str = 8;
    if (has_id_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id_str());
    }

    // optional bytes type_str = 9;
    if (has_type_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->type_str());
    }

    // optional .sg.RegionState region_state = 6;
    if (has_region_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *region_state_);
    }

  }
  if (_has_bits_[0 / 32] & 240u) {
    // optional int32 model_id = 2;
    if (has_model_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->model_id());
    }

    // optional int32 fast_finish_times = 3;
    if (has_fast_finish_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fast_finish_times());
    }

    // optional int32 max_fast_finish_times = 4;
    if (has_max_fast_finish_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_fast_finish_times());
    }

    // optional sfixed64 first_reach_time = 10;
    if (has_first_reach_time()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Region::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.Region)
  GOOGLE_DCHECK_NE(&from, this);
  const Region* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Region>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.Region)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.Region)
    MergeFrom(*source);
  }
}

void Region::MergeFrom(const Region& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.Region)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rooms_.MergeFrom(from.rooms_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_id_str(from.id_str());
    }
    if (cached_has_bits & 0x00000002u) {
      set_type_str(from.type_str());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_region_state()->::sg::RegionState::MergeFrom(from.region_state());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      model_id_ = from.model_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      fast_finish_times_ = from.fast_finish_times_;
    }
    if (cached_has_bits & 0x00000040u) {
      max_fast_finish_times_ = from.max_fast_finish_times_;
    }
    if (cached_has_bits & 0x00000080u) {
      first_reach_time_ = from.first_reach_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Region::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Region::CopyFrom(const Region& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Region::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rooms())) return false;
  return true;
}

void Region::Swap(Region* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Region* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Region::UnsafeArenaSwap(Region* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Region::InternalSwap(Region* other) {
  using std::swap;
  CastToBase(&rooms_)->InternalSwap(CastToBase(&other->rooms_));
  id_str_.Swap(&other->id_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_str_.Swap(&other->type_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_state_, other->region_state_);
  swap(id_, other->id_);
  swap(model_id_, other->model_id_);
  swap(fast_finish_times_, other->fast_finish_times_);
  swap(max_fast_finish_times_, other->max_fast_finish_times_);
  swap(first_reach_time_, other->first_reach_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Region::GetMetadata() const {
  protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRegionService_UserRegionRequest::InitAsDefaultInstance() {
}
void UserRegionService_UserRegionRequest::clear_devices() {
  devices_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegionService_UserRegionRequest::kCmdFieldNumber;
const int UserRegionService_UserRegionRequest::kRegionFieldNumber;
const int UserRegionService_UserRegionRequest::kShipModelFieldNumber;
const int UserRegionService_UserRegionRequest::kTilesFieldNumber;
const int UserRegionService_UserRegionRequest::kFacilityFieldNumber;
const int UserRegionService_UserRegionRequest::kDevicesFieldNumber;
const int UserRegionService_UserRegionRequest::kArchiveIdFieldNumber;
const int UserRegionService_UserRegionRequest::kArchiveNameFieldNumber;
const int UserRegionService_UserRegionRequest::kUnlockRoomFieldNumber;
const int UserRegionService_UserRegionRequest::kUnlockModelFieldNumber;
const int UserRegionService_UserRegionRequest::kRegionsFieldNumber;
const int UserRegionService_UserRegionRequest::kSimpleFieldNumber;
const int UserRegionService_UserRegionRequest::kUnlockRoomModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegionService_UserRegionRequest::UserRegionService_UserRegionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserShip_2eproto::scc_info_UserRegionService_UserRegionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserRegionService.UserRegionRequest)
}
UserRegionService_UserRegionRequest::UserRegionService_UserRegionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  devices_(arena),
  regions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_UserRegionService_UserRegionRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserRegionService.UserRegionRequest)
}
UserRegionService_UserRegionRequest::UserRegionService_UserRegionRequest(const UserRegionService_UserRegionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      devices_(from.devices_),
      regions_(from.regions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tiles_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tiles()) {
    tiles_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tiles(),
      GetArenaNoVirtual());
  }
  facility_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_facility()) {
    facility_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.facility(),
      GetArenaNoVirtual());
  }
  archive_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_archive_name()) {
    archive_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.archive_name(),
      GetArenaNoVirtual());
  }
  ::memcpy(&region_, &from.region_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&region_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:sg.UserRegionService.UserRegionRequest)
}

void UserRegionService_UserRegionRequest::SharedCtor() {
  tiles_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  facility_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  archive_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&simple_) -
      reinterpret_cast<char*>(&region_)) + sizeof(simple_));
  cmd_ = 1;
}

UserRegionService_UserRegionRequest::~UserRegionService_UserRegionRequest() {
  // @@protoc_insertion_point(destructor:sg.UserRegionService.UserRegionRequest)
  SharedDtor();
}

void UserRegionService_UserRegionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  tiles_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  facility_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  archive_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRegionService_UserRegionRequest::ArenaDtor(void* object) {
  UserRegionService_UserRegionRequest* _this = reinterpret_cast< UserRegionService_UserRegionRequest* >(object);
  (void)_this;
}
void UserRegionService_UserRegionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserRegionService_UserRegionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRegionService_UserRegionRequest::descriptor() {
  ::protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegionService_UserRegionRequest& UserRegionService_UserRegionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_UserRegionService_UserRegionRequest.base);
  return *internal_default_instance();
}


void UserRegionService_UserRegionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserRegionService.UserRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  regions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tiles_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      facility_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      archive_name_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&region_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unlock_room_model_) -
        reinterpret_cast<char*>(&region_)) + sizeof(unlock_room_model_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&unlock_model_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&simple_) -
        reinterpret_cast<char*>(&unlock_model_)) + sizeof(simple_));
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRegionService_UserRegionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserRegionService.UserRegionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sg.UserRegionService.SHIP_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sg::UserRegionService_SHIP_CMD_IsValid(value)) {
            set_cmd(static_cast< ::sg::UserRegionService_SHIP_CMD >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_region();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ship_model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ship_model();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ship_model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tiles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes facility = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_facility()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Facility devices = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 archive_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_archive_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &archive_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes archive_name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_archive_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unlock_room = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_unlock_room();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unlock_room_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unlock_model = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_unlock_model();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unlock_model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 regions = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 120u, input, this->mutable_regions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_regions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool simple = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_simple();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &simple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unlock_room_model = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_unlock_room_model();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unlock_room_model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserRegionService.UserRegionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserRegionService.UserRegionRequest)
  return false;
#undef DO_
}

void UserRegionService_UserRegionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserRegionService.UserRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserRegionService.SHIP_CMD cmd = 1;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional int32 region = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->region(), output);
  }

  // optional int32 ship_model = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ship_model(), output);
  }

  // optional bytes tiles = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->tiles(), output);
  }

  // optional bytes facility = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->facility(), output);
  }

  // repeated .sg.Facility devices = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->devices(static_cast<int>(i)),
      output);
  }

  // optional int32 archive_id = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->archive_id(), output);
  }

  // optional bytes archive_name = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->archive_name(), output);
  }

  // optional int32 unlock_room = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->unlock_room(), output);
  }

  // optional int32 unlock_model = 14;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->unlock_model(), output);
  }

  // repeated int32 regions = 15;
  for (int i = 0, n = this->regions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      15, this->regions(i), output);
  }

  // optional bool simple = 16;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->simple(), output);
  }

  // optional int32 unlock_room_model = 17;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->unlock_room_model(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserRegionService.UserRegionRequest)
}

::google::protobuf::uint8* UserRegionService_UserRegionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserRegionService.UserRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .sg.UserRegionService.SHIP_CMD cmd = 1;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional int32 region = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->region(), target);
  }

  // optional int32 ship_model = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ship_model(), target);
  }

  // optional bytes tiles = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->tiles(), target);
  }

  // optional bytes facility = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->facility(), target);
  }

  // repeated .sg.Facility devices = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->devices(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 archive_id = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->archive_id(), target);
  }

  // optional bytes archive_name = 12;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->archive_name(), target);
  }

  // optional int32 unlock_room = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->unlock_room(), target);
  }

  // optional int32 unlock_model = 14;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->unlock_model(), target);
  }

  // repeated int32 regions = 15;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(15, this->regions_, target);

  // optional bool simple = 16;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->simple(), target);
  }

  // optional int32 unlock_room_model = 17;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->unlock_room_model(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserRegionService.UserRegionRequest)
  return target;
}

size_t UserRegionService_UserRegionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserRegionService.UserRegionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .sg.UserRegionService.SHIP_CMD cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  // repeated .sg.Facility devices = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  // repeated int32 regions = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->regions_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->regions_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes tiles = 4;
    if (has_tiles()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tiles());
    }

    // optional bytes facility = 5;
    if (has_facility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->facility());
    }

    // optional bytes archive_name = 12;
    if (has_archive_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->archive_name());
    }

    // optional int32 region = 2;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->region());
    }

    // optional int32 ship_model = 3;
    if (has_ship_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ship_model());
    }

    // optional int32 archive_id = 11;
    if (has_archive_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->archive_id());
    }

    // optional int32 unlock_room = 13;
    if (has_unlock_room()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unlock_room());
    }

    // optional int32 unlock_room_model = 17;
    if (has_unlock_room_model()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unlock_room_model());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 unlock_model = 14;
    if (has_unlock_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unlock_model());
    }

    // optional bool simple = 16;
    if (has_simple()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRegionService_UserRegionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserRegionService.UserRegionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegionService_UserRegionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegionService_UserRegionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserRegionService.UserRegionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserRegionService.UserRegionRequest)
    MergeFrom(*source);
  }
}

void UserRegionService_UserRegionRequest::MergeFrom(const UserRegionService_UserRegionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserRegionService.UserRegionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
  regions_.MergeFrom(from.regions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_tiles(from.tiles());
    }
    if (cached_has_bits & 0x00000002u) {
      set_facility(from.facility());
    }
    if (cached_has_bits & 0x00000004u) {
      set_archive_name(from.archive_name());
    }
    if (cached_has_bits & 0x00000008u) {
      region_ = from.region_;
    }
    if (cached_has_bits & 0x00000010u) {
      ship_model_ = from.ship_model_;
    }
    if (cached_has_bits & 0x00000020u) {
      archive_id_ = from.archive_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      unlock_room_ = from.unlock_room_;
    }
    if (cached_has_bits & 0x00000080u) {
      unlock_room_model_ = from.unlock_room_model_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      unlock_model_ = from.unlock_model_;
    }
    if (cached_has_bits & 0x00000200u) {
      simple_ = from.simple_;
    }
    if (cached_has_bits & 0x00000400u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserRegionService_UserRegionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserRegionService.UserRegionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegionService_UserRegionRequest::CopyFrom(const UserRegionService_UserRegionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserRegionService.UserRegionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegionService_UserRegionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000400) != 0x00000400) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->devices())) return false;
  return true;
}

void UserRegionService_UserRegionRequest::Swap(UserRegionService_UserRegionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserRegionService_UserRegionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserRegionService_UserRegionRequest::UnsafeArenaSwap(UserRegionService_UserRegionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserRegionService_UserRegionRequest::InternalSwap(UserRegionService_UserRegionRequest* other) {
  using std::swap;
  CastToBase(&devices_)->InternalSwap(CastToBase(&other->devices_));
  regions_.InternalSwap(&other->regions_);
  tiles_.Swap(&other->tiles_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  facility_.Swap(&other->facility_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  archive_name_.Swap(&other->archive_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_, other->region_);
  swap(ship_model_, other->ship_model_);
  swap(archive_id_, other->archive_id_);
  swap(unlock_room_, other->unlock_room_);
  swap(unlock_room_model_, other->unlock_room_model_);
  swap(unlock_model_, other->unlock_model_);
  swap(simple_, other->simple_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRegionService_UserRegionRequest::GetMetadata() const {
  protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRegionService_UserRegionResponse::InitAsDefaultInstance() {
  ::sg::_UserRegionService_UserRegionResponse_default_instance_._instance.get_mutable()->reward_ = const_cast< ::sg::Reward*>(
      ::sg::Reward::internal_default_instance());
}
void UserRegionService_UserRegionResponse::clear_devices() {
  devices_.Clear();
}
void UserRegionService_UserRegionResponse::unsafe_arena_set_allocated_reward(
    ::sg::Reward* reward) {
  if (GetArenaNoVirtual() == NULL) {
    delete reward_;
  }
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRegionService.UserRegionResponse.reward)
}
void UserRegionService_UserRegionResponse::clear_reward() {
  if (reward_ != NULL) reward_->Clear();
  clear_has_reward();
}
void UserRegionService_UserRegionResponse::clear_reach_time_list() {
  reach_time_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegionService_UserRegionResponse::kResultFieldNumber;
const int UserRegionService_UserRegionResponse::kFacilityFieldNumber;
const int UserRegionService_UserRegionResponse::kDevicesFieldNumber;
const int UserRegionService_UserRegionResponse::kModelListFieldNumber;
const int UserRegionService_UserRegionResponse::kArchiveListFieldNumber;
const int UserRegionService_UserRegionResponse::kRewardFieldNumber;
const int UserRegionService_UserRegionResponse::kRegionsFieldNumber;
const int UserRegionService_UserRegionResponse::kUnlockRoomFieldNumber;
const int UserRegionService_UserRegionResponse::kReachTimeListFieldNumber;
const int UserRegionService_UserRegionResponse::kUnlockRoomModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegionService_UserRegionResponse::UserRegionService_UserRegionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserShip_2eproto::scc_info_UserRegionService_UserRegionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserRegionService.UserRegionResponse)
}
UserRegionService_UserRegionResponse::UserRegionService_UserRegionResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  devices_(arena),
  model_list_(arena),
  archive_list_(arena),
  regions_(arena),
  unlock_room_(arena),
  reach_time_list_(arena),
  unlock_room_model_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_UserRegionService_UserRegionResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserRegionService.UserRegionResponse)
}
UserRegionService_UserRegionResponse::UserRegionService_UserRegionResponse(const UserRegionService_UserRegionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      devices_(from.devices_),
      model_list_(from.model_list_),
      archive_list_(from.archive_list_),
      regions_(from.regions_),
      unlock_room_(from.unlock_room_),
      reach_time_list_(from.reach_time_list_),
      unlock_room_model_(from.unlock_room_model_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  facility_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_facility()) {
    facility_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.facility(),
      GetArenaNoVirtual());
  }
  if (from.has_reward()) {
    reward_ = new ::sg::Reward(*from.reward_);
  } else {
    reward_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:sg.UserRegionService.UserRegionResponse)
}

void UserRegionService_UserRegionResponse::SharedCtor() {
  facility_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(result_));
}

UserRegionService_UserRegionResponse::~UserRegionService_UserRegionResponse() {
  // @@protoc_insertion_point(destructor:sg.UserRegionService.UserRegionResponse)
  SharedDtor();
}

void UserRegionService_UserRegionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  facility_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete reward_;
}

void UserRegionService_UserRegionResponse::ArenaDtor(void* object) {
  UserRegionService_UserRegionResponse* _this = reinterpret_cast< UserRegionService_UserRegionResponse* >(object);
  (void)_this;
}
void UserRegionService_UserRegionResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserRegionService_UserRegionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRegionService_UserRegionResponse::descriptor() {
  ::protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegionService_UserRegionResponse& UserRegionService_UserRegionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_UserRegionService_UserRegionResponse.base);
  return *internal_default_instance();
}


void UserRegionService_UserRegionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserRegionService.UserRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  model_list_.Clear();
  archive_list_.Clear();
  regions_.Clear();
  unlock_room_.Clear();
  reach_time_list_.Clear();
  unlock_room_model_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      facility_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(reward_ != NULL);
      reward_->Clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRegionService_UserRegionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserRegionService.UserRegionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes facility = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_facility()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Facility devices = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 model_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80u, input, this->mutable_model_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_model_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Archive archive_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_archive_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.Reward reward = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.Region regions = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_regions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 unlock_room = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 120u, input, this->mutable_unlock_room())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unlock_room())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sg.pb_pair_int_time reach_time_list = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reach_time_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 unlock_room_model = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 136u, input, this->mutable_unlock_room_model())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unlock_room_model())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserRegionService.UserRegionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserRegionService.UserRegionResponse)
  return false;
#undef DO_
}

void UserRegionService_UserRegionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserRegionService.UserRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional bytes facility = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->facility(), output);
  }

  // repeated .sg.Facility devices = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->devices(static_cast<int>(i)),
      output);
  }

  // repeated int32 model_list = 10;
  for (int i = 0, n = this->model_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->model_list(i), output);
  }

  // repeated .sg.Archive archive_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->archive_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->archive_list(static_cast<int>(i)),
      output);
  }

  // optional .sg.Reward reward = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_reward(), output);
  }

  // repeated .sg.Region regions = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->regions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->regions(static_cast<int>(i)),
      output);
  }

  // repeated int32 unlock_room = 15;
  for (int i = 0, n = this->unlock_room_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      15, this->unlock_room(i), output);
  }

  // repeated .sg.pb_pair_int_time reach_time_list = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reach_time_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->reach_time_list(static_cast<int>(i)),
      output);
  }

  // repeated int32 unlock_room_model = 17;
  for (int i = 0, n = this->unlock_room_model_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      17, this->unlock_room_model(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserRegionService.UserRegionResponse)
}

::google::protobuf::uint8* UserRegionService_UserRegionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserRegionService.UserRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional bytes facility = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->facility(), target);
  }

  // repeated .sg.Facility devices = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->devices(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 model_list = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(10, this->model_list_, target);

  // repeated .sg.Archive archive_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->archive_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->archive_list(static_cast<int>(i)), deterministic, target);
  }

  // optional .sg.Reward reward = 13;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_reward(), deterministic, target);
  }

  // repeated .sg.Region regions = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->regions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->regions(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 unlock_room = 15;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(15, this->unlock_room_, target);

  // repeated .sg.pb_pair_int_time reach_time_list = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reach_time_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->reach_time_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 unlock_room_model = 17;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(17, this->unlock_room_model_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserRegionService.UserRegionResponse)
  return target;
}

size_t UserRegionService_UserRegionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserRegionService.UserRegionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .sg.Facility devices = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  // repeated int32 model_list = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->model_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->model_list_size());
    total_size += data_size;
  }

  // repeated .sg.Archive archive_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->archive_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->archive_list(static_cast<int>(i)));
    }
  }

  // repeated .sg.Region regions = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->regions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->regions(static_cast<int>(i)));
    }
  }

  // repeated int32 unlock_room = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->unlock_room_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->unlock_room_size());
    total_size += data_size;
  }

  // repeated .sg.pb_pair_int_time reach_time_list = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->reach_time_list_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reach_time_list(static_cast<int>(i)));
    }
  }

  // repeated int32 unlock_room_model = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->unlock_room_model_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->unlock_room_model_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes facility = 6;
    if (has_facility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->facility());
    }

    // optional .sg.Reward reward = 13;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reward_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRegionService_UserRegionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserRegionService.UserRegionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegionService_UserRegionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegionService_UserRegionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserRegionService.UserRegionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserRegionService.UserRegionResponse)
    MergeFrom(*source);
  }
}

void UserRegionService_UserRegionResponse::MergeFrom(const UserRegionService_UserRegionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserRegionService.UserRegionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
  model_list_.MergeFrom(from.model_list_);
  archive_list_.MergeFrom(from.archive_list_);
  regions_.MergeFrom(from.regions_);
  unlock_room_.MergeFrom(from.unlock_room_);
  reach_time_list_.MergeFrom(from.reach_time_list_);
  unlock_room_model_.MergeFrom(from.unlock_room_model_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_facility(from.facility());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_reward()->::sg::Reward::MergeFrom(from.reward());
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserRegionService_UserRegionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserRegionService.UserRegionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegionService_UserRegionResponse::CopyFrom(const UserRegionService_UserRegionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserRegionService.UserRegionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegionService_UserRegionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->devices())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->archive_list())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->regions())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->reach_time_list())) return false;
  if (has_reward()) {
    if (!this->reward_->IsInitialized()) return false;
  }
  return true;
}

void UserRegionService_UserRegionResponse::Swap(UserRegionService_UserRegionResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserRegionService_UserRegionResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserRegionService_UserRegionResponse::UnsafeArenaSwap(UserRegionService_UserRegionResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserRegionService_UserRegionResponse::InternalSwap(UserRegionService_UserRegionResponse* other) {
  using std::swap;
  CastToBase(&devices_)->InternalSwap(CastToBase(&other->devices_));
  model_list_.InternalSwap(&other->model_list_);
  CastToBase(&archive_list_)->InternalSwap(CastToBase(&other->archive_list_));
  CastToBase(&regions_)->InternalSwap(CastToBase(&other->regions_));
  unlock_room_.InternalSwap(&other->unlock_room_);
  CastToBase(&reach_time_list_)->InternalSwap(CastToBase(&other->reach_time_list_));
  unlock_room_model_.InternalSwap(&other->unlock_room_model_);
  facility_.Swap(&other->facility_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reward_, other->reward_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRegionService_UserRegionResponse::GetMetadata() const {
  protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRegionService::InitAsDefaultInstance() {
  ::sg::_UserRegionService_default_instance_._instance.get_mutable()->req_ = const_cast< ::sg::UserRegionService_UserRegionRequest*>(
      ::sg::UserRegionService_UserRegionRequest::internal_default_instance());
  ::sg::_UserRegionService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::sg::UserRegionService_UserRegionResponse*>(
      ::sg::UserRegionService_UserRegionResponse::internal_default_instance());
}
void UserRegionService::unsafe_arena_set_allocated_req(
    ::sg::UserRegionService_UserRegionRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRegionService.req)
}
void UserRegionService::unsafe_arena_set_allocated_resp(
    ::sg::UserRegionService_UserRegionResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sg.UserRegionService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegionService::kReqFieldNumber;
const int UserRegionService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegionService::UserRegionService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_UserShip_2eproto::scc_info_UserRegionService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sg.UserRegionService)
}
UserRegionService::UserRegionService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_UserRegionService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sg.UserRegionService)
}
UserRegionService::UserRegionService(const UserRegionService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::sg::UserRegionService_UserRegionRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::sg::UserRegionService_UserRegionResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:sg.UserRegionService)
}

void UserRegionService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

UserRegionService::~UserRegionService() {
  // @@protoc_insertion_point(destructor:sg.UserRegionService)
  SharedDtor();
}

void UserRegionService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void UserRegionService::ArenaDtor(void* object) {
  UserRegionService* _this = reinterpret_cast< UserRegionService* >(object);
  (void)_this;
}
void UserRegionService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserRegionService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRegionService::descriptor() {
  ::protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegionService& UserRegionService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_UserShip_2eproto::scc_info_UserRegionService.base);
  return *internal_default_instance();
}


void UserRegionService::Clear() {
// @@protoc_insertion_point(message_clear_start:sg.UserRegionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRegionService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sg.UserRegionService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .sg.UserRegionService.UserRegionRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .sg.UserRegionService.UserRegionResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sg.UserRegionService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sg.UserRegionService)
  return false;
#undef DO_
}

void UserRegionService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sg.UserRegionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserRegionService.UserRegionRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .sg.UserRegionService.UserRegionResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sg.UserRegionService)
}

::google::protobuf::uint8* UserRegionService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sg.UserRegionService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .sg.UserRegionService.UserRegionRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .sg.UserRegionService.UserRegionResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sg.UserRegionService)
  return target;
}

size_t UserRegionService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sg.UserRegionService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .sg.UserRegionService.UserRegionRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .sg.UserRegionService.UserRegionResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRegionService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sg.UserRegionService)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegionService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegionService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sg.UserRegionService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sg.UserRegionService)
    MergeFrom(*source);
  }
}

void UserRegionService::MergeFrom(const UserRegionService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sg.UserRegionService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::sg::UserRegionService_UserRegionRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::sg::UserRegionService_UserRegionResponse::MergeFrom(from.resp());
    }
  }
}

void UserRegionService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sg.UserRegionService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegionService::CopyFrom(const UserRegionService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sg.UserRegionService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegionService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void UserRegionService::Swap(UserRegionService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserRegionService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserRegionService::UnsafeArenaSwap(UserRegionService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserRegionService::InternalSwap(UserRegionService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRegionService::GetMetadata() const {
  protobuf_UserShip_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_UserShip_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::Archive* Arena::CreateMaybeMessage< ::sg::Archive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::Archive >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::Region* Arena::CreateMaybeMessage< ::sg::Region >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::Region >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserRegionService_UserRegionRequest* Arena::CreateMaybeMessage< ::sg::UserRegionService_UserRegionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserRegionService_UserRegionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserRegionService_UserRegionResponse* Arena::CreateMaybeMessage< ::sg::UserRegionService_UserRegionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserRegionService_UserRegionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sg::UserRegionService* Arena::CreateMaybeMessage< ::sg::UserRegionService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sg::UserRegionService >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
