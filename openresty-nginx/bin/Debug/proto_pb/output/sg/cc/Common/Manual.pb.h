// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Manual.proto

#ifndef PROTOBUF_INCLUDED_Manual_2eproto
#define PROTOBUF_INCLUDED_Manual_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Manual_2eproto 

namespace protobuf_Manual_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Manual_2eproto
namespace sg {
class Manual;
class ManualDefaultTypeInternal;
extern ManualDefaultTypeInternal _Manual_default_instance_;
class UserManualService;
class UserManualServiceDefaultTypeInternal;
extern UserManualServiceDefaultTypeInternal _UserManualService_default_instance_;
class UserManualService_UserManualRequest;
class UserManualService_UserManualRequestDefaultTypeInternal;
extern UserManualService_UserManualRequestDefaultTypeInternal _UserManualService_UserManualRequest_default_instance_;
class UserManualService_UserManualResponse;
class UserManualService_UserManualResponseDefaultTypeInternal;
extern UserManualService_UserManualResponseDefaultTypeInternal _UserManualService_UserManualResponse_default_instance_;
}  // namespace sg
namespace google {
namespace protobuf {
template<> ::sg::Manual* Arena::CreateMaybeMessage<::sg::Manual>(Arena*);
template<> ::sg::UserManualService* Arena::CreateMaybeMessage<::sg::UserManualService>(Arena*);
template<> ::sg::UserManualService_UserManualRequest* Arena::CreateMaybeMessage<::sg::UserManualService_UserManualRequest>(Arena*);
template<> ::sg::UserManualService_UserManualResponse* Arena::CreateMaybeMessage<::sg::UserManualService_UserManualResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sg {

enum UserManualService_MANUAL_CMD {
  UserManualService_MANUAL_CMD_QUERY = 1,
  UserManualService_MANUAL_CMD_ADD = 2
};
bool UserManualService_MANUAL_CMD_IsValid(int value);
const UserManualService_MANUAL_CMD UserManualService_MANUAL_CMD_MANUAL_CMD_MIN = UserManualService_MANUAL_CMD_QUERY;
const UserManualService_MANUAL_CMD UserManualService_MANUAL_CMD_MANUAL_CMD_MAX = UserManualService_MANUAL_CMD_ADD;
const int UserManualService_MANUAL_CMD_MANUAL_CMD_ARRAYSIZE = UserManualService_MANUAL_CMD_MANUAL_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserManualService_MANUAL_CMD_descriptor();
inline const ::std::string& UserManualService_MANUAL_CMD_Name(UserManualService_MANUAL_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserManualService_MANUAL_CMD_descriptor(), value);
}
inline bool UserManualService_MANUAL_CMD_Parse(
    const ::std::string& name, UserManualService_MANUAL_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserManualService_MANUAL_CMD>(
    UserManualService_MANUAL_CMD_descriptor(), name, value);
}
// ===================================================================

class Manual : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.Manual) */ {
 public:
  Manual();
  virtual ~Manual();

  Manual(const Manual& from);

  inline Manual& operator=(const Manual& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Manual(Manual&& from) noexcept
    : Manual() {
    *this = ::std::move(from);
  }

  inline Manual& operator=(Manual&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Manual& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Manual* internal_default_instance() {
    return reinterpret_cast<const Manual*>(
               &_Manual_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Manual* other);
  void Swap(Manual* other);
  friend void swap(Manual& a, Manual& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Manual* New() const final {
    return CreateMaybeMessage<Manual>(NULL);
  }

  Manual* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Manual>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Manual& from);
  void MergeFrom(const Manual& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Manual* other);
  protected:
  explicit Manual(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sfixed64 optime = 3;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 3;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // required int32 typeid = 2;
  bool has_typeid_() const;
  void clear_typeid_();
  static const int kTypeidFieldNumber = 2;
  ::google::protobuf::int32 typeid_() const;
  void set_typeid_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.Manual)
 private:
  void set_has_typeid_();
  void clear_has_typeid_();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 optime_;
  ::google::protobuf::int32 typeid__;
  friend struct ::protobuf_Manual_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserManualService_UserManualRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserManualService.UserManualRequest) */ {
 public:
  UserManualService_UserManualRequest();
  virtual ~UserManualService_UserManualRequest();

  UserManualService_UserManualRequest(const UserManualService_UserManualRequest& from);

  inline UserManualService_UserManualRequest& operator=(const UserManualService_UserManualRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserManualService_UserManualRequest(UserManualService_UserManualRequest&& from) noexcept
    : UserManualService_UserManualRequest() {
    *this = ::std::move(from);
  }

  inline UserManualService_UserManualRequest& operator=(UserManualService_UserManualRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserManualService_UserManualRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserManualService_UserManualRequest* internal_default_instance() {
    return reinterpret_cast<const UserManualService_UserManualRequest*>(
               &_UserManualService_UserManualRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(UserManualService_UserManualRequest* other);
  void Swap(UserManualService_UserManualRequest* other);
  friend void swap(UserManualService_UserManualRequest& a, UserManualService_UserManualRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserManualService_UserManualRequest* New() const final {
    return CreateMaybeMessage<UserManualService_UserManualRequest>(NULL);
  }

  UserManualService_UserManualRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserManualService_UserManualRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserManualService_UserManualRequest& from);
  void MergeFrom(const UserManualService_UserManualRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserManualService_UserManualRequest* other);
  protected:
  explicit UserManualService_UserManualRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 add_type = 2;
  bool has_add_type() const;
  void clear_add_type();
  static const int kAddTypeFieldNumber = 2;
  ::google::protobuf::int32 add_type() const;
  void set_add_type(::google::protobuf::int32 value);

  // optional int32 add_typeid = 3;
  bool has_add_typeid() const;
  void clear_add_typeid();
  static const int kAddTypeidFieldNumber = 3;
  ::google::protobuf::int32 add_typeid() const;
  void set_add_typeid(::google::protobuf::int32 value);

  // required .sg.UserManualService.MANUAL_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserManualService_MANUAL_CMD cmd() const;
  void set_cmd(::sg::UserManualService_MANUAL_CMD value);

  // @@protoc_insertion_point(class_scope:sg.UserManualService.UserManualRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_add_type();
  void clear_has_add_type();
  void set_has_add_typeid();
  void clear_has_add_typeid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 add_type_;
  ::google::protobuf::int32 add_typeid_;
  int cmd_;
  friend struct ::protobuf_Manual_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserManualService_UserManualResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserManualService.UserManualResponse) */ {
 public:
  UserManualService_UserManualResponse();
  virtual ~UserManualService_UserManualResponse();

  UserManualService_UserManualResponse(const UserManualService_UserManualResponse& from);

  inline UserManualService_UserManualResponse& operator=(const UserManualService_UserManualResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserManualService_UserManualResponse(UserManualService_UserManualResponse&& from) noexcept
    : UserManualService_UserManualResponse() {
    *this = ::std::move(from);
  }

  inline UserManualService_UserManualResponse& operator=(UserManualService_UserManualResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserManualService_UserManualResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserManualService_UserManualResponse* internal_default_instance() {
    return reinterpret_cast<const UserManualService_UserManualResponse*>(
               &_UserManualService_UserManualResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(UserManualService_UserManualResponse* other);
  void Swap(UserManualService_UserManualResponse* other);
  friend void swap(UserManualService_UserManualResponse& a, UserManualService_UserManualResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserManualService_UserManualResponse* New() const final {
    return CreateMaybeMessage<UserManualService_UserManualResponse>(NULL);
  }

  UserManualService_UserManualResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserManualService_UserManualResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserManualService_UserManualResponse& from);
  void MergeFrom(const UserManualService_UserManualResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserManualService_UserManualResponse* other);
  protected:
  explicit UserManualService_UserManualResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.Manual manual_customer = 2;
  int manual_customer_size() const;
  void clear_manual_customer();
  static const int kManualCustomerFieldNumber = 2;
  ::sg::Manual* mutable_manual_customer(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Manual >*
      mutable_manual_customer();
  const ::sg::Manual& manual_customer(int index) const;
  ::sg::Manual* add_manual_customer();
  const ::google::protobuf::RepeatedPtrField< ::sg::Manual >&
      manual_customer() const;

  // repeated .sg.Manual manual_facility = 3;
  int manual_facility_size() const;
  void clear_manual_facility();
  static const int kManualFacilityFieldNumber = 3;
  ::sg::Manual* mutable_manual_facility(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Manual >*
      mutable_manual_facility();
  const ::sg::Manual& manual_facility(int index) const;
  ::sg::Manual* add_manual_facility();
  const ::google::protobuf::RepeatedPtrField< ::sg::Manual >&
      manual_facility() const;

  // repeated .sg.Manual manual_equip = 4;
  int manual_equip_size() const;
  void clear_manual_equip();
  static const int kManualEquipFieldNumber = 4;
  ::sg::Manual* mutable_manual_equip(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Manual >*
      mutable_manual_equip();
  const ::sg::Manual& manual_equip(int index) const;
  ::sg::Manual* add_manual_equip();
  const ::google::protobuf::RepeatedPtrField< ::sg::Manual >&
      manual_equip() const;

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserManualService.UserManualResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::Manual > manual_customer_;
  ::google::protobuf::RepeatedPtrField< ::sg::Manual > manual_facility_;
  ::google::protobuf::RepeatedPtrField< ::sg::Manual > manual_equip_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_Manual_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserManualService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserManualService) */ {
 public:
  UserManualService();
  virtual ~UserManualService();

  UserManualService(const UserManualService& from);

  inline UserManualService& operator=(const UserManualService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserManualService(UserManualService&& from) noexcept
    : UserManualService() {
    *this = ::std::move(from);
  }

  inline UserManualService& operator=(UserManualService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserManualService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserManualService* internal_default_instance() {
    return reinterpret_cast<const UserManualService*>(
               &_UserManualService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(UserManualService* other);
  void Swap(UserManualService* other);
  friend void swap(UserManualService& a, UserManualService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserManualService* New() const final {
    return CreateMaybeMessage<UserManualService>(NULL);
  }

  UserManualService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserManualService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserManualService& from);
  void MergeFrom(const UserManualService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserManualService* other);
  protected:
  explicit UserManualService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserManualService_UserManualRequest UserManualRequest;
  typedef UserManualService_UserManualResponse UserManualResponse;

  typedef UserManualService_MANUAL_CMD MANUAL_CMD;
  static const MANUAL_CMD QUERY =
    UserManualService_MANUAL_CMD_QUERY;
  static const MANUAL_CMD ADD =
    UserManualService_MANUAL_CMD_ADD;
  static inline bool MANUAL_CMD_IsValid(int value) {
    return UserManualService_MANUAL_CMD_IsValid(value);
  }
  static const MANUAL_CMD MANUAL_CMD_MIN =
    UserManualService_MANUAL_CMD_MANUAL_CMD_MIN;
  static const MANUAL_CMD MANUAL_CMD_MAX =
    UserManualService_MANUAL_CMD_MANUAL_CMD_MAX;
  static const int MANUAL_CMD_ARRAYSIZE =
    UserManualService_MANUAL_CMD_MANUAL_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MANUAL_CMD_descriptor() {
    return UserManualService_MANUAL_CMD_descriptor();
  }
  static inline const ::std::string& MANUAL_CMD_Name(MANUAL_CMD value) {
    return UserManualService_MANUAL_CMD_Name(value);
  }
  static inline bool MANUAL_CMD_Parse(const ::std::string& name,
      MANUAL_CMD* value) {
    return UserManualService_MANUAL_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserManualService.UserManualRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserManualService_UserManualRequest& _internal_req() const;
  public:
  const ::sg::UserManualService_UserManualRequest& req() const;
  ::sg::UserManualService_UserManualRequest* release_req();
  ::sg::UserManualService_UserManualRequest* mutable_req();
  void set_allocated_req(::sg::UserManualService_UserManualRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserManualService_UserManualRequest* req);
  ::sg::UserManualService_UserManualRequest* unsafe_arena_release_req();

  // optional .sg.UserManualService.UserManualResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserManualService_UserManualResponse& _internal_resp() const;
  public:
  const ::sg::UserManualService_UserManualResponse& resp() const;
  ::sg::UserManualService_UserManualResponse* release_resp();
  ::sg::UserManualService_UserManualResponse* mutable_resp();
  void set_allocated_resp(::sg::UserManualService_UserManualResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserManualService_UserManualResponse* resp);
  ::sg::UserManualService_UserManualResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserManualService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserManualService_UserManualRequest* req_;
  ::sg::UserManualService_UserManualResponse* resp_;
  friend struct ::protobuf_Manual_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Manual

// required int32 typeid = 2;
inline bool Manual::has_typeid_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Manual::set_has_typeid_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Manual::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Manual::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 Manual::typeid_() const {
  // @@protoc_insertion_point(field_get:sg.Manual.typeid)
  return typeid__;
}
inline void Manual::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:sg.Manual.typeid)
}

// required sfixed64 optime = 3;
inline bool Manual::has_optime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Manual::set_has_optime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Manual::clear_has_optime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Manual::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 Manual::optime() const {
  // @@protoc_insertion_point(field_get:sg.Manual.optime)
  return optime_;
}
inline void Manual::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:sg.Manual.optime)
}

// -------------------------------------------------------------------

// UserManualService_UserManualRequest

// required .sg.UserManualService.MANUAL_CMD cmd = 1;
inline bool UserManualService_UserManualRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserManualService_UserManualRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserManualService_UserManualRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserManualService_UserManualRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserManualService_MANUAL_CMD UserManualService_UserManualRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserManualService.UserManualRequest.cmd)
  return static_cast< ::sg::UserManualService_MANUAL_CMD >(cmd_);
}
inline void UserManualService_UserManualRequest::set_cmd(::sg::UserManualService_MANUAL_CMD value) {
  assert(::sg::UserManualService_MANUAL_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserManualService.UserManualRequest.cmd)
}

// optional int32 add_type = 2;
inline bool UserManualService_UserManualRequest::has_add_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserManualService_UserManualRequest::set_has_add_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserManualService_UserManualRequest::clear_has_add_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserManualService_UserManualRequest::clear_add_type() {
  add_type_ = 0;
  clear_has_add_type();
}
inline ::google::protobuf::int32 UserManualService_UserManualRequest::add_type() const {
  // @@protoc_insertion_point(field_get:sg.UserManualService.UserManualRequest.add_type)
  return add_type_;
}
inline void UserManualService_UserManualRequest::set_add_type(::google::protobuf::int32 value) {
  set_has_add_type();
  add_type_ = value;
  // @@protoc_insertion_point(field_set:sg.UserManualService.UserManualRequest.add_type)
}

// optional int32 add_typeid = 3;
inline bool UserManualService_UserManualRequest::has_add_typeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserManualService_UserManualRequest::set_has_add_typeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserManualService_UserManualRequest::clear_has_add_typeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserManualService_UserManualRequest::clear_add_typeid() {
  add_typeid_ = 0;
  clear_has_add_typeid();
}
inline ::google::protobuf::int32 UserManualService_UserManualRequest::add_typeid() const {
  // @@protoc_insertion_point(field_get:sg.UserManualService.UserManualRequest.add_typeid)
  return add_typeid_;
}
inline void UserManualService_UserManualRequest::set_add_typeid(::google::protobuf::int32 value) {
  set_has_add_typeid();
  add_typeid_ = value;
  // @@protoc_insertion_point(field_set:sg.UserManualService.UserManualRequest.add_typeid)
}

// -------------------------------------------------------------------

// UserManualService_UserManualResponse

// required int32 result = 1;
inline bool UserManualService_UserManualResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserManualService_UserManualResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserManualService_UserManualResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserManualService_UserManualResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserManualService_UserManualResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserManualService.UserManualResponse.result)
  return result_;
}
inline void UserManualService_UserManualResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserManualService.UserManualResponse.result)
}

// repeated .sg.Manual manual_customer = 2;
inline int UserManualService_UserManualResponse::manual_customer_size() const {
  return manual_customer_.size();
}
inline void UserManualService_UserManualResponse::clear_manual_customer() {
  manual_customer_.Clear();
}
inline ::sg::Manual* UserManualService_UserManualResponse::mutable_manual_customer(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserManualService.UserManualResponse.manual_customer)
  return manual_customer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Manual >*
UserManualService_UserManualResponse::mutable_manual_customer() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserManualService.UserManualResponse.manual_customer)
  return &manual_customer_;
}
inline const ::sg::Manual& UserManualService_UserManualResponse::manual_customer(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserManualService.UserManualResponse.manual_customer)
  return manual_customer_.Get(index);
}
inline ::sg::Manual* UserManualService_UserManualResponse::add_manual_customer() {
  // @@protoc_insertion_point(field_add:sg.UserManualService.UserManualResponse.manual_customer)
  return manual_customer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Manual >&
UserManualService_UserManualResponse::manual_customer() const {
  // @@protoc_insertion_point(field_list:sg.UserManualService.UserManualResponse.manual_customer)
  return manual_customer_;
}

// repeated .sg.Manual manual_facility = 3;
inline int UserManualService_UserManualResponse::manual_facility_size() const {
  return manual_facility_.size();
}
inline void UserManualService_UserManualResponse::clear_manual_facility() {
  manual_facility_.Clear();
}
inline ::sg::Manual* UserManualService_UserManualResponse::mutable_manual_facility(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserManualService.UserManualResponse.manual_facility)
  return manual_facility_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Manual >*
UserManualService_UserManualResponse::mutable_manual_facility() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserManualService.UserManualResponse.manual_facility)
  return &manual_facility_;
}
inline const ::sg::Manual& UserManualService_UserManualResponse::manual_facility(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserManualService.UserManualResponse.manual_facility)
  return manual_facility_.Get(index);
}
inline ::sg::Manual* UserManualService_UserManualResponse::add_manual_facility() {
  // @@protoc_insertion_point(field_add:sg.UserManualService.UserManualResponse.manual_facility)
  return manual_facility_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Manual >&
UserManualService_UserManualResponse::manual_facility() const {
  // @@protoc_insertion_point(field_list:sg.UserManualService.UserManualResponse.manual_facility)
  return manual_facility_;
}

// repeated .sg.Manual manual_equip = 4;
inline int UserManualService_UserManualResponse::manual_equip_size() const {
  return manual_equip_.size();
}
inline void UserManualService_UserManualResponse::clear_manual_equip() {
  manual_equip_.Clear();
}
inline ::sg::Manual* UserManualService_UserManualResponse::mutable_manual_equip(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserManualService.UserManualResponse.manual_equip)
  return manual_equip_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Manual >*
UserManualService_UserManualResponse::mutable_manual_equip() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserManualService.UserManualResponse.manual_equip)
  return &manual_equip_;
}
inline const ::sg::Manual& UserManualService_UserManualResponse::manual_equip(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserManualService.UserManualResponse.manual_equip)
  return manual_equip_.Get(index);
}
inline ::sg::Manual* UserManualService_UserManualResponse::add_manual_equip() {
  // @@protoc_insertion_point(field_add:sg.UserManualService.UserManualResponse.manual_equip)
  return manual_equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Manual >&
UserManualService_UserManualResponse::manual_equip() const {
  // @@protoc_insertion_point(field_list:sg.UserManualService.UserManualResponse.manual_equip)
  return manual_equip_;
}

// -------------------------------------------------------------------

// UserManualService

// optional .sg.UserManualService.UserManualRequest req = 1;
inline bool UserManualService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserManualService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserManualService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserManualService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserManualService_UserManualRequest& UserManualService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserManualService_UserManualRequest& UserManualService::req() const {
  const ::sg::UserManualService_UserManualRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserManualService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserManualService_UserManualRequest*>(
      &::sg::_UserManualService_UserManualRequest_default_instance_);
}
inline ::sg::UserManualService_UserManualRequest* UserManualService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserManualService.req)
  clear_has_req();
  ::sg::UserManualService_UserManualRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserManualService_UserManualRequest* UserManualService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserManualService.req)
  clear_has_req();
  ::sg::UserManualService_UserManualRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserManualService_UserManualRequest* UserManualService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserManualService_UserManualRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserManualService.req)
  return req_;
}
inline void UserManualService::set_allocated_req(::sg::UserManualService_UserManualRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserManualService.req)
}

// optional .sg.UserManualService.UserManualResponse resp = 2;
inline bool UserManualService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserManualService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserManualService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserManualService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserManualService_UserManualResponse& UserManualService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserManualService_UserManualResponse& UserManualService::resp() const {
  const ::sg::UserManualService_UserManualResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserManualService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserManualService_UserManualResponse*>(
      &::sg::_UserManualService_UserManualResponse_default_instance_);
}
inline ::sg::UserManualService_UserManualResponse* UserManualService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserManualService.resp)
  clear_has_resp();
  ::sg::UserManualService_UserManualResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserManualService_UserManualResponse* UserManualService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserManualService.resp)
  clear_has_resp();
  ::sg::UserManualService_UserManualResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserManualService_UserManualResponse* UserManualService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserManualService_UserManualResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserManualService.resp)
  return resp_;
}
inline void UserManualService::set_allocated_resp(::sg::UserManualService_UserManualResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserManualService.resp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sg::UserManualService_MANUAL_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserManualService_MANUAL_CMD>() {
  return ::sg::UserManualService_MANUAL_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Manual_2eproto
