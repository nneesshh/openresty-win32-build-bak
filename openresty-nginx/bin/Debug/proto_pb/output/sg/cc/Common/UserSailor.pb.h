// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserSailor.proto

#ifndef PROTOBUF_INCLUDED_UserSailor_2eproto
#define PROTOBUF_INCLUDED_UserSailor_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "BaseStruct.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_UserSailor_2eproto 

namespace protobuf_UserSailor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_UserSailor_2eproto
namespace sg {
class SailorDelegate;
class SailorDelegateDefaultTypeInternal;
extern SailorDelegateDefaultTypeInternal _SailorDelegate_default_instance_;
class SailorFarmSkillNotify;
class SailorFarmSkillNotifyDefaultTypeInternal;
extern SailorFarmSkillNotifyDefaultTypeInternal _SailorFarmSkillNotify_default_instance_;
class SailorStateNotify;
class SailorStateNotifyDefaultTypeInternal;
extern SailorStateNotifyDefaultTypeInternal _SailorStateNotify_default_instance_;
class UserSailorService;
class UserSailorServiceDefaultTypeInternal;
extern UserSailorServiceDefaultTypeInternal _UserSailorService_default_instance_;
class UserSailorService_UserSailorRequest;
class UserSailorService_UserSailorRequestDefaultTypeInternal;
extern UserSailorService_UserSailorRequestDefaultTypeInternal _UserSailorService_UserSailorRequest_default_instance_;
class UserSailorService_UserSailorResponse;
class UserSailorService_UserSailorResponseDefaultTypeInternal;
extern UserSailorService_UserSailorResponseDefaultTypeInternal _UserSailorService_UserSailorResponse_default_instance_;
class UserSailorStrengthenService;
class UserSailorStrengthenServiceDefaultTypeInternal;
extern UserSailorStrengthenServiceDefaultTypeInternal _UserSailorStrengthenService_default_instance_;
class UserSailorStrengthenService_UserSailorStrengthenRequest;
class UserSailorStrengthenService_UserSailorStrengthenRequestDefaultTypeInternal;
extern UserSailorStrengthenService_UserSailorStrengthenRequestDefaultTypeInternal _UserSailorStrengthenService_UserSailorStrengthenRequest_default_instance_;
class UserSailorStrengthenService_UserSailorStrengthenResponse;
class UserSailorStrengthenService_UserSailorStrengthenResponseDefaultTypeInternal;
extern UserSailorStrengthenService_UserSailorStrengthenResponseDefaultTypeInternal _UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_;
}  // namespace sg
namespace google {
namespace protobuf {
template<> ::sg::SailorDelegate* Arena::CreateMaybeMessage<::sg::SailorDelegate>(Arena*);
template<> ::sg::SailorFarmSkillNotify* Arena::CreateMaybeMessage<::sg::SailorFarmSkillNotify>(Arena*);
template<> ::sg::SailorStateNotify* Arena::CreateMaybeMessage<::sg::SailorStateNotify>(Arena*);
template<> ::sg::UserSailorService* Arena::CreateMaybeMessage<::sg::UserSailorService>(Arena*);
template<> ::sg::UserSailorService_UserSailorRequest* Arena::CreateMaybeMessage<::sg::UserSailorService_UserSailorRequest>(Arena*);
template<> ::sg::UserSailorService_UserSailorResponse* Arena::CreateMaybeMessage<::sg::UserSailorService_UserSailorResponse>(Arena*);
template<> ::sg::UserSailorStrengthenService* Arena::CreateMaybeMessage<::sg::UserSailorStrengthenService>(Arena*);
template<> ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* Arena::CreateMaybeMessage<::sg::UserSailorStrengthenService_UserSailorStrengthenRequest>(Arena*);
template<> ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* Arena::CreateMaybeMessage<::sg::UserSailorStrengthenService_UserSailorStrengthenResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sg {

enum UserSailorService_SAILOR_CMD {
  UserSailorService_SAILOR_CMD_QUERY = 1,
  UserSailorService_SAILOR_CMD_DELEGATE = 2,
  UserSailorService_SAILOR_CMD_CHANGE_EQUIP = 3,
  UserSailorService_SAILOR_CMD_REPLACE = 4,
  UserSailorService_SAILOR_CMD_CONTROL = 5,
  UserSailorService_SAILOR_CMD_BATCH_DELEGATE = 6
};
bool UserSailorService_SAILOR_CMD_IsValid(int value);
const UserSailorService_SAILOR_CMD UserSailorService_SAILOR_CMD_SAILOR_CMD_MIN = UserSailorService_SAILOR_CMD_QUERY;
const UserSailorService_SAILOR_CMD UserSailorService_SAILOR_CMD_SAILOR_CMD_MAX = UserSailorService_SAILOR_CMD_BATCH_DELEGATE;
const int UserSailorService_SAILOR_CMD_SAILOR_CMD_ARRAYSIZE = UserSailorService_SAILOR_CMD_SAILOR_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserSailorService_SAILOR_CMD_descriptor();
inline const ::std::string& UserSailorService_SAILOR_CMD_Name(UserSailorService_SAILOR_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserSailorService_SAILOR_CMD_descriptor(), value);
}
inline bool UserSailorService_SAILOR_CMD_Parse(
    const ::std::string& name, UserSailorService_SAILOR_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserSailorService_SAILOR_CMD>(
    UserSailorService_SAILOR_CMD_descriptor(), name, value);
}
enum UserSailorStrengthenService_SAILOR_CMD {
  UserSailorStrengthenService_SAILOR_CMD_SUMMON = 1,
  UserSailorStrengthenService_SAILOR_CMD_STRENGTHEN = 2,
  UserSailorStrengthenService_SAILOR_CMD_FARM_SKILL_LEVEL_UP = 3,
  UserSailorStrengthenService_SAILOR_CMD_SKILL_LEVEL_UP = 4,
  UserSailorStrengthenService_SAILOR_CMD_LEVEL_UP_SKILL_BATCH = 5,
  UserSailorStrengthenService_SAILOR_CMD_CHIP_EXCHANGE = 6,
  UserSailorStrengthenService_SAILOR_CMD_SKILL_EXCHANGE = 7,
  UserSailorStrengthenService_SAILOR_CMD_LEARN_SKILL = 8,
  UserSailorStrengthenService_SAILOR_CMD_PRACTICE = 9
};
bool UserSailorStrengthenService_SAILOR_CMD_IsValid(int value);
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService_SAILOR_CMD_SAILOR_CMD_MIN = UserSailorStrengthenService_SAILOR_CMD_SUMMON;
const UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService_SAILOR_CMD_SAILOR_CMD_MAX = UserSailorStrengthenService_SAILOR_CMD_PRACTICE;
const int UserSailorStrengthenService_SAILOR_CMD_SAILOR_CMD_ARRAYSIZE = UserSailorStrengthenService_SAILOR_CMD_SAILOR_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserSailorStrengthenService_SAILOR_CMD_descriptor();
inline const ::std::string& UserSailorStrengthenService_SAILOR_CMD_Name(UserSailorStrengthenService_SAILOR_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserSailorStrengthenService_SAILOR_CMD_descriptor(), value);
}
inline bool UserSailorStrengthenService_SAILOR_CMD_Parse(
    const ::std::string& name, UserSailorStrengthenService_SAILOR_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserSailorStrengthenService_SAILOR_CMD>(
    UserSailorStrengthenService_SAILOR_CMD_descriptor(), name, value);
}
enum SAILOR_CONTROL_CODE {
  CODE_NONE = 0,
  SEND_FOOD = 1,
  CODE_OVER = 99
};
bool SAILOR_CONTROL_CODE_IsValid(int value);
const SAILOR_CONTROL_CODE SAILOR_CONTROL_CODE_MIN = CODE_NONE;
const SAILOR_CONTROL_CODE SAILOR_CONTROL_CODE_MAX = CODE_OVER;
const int SAILOR_CONTROL_CODE_ARRAYSIZE = SAILOR_CONTROL_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SAILOR_CONTROL_CODE_descriptor();
inline const ::std::string& SAILOR_CONTROL_CODE_Name(SAILOR_CONTROL_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SAILOR_CONTROL_CODE_descriptor(), value);
}
inline bool SAILOR_CONTROL_CODE_Parse(
    const ::std::string& name, SAILOR_CONTROL_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SAILOR_CONTROL_CODE>(
    SAILOR_CONTROL_CODE_descriptor(), name, value);
}
// ===================================================================

class SailorDelegate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.SailorDelegate) */ {
 public:
  SailorDelegate();
  virtual ~SailorDelegate();

  SailorDelegate(const SailorDelegate& from);

  inline SailorDelegate& operator=(const SailorDelegate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SailorDelegate(SailorDelegate&& from) noexcept
    : SailorDelegate() {
    *this = ::std::move(from);
  }

  inline SailorDelegate& operator=(SailorDelegate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SailorDelegate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SailorDelegate* internal_default_instance() {
    return reinterpret_cast<const SailorDelegate*>(
               &_SailorDelegate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(SailorDelegate* other);
  void Swap(SailorDelegate* other);
  friend void swap(SailorDelegate& a, SailorDelegate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SailorDelegate* New() const final {
    return CreateMaybeMessage<SailorDelegate>(NULL);
  }

  SailorDelegate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SailorDelegate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SailorDelegate& from);
  void MergeFrom(const SailorDelegate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SailorDelegate* other);
  protected:
  explicit SailorDelegate(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sailor_id = 1;
  bool has_sailor_id() const;
  void clear_sailor_id();
  static const int kSailorIdFieldNumber = 1;
  ::google::protobuf::int32 sailor_id() const;
  void set_sailor_id(::google::protobuf::int32 value);

  // required int32 job = 2;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 2;
  ::google::protobuf::int32 job() const;
  void set_job(::google::protobuf::int32 value);

  // required int32 index = 3;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.SailorDelegate)
 private:
  void set_has_sailor_id();
  void clear_has_sailor_id();
  void set_has_job();
  void clear_has_job();
  void set_has_index();
  void clear_has_index();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 sailor_id_;
  ::google::protobuf::int32 job_;
  ::google::protobuf::int32 index_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserSailorService_UserSailorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserSailorService.UserSailorRequest) */ {
 public:
  UserSailorService_UserSailorRequest();
  virtual ~UserSailorService_UserSailorRequest();

  UserSailorService_UserSailorRequest(const UserSailorService_UserSailorRequest& from);

  inline UserSailorService_UserSailorRequest& operator=(const UserSailorService_UserSailorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSailorService_UserSailorRequest(UserSailorService_UserSailorRequest&& from) noexcept
    : UserSailorService_UserSailorRequest() {
    *this = ::std::move(from);
  }

  inline UserSailorService_UserSailorRequest& operator=(UserSailorService_UserSailorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSailorService_UserSailorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSailorService_UserSailorRequest* internal_default_instance() {
    return reinterpret_cast<const UserSailorService_UserSailorRequest*>(
               &_UserSailorService_UserSailorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(UserSailorService_UserSailorRequest* other);
  void Swap(UserSailorService_UserSailorRequest* other);
  friend void swap(UserSailorService_UserSailorRequest& a, UserSailorService_UserSailorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSailorService_UserSailorRequest* New() const final {
    return CreateMaybeMessage<UserSailorService_UserSailorRequest>(NULL);
  }

  UserSailorService_UserSailorRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserSailorService_UserSailorRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserSailorService_UserSailorRequest& from);
  void MergeFrom(const UserSailorService_UserSailorRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserSailorService_UserSailorRequest* other);
  protected:
  explicit UserSailorService_UserSailorRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.SailorDelegate delegates = 8;
  int delegates_size() const;
  void clear_delegates();
  static const int kDelegatesFieldNumber = 8;
  ::sg::SailorDelegate* mutable_delegates(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::SailorDelegate >*
      mutable_delegates();
  const ::sg::SailorDelegate& delegates(int index) const;
  ::sg::SailorDelegate* add_delegates();
  const ::google::protobuf::RepeatedPtrField< ::sg::SailorDelegate >&
      delegates() const;

  // repeated .sg.pb_pair_int_int replace_list = 11;
  int replace_list_size() const;
  void clear_replace_list();
  static const int kReplaceListFieldNumber = 11;
  ::sg::pb_pair_int_int* mutable_replace_list(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int >*
      mutable_replace_list();
  const ::sg::pb_pair_int_int& replace_list(int index) const;
  ::sg::pb_pair_int_int* add_replace_list();
  const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int >&
      replace_list() const;

  // optional int32 sailor_id = 2;
  bool has_sailor_id() const;
  void clear_sailor_id();
  static const int kSailorIdFieldNumber = 2;
  ::google::protobuf::int32 sailor_id() const;
  void set_sailor_id(::google::protobuf::int32 value);

  // optional int32 work_order = 3;
  bool has_work_order() const;
  void clear_work_order();
  static const int kWorkOrderFieldNumber = 3;
  ::google::protobuf::int32 work_order() const;
  void set_work_order(::google::protobuf::int32 value);

  // optional int32 work_facility = 5;
  bool has_work_facility() const;
  void clear_work_facility();
  static const int kWorkFacilityFieldNumber = 5;
  ::google::protobuf::int32 work_facility() const;
  void set_work_facility(::google::protobuf::int32 value);

  // optional int32 work_index = 6;
  bool has_work_index() const;
  void clear_work_index();
  static const int kWorkIndexFieldNumber = 6;
  ::google::protobuf::int32 work_index() const;
  void set_work_index(::google::protobuf::int32 value);

  // optional .sg.SAILOR_CONTROL_CODE control_code = 7;
  bool has_control_code() const;
  void clear_control_code();
  static const int kControlCodeFieldNumber = 7;
  ::sg::SAILOR_CONTROL_CODE control_code() const;
  void set_control_code(::sg::SAILOR_CONTROL_CODE value);

  // optional int32 equip_part = 9;
  bool has_equip_part() const;
  void clear_equip_part();
  static const int kEquipPartFieldNumber = 9;
  ::google::protobuf::int32 equip_part() const;
  void set_equip_part(::google::protobuf::int32 value);

  // optional int32 equip_id = 10;
  bool has_equip_id() const;
  void clear_equip_id();
  static const int kEquipIdFieldNumber = 10;
  ::google::protobuf::int32 equip_id() const;
  void set_equip_id(::google::protobuf::int32 value);

  // required .sg.UserSailorService.SAILOR_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserSailorService_SAILOR_CMD cmd() const;
  void set_cmd(::sg::UserSailorService_SAILOR_CMD value);

  // @@protoc_insertion_point(class_scope:sg.UserSailorService.UserSailorRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_sailor_id();
  void clear_has_sailor_id();
  void set_has_work_order();
  void clear_has_work_order();
  void set_has_work_facility();
  void clear_has_work_facility();
  void set_has_work_index();
  void clear_has_work_index();
  void set_has_control_code();
  void clear_has_control_code();
  void set_has_equip_part();
  void clear_has_equip_part();
  void set_has_equip_id();
  void clear_has_equip_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::SailorDelegate > delegates_;
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int > replace_list_;
  ::google::protobuf::int32 sailor_id_;
  ::google::protobuf::int32 work_order_;
  ::google::protobuf::int32 work_facility_;
  ::google::protobuf::int32 work_index_;
  int control_code_;
  ::google::protobuf::int32 equip_part_;
  ::google::protobuf::int32 equip_id_;
  int cmd_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserSailorService_UserSailorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserSailorService.UserSailorResponse) */ {
 public:
  UserSailorService_UserSailorResponse();
  virtual ~UserSailorService_UserSailorResponse();

  UserSailorService_UserSailorResponse(const UserSailorService_UserSailorResponse& from);

  inline UserSailorService_UserSailorResponse& operator=(const UserSailorService_UserSailorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSailorService_UserSailorResponse(UserSailorService_UserSailorResponse&& from) noexcept
    : UserSailorService_UserSailorResponse() {
    *this = ::std::move(from);
  }

  inline UserSailorService_UserSailorResponse& operator=(UserSailorService_UserSailorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSailorService_UserSailorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSailorService_UserSailorResponse* internal_default_instance() {
    return reinterpret_cast<const UserSailorService_UserSailorResponse*>(
               &_UserSailorService_UserSailorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(UserSailorService_UserSailorResponse* other);
  void Swap(UserSailorService_UserSailorResponse* other);
  friend void swap(UserSailorService_UserSailorResponse& a, UserSailorService_UserSailorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSailorService_UserSailorResponse* New() const final {
    return CreateMaybeMessage<UserSailorService_UserSailorResponse>(NULL);
  }

  UserSailorService_UserSailorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserSailorService_UserSailorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserSailorService_UserSailorResponse& from);
  void MergeFrom(const UserSailorService_UserSailorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserSailorService_UserSailorResponse* other);
  protected:
  explicit UserSailorService_UserSailorResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.Sailor sailors = 2;
  int sailors_size() const;
  void clear_sailors();
  static const int kSailorsFieldNumber = 2;
  ::sg::Sailor* mutable_sailors(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Sailor >*
      mutable_sailors();
  const ::sg::Sailor& sailors(int index) const;
  ::sg::Sailor* add_sailors();
  const ::google::protobuf::RepeatedPtrField< ::sg::Sailor >&
      sailors() const;

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserSailorService.UserSailorResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::Sailor > sailors_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserSailorService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserSailorService) */ {
 public:
  UserSailorService();
  virtual ~UserSailorService();

  UserSailorService(const UserSailorService& from);

  inline UserSailorService& operator=(const UserSailorService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSailorService(UserSailorService&& from) noexcept
    : UserSailorService() {
    *this = ::std::move(from);
  }

  inline UserSailorService& operator=(UserSailorService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSailorService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSailorService* internal_default_instance() {
    return reinterpret_cast<const UserSailorService*>(
               &_UserSailorService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(UserSailorService* other);
  void Swap(UserSailorService* other);
  friend void swap(UserSailorService& a, UserSailorService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSailorService* New() const final {
    return CreateMaybeMessage<UserSailorService>(NULL);
  }

  UserSailorService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserSailorService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserSailorService& from);
  void MergeFrom(const UserSailorService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserSailorService* other);
  protected:
  explicit UserSailorService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserSailorService_UserSailorRequest UserSailorRequest;
  typedef UserSailorService_UserSailorResponse UserSailorResponse;

  typedef UserSailorService_SAILOR_CMD SAILOR_CMD;
  static const SAILOR_CMD QUERY =
    UserSailorService_SAILOR_CMD_QUERY;
  static const SAILOR_CMD DELEGATE =
    UserSailorService_SAILOR_CMD_DELEGATE;
  static const SAILOR_CMD CHANGE_EQUIP =
    UserSailorService_SAILOR_CMD_CHANGE_EQUIP;
  static const SAILOR_CMD REPLACE =
    UserSailorService_SAILOR_CMD_REPLACE;
  static const SAILOR_CMD CONTROL =
    UserSailorService_SAILOR_CMD_CONTROL;
  static const SAILOR_CMD BATCH_DELEGATE =
    UserSailorService_SAILOR_CMD_BATCH_DELEGATE;
  static inline bool SAILOR_CMD_IsValid(int value) {
    return UserSailorService_SAILOR_CMD_IsValid(value);
  }
  static const SAILOR_CMD SAILOR_CMD_MIN =
    UserSailorService_SAILOR_CMD_SAILOR_CMD_MIN;
  static const SAILOR_CMD SAILOR_CMD_MAX =
    UserSailorService_SAILOR_CMD_SAILOR_CMD_MAX;
  static const int SAILOR_CMD_ARRAYSIZE =
    UserSailorService_SAILOR_CMD_SAILOR_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SAILOR_CMD_descriptor() {
    return UserSailorService_SAILOR_CMD_descriptor();
  }
  static inline const ::std::string& SAILOR_CMD_Name(SAILOR_CMD value) {
    return UserSailorService_SAILOR_CMD_Name(value);
  }
  static inline bool SAILOR_CMD_Parse(const ::std::string& name,
      SAILOR_CMD* value) {
    return UserSailorService_SAILOR_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserSailorService.UserSailorRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserSailorService_UserSailorRequest& _internal_req() const;
  public:
  const ::sg::UserSailorService_UserSailorRequest& req() const;
  ::sg::UserSailorService_UserSailorRequest* release_req();
  ::sg::UserSailorService_UserSailorRequest* mutable_req();
  void set_allocated_req(::sg::UserSailorService_UserSailorRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserSailorService_UserSailorRequest* req);
  ::sg::UserSailorService_UserSailorRequest* unsafe_arena_release_req();

  // optional .sg.UserSailorService.UserSailorResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserSailorService_UserSailorResponse& _internal_resp() const;
  public:
  const ::sg::UserSailorService_UserSailorResponse& resp() const;
  ::sg::UserSailorService_UserSailorResponse* release_resp();
  ::sg::UserSailorService_UserSailorResponse* mutable_resp();
  void set_allocated_resp(::sg::UserSailorService_UserSailorResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserSailorService_UserSailorResponse* resp);
  ::sg::UserSailorService_UserSailorResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserSailorService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserSailorService_UserSailorRequest* req_;
  ::sg::UserSailorService_UserSailorResponse* resp_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserSailorStrengthenService_UserSailorStrengthenRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserSailorStrengthenService.UserSailorStrengthenRequest) */ {
 public:
  UserSailorStrengthenService_UserSailorStrengthenRequest();
  virtual ~UserSailorStrengthenService_UserSailorStrengthenRequest();

  UserSailorStrengthenService_UserSailorStrengthenRequest(const UserSailorStrengthenService_UserSailorStrengthenRequest& from);

  inline UserSailorStrengthenService_UserSailorStrengthenRequest& operator=(const UserSailorStrengthenService_UserSailorStrengthenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSailorStrengthenService_UserSailorStrengthenRequest(UserSailorStrengthenService_UserSailorStrengthenRequest&& from) noexcept
    : UserSailorStrengthenService_UserSailorStrengthenRequest() {
    *this = ::std::move(from);
  }

  inline UserSailorStrengthenService_UserSailorStrengthenRequest& operator=(UserSailorStrengthenService_UserSailorStrengthenRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSailorStrengthenService_UserSailorStrengthenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSailorStrengthenService_UserSailorStrengthenRequest* internal_default_instance() {
    return reinterpret_cast<const UserSailorStrengthenService_UserSailorStrengthenRequest*>(
               &_UserSailorStrengthenService_UserSailorStrengthenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(UserSailorStrengthenService_UserSailorStrengthenRequest* other);
  void Swap(UserSailorStrengthenService_UserSailorStrengthenRequest* other);
  friend void swap(UserSailorStrengthenService_UserSailorStrengthenRequest& a, UserSailorStrengthenService_UserSailorStrengthenRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSailorStrengthenService_UserSailorStrengthenRequest* New() const final {
    return CreateMaybeMessage<UserSailorStrengthenService_UserSailorStrengthenRequest>(NULL);
  }

  UserSailorStrengthenService_UserSailorStrengthenRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserSailorStrengthenService_UserSailorStrengthenRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserSailorStrengthenService_UserSailorStrengthenRequest& from);
  void MergeFrom(const UserSailorStrengthenService_UserSailorStrengthenRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserSailorStrengthenService_UserSailorStrengthenRequest* other);
  protected:
  explicit UserSailorStrengthenService_UserSailorStrengthenRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.pb_pair_int_int skill_list = 5;
  int skill_list_size() const;
  void clear_skill_list();
  static const int kSkillListFieldNumber = 5;
  ::sg::pb_pair_int_int* mutable_skill_list(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int >*
      mutable_skill_list();
  const ::sg::pb_pair_int_int& skill_list(int index) const;
  ::sg::pb_pair_int_int* add_skill_list();
  const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int >&
      skill_list() const;

  // optional int32 sailor_id = 2;
  bool has_sailor_id() const;
  void clear_sailor_id();
  static const int kSailorIdFieldNumber = 2;
  ::google::protobuf::int32 sailor_id() const;
  void set_sailor_id(::google::protobuf::int32 value);

  // optional int32 sailor_typeid = 3;
  bool has_sailor_typeid() const;
  void clear_sailor_typeid();
  static const int kSailorTypeidFieldNumber = 3;
  ::google::protobuf::int32 sailor_typeid() const;
  void set_sailor_typeid(::google::protobuf::int32 value);

  // optional int32 skill_id = 4;
  bool has_skill_id() const;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 4;
  ::google::protobuf::int32 skill_id() const;
  void set_skill_id(::google::protobuf::int32 value);

  // optional int32 exchange_num = 6;
  bool has_exchange_num() const;
  void clear_exchange_num();
  static const int kExchangeNumFieldNumber = 6;
  ::google::protobuf::int32 exchange_num() const;
  void set_exchange_num(::google::protobuf::int32 value);

  // optional int32 skill_book = 7;
  bool has_skill_book() const;
  void clear_skill_book();
  static const int kSkillBookFieldNumber = 7;
  ::google::protobuf::int32 skill_book() const;
  void set_skill_book(::google::protobuf::int32 value);

  // required .sg.UserSailorStrengthenService.SAILOR_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserSailorStrengthenService_SAILOR_CMD cmd() const;
  void set_cmd(::sg::UserSailorStrengthenService_SAILOR_CMD value);

  // @@protoc_insertion_point(class_scope:sg.UserSailorStrengthenService.UserSailorStrengthenRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_sailor_id();
  void clear_has_sailor_id();
  void set_has_sailor_typeid();
  void clear_has_sailor_typeid();
  void set_has_skill_id();
  void clear_has_skill_id();
  void set_has_exchange_num();
  void clear_has_exchange_num();
  void set_has_skill_book();
  void clear_has_skill_book();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int > skill_list_;
  ::google::protobuf::int32 sailor_id_;
  ::google::protobuf::int32 sailor_typeid_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 exchange_num_;
  ::google::protobuf::int32 skill_book_;
  int cmd_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserSailorStrengthenService_UserSailorStrengthenResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserSailorStrengthenService.UserSailorStrengthenResponse) */ {
 public:
  UserSailorStrengthenService_UserSailorStrengthenResponse();
  virtual ~UserSailorStrengthenService_UserSailorStrengthenResponse();

  UserSailorStrengthenService_UserSailorStrengthenResponse(const UserSailorStrengthenService_UserSailorStrengthenResponse& from);

  inline UserSailorStrengthenService_UserSailorStrengthenResponse& operator=(const UserSailorStrengthenService_UserSailorStrengthenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSailorStrengthenService_UserSailorStrengthenResponse(UserSailorStrengthenService_UserSailorStrengthenResponse&& from) noexcept
    : UserSailorStrengthenService_UserSailorStrengthenResponse() {
    *this = ::std::move(from);
  }

  inline UserSailorStrengthenService_UserSailorStrengthenResponse& operator=(UserSailorStrengthenService_UserSailorStrengthenResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSailorStrengthenService_UserSailorStrengthenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSailorStrengthenService_UserSailorStrengthenResponse* internal_default_instance() {
    return reinterpret_cast<const UserSailorStrengthenService_UserSailorStrengthenResponse*>(
               &_UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(UserSailorStrengthenService_UserSailorStrengthenResponse* other);
  void Swap(UserSailorStrengthenService_UserSailorStrengthenResponse* other);
  friend void swap(UserSailorStrengthenService_UserSailorStrengthenResponse& a, UserSailorStrengthenService_UserSailorStrengthenResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSailorStrengthenService_UserSailorStrengthenResponse* New() const final {
    return CreateMaybeMessage<UserSailorStrengthenService_UserSailorStrengthenResponse>(NULL);
  }

  UserSailorStrengthenService_UserSailorStrengthenResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserSailorStrengthenService_UserSailorStrengthenResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserSailorStrengthenService_UserSailorStrengthenResponse& from);
  void MergeFrom(const UserSailorStrengthenService_UserSailorStrengthenResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserSailorStrengthenService_UserSailorStrengthenResponse* other);
  protected:
  explicit UserSailorStrengthenService_UserSailorStrengthenResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sg.Sailor sailor = 2;
  bool has_sailor() const;
  void clear_sailor();
  static const int kSailorFieldNumber = 2;
  private:
  const ::sg::Sailor& _internal_sailor() const;
  public:
  const ::sg::Sailor& sailor() const;
  ::sg::Sailor* release_sailor();
  ::sg::Sailor* mutable_sailor();
  void set_allocated_sailor(::sg::Sailor* sailor);
  void unsafe_arena_set_allocated_sailor(
      ::sg::Sailor* sailor);
  ::sg::Sailor* unsafe_arena_release_sailor();

  // optional .sg.Item return_item = 3;
  bool has_return_item() const;
  void clear_return_item();
  static const int kReturnItemFieldNumber = 3;
  private:
  const ::sg::Item& _internal_return_item() const;
  public:
  const ::sg::Item& return_item() const;
  ::sg::Item* release_return_item();
  ::sg::Item* mutable_return_item();
  void set_allocated_return_item(::sg::Item* return_item);
  void unsafe_arena_set_allocated_return_item(
      ::sg::Item* return_item);
  ::sg::Item* unsafe_arena_release_return_item();

  // optional .sg.SailorSkill skill = 4;
  bool has_skill() const;
  void clear_skill();
  static const int kSkillFieldNumber = 4;
  private:
  const ::sg::SailorSkill& _internal_skill() const;
  public:
  const ::sg::SailorSkill& skill() const;
  ::sg::SailorSkill* release_skill();
  ::sg::SailorSkill* mutable_skill();
  void set_allocated_skill(::sg::SailorSkill* skill);
  void unsafe_arena_set_allocated_skill(
      ::sg::SailorSkill* skill);
  ::sg::SailorSkill* unsafe_arena_release_skill();

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserSailorStrengthenService.UserSailorStrengthenResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_sailor();
  void clear_has_sailor();
  void set_has_return_item();
  void clear_has_return_item();
  void set_has_skill();
  void clear_has_skill();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::Sailor* sailor_;
  ::sg::Item* return_item_;
  ::sg::SailorSkill* skill_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserSailorStrengthenService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserSailorStrengthenService) */ {
 public:
  UserSailorStrengthenService();
  virtual ~UserSailorStrengthenService();

  UserSailorStrengthenService(const UserSailorStrengthenService& from);

  inline UserSailorStrengthenService& operator=(const UserSailorStrengthenService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSailorStrengthenService(UserSailorStrengthenService&& from) noexcept
    : UserSailorStrengthenService() {
    *this = ::std::move(from);
  }

  inline UserSailorStrengthenService& operator=(UserSailorStrengthenService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSailorStrengthenService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSailorStrengthenService* internal_default_instance() {
    return reinterpret_cast<const UserSailorStrengthenService*>(
               &_UserSailorStrengthenService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(UserSailorStrengthenService* other);
  void Swap(UserSailorStrengthenService* other);
  friend void swap(UserSailorStrengthenService& a, UserSailorStrengthenService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSailorStrengthenService* New() const final {
    return CreateMaybeMessage<UserSailorStrengthenService>(NULL);
  }

  UserSailorStrengthenService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserSailorStrengthenService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserSailorStrengthenService& from);
  void MergeFrom(const UserSailorStrengthenService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserSailorStrengthenService* other);
  protected:
  explicit UserSailorStrengthenService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserSailorStrengthenService_UserSailorStrengthenRequest UserSailorStrengthenRequest;
  typedef UserSailorStrengthenService_UserSailorStrengthenResponse UserSailorStrengthenResponse;

  typedef UserSailorStrengthenService_SAILOR_CMD SAILOR_CMD;
  static const SAILOR_CMD SUMMON =
    UserSailorStrengthenService_SAILOR_CMD_SUMMON;
  static const SAILOR_CMD STRENGTHEN =
    UserSailorStrengthenService_SAILOR_CMD_STRENGTHEN;
  static const SAILOR_CMD FARM_SKILL_LEVEL_UP =
    UserSailorStrengthenService_SAILOR_CMD_FARM_SKILL_LEVEL_UP;
  static const SAILOR_CMD SKILL_LEVEL_UP =
    UserSailorStrengthenService_SAILOR_CMD_SKILL_LEVEL_UP;
  static const SAILOR_CMD LEVEL_UP_SKILL_BATCH =
    UserSailorStrengthenService_SAILOR_CMD_LEVEL_UP_SKILL_BATCH;
  static const SAILOR_CMD CHIP_EXCHANGE =
    UserSailorStrengthenService_SAILOR_CMD_CHIP_EXCHANGE;
  static const SAILOR_CMD SKILL_EXCHANGE =
    UserSailorStrengthenService_SAILOR_CMD_SKILL_EXCHANGE;
  static const SAILOR_CMD LEARN_SKILL =
    UserSailorStrengthenService_SAILOR_CMD_LEARN_SKILL;
  static const SAILOR_CMD PRACTICE =
    UserSailorStrengthenService_SAILOR_CMD_PRACTICE;
  static inline bool SAILOR_CMD_IsValid(int value) {
    return UserSailorStrengthenService_SAILOR_CMD_IsValid(value);
  }
  static const SAILOR_CMD SAILOR_CMD_MIN =
    UserSailorStrengthenService_SAILOR_CMD_SAILOR_CMD_MIN;
  static const SAILOR_CMD SAILOR_CMD_MAX =
    UserSailorStrengthenService_SAILOR_CMD_SAILOR_CMD_MAX;
  static const int SAILOR_CMD_ARRAYSIZE =
    UserSailorStrengthenService_SAILOR_CMD_SAILOR_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SAILOR_CMD_descriptor() {
    return UserSailorStrengthenService_SAILOR_CMD_descriptor();
  }
  static inline const ::std::string& SAILOR_CMD_Name(SAILOR_CMD value) {
    return UserSailorStrengthenService_SAILOR_CMD_Name(value);
  }
  static inline bool SAILOR_CMD_Parse(const ::std::string& name,
      SAILOR_CMD* value) {
    return UserSailorStrengthenService_SAILOR_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserSailorStrengthenService.UserSailorStrengthenRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest& _internal_req() const;
  public:
  const ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest& req() const;
  ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* release_req();
  ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* mutable_req();
  void set_allocated_req(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* req);
  ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* unsafe_arena_release_req();

  // optional .sg.UserSailorStrengthenService.UserSailorStrengthenResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse& _internal_resp() const;
  public:
  const ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse& resp() const;
  ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* release_resp();
  ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* mutable_resp();
  void set_allocated_resp(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* resp);
  ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserSailorStrengthenService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* req_;
  ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* resp_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SailorStateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.SailorStateNotify) */ {
 public:
  SailorStateNotify();
  virtual ~SailorStateNotify();

  SailorStateNotify(const SailorStateNotify& from);

  inline SailorStateNotify& operator=(const SailorStateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SailorStateNotify(SailorStateNotify&& from) noexcept
    : SailorStateNotify() {
    *this = ::std::move(from);
  }

  inline SailorStateNotify& operator=(SailorStateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SailorStateNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SailorStateNotify* internal_default_instance() {
    return reinterpret_cast<const SailorStateNotify*>(
               &_SailorStateNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(SailorStateNotify* other);
  void Swap(SailorStateNotify* other);
  friend void swap(SailorStateNotify& a, SailorStateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SailorStateNotify* New() const final {
    return CreateMaybeMessage<SailorStateNotify>(NULL);
  }

  SailorStateNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SailorStateNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SailorStateNotify& from);
  void MergeFrom(const SailorStateNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SailorStateNotify* other);
  protected:
  explicit SailorStateNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sailorid = 1;
  bool has_sailorid() const;
  void clear_sailorid();
  static const int kSailoridFieldNumber = 1;
  ::google::protobuf::int32 sailorid() const;
  void set_sailorid(::google::protobuf::int32 value);

  // optional .sg.SAILOR_STATE _state = 2;
  bool has__state() const;
  void clear__state();
  static const int kStateFieldNumber = 2;
  ::sg::SAILOR_STATE _state() const;
  void set__state(::sg::SAILOR_STATE value);

  // optional uint64 roomid = 4;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomidFieldNumber = 4;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // optional int32 duration = 3;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // optional int32 facilityid = 5;
  bool has_facilityid() const;
  void clear_facilityid();
  static const int kFacilityidFieldNumber = 5;
  ::google::protobuf::int32 facilityid() const;
  void set_facilityid(::google::protobuf::int32 value);

  // optional int32 orderid = 6;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 6;
  ::google::protobuf::int32 orderid() const;
  void set_orderid(::google::protobuf::int32 value);

  // optional int32 job = 7;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 7;
  ::google::protobuf::int32 job() const;
  void set_job(::google::protobuf::int32 value);

  // optional int32 hunger = 8;
  bool has_hunger() const;
  void clear_hunger();
  static const int kHungerFieldNumber = 8;
  ::google::protobuf::int32 hunger() const;
  void set_hunger(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.SailorStateNotify)
 private:
  void set_has_sailorid();
  void clear_has_sailorid();
  void set_has__state();
  void clear_has__state();
  void set_has_duration();
  void clear_has_duration();
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_facilityid();
  void clear_has_facilityid();
  void set_has_orderid();
  void clear_has_orderid();
  void set_has_job();
  void clear_has_job();
  void set_has_hunger();
  void clear_has_hunger();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 sailorid_;
  int _state_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 facilityid_;
  ::google::protobuf::int32 orderid_;
  ::google::protobuf::int32 job_;
  ::google::protobuf::int32 hunger_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SailorFarmSkillNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.SailorFarmSkillNotify) */ {
 public:
  SailorFarmSkillNotify();
  virtual ~SailorFarmSkillNotify();

  SailorFarmSkillNotify(const SailorFarmSkillNotify& from);

  inline SailorFarmSkillNotify& operator=(const SailorFarmSkillNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SailorFarmSkillNotify(SailorFarmSkillNotify&& from) noexcept
    : SailorFarmSkillNotify() {
    *this = ::std::move(from);
  }

  inline SailorFarmSkillNotify& operator=(SailorFarmSkillNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SailorFarmSkillNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SailorFarmSkillNotify* internal_default_instance() {
    return reinterpret_cast<const SailorFarmSkillNotify*>(
               &_SailorFarmSkillNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(SailorFarmSkillNotify* other);
  void Swap(SailorFarmSkillNotify* other);
  friend void swap(SailorFarmSkillNotify& a, SailorFarmSkillNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SailorFarmSkillNotify* New() const final {
    return CreateMaybeMessage<SailorFarmSkillNotify>(NULL);
  }

  SailorFarmSkillNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SailorFarmSkillNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SailorFarmSkillNotify& from);
  void MergeFrom(const SailorFarmSkillNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SailorFarmSkillNotify* other);
  protected:
  explicit SailorFarmSkillNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 skillid = 2;
  bool has_skillid() const;
  void clear_skillid();
  static const int kSkillidFieldNumber = 2;
  ::google::protobuf::uint64 skillid() const;
  void set_skillid(::google::protobuf::uint64 value);

  // required int32 sailorid = 1;
  bool has_sailorid() const;
  void clear_sailorid();
  static const int kSailoridFieldNumber = 1;
  ::google::protobuf::int32 sailorid() const;
  void set_sailorid(::google::protobuf::int32 value);

  // optional int32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 exp = 4;
  bool has_exp() const;
  void clear_exp();
  static const int kExpFieldNumber = 4;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.SailorFarmSkillNotify)
 private:
  void set_has_sailorid();
  void clear_has_sailorid();
  void set_has_skillid();
  void clear_has_skillid();
  void set_has_level();
  void clear_has_level();
  void set_has_exp();
  void clear_has_exp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 skillid_;
  ::google::protobuf::int32 sailorid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  friend struct ::protobuf_UserSailor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SailorDelegate

// required int32 sailor_id = 1;
inline bool SailorDelegate::has_sailor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SailorDelegate::set_has_sailor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SailorDelegate::clear_has_sailor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SailorDelegate::clear_sailor_id() {
  sailor_id_ = 0;
  clear_has_sailor_id();
}
inline ::google::protobuf::int32 SailorDelegate::sailor_id() const {
  // @@protoc_insertion_point(field_get:sg.SailorDelegate.sailor_id)
  return sailor_id_;
}
inline void SailorDelegate::set_sailor_id(::google::protobuf::int32 value) {
  set_has_sailor_id();
  sailor_id_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorDelegate.sailor_id)
}

// required int32 job = 2;
inline bool SailorDelegate::has_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SailorDelegate::set_has_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SailorDelegate::clear_has_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SailorDelegate::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::google::protobuf::int32 SailorDelegate::job() const {
  // @@protoc_insertion_point(field_get:sg.SailorDelegate.job)
  return job_;
}
inline void SailorDelegate::set_job(::google::protobuf::int32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorDelegate.job)
}

// required int32 index = 3;
inline bool SailorDelegate::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SailorDelegate::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SailorDelegate::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SailorDelegate::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 SailorDelegate::index() const {
  // @@protoc_insertion_point(field_get:sg.SailorDelegate.index)
  return index_;
}
inline void SailorDelegate::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorDelegate.index)
}

// -------------------------------------------------------------------

// UserSailorService_UserSailorRequest

// required .sg.UserSailorService.SAILOR_CMD cmd = 1;
inline bool UserSailorService_UserSailorRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserSailorService_UserSailorRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserSailorService_UserSailorRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserSailorService_UserSailorRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserSailorService_SAILOR_CMD UserSailorService_UserSailorRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.cmd)
  return static_cast< ::sg::UserSailorService_SAILOR_CMD >(cmd_);
}
inline void UserSailorService_UserSailorRequest::set_cmd(::sg::UserSailorService_SAILOR_CMD value) {
  assert(::sg::UserSailorService_SAILOR_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorRequest.cmd)
}

// optional int32 sailor_id = 2;
inline bool UserSailorService_UserSailorRequest::has_sailor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSailorService_UserSailorRequest::set_has_sailor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSailorService_UserSailorRequest::clear_has_sailor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSailorService_UserSailorRequest::clear_sailor_id() {
  sailor_id_ = 0;
  clear_has_sailor_id();
}
inline ::google::protobuf::int32 UserSailorService_UserSailorRequest::sailor_id() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.sailor_id)
  return sailor_id_;
}
inline void UserSailorService_UserSailorRequest::set_sailor_id(::google::protobuf::int32 value) {
  set_has_sailor_id();
  sailor_id_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorRequest.sailor_id)
}

// optional int32 work_order = 3;
inline bool UserSailorService_UserSailorRequest::has_work_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSailorService_UserSailorRequest::set_has_work_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSailorService_UserSailorRequest::clear_has_work_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSailorService_UserSailorRequest::clear_work_order() {
  work_order_ = 0;
  clear_has_work_order();
}
inline ::google::protobuf::int32 UserSailorService_UserSailorRequest::work_order() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.work_order)
  return work_order_;
}
inline void UserSailorService_UserSailorRequest::set_work_order(::google::protobuf::int32 value) {
  set_has_work_order();
  work_order_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorRequest.work_order)
}

// optional int32 work_facility = 5;
inline bool UserSailorService_UserSailorRequest::has_work_facility() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSailorService_UserSailorRequest::set_has_work_facility() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSailorService_UserSailorRequest::clear_has_work_facility() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSailorService_UserSailorRequest::clear_work_facility() {
  work_facility_ = 0;
  clear_has_work_facility();
}
inline ::google::protobuf::int32 UserSailorService_UserSailorRequest::work_facility() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.work_facility)
  return work_facility_;
}
inline void UserSailorService_UserSailorRequest::set_work_facility(::google::protobuf::int32 value) {
  set_has_work_facility();
  work_facility_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorRequest.work_facility)
}

// optional int32 work_index = 6;
inline bool UserSailorService_UserSailorRequest::has_work_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSailorService_UserSailorRequest::set_has_work_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSailorService_UserSailorRequest::clear_has_work_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSailorService_UserSailorRequest::clear_work_index() {
  work_index_ = 0;
  clear_has_work_index();
}
inline ::google::protobuf::int32 UserSailorService_UserSailorRequest::work_index() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.work_index)
  return work_index_;
}
inline void UserSailorService_UserSailorRequest::set_work_index(::google::protobuf::int32 value) {
  set_has_work_index();
  work_index_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorRequest.work_index)
}

// optional .sg.SAILOR_CONTROL_CODE control_code = 7;
inline bool UserSailorService_UserSailorRequest::has_control_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserSailorService_UserSailorRequest::set_has_control_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserSailorService_UserSailorRequest::clear_has_control_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserSailorService_UserSailorRequest::clear_control_code() {
  control_code_ = 0;
  clear_has_control_code();
}
inline ::sg::SAILOR_CONTROL_CODE UserSailorService_UserSailorRequest::control_code() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.control_code)
  return static_cast< ::sg::SAILOR_CONTROL_CODE >(control_code_);
}
inline void UserSailorService_UserSailorRequest::set_control_code(::sg::SAILOR_CONTROL_CODE value) {
  assert(::sg::SAILOR_CONTROL_CODE_IsValid(value));
  set_has_control_code();
  control_code_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorRequest.control_code)
}

// repeated .sg.SailorDelegate delegates = 8;
inline int UserSailorService_UserSailorRequest::delegates_size() const {
  return delegates_.size();
}
inline void UserSailorService_UserSailorRequest::clear_delegates() {
  delegates_.Clear();
}
inline ::sg::SailorDelegate* UserSailorService_UserSailorRequest::mutable_delegates(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserSailorService.UserSailorRequest.delegates)
  return delegates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::SailorDelegate >*
UserSailorService_UserSailorRequest::mutable_delegates() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserSailorService.UserSailorRequest.delegates)
  return &delegates_;
}
inline const ::sg::SailorDelegate& UserSailorService_UserSailorRequest::delegates(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.delegates)
  return delegates_.Get(index);
}
inline ::sg::SailorDelegate* UserSailorService_UserSailorRequest::add_delegates() {
  // @@protoc_insertion_point(field_add:sg.UserSailorService.UserSailorRequest.delegates)
  return delegates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::SailorDelegate >&
UserSailorService_UserSailorRequest::delegates() const {
  // @@protoc_insertion_point(field_list:sg.UserSailorService.UserSailorRequest.delegates)
  return delegates_;
}

// optional int32 equip_part = 9;
inline bool UserSailorService_UserSailorRequest::has_equip_part() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserSailorService_UserSailorRequest::set_has_equip_part() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserSailorService_UserSailorRequest::clear_has_equip_part() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserSailorService_UserSailorRequest::clear_equip_part() {
  equip_part_ = 0;
  clear_has_equip_part();
}
inline ::google::protobuf::int32 UserSailorService_UserSailorRequest::equip_part() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.equip_part)
  return equip_part_;
}
inline void UserSailorService_UserSailorRequest::set_equip_part(::google::protobuf::int32 value) {
  set_has_equip_part();
  equip_part_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorRequest.equip_part)
}

// optional int32 equip_id = 10;
inline bool UserSailorService_UserSailorRequest::has_equip_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserSailorService_UserSailorRequest::set_has_equip_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserSailorService_UserSailorRequest::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserSailorService_UserSailorRequest::clear_equip_id() {
  equip_id_ = 0;
  clear_has_equip_id();
}
inline ::google::protobuf::int32 UserSailorService_UserSailorRequest::equip_id() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.equip_id)
  return equip_id_;
}
inline void UserSailorService_UserSailorRequest::set_equip_id(::google::protobuf::int32 value) {
  set_has_equip_id();
  equip_id_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorRequest.equip_id)
}

// repeated .sg.pb_pair_int_int replace_list = 11;
inline int UserSailorService_UserSailorRequest::replace_list_size() const {
  return replace_list_.size();
}
inline ::sg::pb_pair_int_int* UserSailorService_UserSailorRequest::mutable_replace_list(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserSailorService.UserSailorRequest.replace_list)
  return replace_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int >*
UserSailorService_UserSailorRequest::mutable_replace_list() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserSailorService.UserSailorRequest.replace_list)
  return &replace_list_;
}
inline const ::sg::pb_pair_int_int& UserSailorService_UserSailorRequest::replace_list(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorRequest.replace_list)
  return replace_list_.Get(index);
}
inline ::sg::pb_pair_int_int* UserSailorService_UserSailorRequest::add_replace_list() {
  // @@protoc_insertion_point(field_add:sg.UserSailorService.UserSailorRequest.replace_list)
  return replace_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int >&
UserSailorService_UserSailorRequest::replace_list() const {
  // @@protoc_insertion_point(field_list:sg.UserSailorService.UserSailorRequest.replace_list)
  return replace_list_;
}

// -------------------------------------------------------------------

// UserSailorService_UserSailorResponse

// required int32 result = 1;
inline bool UserSailorService_UserSailorResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSailorService_UserSailorResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSailorService_UserSailorResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSailorService_UserSailorResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserSailorService_UserSailorResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorResponse.result)
  return result_;
}
inline void UserSailorService_UserSailorResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorService.UserSailorResponse.result)
}

// repeated .sg.Sailor sailors = 2;
inline int UserSailorService_UserSailorResponse::sailors_size() const {
  return sailors_.size();
}
inline ::sg::Sailor* UserSailorService_UserSailorResponse::mutable_sailors(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserSailorService.UserSailorResponse.sailors)
  return sailors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Sailor >*
UserSailorService_UserSailorResponse::mutable_sailors() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserSailorService.UserSailorResponse.sailors)
  return &sailors_;
}
inline const ::sg::Sailor& UserSailorService_UserSailorResponse::sailors(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserSailorService.UserSailorResponse.sailors)
  return sailors_.Get(index);
}
inline ::sg::Sailor* UserSailorService_UserSailorResponse::add_sailors() {
  // @@protoc_insertion_point(field_add:sg.UserSailorService.UserSailorResponse.sailors)
  return sailors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Sailor >&
UserSailorService_UserSailorResponse::sailors() const {
  // @@protoc_insertion_point(field_list:sg.UserSailorService.UserSailorResponse.sailors)
  return sailors_;
}

// -------------------------------------------------------------------

// UserSailorService

// optional .sg.UserSailorService.UserSailorRequest req = 1;
inline bool UserSailorService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSailorService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSailorService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSailorService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserSailorService_UserSailorRequest& UserSailorService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserSailorService_UserSailorRequest& UserSailorService::req() const {
  const ::sg::UserSailorService_UserSailorRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserSailorService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserSailorService_UserSailorRequest*>(
      &::sg::_UserSailorService_UserSailorRequest_default_instance_);
}
inline ::sg::UserSailorService_UserSailorRequest* UserSailorService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserSailorService.req)
  clear_has_req();
  ::sg::UserSailorService_UserSailorRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserSailorService_UserSailorRequest* UserSailorService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserSailorService.req)
  clear_has_req();
  ::sg::UserSailorService_UserSailorRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserSailorService_UserSailorRequest* UserSailorService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserSailorService_UserSailorRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserSailorService.req)
  return req_;
}
inline void UserSailorService::set_allocated_req(::sg::UserSailorService_UserSailorRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserSailorService.req)
}

// optional .sg.UserSailorService.UserSailorResponse resp = 2;
inline bool UserSailorService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSailorService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSailorService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSailorService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserSailorService_UserSailorResponse& UserSailorService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserSailorService_UserSailorResponse& UserSailorService::resp() const {
  const ::sg::UserSailorService_UserSailorResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserSailorService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserSailorService_UserSailorResponse*>(
      &::sg::_UserSailorService_UserSailorResponse_default_instance_);
}
inline ::sg::UserSailorService_UserSailorResponse* UserSailorService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserSailorService.resp)
  clear_has_resp();
  ::sg::UserSailorService_UserSailorResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserSailorService_UserSailorResponse* UserSailorService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserSailorService.resp)
  clear_has_resp();
  ::sg::UserSailorService_UserSailorResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserSailorService_UserSailorResponse* UserSailorService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserSailorService_UserSailorResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserSailorService.resp)
  return resp_;
}
inline void UserSailorService::set_allocated_resp(::sg::UserSailorService_UserSailorResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserSailorService.resp)
}

// -------------------------------------------------------------------

// UserSailorStrengthenService_UserSailorStrengthenRequest

// required .sg.UserSailorStrengthenService.SAILOR_CMD cmd = 1;
inline bool UserSailorStrengthenService_UserSailorStrengthenRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserSailorStrengthenService_SAILOR_CMD UserSailorStrengthenService_UserSailorStrengthenRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.cmd)
  return static_cast< ::sg::UserSailorStrengthenService_SAILOR_CMD >(cmd_);
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_cmd(::sg::UserSailorStrengthenService_SAILOR_CMD value) {
  assert(::sg::UserSailorStrengthenService_SAILOR_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.cmd)
}

// optional int32 sailor_id = 2;
inline bool UserSailorStrengthenService_UserSailorStrengthenRequest::has_sailor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_has_sailor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_has_sailor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_sailor_id() {
  sailor_id_ = 0;
  clear_has_sailor_id();
}
inline ::google::protobuf::int32 UserSailorStrengthenService_UserSailorStrengthenRequest::sailor_id() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.sailor_id)
  return sailor_id_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_sailor_id(::google::protobuf::int32 value) {
  set_has_sailor_id();
  sailor_id_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.sailor_id)
}

// optional int32 sailor_typeid = 3;
inline bool UserSailorStrengthenService_UserSailorStrengthenRequest::has_sailor_typeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_has_sailor_typeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_has_sailor_typeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_sailor_typeid() {
  sailor_typeid_ = 0;
  clear_has_sailor_typeid();
}
inline ::google::protobuf::int32 UserSailorStrengthenService_UserSailorStrengthenRequest::sailor_typeid() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.sailor_typeid)
  return sailor_typeid_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_sailor_typeid(::google::protobuf::int32 value) {
  set_has_sailor_typeid();
  sailor_typeid_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.sailor_typeid)
}

// optional int32 skill_id = 4;
inline bool UserSailorStrengthenService_UserSailorStrengthenRequest::has_skill_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_has_skill_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 UserSailorStrengthenService_UserSailorStrengthenRequest::skill_id() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_id)
  return skill_id_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_id)
}

// repeated .sg.pb_pair_int_int skill_list = 5;
inline int UserSailorStrengthenService_UserSailorStrengthenRequest::skill_list_size() const {
  return skill_list_.size();
}
inline ::sg::pb_pair_int_int* UserSailorStrengthenService_UserSailorStrengthenRequest::mutable_skill_list(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_list)
  return skill_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int >*
UserSailorStrengthenService_UserSailorStrengthenRequest::mutable_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_list)
  return &skill_list_;
}
inline const ::sg::pb_pair_int_int& UserSailorStrengthenService_UserSailorStrengthenRequest::skill_list(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_list)
  return skill_list_.Get(index);
}
inline ::sg::pb_pair_int_int* UserSailorStrengthenService_UserSailorStrengthenRequest::add_skill_list() {
  // @@protoc_insertion_point(field_add:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_list)
  return skill_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::pb_pair_int_int >&
UserSailorStrengthenService_UserSailorStrengthenRequest::skill_list() const {
  // @@protoc_insertion_point(field_list:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_list)
  return skill_list_;
}

// optional int32 exchange_num = 6;
inline bool UserSailorStrengthenService_UserSailorStrengthenRequest::has_exchange_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_has_exchange_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_has_exchange_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_exchange_num() {
  exchange_num_ = 0;
  clear_has_exchange_num();
}
inline ::google::protobuf::int32 UserSailorStrengthenService_UserSailorStrengthenRequest::exchange_num() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.exchange_num)
  return exchange_num_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_exchange_num(::google::protobuf::int32 value) {
  set_has_exchange_num();
  exchange_num_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.exchange_num)
}

// optional int32 skill_book = 7;
inline bool UserSailorStrengthenService_UserSailorStrengthenRequest::has_skill_book() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_has_skill_book() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_has_skill_book() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::clear_skill_book() {
  skill_book_ = 0;
  clear_has_skill_book();
}
inline ::google::protobuf::int32 UserSailorStrengthenService_UserSailorStrengthenRequest::skill_book() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_book)
  return skill_book_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenRequest::set_skill_book(::google::protobuf::int32 value) {
  set_has_skill_book();
  skill_book_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorStrengthenService.UserSailorStrengthenRequest.skill_book)
}

// -------------------------------------------------------------------

// UserSailorStrengthenService_UserSailorStrengthenResponse

// required int32 result = 1;
inline bool UserSailorStrengthenService_UserSailorStrengthenResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserSailorStrengthenService_UserSailorStrengthenResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.result)
  return result_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.result)
}

// optional .sg.Sailor sailor = 2;
inline bool UserSailorStrengthenService_UserSailorStrengthenResponse::has_sailor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::set_has_sailor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::clear_has_sailor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::sg::Sailor& UserSailorStrengthenService_UserSailorStrengthenResponse::_internal_sailor() const {
  return *sailor_;
}
inline const ::sg::Sailor& UserSailorStrengthenService_UserSailorStrengthenResponse::sailor() const {
  const ::sg::Sailor* p = sailor_;
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.sailor)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::Sailor*>(
      &::sg::_Sailor_default_instance_);
}
inline ::sg::Sailor* UserSailorStrengthenService_UserSailorStrengthenResponse::release_sailor() {
  // @@protoc_insertion_point(field_release:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.sailor)
  clear_has_sailor();
  ::sg::Sailor* temp = sailor_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  sailor_ = NULL;
  return temp;
}
inline ::sg::Sailor* UserSailorStrengthenService_UserSailorStrengthenResponse::unsafe_arena_release_sailor() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.sailor)
  clear_has_sailor();
  ::sg::Sailor* temp = sailor_;
  sailor_ = NULL;
  return temp;
}
inline ::sg::Sailor* UserSailorStrengthenService_UserSailorStrengthenResponse::mutable_sailor() {
  set_has_sailor();
  if (sailor_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::Sailor>(GetArenaNoVirtual());
    sailor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.sailor)
  return sailor_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::set_allocated_sailor(::sg::Sailor* sailor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sailor_);
  }
  if (sailor) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(sailor)->GetArena();
    if (message_arena != submessage_arena) {
      sailor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sailor, submessage_arena);
    }
    set_has_sailor();
  } else {
    clear_has_sailor();
  }
  sailor_ = sailor;
  // @@protoc_insertion_point(field_set_allocated:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.sailor)
}

// optional .sg.Item return_item = 3;
inline bool UserSailorStrengthenService_UserSailorStrengthenResponse::has_return_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::set_has_return_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::clear_has_return_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::sg::Item& UserSailorStrengthenService_UserSailorStrengthenResponse::_internal_return_item() const {
  return *return_item_;
}
inline const ::sg::Item& UserSailorStrengthenService_UserSailorStrengthenResponse::return_item() const {
  const ::sg::Item* p = return_item_;
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.return_item)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::Item*>(
      &::sg::_Item_default_instance_);
}
inline ::sg::Item* UserSailorStrengthenService_UserSailorStrengthenResponse::release_return_item() {
  // @@protoc_insertion_point(field_release:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.return_item)
  clear_has_return_item();
  ::sg::Item* temp = return_item_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  return_item_ = NULL;
  return temp;
}
inline ::sg::Item* UserSailorStrengthenService_UserSailorStrengthenResponse::unsafe_arena_release_return_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.return_item)
  clear_has_return_item();
  ::sg::Item* temp = return_item_;
  return_item_ = NULL;
  return temp;
}
inline ::sg::Item* UserSailorStrengthenService_UserSailorStrengthenResponse::mutable_return_item() {
  set_has_return_item();
  if (return_item_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::Item>(GetArenaNoVirtual());
    return_item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.return_item)
  return return_item_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::set_allocated_return_item(::sg::Item* return_item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(return_item_);
  }
  if (return_item) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(return_item)->GetArena();
    if (message_arena != submessage_arena) {
      return_item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, return_item, submessage_arena);
    }
    set_has_return_item();
  } else {
    clear_has_return_item();
  }
  return_item_ = return_item;
  // @@protoc_insertion_point(field_set_allocated:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.return_item)
}

// optional .sg.SailorSkill skill = 4;
inline bool UserSailorStrengthenService_UserSailorStrengthenResponse::has_skill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::set_has_skill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::clear_has_skill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::sg::SailorSkill& UserSailorStrengthenService_UserSailorStrengthenResponse::_internal_skill() const {
  return *skill_;
}
inline const ::sg::SailorSkill& UserSailorStrengthenService_UserSailorStrengthenResponse::skill() const {
  const ::sg::SailorSkill* p = skill_;
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.skill)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::SailorSkill*>(
      &::sg::_SailorSkill_default_instance_);
}
inline ::sg::SailorSkill* UserSailorStrengthenService_UserSailorStrengthenResponse::release_skill() {
  // @@protoc_insertion_point(field_release:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.skill)
  clear_has_skill();
  ::sg::SailorSkill* temp = skill_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  skill_ = NULL;
  return temp;
}
inline ::sg::SailorSkill* UserSailorStrengthenService_UserSailorStrengthenResponse::unsafe_arena_release_skill() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.skill)
  clear_has_skill();
  ::sg::SailorSkill* temp = skill_;
  skill_ = NULL;
  return temp;
}
inline ::sg::SailorSkill* UserSailorStrengthenService_UserSailorStrengthenResponse::mutable_skill() {
  set_has_skill();
  if (skill_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::SailorSkill>(GetArenaNoVirtual());
    skill_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.skill)
  return skill_;
}
inline void UserSailorStrengthenService_UserSailorStrengthenResponse::set_allocated_skill(::sg::SailorSkill* skill) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(skill_);
  }
  if (skill) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(skill)->GetArena();
    if (message_arena != submessage_arena) {
      skill = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, skill, submessage_arena);
    }
    set_has_skill();
  } else {
    clear_has_skill();
  }
  skill_ = skill;
  // @@protoc_insertion_point(field_set_allocated:sg.UserSailorStrengthenService.UserSailorStrengthenResponse.skill)
}

// -------------------------------------------------------------------

// UserSailorStrengthenService

// optional .sg.UserSailorStrengthenService.UserSailorStrengthenRequest req = 1;
inline bool UserSailorStrengthenService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSailorStrengthenService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSailorStrengthenService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSailorStrengthenService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest& UserSailorStrengthenService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest& UserSailorStrengthenService::req() const {
  const ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest*>(
      &::sg::_UserSailorStrengthenService_UserSailorStrengthenRequest_default_instance_);
}
inline ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* UserSailorStrengthenService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserSailorStrengthenService.req)
  clear_has_req();
  ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* UserSailorStrengthenService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserSailorStrengthenService.req)
  clear_has_req();
  ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* UserSailorStrengthenService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserSailorStrengthenService_UserSailorStrengthenRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserSailorStrengthenService.req)
  return req_;
}
inline void UserSailorStrengthenService::set_allocated_req(::sg::UserSailorStrengthenService_UserSailorStrengthenRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserSailorStrengthenService.req)
}

// optional .sg.UserSailorStrengthenService.UserSailorStrengthenResponse resp = 2;
inline bool UserSailorStrengthenService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSailorStrengthenService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSailorStrengthenService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSailorStrengthenService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse& UserSailorStrengthenService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse& UserSailorStrengthenService::resp() const {
  const ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserSailorStrengthenService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse*>(
      &::sg::_UserSailorStrengthenService_UserSailorStrengthenResponse_default_instance_);
}
inline ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* UserSailorStrengthenService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserSailorStrengthenService.resp)
  clear_has_resp();
  ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* UserSailorStrengthenService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserSailorStrengthenService.resp)
  clear_has_resp();
  ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* UserSailorStrengthenService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserSailorStrengthenService_UserSailorStrengthenResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserSailorStrengthenService.resp)
  return resp_;
}
inline void UserSailorStrengthenService::set_allocated_resp(::sg::UserSailorStrengthenService_UserSailorStrengthenResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserSailorStrengthenService.resp)
}

// -------------------------------------------------------------------

// SailorStateNotify

// required int32 sailorid = 1;
inline bool SailorStateNotify::has_sailorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SailorStateNotify::set_has_sailorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SailorStateNotify::clear_has_sailorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SailorStateNotify::clear_sailorid() {
  sailorid_ = 0;
  clear_has_sailorid();
}
inline ::google::protobuf::int32 SailorStateNotify::sailorid() const {
  // @@protoc_insertion_point(field_get:sg.SailorStateNotify.sailorid)
  return sailorid_;
}
inline void SailorStateNotify::set_sailorid(::google::protobuf::int32 value) {
  set_has_sailorid();
  sailorid_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorStateNotify.sailorid)
}

// optional .sg.SAILOR_STATE _state = 2;
inline bool SailorStateNotify::has__state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SailorStateNotify::set_has__state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SailorStateNotify::clear_has__state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SailorStateNotify::clear__state() {
  _state_ = 0;
  clear_has__state();
}
inline ::sg::SAILOR_STATE SailorStateNotify::_state() const {
  // @@protoc_insertion_point(field_get:sg.SailorStateNotify._state)
  return static_cast< ::sg::SAILOR_STATE >(_state_);
}
inline void SailorStateNotify::set__state(::sg::SAILOR_STATE value) {
  assert(::sg::SAILOR_STATE_IsValid(value));
  set_has__state();
  _state_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorStateNotify._state)
}

// optional int32 duration = 3;
inline bool SailorStateNotify::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SailorStateNotify::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SailorStateNotify::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SailorStateNotify::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 SailorStateNotify::duration() const {
  // @@protoc_insertion_point(field_get:sg.SailorStateNotify.duration)
  return duration_;
}
inline void SailorStateNotify::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorStateNotify.duration)
}

// optional uint64 roomid = 4;
inline bool SailorStateNotify::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SailorStateNotify::set_has_roomid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SailorStateNotify::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SailorStateNotify::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 SailorStateNotify::roomid() const {
  // @@protoc_insertion_point(field_get:sg.SailorStateNotify.roomid)
  return roomid_;
}
inline void SailorStateNotify::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorStateNotify.roomid)
}

// optional int32 facilityid = 5;
inline bool SailorStateNotify::has_facilityid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SailorStateNotify::set_has_facilityid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SailorStateNotify::clear_has_facilityid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SailorStateNotify::clear_facilityid() {
  facilityid_ = 0;
  clear_has_facilityid();
}
inline ::google::protobuf::int32 SailorStateNotify::facilityid() const {
  // @@protoc_insertion_point(field_get:sg.SailorStateNotify.facilityid)
  return facilityid_;
}
inline void SailorStateNotify::set_facilityid(::google::protobuf::int32 value) {
  set_has_facilityid();
  facilityid_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorStateNotify.facilityid)
}

// optional int32 orderid = 6;
inline bool SailorStateNotify::has_orderid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SailorStateNotify::set_has_orderid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SailorStateNotify::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SailorStateNotify::clear_orderid() {
  orderid_ = 0;
  clear_has_orderid();
}
inline ::google::protobuf::int32 SailorStateNotify::orderid() const {
  // @@protoc_insertion_point(field_get:sg.SailorStateNotify.orderid)
  return orderid_;
}
inline void SailorStateNotify::set_orderid(::google::protobuf::int32 value) {
  set_has_orderid();
  orderid_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorStateNotify.orderid)
}

// optional int32 job = 7;
inline bool SailorStateNotify::has_job() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SailorStateNotify::set_has_job() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SailorStateNotify::clear_has_job() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SailorStateNotify::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::google::protobuf::int32 SailorStateNotify::job() const {
  // @@protoc_insertion_point(field_get:sg.SailorStateNotify.job)
  return job_;
}
inline void SailorStateNotify::set_job(::google::protobuf::int32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorStateNotify.job)
}

// optional int32 hunger = 8;
inline bool SailorStateNotify::has_hunger() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SailorStateNotify::set_has_hunger() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SailorStateNotify::clear_has_hunger() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SailorStateNotify::clear_hunger() {
  hunger_ = 0;
  clear_has_hunger();
}
inline ::google::protobuf::int32 SailorStateNotify::hunger() const {
  // @@protoc_insertion_point(field_get:sg.SailorStateNotify.hunger)
  return hunger_;
}
inline void SailorStateNotify::set_hunger(::google::protobuf::int32 value) {
  set_has_hunger();
  hunger_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorStateNotify.hunger)
}

// -------------------------------------------------------------------

// SailorFarmSkillNotify

// required int32 sailorid = 1;
inline bool SailorFarmSkillNotify::has_sailorid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SailorFarmSkillNotify::set_has_sailorid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SailorFarmSkillNotify::clear_has_sailorid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SailorFarmSkillNotify::clear_sailorid() {
  sailorid_ = 0;
  clear_has_sailorid();
}
inline ::google::protobuf::int32 SailorFarmSkillNotify::sailorid() const {
  // @@protoc_insertion_point(field_get:sg.SailorFarmSkillNotify.sailorid)
  return sailorid_;
}
inline void SailorFarmSkillNotify::set_sailorid(::google::protobuf::int32 value) {
  set_has_sailorid();
  sailorid_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorFarmSkillNotify.sailorid)
}

// optional uint64 skillid = 2;
inline bool SailorFarmSkillNotify::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SailorFarmSkillNotify::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SailorFarmSkillNotify::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SailorFarmSkillNotify::clear_skillid() {
  skillid_ = GOOGLE_ULONGLONG(0);
  clear_has_skillid();
}
inline ::google::protobuf::uint64 SailorFarmSkillNotify::skillid() const {
  // @@protoc_insertion_point(field_get:sg.SailorFarmSkillNotify.skillid)
  return skillid_;
}
inline void SailorFarmSkillNotify::set_skillid(::google::protobuf::uint64 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorFarmSkillNotify.skillid)
}

// optional int32 level = 3;
inline bool SailorFarmSkillNotify::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SailorFarmSkillNotify::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SailorFarmSkillNotify::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SailorFarmSkillNotify::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SailorFarmSkillNotify::level() const {
  // @@protoc_insertion_point(field_get:sg.SailorFarmSkillNotify.level)
  return level_;
}
inline void SailorFarmSkillNotify::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorFarmSkillNotify.level)
}

// optional int32 exp = 4;
inline bool SailorFarmSkillNotify::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SailorFarmSkillNotify::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SailorFarmSkillNotify::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SailorFarmSkillNotify::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 SailorFarmSkillNotify::exp() const {
  // @@protoc_insertion_point(field_get:sg.SailorFarmSkillNotify.exp)
  return exp_;
}
inline void SailorFarmSkillNotify::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:sg.SailorFarmSkillNotify.exp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sg::UserSailorService_SAILOR_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserSailorService_SAILOR_CMD>() {
  return ::sg::UserSailorService_SAILOR_CMD_descriptor();
}
template <> struct is_proto_enum< ::sg::UserSailorStrengthenService_SAILOR_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserSailorStrengthenService_SAILOR_CMD>() {
  return ::sg::UserSailorStrengthenService_SAILOR_CMD_descriptor();
}
template <> struct is_proto_enum< ::sg::SAILOR_CONTROL_CODE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::SAILOR_CONTROL_CODE>() {
  return ::sg::SAILOR_CONTROL_CODE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_UserSailor_2eproto
