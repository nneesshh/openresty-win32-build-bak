// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserOrder.proto

#ifndef PROTOBUF_INCLUDED_UserOrder_2eproto
#define PROTOBUF_INCLUDED_UserOrder_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "BaseStruct.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_UserOrder_2eproto 

namespace protobuf_UserOrder_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_UserOrder_2eproto
namespace sg {
class OrderBasic;
class OrderBasicDefaultTypeInternal;
extern OrderBasicDefaultTypeInternal _OrderBasic_default_instance_;
class OrderBeginNotify;
class OrderBeginNotifyDefaultTypeInternal;
extern OrderBeginNotifyDefaultTypeInternal _OrderBeginNotify_default_instance_;
class OrderCreateNotify;
class OrderCreateNotifyDefaultTypeInternal;
extern OrderCreateNotifyDefaultTypeInternal _OrderCreateNotify_default_instance_;
class OrderFinishNotify;
class OrderFinishNotifyDefaultTypeInternal;
extern OrderFinishNotifyDefaultTypeInternal _OrderFinishNotify_default_instance_;
class OrderPauserNotify;
class OrderPauserNotifyDefaultTypeInternal;
extern OrderPauserNotifyDefaultTypeInternal _OrderPauserNotify_default_instance_;
class OrderStateNotify;
class OrderStateNotifyDefaultTypeInternal;
extern OrderStateNotifyDefaultTypeInternal _OrderStateNotify_default_instance_;
class ProduceOrder;
class ProduceOrderDefaultTypeInternal;
extern ProduceOrderDefaultTypeInternal _ProduceOrder_default_instance_;
class UserProduceOrderService;
class UserProduceOrderServiceDefaultTypeInternal;
extern UserProduceOrderServiceDefaultTypeInternal _UserProduceOrderService_default_instance_;
class UserProduceOrderService_UserProduceOrderRequest;
class UserProduceOrderService_UserProduceOrderRequestDefaultTypeInternal;
extern UserProduceOrderService_UserProduceOrderRequestDefaultTypeInternal _UserProduceOrderService_UserProduceOrderRequest_default_instance_;
class UserProduceOrderService_UserProduceOrderResponse;
class UserProduceOrderService_UserProduceOrderResponseDefaultTypeInternal;
extern UserProduceOrderService_UserProduceOrderResponseDefaultTypeInternal _UserProduceOrderService_UserProduceOrderResponse_default_instance_;
}  // namespace sg
namespace google {
namespace protobuf {
template<> ::sg::OrderBasic* Arena::CreateMaybeMessage<::sg::OrderBasic>(Arena*);
template<> ::sg::OrderBeginNotify* Arena::CreateMaybeMessage<::sg::OrderBeginNotify>(Arena*);
template<> ::sg::OrderCreateNotify* Arena::CreateMaybeMessage<::sg::OrderCreateNotify>(Arena*);
template<> ::sg::OrderFinishNotify* Arena::CreateMaybeMessage<::sg::OrderFinishNotify>(Arena*);
template<> ::sg::OrderPauserNotify* Arena::CreateMaybeMessage<::sg::OrderPauserNotify>(Arena*);
template<> ::sg::OrderStateNotify* Arena::CreateMaybeMessage<::sg::OrderStateNotify>(Arena*);
template<> ::sg::ProduceOrder* Arena::CreateMaybeMessage<::sg::ProduceOrder>(Arena*);
template<> ::sg::UserProduceOrderService* Arena::CreateMaybeMessage<::sg::UserProduceOrderService>(Arena*);
template<> ::sg::UserProduceOrderService_UserProduceOrderRequest* Arena::CreateMaybeMessage<::sg::UserProduceOrderService_UserProduceOrderRequest>(Arena*);
template<> ::sg::UserProduceOrderService_UserProduceOrderResponse* Arena::CreateMaybeMessage<::sg::UserProduceOrderService_UserProduceOrderResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sg {

enum UserProduceOrderService_PRODUCE_ORDER_CMD {
  UserProduceOrderService_PRODUCE_ORDER_CMD_QUERY = 1,
  UserProduceOrderService_PRODUCE_ORDER_CMD_ADD = 2,
  UserProduceOrderService_PRODUCE_ORDER_CMD_CANCEL = 3,
  UserProduceOrderService_PRODUCE_ORDER_CMD_START = 4,
  UserProduceOrderService_PRODUCE_ORDER_CMD_HARVEST = 5,
  UserProduceOrderService_PRODUCE_ORDER_CMD_FAST_FINISH = 6
};
bool UserProduceOrderService_PRODUCE_ORDER_CMD_IsValid(int value);
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService_PRODUCE_ORDER_CMD_PRODUCE_ORDER_CMD_MIN = UserProduceOrderService_PRODUCE_ORDER_CMD_QUERY;
const UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService_PRODUCE_ORDER_CMD_PRODUCE_ORDER_CMD_MAX = UserProduceOrderService_PRODUCE_ORDER_CMD_FAST_FINISH;
const int UserProduceOrderService_PRODUCE_ORDER_CMD_PRODUCE_ORDER_CMD_ARRAYSIZE = UserProduceOrderService_PRODUCE_ORDER_CMD_PRODUCE_ORDER_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserProduceOrderService_PRODUCE_ORDER_CMD_descriptor();
inline const ::std::string& UserProduceOrderService_PRODUCE_ORDER_CMD_Name(UserProduceOrderService_PRODUCE_ORDER_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserProduceOrderService_PRODUCE_ORDER_CMD_descriptor(), value);
}
inline bool UserProduceOrderService_PRODUCE_ORDER_CMD_Parse(
    const ::std::string& name, UserProduceOrderService_PRODUCE_ORDER_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserProduceOrderService_PRODUCE_ORDER_CMD>(
    UserProduceOrderService_PRODUCE_ORDER_CMD_descriptor(), name, value);
}
enum PRODUCE_ORDER_STATE {
  PRODUCE_ORDER_STATE_IDLE = 0,
  PRODUCE_ORDER_STATE_WAITING = 1,
  PRODUCE_ORDER_STATE_WORKING = 2,
  PRODUCE_ORDER_STATE_WAITING_HARVEST = 3,
  PRODUCE_ORDER_STATE_HARVESTING = 4
};
bool PRODUCE_ORDER_STATE_IsValid(int value);
const PRODUCE_ORDER_STATE PRODUCE_ORDER_STATE_MIN = PRODUCE_ORDER_STATE_IDLE;
const PRODUCE_ORDER_STATE PRODUCE_ORDER_STATE_MAX = PRODUCE_ORDER_STATE_HARVESTING;
const int PRODUCE_ORDER_STATE_ARRAYSIZE = PRODUCE_ORDER_STATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PRODUCE_ORDER_STATE_descriptor();
inline const ::std::string& PRODUCE_ORDER_STATE_Name(PRODUCE_ORDER_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PRODUCE_ORDER_STATE_descriptor(), value);
}
inline bool PRODUCE_ORDER_STATE_Parse(
    const ::std::string& name, PRODUCE_ORDER_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PRODUCE_ORDER_STATE>(
    PRODUCE_ORDER_STATE_descriptor(), name, value);
}
enum PRODUCTION_TYPE {
  PRODUCTION_TYPE_RESOURCE = 1,
  PRODUCTION_TYPE_ITEM = 2,
  PRODUCTION_TYPE_CULTURE = 3
};
bool PRODUCTION_TYPE_IsValid(int value);
const PRODUCTION_TYPE PRODUCTION_TYPE_MIN = PRODUCTION_TYPE_RESOURCE;
const PRODUCTION_TYPE PRODUCTION_TYPE_MAX = PRODUCTION_TYPE_CULTURE;
const int PRODUCTION_TYPE_ARRAYSIZE = PRODUCTION_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PRODUCTION_TYPE_descriptor();
inline const ::std::string& PRODUCTION_TYPE_Name(PRODUCTION_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PRODUCTION_TYPE_descriptor(), value);
}
inline bool PRODUCTION_TYPE_Parse(
    const ::std::string& name, PRODUCTION_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PRODUCTION_TYPE>(
    PRODUCTION_TYPE_descriptor(), name, value);
}
// ===================================================================

class OrderBasic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.OrderBasic) */ {
 public:
  OrderBasic();
  virtual ~OrderBasic();

  OrderBasic(const OrderBasic& from);

  inline OrderBasic& operator=(const OrderBasic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderBasic(OrderBasic&& from) noexcept
    : OrderBasic() {
    *this = ::std::move(from);
  }

  inline OrderBasic& operator=(OrderBasic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderBasic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderBasic* internal_default_instance() {
    return reinterpret_cast<const OrderBasic*>(
               &_OrderBasic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(OrderBasic* other);
  void Swap(OrderBasic* other);
  friend void swap(OrderBasic& a, OrderBasic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderBasic* New() const final {
    return CreateMaybeMessage<OrderBasic>(NULL);
  }

  OrderBasic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderBasic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderBasic& from);
  void MergeFrom(const OrderBasic& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderBasic* other);
  protected:
  explicit OrderBasic(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 basic_type = 1;
  bool has_basic_type() const;
  void clear_basic_type();
  static const int kBasicTypeFieldNumber = 1;
  ::google::protobuf::int32 basic_type() const;
  void set_basic_type(::google::protobuf::int32 value);

  // required int32 basic_id = 2;
  bool has_basic_id() const;
  void clear_basic_id();
  static const int kBasicIdFieldNumber = 2;
  ::google::protobuf::int32 basic_id() const;
  void set_basic_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.OrderBasic)
 private:
  void set_has_basic_type();
  void clear_has_basic_type();
  void set_has_basic_id();
  void clear_has_basic_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 basic_type_;
  ::google::protobuf::int32 basic_id_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProduceOrder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.ProduceOrder) */ {
 public:
  ProduceOrder();
  virtual ~ProduceOrder();

  ProduceOrder(const ProduceOrder& from);

  inline ProduceOrder& operator=(const ProduceOrder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProduceOrder(ProduceOrder&& from) noexcept
    : ProduceOrder() {
    *this = ::std::move(from);
  }

  inline ProduceOrder& operator=(ProduceOrder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProduceOrder& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProduceOrder* internal_default_instance() {
    return reinterpret_cast<const ProduceOrder*>(
               &_ProduceOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ProduceOrder* other);
  void Swap(ProduceOrder* other);
  friend void swap(ProduceOrder& a, ProduceOrder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProduceOrder* New() const final {
    return CreateMaybeMessage<ProduceOrder>(NULL);
  }

  ProduceOrder* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProduceOrder>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProduceOrder& from);
  void MergeFrom(const ProduceOrder& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProduceOrder* other);
  protected:
  explicit ProduceOrder(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.OrderBasic basics = 11;
  int basics_size() const;
  void clear_basics();
  static const int kBasicsFieldNumber = 11;
  ::sg::OrderBasic* mutable_basics(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic >*
      mutable_basics();
  const ::sg::OrderBasic& basics(int index) const;
  ::sg::OrderBasic* add_basics();
  const ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic >&
      basics() const;

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional .sg.PRODUCE_ORDER_STATE state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::sg::PRODUCE_ORDER_STATE state() const;
  void set_state(::sg::PRODUCE_ORDER_STATE value);

  // optional int32 production = 4;
  bool has_production() const;
  void clear_production();
  static const int kProductionFieldNumber = 4;
  ::google::protobuf::int32 production() const;
  void set_production(::google::protobuf::int32 value);

  // optional int32 output_num = 5;
  bool has_output_num() const;
  void clear_output_num();
  static const int kOutputNumFieldNumber = 5;
  ::google::protobuf::int32 output_num() const;
  void set_output_num(::google::protobuf::int32 value);

  // optional int32 circle_num = 6;
  bool has_circle_num() const;
  void clear_circle_num();
  static const int kCircleNumFieldNumber = 6;
  ::google::protobuf::int32 circle_num() const;
  void set_circle_num(::google::protobuf::int32 value);

  // optional int32 finish_num = 7;
  bool has_finish_num() const;
  void clear_finish_num();
  static const int kFinishNumFieldNumber = 7;
  ::google::protobuf::int32 finish_num() const;
  void set_finish_num(::google::protobuf::int32 value);

  // optional float speed = 8;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 8;
  float speed() const;
  void set_speed(float value);

  // optional float ratio = 9;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 9;
  float ratio() const;
  void set_ratio(float value);

  // optional sfixed64 timestamp = 10;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 10;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // optional int32 pre_order = 12;
  bool has_pre_order() const;
  void clear_pre_order();
  static const int kPreOrderFieldNumber = 12;
  ::google::protobuf::int32 pre_order() const;
  void set_pre_order(::google::protobuf::int32 value);

  // optional int32 next_order = 13;
  bool has_next_order() const;
  void clear_next_order();
  static const int kNextOrderFieldNumber = 13;
  ::google::protobuf::int32 next_order() const;
  void set_next_order(::google::protobuf::int32 value);

  // optional .sg.PRODUCTION_TYPE production_type = 3;
  bool has_production_type() const;
  void clear_production_type();
  static const int kProductionTypeFieldNumber = 3;
  ::sg::PRODUCTION_TYPE production_type() const;
  void set_production_type(::sg::PRODUCTION_TYPE value);

  // @@protoc_insertion_point(class_scope:sg.ProduceOrder)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_state();
  void clear_has_state();
  void set_has_production_type();
  void clear_has_production_type();
  void set_has_production();
  void clear_has_production();
  void set_has_output_num();
  void clear_has_output_num();
  void set_has_circle_num();
  void clear_has_circle_num();
  void set_has_finish_num();
  void clear_has_finish_num();
  void set_has_speed();
  void clear_has_speed();
  void set_has_ratio();
  void clear_has_ratio();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_pre_order();
  void clear_has_pre_order();
  void set_has_next_order();
  void clear_has_next_order();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic > basics_;
  ::google::protobuf::int32 id_;
  int state_;
  ::google::protobuf::int32 production_;
  ::google::protobuf::int32 output_num_;
  ::google::protobuf::int32 circle_num_;
  ::google::protobuf::int32 finish_num_;
  float speed_;
  float ratio_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 pre_order_;
  ::google::protobuf::int32 next_order_;
  int production_type_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserProduceOrderService_UserProduceOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserProduceOrderService.UserProduceOrderRequest) */ {
 public:
  UserProduceOrderService_UserProduceOrderRequest();
  virtual ~UserProduceOrderService_UserProduceOrderRequest();

  UserProduceOrderService_UserProduceOrderRequest(const UserProduceOrderService_UserProduceOrderRequest& from);

  inline UserProduceOrderService_UserProduceOrderRequest& operator=(const UserProduceOrderService_UserProduceOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserProduceOrderService_UserProduceOrderRequest(UserProduceOrderService_UserProduceOrderRequest&& from) noexcept
    : UserProduceOrderService_UserProduceOrderRequest() {
    *this = ::std::move(from);
  }

  inline UserProduceOrderService_UserProduceOrderRequest& operator=(UserProduceOrderService_UserProduceOrderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserProduceOrderService_UserProduceOrderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserProduceOrderService_UserProduceOrderRequest* internal_default_instance() {
    return reinterpret_cast<const UserProduceOrderService_UserProduceOrderRequest*>(
               &_UserProduceOrderService_UserProduceOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(UserProduceOrderService_UserProduceOrderRequest* other);
  void Swap(UserProduceOrderService_UserProduceOrderRequest* other);
  friend void swap(UserProduceOrderService_UserProduceOrderRequest& a, UserProduceOrderService_UserProduceOrderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserProduceOrderService_UserProduceOrderRequest* New() const final {
    return CreateMaybeMessage<UserProduceOrderService_UserProduceOrderRequest>(NULL);
  }

  UserProduceOrderService_UserProduceOrderRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserProduceOrderService_UserProduceOrderRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserProduceOrderService_UserProduceOrderRequest& from);
  void MergeFrom(const UserProduceOrderService_UserProduceOrderRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserProduceOrderService_UserProduceOrderRequest* other);
  protected:
  explicit UserProduceOrderService_UserProduceOrderRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.OrderBasic basics = 2;
  int basics_size() const;
  void clear_basics();
  static const int kBasicsFieldNumber = 2;
  ::sg::OrderBasic* mutable_basics(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic >*
      mutable_basics();
  const ::sg::OrderBasic& basics(int index) const;
  ::sg::OrderBasic* add_basics();
  const ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic >&
      basics() const;

  // repeated int32 harvest_list = 10;
  int harvest_list_size() const;
  void clear_harvest_list();
  static const int kHarvestListFieldNumber = 10;
  ::google::protobuf::int32 harvest_list(int index) const;
  void set_harvest_list(int index, ::google::protobuf::int32 value);
  void add_harvest_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      harvest_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_harvest_list();

  // optional int32 facility_id = 3;
  bool has_facility_id() const;
  void clear_facility_id();
  static const int kFacilityIdFieldNumber = 3;
  ::google::protobuf::int32 facility_id() const;
  void set_facility_id(::google::protobuf::int32 value);

  // optional int32 slot_id = 4;
  bool has_slot_id() const;
  void clear_slot_id();
  static const int kSlotIdFieldNumber = 4;
  ::google::protobuf::int32 slot_id() const;
  void set_slot_id(::google::protobuf::int32 value);

  // optional int32 production = 6;
  bool has_production() const;
  void clear_production();
  static const int kProductionFieldNumber = 6;
  ::google::protobuf::int32 production() const;
  void set_production(::google::protobuf::int32 value);

  // optional int32 circle_num = 7;
  bool has_circle_num() const;
  void clear_circle_num();
  static const int kCircleNumFieldNumber = 7;
  ::google::protobuf::int32 circle_num() const;
  void set_circle_num(::google::protobuf::int32 value);

  // optional int32 orderid = 9;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 9;
  ::google::protobuf::int32 orderid() const;
  void set_orderid(::google::protobuf::int32 value);

  // required .sg.UserProduceOrderService.PRODUCE_ORDER_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::sg::UserProduceOrderService_PRODUCE_ORDER_CMD cmd() const;
  void set_cmd(::sg::UserProduceOrderService_PRODUCE_ORDER_CMD value);

  // optional .sg.PRODUCTION_TYPE production_type = 5;
  bool has_production_type() const;
  void clear_production_type();
  static const int kProductionTypeFieldNumber = 5;
  ::sg::PRODUCTION_TYPE production_type() const;
  void set_production_type(::sg::PRODUCTION_TYPE value);

  // @@protoc_insertion_point(class_scope:sg.UserProduceOrderService.UserProduceOrderRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_facility_id();
  void clear_has_facility_id();
  void set_has_slot_id();
  void clear_has_slot_id();
  void set_has_production_type();
  void clear_has_production_type();
  void set_has_production();
  void clear_has_production();
  void set_has_circle_num();
  void clear_has_circle_num();
  void set_has_orderid();
  void clear_has_orderid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic > basics_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > harvest_list_;
  ::google::protobuf::int32 facility_id_;
  ::google::protobuf::int32 slot_id_;
  ::google::protobuf::int32 production_;
  ::google::protobuf::int32 circle_num_;
  ::google::protobuf::int32 orderid_;
  int cmd_;
  int production_type_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserProduceOrderService_UserProduceOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserProduceOrderService.UserProduceOrderResponse) */ {
 public:
  UserProduceOrderService_UserProduceOrderResponse();
  virtual ~UserProduceOrderService_UserProduceOrderResponse();

  UserProduceOrderService_UserProduceOrderResponse(const UserProduceOrderService_UserProduceOrderResponse& from);

  inline UserProduceOrderService_UserProduceOrderResponse& operator=(const UserProduceOrderService_UserProduceOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserProduceOrderService_UserProduceOrderResponse(UserProduceOrderService_UserProduceOrderResponse&& from) noexcept
    : UserProduceOrderService_UserProduceOrderResponse() {
    *this = ::std::move(from);
  }

  inline UserProduceOrderService_UserProduceOrderResponse& operator=(UserProduceOrderService_UserProduceOrderResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserProduceOrderService_UserProduceOrderResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserProduceOrderService_UserProduceOrderResponse* internal_default_instance() {
    return reinterpret_cast<const UserProduceOrderService_UserProduceOrderResponse*>(
               &_UserProduceOrderService_UserProduceOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(UserProduceOrderService_UserProduceOrderResponse* other);
  void Swap(UserProduceOrderService_UserProduceOrderResponse* other);
  friend void swap(UserProduceOrderService_UserProduceOrderResponse& a, UserProduceOrderService_UserProduceOrderResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserProduceOrderService_UserProduceOrderResponse* New() const final {
    return CreateMaybeMessage<UserProduceOrderService_UserProduceOrderResponse>(NULL);
  }

  UserProduceOrderService_UserProduceOrderResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserProduceOrderService_UserProduceOrderResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserProduceOrderService_UserProduceOrderResponse& from);
  void MergeFrom(const UserProduceOrderService_UserProduceOrderResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserProduceOrderService_UserProduceOrderResponse* other);
  protected:
  explicit UserProduceOrderService_UserProduceOrderResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sg.ProduceOrder orders = 2;
  int orders_size() const;
  void clear_orders();
  static const int kOrdersFieldNumber = 2;
  ::sg::ProduceOrder* mutable_orders(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::ProduceOrder >*
      mutable_orders();
  const ::sg::ProduceOrder& orders(int index) const;
  ::sg::ProduceOrder* add_orders();
  const ::google::protobuf::RepeatedPtrField< ::sg::ProduceOrder >&
      orders() const;

  // repeated .sg.Item cost_items = 4;
  int cost_items_size() const;
  void clear_cost_items();
  static const int kCostItemsFieldNumber = 4;
  ::sg::Item* mutable_cost_items(int index);
  ::google::protobuf::RepeatedPtrField< ::sg::Item >*
      mutable_cost_items();
  const ::sg::Item& cost_items(int index) const;
  ::sg::Item* add_cost_items();
  const ::google::protobuf::RepeatedPtrField< ::sg::Item >&
      cost_items() const;

  // optional .sg.Reward gain = 3;
  bool has_gain() const;
  void clear_gain();
  static const int kGainFieldNumber = 3;
  private:
  const ::sg::Reward& _internal_gain() const;
  public:
  const ::sg::Reward& gain() const;
  ::sg::Reward* release_gain();
  ::sg::Reward* mutable_gain();
  void set_allocated_gain(::sg::Reward* gain);
  void unsafe_arena_set_allocated_gain(
      ::sg::Reward* gain);
  ::sg::Reward* unsafe_arena_release_gain();

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.UserProduceOrderService.UserProduceOrderResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_gain();
  void clear_has_gain();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::sg::ProduceOrder > orders_;
  ::google::protobuf::RepeatedPtrField< ::sg::Item > cost_items_;
  ::sg::Reward* gain_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserProduceOrderService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.UserProduceOrderService) */ {
 public:
  UserProduceOrderService();
  virtual ~UserProduceOrderService();

  UserProduceOrderService(const UserProduceOrderService& from);

  inline UserProduceOrderService& operator=(const UserProduceOrderService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserProduceOrderService(UserProduceOrderService&& from) noexcept
    : UserProduceOrderService() {
    *this = ::std::move(from);
  }

  inline UserProduceOrderService& operator=(UserProduceOrderService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserProduceOrderService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserProduceOrderService* internal_default_instance() {
    return reinterpret_cast<const UserProduceOrderService*>(
               &_UserProduceOrderService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(UserProduceOrderService* other);
  void Swap(UserProduceOrderService* other);
  friend void swap(UserProduceOrderService& a, UserProduceOrderService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserProduceOrderService* New() const final {
    return CreateMaybeMessage<UserProduceOrderService>(NULL);
  }

  UserProduceOrderService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserProduceOrderService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserProduceOrderService& from);
  void MergeFrom(const UserProduceOrderService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserProduceOrderService* other);
  protected:
  explicit UserProduceOrderService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserProduceOrderService_UserProduceOrderRequest UserProduceOrderRequest;
  typedef UserProduceOrderService_UserProduceOrderResponse UserProduceOrderResponse;

  typedef UserProduceOrderService_PRODUCE_ORDER_CMD PRODUCE_ORDER_CMD;
  static const PRODUCE_ORDER_CMD QUERY =
    UserProduceOrderService_PRODUCE_ORDER_CMD_QUERY;
  static const PRODUCE_ORDER_CMD ADD =
    UserProduceOrderService_PRODUCE_ORDER_CMD_ADD;
  static const PRODUCE_ORDER_CMD CANCEL =
    UserProduceOrderService_PRODUCE_ORDER_CMD_CANCEL;
  static const PRODUCE_ORDER_CMD START =
    UserProduceOrderService_PRODUCE_ORDER_CMD_START;
  static const PRODUCE_ORDER_CMD HARVEST =
    UserProduceOrderService_PRODUCE_ORDER_CMD_HARVEST;
  static const PRODUCE_ORDER_CMD FAST_FINISH =
    UserProduceOrderService_PRODUCE_ORDER_CMD_FAST_FINISH;
  static inline bool PRODUCE_ORDER_CMD_IsValid(int value) {
    return UserProduceOrderService_PRODUCE_ORDER_CMD_IsValid(value);
  }
  static const PRODUCE_ORDER_CMD PRODUCE_ORDER_CMD_MIN =
    UserProduceOrderService_PRODUCE_ORDER_CMD_PRODUCE_ORDER_CMD_MIN;
  static const PRODUCE_ORDER_CMD PRODUCE_ORDER_CMD_MAX =
    UserProduceOrderService_PRODUCE_ORDER_CMD_PRODUCE_ORDER_CMD_MAX;
  static const int PRODUCE_ORDER_CMD_ARRAYSIZE =
    UserProduceOrderService_PRODUCE_ORDER_CMD_PRODUCE_ORDER_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PRODUCE_ORDER_CMD_descriptor() {
    return UserProduceOrderService_PRODUCE_ORDER_CMD_descriptor();
  }
  static inline const ::std::string& PRODUCE_ORDER_CMD_Name(PRODUCE_ORDER_CMD value) {
    return UserProduceOrderService_PRODUCE_ORDER_CMD_Name(value);
  }
  static inline bool PRODUCE_ORDER_CMD_Parse(const ::std::string& name,
      PRODUCE_ORDER_CMD* value) {
    return UserProduceOrderService_PRODUCE_ORDER_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .sg.UserProduceOrderService.UserProduceOrderRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::sg::UserProduceOrderService_UserProduceOrderRequest& _internal_req() const;
  public:
  const ::sg::UserProduceOrderService_UserProduceOrderRequest& req() const;
  ::sg::UserProduceOrderService_UserProduceOrderRequest* release_req();
  ::sg::UserProduceOrderService_UserProduceOrderRequest* mutable_req();
  void set_allocated_req(::sg::UserProduceOrderService_UserProduceOrderRequest* req);
  void unsafe_arena_set_allocated_req(
      ::sg::UserProduceOrderService_UserProduceOrderRequest* req);
  ::sg::UserProduceOrderService_UserProduceOrderRequest* unsafe_arena_release_req();

  // optional .sg.UserProduceOrderService.UserProduceOrderResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::sg::UserProduceOrderService_UserProduceOrderResponse& _internal_resp() const;
  public:
  const ::sg::UserProduceOrderService_UserProduceOrderResponse& resp() const;
  ::sg::UserProduceOrderService_UserProduceOrderResponse* release_resp();
  ::sg::UserProduceOrderService_UserProduceOrderResponse* mutable_resp();
  void set_allocated_resp(::sg::UserProduceOrderService_UserProduceOrderResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::sg::UserProduceOrderService_UserProduceOrderResponse* resp);
  ::sg::UserProduceOrderService_UserProduceOrderResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:sg.UserProduceOrderService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::UserProduceOrderService_UserProduceOrderRequest* req_;
  ::sg::UserProduceOrderService_UserProduceOrderResponse* resp_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderCreateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.OrderCreateNotify) */ {
 public:
  OrderCreateNotify();
  virtual ~OrderCreateNotify();

  OrderCreateNotify(const OrderCreateNotify& from);

  inline OrderCreateNotify& operator=(const OrderCreateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderCreateNotify(OrderCreateNotify&& from) noexcept
    : OrderCreateNotify() {
    *this = ::std::move(from);
  }

  inline OrderCreateNotify& operator=(OrderCreateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderCreateNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderCreateNotify* internal_default_instance() {
    return reinterpret_cast<const OrderCreateNotify*>(
               &_OrderCreateNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(OrderCreateNotify* other);
  void Swap(OrderCreateNotify* other);
  friend void swap(OrderCreateNotify& a, OrderCreateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderCreateNotify* New() const final {
    return CreateMaybeMessage<OrderCreateNotify>(NULL);
  }

  OrderCreateNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderCreateNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderCreateNotify& from);
  void MergeFrom(const OrderCreateNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderCreateNotify* other);
  protected:
  explicit OrderCreateNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sg.ProduceOrder order = 1;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 1;
  private:
  const ::sg::ProduceOrder& _internal_order() const;
  public:
  const ::sg::ProduceOrder& order() const;
  ::sg::ProduceOrder* release_order();
  ::sg::ProduceOrder* mutable_order();
  void set_allocated_order(::sg::ProduceOrder* order);
  void unsafe_arena_set_allocated_order(
      ::sg::ProduceOrder* order);
  ::sg::ProduceOrder* unsafe_arena_release_order();

  // @@protoc_insertion_point(class_scope:sg.OrderCreateNotify)
 private:
  void set_has_order();
  void clear_has_order();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::ProduceOrder* order_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.OrderFinishNotify) */ {
 public:
  OrderFinishNotify();
  virtual ~OrderFinishNotify();

  OrderFinishNotify(const OrderFinishNotify& from);

  inline OrderFinishNotify& operator=(const OrderFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderFinishNotify(OrderFinishNotify&& from) noexcept
    : OrderFinishNotify() {
    *this = ::std::move(from);
  }

  inline OrderFinishNotify& operator=(OrderFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderFinishNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderFinishNotify* internal_default_instance() {
    return reinterpret_cast<const OrderFinishNotify*>(
               &_OrderFinishNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(OrderFinishNotify* other);
  void Swap(OrderFinishNotify* other);
  friend void swap(OrderFinishNotify& a, OrderFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderFinishNotify* New() const final {
    return CreateMaybeMessage<OrderFinishNotify>(NULL);
  }

  OrderFinishNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderFinishNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderFinishNotify& from);
  void MergeFrom(const OrderFinishNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderFinishNotify* other);
  protected:
  explicit OrderFinishNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sg.Item item_get = 2;
  bool has_item_get() const;
  void clear_item_get();
  static const int kItemGetFieldNumber = 2;
  private:
  const ::sg::Item& _internal_item_get() const;
  public:
  const ::sg::Item& item_get() const;
  ::sg::Item* release_item_get();
  ::sg::Item* mutable_item_get();
  void set_allocated_item_get(::sg::Item* item_get);
  void unsafe_arena_set_allocated_item_get(
      ::sg::Item* item_get);
  ::sg::Item* unsafe_arena_release_item_get();

  // required int32 finish_id = 1;
  bool has_finish_id() const;
  void clear_finish_id();
  static const int kFinishIdFieldNumber = 1;
  ::google::protobuf::int32 finish_id() const;
  void set_finish_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sg.OrderFinishNotify)
 private:
  void set_has_finish_id();
  void clear_has_finish_id();
  void set_has_item_get();
  void clear_has_item_get();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::Item* item_get_;
  ::google::protobuf::int32 finish_id_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderBeginNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.OrderBeginNotify) */ {
 public:
  OrderBeginNotify();
  virtual ~OrderBeginNotify();

  OrderBeginNotify(const OrderBeginNotify& from);

  inline OrderBeginNotify& operator=(const OrderBeginNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderBeginNotify(OrderBeginNotify&& from) noexcept
    : OrderBeginNotify() {
    *this = ::std::move(from);
  }

  inline OrderBeginNotify& operator=(OrderBeginNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderBeginNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderBeginNotify* internal_default_instance() {
    return reinterpret_cast<const OrderBeginNotify*>(
               &_OrderBeginNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(OrderBeginNotify* other);
  void Swap(OrderBeginNotify* other);
  friend void swap(OrderBeginNotify& a, OrderBeginNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderBeginNotify* New() const final {
    return CreateMaybeMessage<OrderBeginNotify>(NULL);
  }

  OrderBeginNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderBeginNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderBeginNotify& from);
  void MergeFrom(const OrderBeginNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderBeginNotify* other);
  protected:
  explicit OrderBeginNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sg.ProduceOrder order = 1;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 1;
  private:
  const ::sg::ProduceOrder& _internal_order() const;
  public:
  const ::sg::ProduceOrder& order() const;
  ::sg::ProduceOrder* release_order();
  ::sg::ProduceOrder* mutable_order();
  void set_allocated_order(::sg::ProduceOrder* order);
  void unsafe_arena_set_allocated_order(
      ::sg::ProduceOrder* order);
  ::sg::ProduceOrder* unsafe_arena_release_order();

  // @@protoc_insertion_point(class_scope:sg.OrderBeginNotify)
 private:
  void set_has_order();
  void clear_has_order();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::ProduceOrder* order_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderPauserNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.OrderPauserNotify) */ {
 public:
  OrderPauserNotify();
  virtual ~OrderPauserNotify();

  OrderPauserNotify(const OrderPauserNotify& from);

  inline OrderPauserNotify& operator=(const OrderPauserNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderPauserNotify(OrderPauserNotify&& from) noexcept
    : OrderPauserNotify() {
    *this = ::std::move(from);
  }

  inline OrderPauserNotify& operator=(OrderPauserNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderPauserNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderPauserNotify* internal_default_instance() {
    return reinterpret_cast<const OrderPauserNotify*>(
               &_OrderPauserNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(OrderPauserNotify* other);
  void Swap(OrderPauserNotify* other);
  friend void swap(OrderPauserNotify& a, OrderPauserNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderPauserNotify* New() const final {
    return CreateMaybeMessage<OrderPauserNotify>(NULL);
  }

  OrderPauserNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderPauserNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderPauserNotify& from);
  void MergeFrom(const OrderPauserNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderPauserNotify* other);
  protected:
  explicit OrderPauserNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sg.ProduceOrder order = 1;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 1;
  private:
  const ::sg::ProduceOrder& _internal_order() const;
  public:
  const ::sg::ProduceOrder& order() const;
  ::sg::ProduceOrder* release_order();
  ::sg::ProduceOrder* mutable_order();
  void set_allocated_order(::sg::ProduceOrder* order);
  void unsafe_arena_set_allocated_order(
      ::sg::ProduceOrder* order);
  ::sg::ProduceOrder* unsafe_arena_release_order();

  // @@protoc_insertion_point(class_scope:sg.OrderPauserNotify)
 private:
  void set_has_order();
  void clear_has_order();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::ProduceOrder* order_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderStateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sg.OrderStateNotify) */ {
 public:
  OrderStateNotify();
  virtual ~OrderStateNotify();

  OrderStateNotify(const OrderStateNotify& from);

  inline OrderStateNotify& operator=(const OrderStateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderStateNotify(OrderStateNotify&& from) noexcept
    : OrderStateNotify() {
    *this = ::std::move(from);
  }

  inline OrderStateNotify& operator=(OrderStateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderStateNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderStateNotify* internal_default_instance() {
    return reinterpret_cast<const OrderStateNotify*>(
               &_OrderStateNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(OrderStateNotify* other);
  void Swap(OrderStateNotify* other);
  friend void swap(OrderStateNotify& a, OrderStateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderStateNotify* New() const final {
    return CreateMaybeMessage<OrderStateNotify>(NULL);
  }

  OrderStateNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrderStateNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrderStateNotify& from);
  void MergeFrom(const OrderStateNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderStateNotify* other);
  protected:
  explicit OrderStateNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .sg.ProduceOrder order = 1;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 1;
  private:
  const ::sg::ProduceOrder& _internal_order() const;
  public:
  const ::sg::ProduceOrder& order() const;
  ::sg::ProduceOrder* release_order();
  ::sg::ProduceOrder* mutable_order();
  void set_allocated_order(::sg::ProduceOrder* order);
  void unsafe_arena_set_allocated_order(
      ::sg::ProduceOrder* order);
  ::sg::ProduceOrder* unsafe_arena_release_order();

  // @@protoc_insertion_point(class_scope:sg.OrderStateNotify)
 private:
  void set_has_order();
  void clear_has_order();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::sg::ProduceOrder* order_;
  friend struct ::protobuf_UserOrder_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OrderBasic

// required int32 basic_type = 1;
inline bool OrderBasic::has_basic_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderBasic::set_has_basic_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderBasic::clear_has_basic_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderBasic::clear_basic_type() {
  basic_type_ = 0;
  clear_has_basic_type();
}
inline ::google::protobuf::int32 OrderBasic::basic_type() const {
  // @@protoc_insertion_point(field_get:sg.OrderBasic.basic_type)
  return basic_type_;
}
inline void OrderBasic::set_basic_type(::google::protobuf::int32 value) {
  set_has_basic_type();
  basic_type_ = value;
  // @@protoc_insertion_point(field_set:sg.OrderBasic.basic_type)
}

// required int32 basic_id = 2;
inline bool OrderBasic::has_basic_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderBasic::set_has_basic_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderBasic::clear_has_basic_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderBasic::clear_basic_id() {
  basic_id_ = 0;
  clear_has_basic_id();
}
inline ::google::protobuf::int32 OrderBasic::basic_id() const {
  // @@protoc_insertion_point(field_get:sg.OrderBasic.basic_id)
  return basic_id_;
}
inline void OrderBasic::set_basic_id(::google::protobuf::int32 value) {
  set_has_basic_id();
  basic_id_ = value;
  // @@protoc_insertion_point(field_set:sg.OrderBasic.basic_id)
}

// -------------------------------------------------------------------

// ProduceOrder

// required int32 id = 1;
inline bool ProduceOrder::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProduceOrder::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProduceOrder::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProduceOrder::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ProduceOrder::id() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.id)
  return id_;
}
inline void ProduceOrder::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.id)
}

// optional .sg.PRODUCE_ORDER_STATE state = 2;
inline bool ProduceOrder::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProduceOrder::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProduceOrder::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProduceOrder::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::sg::PRODUCE_ORDER_STATE ProduceOrder::state() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.state)
  return static_cast< ::sg::PRODUCE_ORDER_STATE >(state_);
}
inline void ProduceOrder::set_state(::sg::PRODUCE_ORDER_STATE value) {
  assert(::sg::PRODUCE_ORDER_STATE_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.state)
}

// optional .sg.PRODUCTION_TYPE production_type = 3;
inline bool ProduceOrder::has_production_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProduceOrder::set_has_production_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProduceOrder::clear_has_production_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProduceOrder::clear_production_type() {
  production_type_ = 1;
  clear_has_production_type();
}
inline ::sg::PRODUCTION_TYPE ProduceOrder::production_type() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.production_type)
  return static_cast< ::sg::PRODUCTION_TYPE >(production_type_);
}
inline void ProduceOrder::set_production_type(::sg::PRODUCTION_TYPE value) {
  assert(::sg::PRODUCTION_TYPE_IsValid(value));
  set_has_production_type();
  production_type_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.production_type)
}

// optional int32 production = 4;
inline bool ProduceOrder::has_production() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProduceOrder::set_has_production() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProduceOrder::clear_has_production() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProduceOrder::clear_production() {
  production_ = 0;
  clear_has_production();
}
inline ::google::protobuf::int32 ProduceOrder::production() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.production)
  return production_;
}
inline void ProduceOrder::set_production(::google::protobuf::int32 value) {
  set_has_production();
  production_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.production)
}

// optional int32 output_num = 5;
inline bool ProduceOrder::has_output_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProduceOrder::set_has_output_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProduceOrder::clear_has_output_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProduceOrder::clear_output_num() {
  output_num_ = 0;
  clear_has_output_num();
}
inline ::google::protobuf::int32 ProduceOrder::output_num() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.output_num)
  return output_num_;
}
inline void ProduceOrder::set_output_num(::google::protobuf::int32 value) {
  set_has_output_num();
  output_num_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.output_num)
}

// optional int32 circle_num = 6;
inline bool ProduceOrder::has_circle_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProduceOrder::set_has_circle_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProduceOrder::clear_has_circle_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProduceOrder::clear_circle_num() {
  circle_num_ = 0;
  clear_has_circle_num();
}
inline ::google::protobuf::int32 ProduceOrder::circle_num() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.circle_num)
  return circle_num_;
}
inline void ProduceOrder::set_circle_num(::google::protobuf::int32 value) {
  set_has_circle_num();
  circle_num_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.circle_num)
}

// optional int32 finish_num = 7;
inline bool ProduceOrder::has_finish_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProduceOrder::set_has_finish_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProduceOrder::clear_has_finish_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProduceOrder::clear_finish_num() {
  finish_num_ = 0;
  clear_has_finish_num();
}
inline ::google::protobuf::int32 ProduceOrder::finish_num() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.finish_num)
  return finish_num_;
}
inline void ProduceOrder::set_finish_num(::google::protobuf::int32 value) {
  set_has_finish_num();
  finish_num_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.finish_num)
}

// optional float speed = 8;
inline bool ProduceOrder::has_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProduceOrder::set_has_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProduceOrder::clear_has_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProduceOrder::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline float ProduceOrder::speed() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.speed)
  return speed_;
}
inline void ProduceOrder::set_speed(float value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.speed)
}

// optional float ratio = 9;
inline bool ProduceOrder::has_ratio() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProduceOrder::set_has_ratio() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProduceOrder::clear_has_ratio() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProduceOrder::clear_ratio() {
  ratio_ = 0;
  clear_has_ratio();
}
inline float ProduceOrder::ratio() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.ratio)
  return ratio_;
}
inline void ProduceOrder::set_ratio(float value) {
  set_has_ratio();
  ratio_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.ratio)
}

// optional sfixed64 timestamp = 10;
inline bool ProduceOrder::has_timestamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProduceOrder::set_has_timestamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProduceOrder::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProduceOrder::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 ProduceOrder::timestamp() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.timestamp)
  return timestamp_;
}
inline void ProduceOrder::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.timestamp)
}

// repeated .sg.OrderBasic basics = 11;
inline int ProduceOrder::basics_size() const {
  return basics_.size();
}
inline void ProduceOrder::clear_basics() {
  basics_.Clear();
}
inline ::sg::OrderBasic* ProduceOrder::mutable_basics(int index) {
  // @@protoc_insertion_point(field_mutable:sg.ProduceOrder.basics)
  return basics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic >*
ProduceOrder::mutable_basics() {
  // @@protoc_insertion_point(field_mutable_list:sg.ProduceOrder.basics)
  return &basics_;
}
inline const ::sg::OrderBasic& ProduceOrder::basics(int index) const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.basics)
  return basics_.Get(index);
}
inline ::sg::OrderBasic* ProduceOrder::add_basics() {
  // @@protoc_insertion_point(field_add:sg.ProduceOrder.basics)
  return basics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic >&
ProduceOrder::basics() const {
  // @@protoc_insertion_point(field_list:sg.ProduceOrder.basics)
  return basics_;
}

// optional int32 pre_order = 12;
inline bool ProduceOrder::has_pre_order() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProduceOrder::set_has_pre_order() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProduceOrder::clear_has_pre_order() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProduceOrder::clear_pre_order() {
  pre_order_ = 0;
  clear_has_pre_order();
}
inline ::google::protobuf::int32 ProduceOrder::pre_order() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.pre_order)
  return pre_order_;
}
inline void ProduceOrder::set_pre_order(::google::protobuf::int32 value) {
  set_has_pre_order();
  pre_order_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.pre_order)
}

// optional int32 next_order = 13;
inline bool ProduceOrder::has_next_order() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProduceOrder::set_has_next_order() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProduceOrder::clear_has_next_order() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProduceOrder::clear_next_order() {
  next_order_ = 0;
  clear_has_next_order();
}
inline ::google::protobuf::int32 ProduceOrder::next_order() const {
  // @@protoc_insertion_point(field_get:sg.ProduceOrder.next_order)
  return next_order_;
}
inline void ProduceOrder::set_next_order(::google::protobuf::int32 value) {
  set_has_next_order();
  next_order_ = value;
  // @@protoc_insertion_point(field_set:sg.ProduceOrder.next_order)
}

// -------------------------------------------------------------------

// UserProduceOrderService_UserProduceOrderRequest

// required .sg.UserProduceOrderService.PRODUCE_ORDER_CMD cmd = 1;
inline bool UserProduceOrderService_UserProduceOrderRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::sg::UserProduceOrderService_PRODUCE_ORDER_CMD UserProduceOrderService_UserProduceOrderRequest::cmd() const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.cmd)
  return static_cast< ::sg::UserProduceOrderService_PRODUCE_ORDER_CMD >(cmd_);
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_cmd(::sg::UserProduceOrderService_PRODUCE_ORDER_CMD value) {
  assert(::sg::UserProduceOrderService_PRODUCE_ORDER_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderRequest.cmd)
}

// repeated .sg.OrderBasic basics = 2;
inline int UserProduceOrderService_UserProduceOrderRequest::basics_size() const {
  return basics_.size();
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_basics() {
  basics_.Clear();
}
inline ::sg::OrderBasic* UserProduceOrderService_UserProduceOrderRequest::mutable_basics(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserProduceOrderService.UserProduceOrderRequest.basics)
  return basics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic >*
UserProduceOrderService_UserProduceOrderRequest::mutable_basics() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserProduceOrderService.UserProduceOrderRequest.basics)
  return &basics_;
}
inline const ::sg::OrderBasic& UserProduceOrderService_UserProduceOrderRequest::basics(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.basics)
  return basics_.Get(index);
}
inline ::sg::OrderBasic* UserProduceOrderService_UserProduceOrderRequest::add_basics() {
  // @@protoc_insertion_point(field_add:sg.UserProduceOrderService.UserProduceOrderRequest.basics)
  return basics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::OrderBasic >&
UserProduceOrderService_UserProduceOrderRequest::basics() const {
  // @@protoc_insertion_point(field_list:sg.UserProduceOrderService.UserProduceOrderRequest.basics)
  return basics_;
}

// optional int32 facility_id = 3;
inline bool UserProduceOrderService_UserProduceOrderRequest::has_facility_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_has_facility_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_has_facility_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_facility_id() {
  facility_id_ = 0;
  clear_has_facility_id();
}
inline ::google::protobuf::int32 UserProduceOrderService_UserProduceOrderRequest::facility_id() const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.facility_id)
  return facility_id_;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_facility_id(::google::protobuf::int32 value) {
  set_has_facility_id();
  facility_id_ = value;
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderRequest.facility_id)
}

// optional int32 slot_id = 4;
inline bool UserProduceOrderService_UserProduceOrderRequest::has_slot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_has_slot_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_slot_id() {
  slot_id_ = 0;
  clear_has_slot_id();
}
inline ::google::protobuf::int32 UserProduceOrderService_UserProduceOrderRequest::slot_id() const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.slot_id)
  return slot_id_;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_slot_id(::google::protobuf::int32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderRequest.slot_id)
}

// optional .sg.PRODUCTION_TYPE production_type = 5;
inline bool UserProduceOrderService_UserProduceOrderRequest::has_production_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_has_production_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_has_production_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_production_type() {
  production_type_ = 1;
  clear_has_production_type();
}
inline ::sg::PRODUCTION_TYPE UserProduceOrderService_UserProduceOrderRequest::production_type() const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.production_type)
  return static_cast< ::sg::PRODUCTION_TYPE >(production_type_);
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_production_type(::sg::PRODUCTION_TYPE value) {
  assert(::sg::PRODUCTION_TYPE_IsValid(value));
  set_has_production_type();
  production_type_ = value;
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderRequest.production_type)
}

// optional int32 production = 6;
inline bool UserProduceOrderService_UserProduceOrderRequest::has_production() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_has_production() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_has_production() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_production() {
  production_ = 0;
  clear_has_production();
}
inline ::google::protobuf::int32 UserProduceOrderService_UserProduceOrderRequest::production() const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.production)
  return production_;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_production(::google::protobuf::int32 value) {
  set_has_production();
  production_ = value;
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderRequest.production)
}

// optional int32 circle_num = 7;
inline bool UserProduceOrderService_UserProduceOrderRequest::has_circle_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_has_circle_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_has_circle_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_circle_num() {
  circle_num_ = 0;
  clear_has_circle_num();
}
inline ::google::protobuf::int32 UserProduceOrderService_UserProduceOrderRequest::circle_num() const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.circle_num)
  return circle_num_;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_circle_num(::google::protobuf::int32 value) {
  set_has_circle_num();
  circle_num_ = value;
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderRequest.circle_num)
}

// optional int32 orderid = 9;
inline bool UserProduceOrderService_UserProduceOrderRequest::has_orderid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_has_orderid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_orderid() {
  orderid_ = 0;
  clear_has_orderid();
}
inline ::google::protobuf::int32 UserProduceOrderService_UserProduceOrderRequest::orderid() const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.orderid)
  return orderid_;
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_orderid(::google::protobuf::int32 value) {
  set_has_orderid();
  orderid_ = value;
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderRequest.orderid)
}

// repeated int32 harvest_list = 10;
inline int UserProduceOrderService_UserProduceOrderRequest::harvest_list_size() const {
  return harvest_list_.size();
}
inline void UserProduceOrderService_UserProduceOrderRequest::clear_harvest_list() {
  harvest_list_.Clear();
}
inline ::google::protobuf::int32 UserProduceOrderService_UserProduceOrderRequest::harvest_list(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderRequest.harvest_list)
  return harvest_list_.Get(index);
}
inline void UserProduceOrderService_UserProduceOrderRequest::set_harvest_list(int index, ::google::protobuf::int32 value) {
  harvest_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderRequest.harvest_list)
}
inline void UserProduceOrderService_UserProduceOrderRequest::add_harvest_list(::google::protobuf::int32 value) {
  harvest_list_.Add(value);
  // @@protoc_insertion_point(field_add:sg.UserProduceOrderService.UserProduceOrderRequest.harvest_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UserProduceOrderService_UserProduceOrderRequest::harvest_list() const {
  // @@protoc_insertion_point(field_list:sg.UserProduceOrderService.UserProduceOrderRequest.harvest_list)
  return harvest_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UserProduceOrderService_UserProduceOrderRequest::mutable_harvest_list() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserProduceOrderService.UserProduceOrderRequest.harvest_list)
  return &harvest_list_;
}

// -------------------------------------------------------------------

// UserProduceOrderService_UserProduceOrderResponse

// required int32 result = 1;
inline bool UserProduceOrderService_UserProduceOrderResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserProduceOrderService_UserProduceOrderResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserProduceOrderService_UserProduceOrderResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UserProduceOrderService_UserProduceOrderResponse::result() const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderResponse.result)
  return result_;
}
inline void UserProduceOrderService_UserProduceOrderResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:sg.UserProduceOrderService.UserProduceOrderResponse.result)
}

// repeated .sg.ProduceOrder orders = 2;
inline int UserProduceOrderService_UserProduceOrderResponse::orders_size() const {
  return orders_.size();
}
inline void UserProduceOrderService_UserProduceOrderResponse::clear_orders() {
  orders_.Clear();
}
inline ::sg::ProduceOrder* UserProduceOrderService_UserProduceOrderResponse::mutable_orders(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserProduceOrderService.UserProduceOrderResponse.orders)
  return orders_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::ProduceOrder >*
UserProduceOrderService_UserProduceOrderResponse::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserProduceOrderService.UserProduceOrderResponse.orders)
  return &orders_;
}
inline const ::sg::ProduceOrder& UserProduceOrderService_UserProduceOrderResponse::orders(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderResponse.orders)
  return orders_.Get(index);
}
inline ::sg::ProduceOrder* UserProduceOrderService_UserProduceOrderResponse::add_orders() {
  // @@protoc_insertion_point(field_add:sg.UserProduceOrderService.UserProduceOrderResponse.orders)
  return orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::ProduceOrder >&
UserProduceOrderService_UserProduceOrderResponse::orders() const {
  // @@protoc_insertion_point(field_list:sg.UserProduceOrderService.UserProduceOrderResponse.orders)
  return orders_;
}

// optional .sg.Reward gain = 3;
inline bool UserProduceOrderService_UserProduceOrderResponse::has_gain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserProduceOrderService_UserProduceOrderResponse::set_has_gain() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserProduceOrderService_UserProduceOrderResponse::clear_has_gain() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::sg::Reward& UserProduceOrderService_UserProduceOrderResponse::_internal_gain() const {
  return *gain_;
}
inline const ::sg::Reward& UserProduceOrderService_UserProduceOrderResponse::gain() const {
  const ::sg::Reward* p = gain_;
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderResponse.gain)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::Reward*>(
      &::sg::_Reward_default_instance_);
}
inline ::sg::Reward* UserProduceOrderService_UserProduceOrderResponse::release_gain() {
  // @@protoc_insertion_point(field_release:sg.UserProduceOrderService.UserProduceOrderResponse.gain)
  clear_has_gain();
  ::sg::Reward* temp = gain_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  gain_ = NULL;
  return temp;
}
inline ::sg::Reward* UserProduceOrderService_UserProduceOrderResponse::unsafe_arena_release_gain() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserProduceOrderService.UserProduceOrderResponse.gain)
  clear_has_gain();
  ::sg::Reward* temp = gain_;
  gain_ = NULL;
  return temp;
}
inline ::sg::Reward* UserProduceOrderService_UserProduceOrderResponse::mutable_gain() {
  set_has_gain();
  if (gain_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::Reward>(GetArenaNoVirtual());
    gain_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserProduceOrderService.UserProduceOrderResponse.gain)
  return gain_;
}
inline void UserProduceOrderService_UserProduceOrderResponse::set_allocated_gain(::sg::Reward* gain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(gain_);
  }
  if (gain) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(gain)->GetArena();
    if (message_arena != submessage_arena) {
      gain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gain, submessage_arena);
    }
    set_has_gain();
  } else {
    clear_has_gain();
  }
  gain_ = gain;
  // @@protoc_insertion_point(field_set_allocated:sg.UserProduceOrderService.UserProduceOrderResponse.gain)
}

// repeated .sg.Item cost_items = 4;
inline int UserProduceOrderService_UserProduceOrderResponse::cost_items_size() const {
  return cost_items_.size();
}
inline ::sg::Item* UserProduceOrderService_UserProduceOrderResponse::mutable_cost_items(int index) {
  // @@protoc_insertion_point(field_mutable:sg.UserProduceOrderService.UserProduceOrderResponse.cost_items)
  return cost_items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::sg::Item >*
UserProduceOrderService_UserProduceOrderResponse::mutable_cost_items() {
  // @@protoc_insertion_point(field_mutable_list:sg.UserProduceOrderService.UserProduceOrderResponse.cost_items)
  return &cost_items_;
}
inline const ::sg::Item& UserProduceOrderService_UserProduceOrderResponse::cost_items(int index) const {
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.UserProduceOrderResponse.cost_items)
  return cost_items_.Get(index);
}
inline ::sg::Item* UserProduceOrderService_UserProduceOrderResponse::add_cost_items() {
  // @@protoc_insertion_point(field_add:sg.UserProduceOrderService.UserProduceOrderResponse.cost_items)
  return cost_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sg::Item >&
UserProduceOrderService_UserProduceOrderResponse::cost_items() const {
  // @@protoc_insertion_point(field_list:sg.UserProduceOrderService.UserProduceOrderResponse.cost_items)
  return cost_items_;
}

// -------------------------------------------------------------------

// UserProduceOrderService

// optional .sg.UserProduceOrderService.UserProduceOrderRequest req = 1;
inline bool UserProduceOrderService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserProduceOrderService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserProduceOrderService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserProduceOrderService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::sg::UserProduceOrderService_UserProduceOrderRequest& UserProduceOrderService::_internal_req() const {
  return *req_;
}
inline const ::sg::UserProduceOrderService_UserProduceOrderRequest& UserProduceOrderService::req() const {
  const ::sg::UserProduceOrderService_UserProduceOrderRequest* p = req_;
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserProduceOrderService_UserProduceOrderRequest*>(
      &::sg::_UserProduceOrderService_UserProduceOrderRequest_default_instance_);
}
inline ::sg::UserProduceOrderService_UserProduceOrderRequest* UserProduceOrderService::release_req() {
  // @@protoc_insertion_point(field_release:sg.UserProduceOrderService.req)
  clear_has_req();
  ::sg::UserProduceOrderService_UserProduceOrderRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::sg::UserProduceOrderService_UserProduceOrderRequest* UserProduceOrderService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserProduceOrderService.req)
  clear_has_req();
  ::sg::UserProduceOrderService_UserProduceOrderRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::sg::UserProduceOrderService_UserProduceOrderRequest* UserProduceOrderService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserProduceOrderService_UserProduceOrderRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserProduceOrderService.req)
  return req_;
}
inline void UserProduceOrderService::set_allocated_req(::sg::UserProduceOrderService_UserProduceOrderRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:sg.UserProduceOrderService.req)
}

// optional .sg.UserProduceOrderService.UserProduceOrderResponse resp = 2;
inline bool UserProduceOrderService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserProduceOrderService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserProduceOrderService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserProduceOrderService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::sg::UserProduceOrderService_UserProduceOrderResponse& UserProduceOrderService::_internal_resp() const {
  return *resp_;
}
inline const ::sg::UserProduceOrderService_UserProduceOrderResponse& UserProduceOrderService::resp() const {
  const ::sg::UserProduceOrderService_UserProduceOrderResponse* p = resp_;
  // @@protoc_insertion_point(field_get:sg.UserProduceOrderService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::UserProduceOrderService_UserProduceOrderResponse*>(
      &::sg::_UserProduceOrderService_UserProduceOrderResponse_default_instance_);
}
inline ::sg::UserProduceOrderService_UserProduceOrderResponse* UserProduceOrderService::release_resp() {
  // @@protoc_insertion_point(field_release:sg.UserProduceOrderService.resp)
  clear_has_resp();
  ::sg::UserProduceOrderService_UserProduceOrderResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::sg::UserProduceOrderService_UserProduceOrderResponse* UserProduceOrderService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.UserProduceOrderService.resp)
  clear_has_resp();
  ::sg::UserProduceOrderService_UserProduceOrderResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::sg::UserProduceOrderService_UserProduceOrderResponse* UserProduceOrderService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::UserProduceOrderService_UserProduceOrderResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.UserProduceOrderService.resp)
  return resp_;
}
inline void UserProduceOrderService::set_allocated_resp(::sg::UserProduceOrderService_UserProduceOrderResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:sg.UserProduceOrderService.resp)
}

// -------------------------------------------------------------------

// OrderCreateNotify

// required .sg.ProduceOrder order = 1;
inline bool OrderCreateNotify::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderCreateNotify::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderCreateNotify::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderCreateNotify::clear_order() {
  if (order_ != NULL) order_->Clear();
  clear_has_order();
}
inline const ::sg::ProduceOrder& OrderCreateNotify::_internal_order() const {
  return *order_;
}
inline const ::sg::ProduceOrder& OrderCreateNotify::order() const {
  const ::sg::ProduceOrder* p = order_;
  // @@protoc_insertion_point(field_get:sg.OrderCreateNotify.order)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ProduceOrder*>(
      &::sg::_ProduceOrder_default_instance_);
}
inline ::sg::ProduceOrder* OrderCreateNotify::release_order() {
  // @@protoc_insertion_point(field_release:sg.OrderCreateNotify.order)
  clear_has_order();
  ::sg::ProduceOrder* temp = order_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  order_ = NULL;
  return temp;
}
inline ::sg::ProduceOrder* OrderCreateNotify::unsafe_arena_release_order() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.OrderCreateNotify.order)
  clear_has_order();
  ::sg::ProduceOrder* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::sg::ProduceOrder* OrderCreateNotify::mutable_order() {
  set_has_order();
  if (order_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ProduceOrder>(GetArenaNoVirtual());
    order_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.OrderCreateNotify.order)
  return order_;
}
inline void OrderCreateNotify::set_allocated_order(::sg::ProduceOrder* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete order_;
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(order);
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    set_has_order();
  } else {
    clear_has_order();
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:sg.OrderCreateNotify.order)
}

// -------------------------------------------------------------------

// OrderFinishNotify

// required int32 finish_id = 1;
inline bool OrderFinishNotify::has_finish_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderFinishNotify::set_has_finish_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderFinishNotify::clear_has_finish_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderFinishNotify::clear_finish_id() {
  finish_id_ = 0;
  clear_has_finish_id();
}
inline ::google::protobuf::int32 OrderFinishNotify::finish_id() const {
  // @@protoc_insertion_point(field_get:sg.OrderFinishNotify.finish_id)
  return finish_id_;
}
inline void OrderFinishNotify::set_finish_id(::google::protobuf::int32 value) {
  set_has_finish_id();
  finish_id_ = value;
  // @@protoc_insertion_point(field_set:sg.OrderFinishNotify.finish_id)
}

// optional .sg.Item item_get = 2;
inline bool OrderFinishNotify::has_item_get() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderFinishNotify::set_has_item_get() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderFinishNotify::clear_has_item_get() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::sg::Item& OrderFinishNotify::_internal_item_get() const {
  return *item_get_;
}
inline const ::sg::Item& OrderFinishNotify::item_get() const {
  const ::sg::Item* p = item_get_;
  // @@protoc_insertion_point(field_get:sg.OrderFinishNotify.item_get)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::Item*>(
      &::sg::_Item_default_instance_);
}
inline ::sg::Item* OrderFinishNotify::release_item_get() {
  // @@protoc_insertion_point(field_release:sg.OrderFinishNotify.item_get)
  clear_has_item_get();
  ::sg::Item* temp = item_get_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  item_get_ = NULL;
  return temp;
}
inline ::sg::Item* OrderFinishNotify::unsafe_arena_release_item_get() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.OrderFinishNotify.item_get)
  clear_has_item_get();
  ::sg::Item* temp = item_get_;
  item_get_ = NULL;
  return temp;
}
inline ::sg::Item* OrderFinishNotify::mutable_item_get() {
  set_has_item_get();
  if (item_get_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::Item>(GetArenaNoVirtual());
    item_get_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.OrderFinishNotify.item_get)
  return item_get_;
}
inline void OrderFinishNotify::set_allocated_item_get(::sg::Item* item_get) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(item_get_);
  }
  if (item_get) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(item_get)->GetArena();
    if (message_arena != submessage_arena) {
      item_get = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item_get, submessage_arena);
    }
    set_has_item_get();
  } else {
    clear_has_item_get();
  }
  item_get_ = item_get;
  // @@protoc_insertion_point(field_set_allocated:sg.OrderFinishNotify.item_get)
}

// -------------------------------------------------------------------

// OrderBeginNotify

// required .sg.ProduceOrder order = 1;
inline bool OrderBeginNotify::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderBeginNotify::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderBeginNotify::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderBeginNotify::clear_order() {
  if (order_ != NULL) order_->Clear();
  clear_has_order();
}
inline const ::sg::ProduceOrder& OrderBeginNotify::_internal_order() const {
  return *order_;
}
inline const ::sg::ProduceOrder& OrderBeginNotify::order() const {
  const ::sg::ProduceOrder* p = order_;
  // @@protoc_insertion_point(field_get:sg.OrderBeginNotify.order)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ProduceOrder*>(
      &::sg::_ProduceOrder_default_instance_);
}
inline ::sg::ProduceOrder* OrderBeginNotify::release_order() {
  // @@protoc_insertion_point(field_release:sg.OrderBeginNotify.order)
  clear_has_order();
  ::sg::ProduceOrder* temp = order_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  order_ = NULL;
  return temp;
}
inline ::sg::ProduceOrder* OrderBeginNotify::unsafe_arena_release_order() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.OrderBeginNotify.order)
  clear_has_order();
  ::sg::ProduceOrder* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::sg::ProduceOrder* OrderBeginNotify::mutable_order() {
  set_has_order();
  if (order_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ProduceOrder>(GetArenaNoVirtual());
    order_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.OrderBeginNotify.order)
  return order_;
}
inline void OrderBeginNotify::set_allocated_order(::sg::ProduceOrder* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete order_;
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(order);
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    set_has_order();
  } else {
    clear_has_order();
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:sg.OrderBeginNotify.order)
}

// -------------------------------------------------------------------

// OrderPauserNotify

// required .sg.ProduceOrder order = 1;
inline bool OrderPauserNotify::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderPauserNotify::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderPauserNotify::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderPauserNotify::clear_order() {
  if (order_ != NULL) order_->Clear();
  clear_has_order();
}
inline const ::sg::ProduceOrder& OrderPauserNotify::_internal_order() const {
  return *order_;
}
inline const ::sg::ProduceOrder& OrderPauserNotify::order() const {
  const ::sg::ProduceOrder* p = order_;
  // @@protoc_insertion_point(field_get:sg.OrderPauserNotify.order)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ProduceOrder*>(
      &::sg::_ProduceOrder_default_instance_);
}
inline ::sg::ProduceOrder* OrderPauserNotify::release_order() {
  // @@protoc_insertion_point(field_release:sg.OrderPauserNotify.order)
  clear_has_order();
  ::sg::ProduceOrder* temp = order_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  order_ = NULL;
  return temp;
}
inline ::sg::ProduceOrder* OrderPauserNotify::unsafe_arena_release_order() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.OrderPauserNotify.order)
  clear_has_order();
  ::sg::ProduceOrder* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::sg::ProduceOrder* OrderPauserNotify::mutable_order() {
  set_has_order();
  if (order_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ProduceOrder>(GetArenaNoVirtual());
    order_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.OrderPauserNotify.order)
  return order_;
}
inline void OrderPauserNotify::set_allocated_order(::sg::ProduceOrder* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete order_;
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(order);
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    set_has_order();
  } else {
    clear_has_order();
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:sg.OrderPauserNotify.order)
}

// -------------------------------------------------------------------

// OrderStateNotify

// required .sg.ProduceOrder order = 1;
inline bool OrderStateNotify::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderStateNotify::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderStateNotify::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderStateNotify::clear_order() {
  if (order_ != NULL) order_->Clear();
  clear_has_order();
}
inline const ::sg::ProduceOrder& OrderStateNotify::_internal_order() const {
  return *order_;
}
inline const ::sg::ProduceOrder& OrderStateNotify::order() const {
  const ::sg::ProduceOrder* p = order_;
  // @@protoc_insertion_point(field_get:sg.OrderStateNotify.order)
  return p != NULL ? *p : *reinterpret_cast<const ::sg::ProduceOrder*>(
      &::sg::_ProduceOrder_default_instance_);
}
inline ::sg::ProduceOrder* OrderStateNotify::release_order() {
  // @@protoc_insertion_point(field_release:sg.OrderStateNotify.order)
  clear_has_order();
  ::sg::ProduceOrder* temp = order_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  order_ = NULL;
  return temp;
}
inline ::sg::ProduceOrder* OrderStateNotify::unsafe_arena_release_order() {
  // @@protoc_insertion_point(field_unsafe_arena_release:sg.OrderStateNotify.order)
  clear_has_order();
  ::sg::ProduceOrder* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::sg::ProduceOrder* OrderStateNotify::mutable_order() {
  set_has_order();
  if (order_ == NULL) {
    auto* p = CreateMaybeMessage<::sg::ProduceOrder>(GetArenaNoVirtual());
    order_ = p;
  }
  // @@protoc_insertion_point(field_mutable:sg.OrderStateNotify.order)
  return order_;
}
inline void OrderStateNotify::set_allocated_order(::sg::ProduceOrder* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete order_;
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(order);
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    set_has_order();
  } else {
    clear_has_order();
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:sg.OrderStateNotify.order)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sg::UserProduceOrderService_PRODUCE_ORDER_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::UserProduceOrderService_PRODUCE_ORDER_CMD>() {
  return ::sg::UserProduceOrderService_PRODUCE_ORDER_CMD_descriptor();
}
template <> struct is_proto_enum< ::sg::PRODUCE_ORDER_STATE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::PRODUCE_ORDER_STATE>() {
  return ::sg::PRODUCE_ORDER_STATE_descriptor();
}
template <> struct is_proto_enum< ::sg::PRODUCTION_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sg::PRODUCTION_TYPE>() {
  return ::sg::PRODUCTION_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_UserOrder_2eproto
