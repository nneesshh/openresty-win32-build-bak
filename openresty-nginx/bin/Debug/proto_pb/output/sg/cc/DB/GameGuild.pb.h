// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameGuild.proto

#ifndef PROTOBUF_INCLUDED_GameGuild_2eproto
#define PROTOBUF_INCLUDED_GameGuild_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto 

namespace protobuf_GameGuild_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[26];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_GameGuild_2eproto
namespace db {
class ConfigGuild;
class ConfigGuildDefaultTypeInternal;
extern ConfigGuildDefaultTypeInternal _ConfigGuild_default_instance_;
class ConfigGuildBadge;
class ConfigGuildBadgeDefaultTypeInternal;
extern ConfigGuildBadgeDefaultTypeInternal _ConfigGuildBadge_default_instance_;
class ConfigGuildBadgeList;
class ConfigGuildBadgeListDefaultTypeInternal;
extern ConfigGuildBadgeListDefaultTypeInternal _ConfigGuildBadgeList_default_instance_;
class ConfigGuildBuilding;
class ConfigGuildBuildingDefaultTypeInternal;
extern ConfigGuildBuildingDefaultTypeInternal _ConfigGuildBuilding_default_instance_;
class ConfigGuildBuildingList;
class ConfigGuildBuildingListDefaultTypeInternal;
extern ConfigGuildBuildingListDefaultTypeInternal _ConfigGuildBuildingList_default_instance_;
class ConfigGuildDonation;
class ConfigGuildDonationDefaultTypeInternal;
extern ConfigGuildDonationDefaultTypeInternal _ConfigGuildDonation_default_instance_;
class ConfigGuildDonationList;
class ConfigGuildDonationListDefaultTypeInternal;
extern ConfigGuildDonationListDefaultTypeInternal _ConfigGuildDonationList_default_instance_;
class ConfigGuildList;
class ConfigGuildListDefaultTypeInternal;
extern ConfigGuildListDefaultTypeInternal _ConfigGuildList_default_instance_;
class ConfigGuildSignin;
class ConfigGuildSigninDefaultTypeInternal;
extern ConfigGuildSigninDefaultTypeInternal _ConfigGuildSignin_default_instance_;
class ConfigGuildSigninList;
class ConfigGuildSigninListDefaultTypeInternal;
extern ConfigGuildSigninListDefaultTypeInternal _ConfigGuildSigninList_default_instance_;
class ConfigGuildUserTitle;
class ConfigGuildUserTitleDefaultTypeInternal;
extern ConfigGuildUserTitleDefaultTypeInternal _ConfigGuildUserTitle_default_instance_;
class ConfigGuildUserTitleList;
class ConfigGuildUserTitleListDefaultTypeInternal;
extern ConfigGuildUserTitleListDefaultTypeInternal _ConfigGuildUserTitleList_default_instance_;
class GameGuild;
class GameGuildDefaultTypeInternal;
extern GameGuildDefaultTypeInternal _GameGuild_default_instance_;
class GameGuildBuilding;
class GameGuildBuildingDefaultTypeInternal;
extern GameGuildBuildingDefaultTypeInternal _GameGuildBuilding_default_instance_;
class GameGuildStore;
class GameGuildStoreDefaultTypeInternal;
extern GameGuildStoreDefaultTypeInternal _GameGuildStore_default_instance_;
class GameGuildTrack;
class GameGuildTrackDefaultTypeInternal;
extern GameGuildTrackDefaultTypeInternal _GameGuildTrack_default_instance_;
class GameGuildUser;
class GameGuildUserDefaultTypeInternal;
extern GameGuildUserDefaultTypeInternal _GameGuildUser_default_instance_;
class GameStatsGuildUser;
class GameStatsGuildUserDefaultTypeInternal;
extern GameStatsGuildUserDefaultTypeInternal _GameStatsGuildUser_default_instance_;
class UserStatsGuildCommon;
class UserStatsGuildCommonDefaultTypeInternal;
extern UserStatsGuildCommonDefaultTypeInternal _UserStatsGuildCommon_default_instance_;
class proc_i_delete_game_guild_track;
class proc_i_delete_game_guild_trackDefaultTypeInternal;
extern proc_i_delete_game_guild_trackDefaultTypeInternal _proc_i_delete_game_guild_track_default_instance_;
class proc_i_delete_game_guild_track_Parameter;
class proc_i_delete_game_guild_track_ParameterDefaultTypeInternal;
extern proc_i_delete_game_guild_track_ParameterDefaultTypeInternal _proc_i_delete_game_guild_track_Parameter_default_instance_;
class proc_i_load_game_guild_tracks;
class proc_i_load_game_guild_tracksDefaultTypeInternal;
extern proc_i_load_game_guild_tracksDefaultTypeInternal _proc_i_load_game_guild_tracks_default_instance_;
class proc_i_load_game_guild_tracks_Parameter;
class proc_i_load_game_guild_tracks_ParameterDefaultTypeInternal;
extern proc_i_load_game_guild_tracks_ParameterDefaultTypeInternal _proc_i_load_game_guild_tracks_Parameter_default_instance_;
class proc_i_load_game_guild_tracks_ReturnRecord;
class proc_i_load_game_guild_tracks_ReturnRecordDefaultTypeInternal;
extern proc_i_load_game_guild_tracks_ReturnRecordDefaultTypeInternal _proc_i_load_game_guild_tracks_ReturnRecord_default_instance_;
class proc_i_save_game_guild_track;
class proc_i_save_game_guild_trackDefaultTypeInternal;
extern proc_i_save_game_guild_trackDefaultTypeInternal _proc_i_save_game_guild_track_default_instance_;
class proc_i_save_game_guild_track_Parameter;
class proc_i_save_game_guild_track_ParameterDefaultTypeInternal;
extern proc_i_save_game_guild_track_ParameterDefaultTypeInternal _proc_i_save_game_guild_track_Parameter_default_instance_;
}  // namespace db
namespace google {
namespace protobuf {
template<> ::db::ConfigGuild* Arena::CreateMaybeMessage<::db::ConfigGuild>(Arena*);
template<> ::db::ConfigGuildBadge* Arena::CreateMaybeMessage<::db::ConfigGuildBadge>(Arena*);
template<> ::db::ConfigGuildBadgeList* Arena::CreateMaybeMessage<::db::ConfigGuildBadgeList>(Arena*);
template<> ::db::ConfigGuildBuilding* Arena::CreateMaybeMessage<::db::ConfigGuildBuilding>(Arena*);
template<> ::db::ConfigGuildBuildingList* Arena::CreateMaybeMessage<::db::ConfigGuildBuildingList>(Arena*);
template<> ::db::ConfigGuildDonation* Arena::CreateMaybeMessage<::db::ConfigGuildDonation>(Arena*);
template<> ::db::ConfigGuildDonationList* Arena::CreateMaybeMessage<::db::ConfigGuildDonationList>(Arena*);
template<> ::db::ConfigGuildList* Arena::CreateMaybeMessage<::db::ConfigGuildList>(Arena*);
template<> ::db::ConfigGuildSignin* Arena::CreateMaybeMessage<::db::ConfigGuildSignin>(Arena*);
template<> ::db::ConfigGuildSigninList* Arena::CreateMaybeMessage<::db::ConfigGuildSigninList>(Arena*);
template<> ::db::ConfigGuildUserTitle* Arena::CreateMaybeMessage<::db::ConfigGuildUserTitle>(Arena*);
template<> ::db::ConfigGuildUserTitleList* Arena::CreateMaybeMessage<::db::ConfigGuildUserTitleList>(Arena*);
template<> ::db::GameGuild* Arena::CreateMaybeMessage<::db::GameGuild>(Arena*);
template<> ::db::GameGuildBuilding* Arena::CreateMaybeMessage<::db::GameGuildBuilding>(Arena*);
template<> ::db::GameGuildStore* Arena::CreateMaybeMessage<::db::GameGuildStore>(Arena*);
template<> ::db::GameGuildTrack* Arena::CreateMaybeMessage<::db::GameGuildTrack>(Arena*);
template<> ::db::GameGuildUser* Arena::CreateMaybeMessage<::db::GameGuildUser>(Arena*);
template<> ::db::GameStatsGuildUser* Arena::CreateMaybeMessage<::db::GameStatsGuildUser>(Arena*);
template<> ::db::UserStatsGuildCommon* Arena::CreateMaybeMessage<::db::UserStatsGuildCommon>(Arena*);
template<> ::db::proc_i_delete_game_guild_track* Arena::CreateMaybeMessage<::db::proc_i_delete_game_guild_track>(Arena*);
template<> ::db::proc_i_delete_game_guild_track_Parameter* Arena::CreateMaybeMessage<::db::proc_i_delete_game_guild_track_Parameter>(Arena*);
template<> ::db::proc_i_load_game_guild_tracks* Arena::CreateMaybeMessage<::db::proc_i_load_game_guild_tracks>(Arena*);
template<> ::db::proc_i_load_game_guild_tracks_Parameter* Arena::CreateMaybeMessage<::db::proc_i_load_game_guild_tracks_Parameter>(Arena*);
template<> ::db::proc_i_load_game_guild_tracks_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_i_load_game_guild_tracks_ReturnRecord>(Arena*);
template<> ::db::proc_i_save_game_guild_track* Arena::CreateMaybeMessage<::db::proc_i_save_game_guild_track>(Arena*);
template<> ::db::proc_i_save_game_guild_track_Parameter* Arena::CreateMaybeMessage<::db::proc_i_save_game_guild_track_Parameter>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace db {

// ===================================================================

class ConfigGuild : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuild) */ {
 public:
  ConfigGuild();
  virtual ~ConfigGuild();

  ConfigGuild(const ConfigGuild& from);

  inline ConfigGuild& operator=(const ConfigGuild& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuild(ConfigGuild&& from) noexcept
    : ConfigGuild() {
    *this = ::std::move(from);
  }

  inline ConfigGuild& operator=(ConfigGuild&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuild& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuild* internal_default_instance() {
    return reinterpret_cast<const ConfigGuild*>(
               &_ConfigGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ConfigGuild* other);
  void Swap(ConfigGuild* other);
  friend void swap(ConfigGuild& a, ConfigGuild& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuild* New() const final {
    return CreateMaybeMessage<ConfigGuild>(NULL);
  }

  ConfigGuild* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuild>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuild& from);
  void MergeFrom(const ConfigGuild& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuild* other);
  protected:
  explicit ConfigGuild(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_desc();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_desc(
      ::std::string* desc);

  // required bytes cond_build_cost = 12;
  bool has_cond_build_cost() const;
  void clear_cond_build_cost();
  static const int kCondBuildCostFieldNumber = 12;
  const ::std::string& cond_build_cost() const;
  void set_cond_build_cost(const ::std::string& value);
  #if LANG_CXX11
  void set_cond_build_cost(::std::string&& value);
  #endif
  void set_cond_build_cost(const char* value);
  void set_cond_build_cost(const void* value, size_t size);
  ::std::string* mutable_cond_build_cost();
  ::std::string* release_cond_build_cost();
  void set_allocated_cond_build_cost(::std::string* cond_build_cost);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_cond_build_cost();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_cond_build_cost(
      ::std::string* cond_build_cost);

  // required bytes mail_text_accept = 21;
  bool has_mail_text_accept() const;
  void clear_mail_text_accept();
  static const int kMailTextAcceptFieldNumber = 21;
  const ::std::string& mail_text_accept() const;
  void set_mail_text_accept(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_text_accept(::std::string&& value);
  #endif
  void set_mail_text_accept(const char* value);
  void set_mail_text_accept(const void* value, size_t size);
  ::std::string* mutable_mail_text_accept();
  ::std::string* release_mail_text_accept();
  void set_allocated_mail_text_accept(::std::string* mail_text_accept);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_mail_text_accept();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_mail_text_accept(
      ::std::string* mail_text_accept);

  // required bytes mail_text_kick = 22;
  bool has_mail_text_kick() const;
  void clear_mail_text_kick();
  static const int kMailTextKickFieldNumber = 22;
  const ::std::string& mail_text_kick() const;
  void set_mail_text_kick(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_text_kick(::std::string&& value);
  #endif
  void set_mail_text_kick(const char* value);
  void set_mail_text_kick(const void* value, size_t size);
  ::std::string* mutable_mail_text_kick();
  ::std::string* release_mail_text_kick();
  void set_allocated_mail_text_kick(::std::string* mail_text_kick);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_mail_text_kick();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_mail_text_kick(
      ::std::string* mail_text_kick);

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // required int32 vice_leader_num = 4;
  bool has_vice_leader_num() const;
  void clear_vice_leader_num();
  static const int kViceLeaderNumFieldNumber = 4;
  ::google::protobuf::int32 vice_leader_num() const;
  void set_vice_leader_num(::google::protobuf::int32 value);

  // required int32 leader_offline_time = 5;
  bool has_leader_offline_time() const;
  void clear_leader_offline_time();
  static const int kLeaderOfflineTimeFieldNumber = 5;
  ::google::protobuf::int32 leader_offline_time() const;
  void set_leader_offline_time(::google::protobuf::int32 value);

  // required int32 quit_join_cd = 6;
  bool has_quit_join_cd() const;
  void clear_quit_join_cd();
  static const int kQuitJoinCdFieldNumber = 6;
  ::google::protobuf::int32 quit_join_cd() const;
  void set_quit_join_cd(::google::protobuf::int32 value);

  // required int32 donation_limit = 7;
  bool has_donation_limit() const;
  void clear_donation_limit();
  static const int kDonationLimitFieldNumber = 7;
  ::google::protobuf::int32 donation_limit() const;
  void set_donation_limit(::google::protobuf::int32 value);

  // required int32 cond_leader_level = 11;
  bool has_cond_leader_level() const;
  void clear_cond_leader_level();
  static const int kCondLeaderLevelFieldNumber = 11;
  ::google::protobuf::int32 cond_leader_level() const;
  void set_cond_leader_level(::google::protobuf::int32 value);

  // required int32 cond_population = 13;
  bool has_cond_population() const;
  void clear_cond_population();
  static const int kCondPopulationFieldNumber = 13;
  ::google::protobuf::int32 cond_population() const;
  void set_cond_population(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGuild)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_desc();
  void clear_has_desc();
  void set_has_size();
  void clear_has_size();
  void set_has_vice_leader_num();
  void clear_has_vice_leader_num();
  void set_has_leader_offline_time();
  void clear_has_leader_offline_time();
  void set_has_quit_join_cd();
  void clear_has_quit_join_cd();
  void set_has_donation_limit();
  void clear_has_donation_limit();
  void set_has_cond_leader_level();
  void clear_has_cond_leader_level();
  void set_has_cond_build_cost();
  void clear_has_cond_build_cost();
  void set_has_cond_population();
  void clear_has_cond_population();
  void set_has_mail_text_accept();
  void clear_has_mail_text_accept();
  void set_has_mail_text_kick();
  void clear_has_mail_text_kick();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr cond_build_cost_;
  ::google::protobuf::internal::ArenaStringPtr mail_text_accept_;
  ::google::protobuf::internal::ArenaStringPtr mail_text_kick_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 vice_leader_num_;
  ::google::protobuf::int32 leader_offline_time_;
  ::google::protobuf::int32 quit_join_cd_;
  ::google::protobuf::int32 donation_limit_;
  ::google::protobuf::int32 cond_leader_level_;
  ::google::protobuf::int32 cond_population_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildList) */ {
 public:
  ConfigGuildList();
  virtual ~ConfigGuildList();

  ConfigGuildList(const ConfigGuildList& from);

  inline ConfigGuildList& operator=(const ConfigGuildList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildList(ConfigGuildList&& from) noexcept
    : ConfigGuildList() {
    *this = ::std::move(from);
  }

  inline ConfigGuildList& operator=(ConfigGuildList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildList* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildList*>(
               &_ConfigGuildList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ConfigGuildList* other);
  void Swap(ConfigGuildList* other);
  friend void swap(ConfigGuildList& a, ConfigGuildList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildList* New() const final {
    return CreateMaybeMessage<ConfigGuildList>(NULL);
  }

  ConfigGuildList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildList& from);
  void MergeFrom(const ConfigGuildList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildList* other);
  protected:
  explicit ConfigGuildList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGuild list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGuild* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuild >*
      mutable_list();
  const ::db::ConfigGuild& list(int index) const;
  ::db::ConfigGuild* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuild >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGuildList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuild > list_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildUserTitle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildUserTitle) */ {
 public:
  ConfigGuildUserTitle();
  virtual ~ConfigGuildUserTitle();

  ConfigGuildUserTitle(const ConfigGuildUserTitle& from);

  inline ConfigGuildUserTitle& operator=(const ConfigGuildUserTitle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildUserTitle(ConfigGuildUserTitle&& from) noexcept
    : ConfigGuildUserTitle() {
    *this = ::std::move(from);
  }

  inline ConfigGuildUserTitle& operator=(ConfigGuildUserTitle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildUserTitle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildUserTitle* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildUserTitle*>(
               &_ConfigGuildUserTitle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ConfigGuildUserTitle* other);
  void Swap(ConfigGuildUserTitle* other);
  friend void swap(ConfigGuildUserTitle& a, ConfigGuildUserTitle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildUserTitle* New() const final {
    return CreateMaybeMessage<ConfigGuildUserTitle>(NULL);
  }

  ConfigGuildUserTitle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildUserTitle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildUserTitle& from);
  void MergeFrom(const ConfigGuildUserTitle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildUserTitle* other);
  protected:
  explicit ConfigGuildUserTitle(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_desc();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_desc(
      ::std::string* desc);

  // required int32 manage_chat = 12;
  bool has_manage_chat() const;
  void clear_manage_chat();
  static const int kManageChatFieldNumber = 12;
  ::google::protobuf::int32 manage_chat() const;
  void set_manage_chat(::google::protobuf::int32 value);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 manage_shopping = 11;
  bool has_manage_shopping() const;
  void clear_manage_shopping();
  static const int kManageShoppingFieldNumber = 11;
  ::google::protobuf::int32 manage_shopping() const;
  void set_manage_shopping(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGuildUserTitle)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_desc();
  void clear_has_desc();
  void set_has_manage_shopping();
  void clear_has_manage_shopping();
  void set_has_manage_chat();
  void clear_has_manage_chat();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 manage_chat_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 manage_shopping_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildUserTitleList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildUserTitleList) */ {
 public:
  ConfigGuildUserTitleList();
  virtual ~ConfigGuildUserTitleList();

  ConfigGuildUserTitleList(const ConfigGuildUserTitleList& from);

  inline ConfigGuildUserTitleList& operator=(const ConfigGuildUserTitleList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildUserTitleList(ConfigGuildUserTitleList&& from) noexcept
    : ConfigGuildUserTitleList() {
    *this = ::std::move(from);
  }

  inline ConfigGuildUserTitleList& operator=(ConfigGuildUserTitleList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildUserTitleList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildUserTitleList* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildUserTitleList*>(
               &_ConfigGuildUserTitleList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ConfigGuildUserTitleList* other);
  void Swap(ConfigGuildUserTitleList* other);
  friend void swap(ConfigGuildUserTitleList& a, ConfigGuildUserTitleList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildUserTitleList* New() const final {
    return CreateMaybeMessage<ConfigGuildUserTitleList>(NULL);
  }

  ConfigGuildUserTitleList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildUserTitleList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildUserTitleList& from);
  void MergeFrom(const ConfigGuildUserTitleList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildUserTitleList* other);
  protected:
  explicit ConfigGuildUserTitleList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGuildUserTitle list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGuildUserTitle* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildUserTitle >*
      mutable_list();
  const ::db::ConfigGuildUserTitle& list(int index) const;
  ::db::ConfigGuildUserTitle* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildUserTitle >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGuildUserTitleList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildUserTitle > list_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildSignin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildSignin) */ {
 public:
  ConfigGuildSignin();
  virtual ~ConfigGuildSignin();

  ConfigGuildSignin(const ConfigGuildSignin& from);

  inline ConfigGuildSignin& operator=(const ConfigGuildSignin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildSignin(ConfigGuildSignin&& from) noexcept
    : ConfigGuildSignin() {
    *this = ::std::move(from);
  }

  inline ConfigGuildSignin& operator=(ConfigGuildSignin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildSignin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildSignin* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildSignin*>(
               &_ConfigGuildSignin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ConfigGuildSignin* other);
  void Swap(ConfigGuildSignin* other);
  friend void swap(ConfigGuildSignin& a, ConfigGuildSignin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildSignin* New() const final {
    return CreateMaybeMessage<ConfigGuildSignin>(NULL);
  }

  ConfigGuildSignin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildSignin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildSignin& from);
  void MergeFrom(const ConfigGuildSignin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildSignin* other);
  protected:
  explicit ConfigGuildSignin(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes need = 3;
  bool has_need() const;
  void clear_need();
  static const int kNeedFieldNumber = 3;
  const ::std::string& need() const;
  void set_need(const ::std::string& value);
  #if LANG_CXX11
  void set_need(::std::string&& value);
  #endif
  void set_need(const char* value);
  void set_need(const void* value, size_t size);
  ::std::string* mutable_need();
  ::std::string* release_need();
  void set_allocated_need(::std::string* need);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_need();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_need(
      ::std::string* need);

  // required bytes award = 4;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 4;
  const ::std::string& award() const;
  void set_award(const ::std::string& value);
  #if LANG_CXX11
  void set_award(::std::string&& value);
  #endif
  void set_award(const char* value);
  void set_award(const void* value, size_t size);
  ::std::string* mutable_award();
  ::std::string* release_award();
  void set_allocated_award(::std::string* award);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_award();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_award(
      ::std::string* award);

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGuildSignin)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_type();
  void clear_has_type();
  void set_has_need();
  void clear_has_need();
  void set_has_award();
  void clear_has_award();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr need_;
  ::google::protobuf::internal::ArenaStringPtr award_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildSigninList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildSigninList) */ {
 public:
  ConfigGuildSigninList();
  virtual ~ConfigGuildSigninList();

  ConfigGuildSigninList(const ConfigGuildSigninList& from);

  inline ConfigGuildSigninList& operator=(const ConfigGuildSigninList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildSigninList(ConfigGuildSigninList&& from) noexcept
    : ConfigGuildSigninList() {
    *this = ::std::move(from);
  }

  inline ConfigGuildSigninList& operator=(ConfigGuildSigninList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildSigninList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildSigninList* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildSigninList*>(
               &_ConfigGuildSigninList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ConfigGuildSigninList* other);
  void Swap(ConfigGuildSigninList* other);
  friend void swap(ConfigGuildSigninList& a, ConfigGuildSigninList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildSigninList* New() const final {
    return CreateMaybeMessage<ConfigGuildSigninList>(NULL);
  }

  ConfigGuildSigninList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildSigninList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildSigninList& from);
  void MergeFrom(const ConfigGuildSigninList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildSigninList* other);
  protected:
  explicit ConfigGuildSigninList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGuildSignin list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGuildSignin* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildSignin >*
      mutable_list();
  const ::db::ConfigGuildSignin& list(int index) const;
  ::db::ConfigGuildSignin* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildSignin >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGuildSigninList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildSignin > list_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildBadge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildBadge) */ {
 public:
  ConfigGuildBadge();
  virtual ~ConfigGuildBadge();

  ConfigGuildBadge(const ConfigGuildBadge& from);

  inline ConfigGuildBadge& operator=(const ConfigGuildBadge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildBadge(ConfigGuildBadge&& from) noexcept
    : ConfigGuildBadge() {
    *this = ::std::move(from);
  }

  inline ConfigGuildBadge& operator=(ConfigGuildBadge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildBadge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildBadge* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildBadge*>(
               &_ConfigGuildBadge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ConfigGuildBadge* other);
  void Swap(ConfigGuildBadge* other);
  friend void swap(ConfigGuildBadge& a, ConfigGuildBadge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildBadge* New() const final {
    return CreateMaybeMessage<ConfigGuildBadge>(NULL);
  }

  ConfigGuildBadge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildBadge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildBadge& from);
  void MergeFrom(const ConfigGuildBadge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildBadge* other);
  protected:
  explicit ConfigGuildBadge(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes param = 4;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 4;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const void* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_param();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_param(
      ::std::string* param);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 order = 3;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGuildBadge)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_order();
  void clear_has_order();
  void set_has_param();
  void clear_has_param();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 order_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildBadgeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildBadgeList) */ {
 public:
  ConfigGuildBadgeList();
  virtual ~ConfigGuildBadgeList();

  ConfigGuildBadgeList(const ConfigGuildBadgeList& from);

  inline ConfigGuildBadgeList& operator=(const ConfigGuildBadgeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildBadgeList(ConfigGuildBadgeList&& from) noexcept
    : ConfigGuildBadgeList() {
    *this = ::std::move(from);
  }

  inline ConfigGuildBadgeList& operator=(ConfigGuildBadgeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildBadgeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildBadgeList* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildBadgeList*>(
               &_ConfigGuildBadgeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ConfigGuildBadgeList* other);
  void Swap(ConfigGuildBadgeList* other);
  friend void swap(ConfigGuildBadgeList& a, ConfigGuildBadgeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildBadgeList* New() const final {
    return CreateMaybeMessage<ConfigGuildBadgeList>(NULL);
  }

  ConfigGuildBadgeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildBadgeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildBadgeList& from);
  void MergeFrom(const ConfigGuildBadgeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildBadgeList* other);
  protected:
  explicit ConfigGuildBadgeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGuildBadge list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGuildBadge* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBadge >*
      mutable_list();
  const ::db::ConfigGuildBadge& list(int index) const;
  ::db::ConfigGuildBadge* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBadge >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGuildBadgeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBadge > list_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildDonation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildDonation) */ {
 public:
  ConfigGuildDonation();
  virtual ~ConfigGuildDonation();

  ConfigGuildDonation(const ConfigGuildDonation& from);

  inline ConfigGuildDonation& operator=(const ConfigGuildDonation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildDonation(ConfigGuildDonation&& from) noexcept
    : ConfigGuildDonation() {
    *this = ::std::move(from);
  }

  inline ConfigGuildDonation& operator=(ConfigGuildDonation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildDonation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildDonation* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildDonation*>(
               &_ConfigGuildDonation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(ConfigGuildDonation* other);
  void Swap(ConfigGuildDonation* other);
  friend void swap(ConfigGuildDonation& a, ConfigGuildDonation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildDonation* New() const final {
    return CreateMaybeMessage<ConfigGuildDonation>(NULL);
  }

  ConfigGuildDonation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildDonation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildDonation& from);
  void MergeFrom(const ConfigGuildDonation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildDonation* other);
  protected:
  explicit ConfigGuildDonation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes donates = 2;
  bool has_donates() const;
  void clear_donates();
  static const int kDonatesFieldNumber = 2;
  const ::std::string& donates() const;
  void set_donates(const ::std::string& value);
  #if LANG_CXX11
  void set_donates(::std::string&& value);
  #endif
  void set_donates(const char* value);
  void set_donates(const void* value, size_t size);
  ::std::string* mutable_donates();
  ::std::string* release_donates();
  void set_allocated_donates(::std::string* donates);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_donates();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_donates(
      ::std::string* donates);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 award_donation = 3;
  bool has_award_donation() const;
  void clear_award_donation();
  static const int kAwardDonationFieldNumber = 3;
  ::google::protobuf::int32 award_donation() const;
  void set_award_donation(::google::protobuf::int32 value);

  // required uint64 award_item_typeid = 4;
  bool has_award_item_typeid() const;
  void clear_award_item_typeid();
  static const int kAwardItemTypeidFieldNumber = 4;
  ::google::protobuf::uint64 award_item_typeid() const;
  void set_award_item_typeid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGuildDonation)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_donates();
  void clear_has_donates();
  void set_has_award_donation();
  void clear_has_award_donation();
  void set_has_award_item_typeid();
  void clear_has_award_item_typeid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr donates_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 award_donation_;
  ::google::protobuf::uint64 award_item_typeid_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildDonationList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildDonationList) */ {
 public:
  ConfigGuildDonationList();
  virtual ~ConfigGuildDonationList();

  ConfigGuildDonationList(const ConfigGuildDonationList& from);

  inline ConfigGuildDonationList& operator=(const ConfigGuildDonationList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildDonationList(ConfigGuildDonationList&& from) noexcept
    : ConfigGuildDonationList() {
    *this = ::std::move(from);
  }

  inline ConfigGuildDonationList& operator=(ConfigGuildDonationList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildDonationList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildDonationList* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildDonationList*>(
               &_ConfigGuildDonationList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(ConfigGuildDonationList* other);
  void Swap(ConfigGuildDonationList* other);
  friend void swap(ConfigGuildDonationList& a, ConfigGuildDonationList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildDonationList* New() const final {
    return CreateMaybeMessage<ConfigGuildDonationList>(NULL);
  }

  ConfigGuildDonationList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildDonationList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildDonationList& from);
  void MergeFrom(const ConfigGuildDonationList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildDonationList* other);
  protected:
  explicit ConfigGuildDonationList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGuildDonation list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGuildDonation* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildDonation >*
      mutable_list();
  const ::db::ConfigGuildDonation& list(int index) const;
  ::db::ConfigGuildDonation* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildDonation >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGuildDonationList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildDonation > list_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildBuilding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildBuilding) */ {
 public:
  ConfigGuildBuilding();
  virtual ~ConfigGuildBuilding();

  ConfigGuildBuilding(const ConfigGuildBuilding& from);

  inline ConfigGuildBuilding& operator=(const ConfigGuildBuilding& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildBuilding(ConfigGuildBuilding&& from) noexcept
    : ConfigGuildBuilding() {
    *this = ::std::move(from);
  }

  inline ConfigGuildBuilding& operator=(ConfigGuildBuilding&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildBuilding& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildBuilding* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildBuilding*>(
               &_ConfigGuildBuilding_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(ConfigGuildBuilding* other);
  void Swap(ConfigGuildBuilding* other);
  friend void swap(ConfigGuildBuilding& a, ConfigGuildBuilding& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildBuilding* New() const final {
    return CreateMaybeMessage<ConfigGuildBuilding>(NULL);
  }

  ConfigGuildBuilding* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildBuilding>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildBuilding& from);
  void MergeFrom(const ConfigGuildBuilding& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildBuilding* other);
  protected:
  explicit ConfigGuildBuilding(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes cond_prebuild = 3;
  bool has_cond_prebuild() const;
  void clear_cond_prebuild();
  static const int kCondPrebuildFieldNumber = 3;
  const ::std::string& cond_prebuild() const;
  void set_cond_prebuild(const ::std::string& value);
  #if LANG_CXX11
  void set_cond_prebuild(::std::string&& value);
  #endif
  void set_cond_prebuild(const char* value);
  void set_cond_prebuild(const void* value, size_t size);
  ::std::string* mutable_cond_prebuild();
  ::std::string* release_cond_prebuild();
  void set_allocated_cond_prebuild(::std::string* cond_prebuild);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_cond_prebuild();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_cond_prebuild(
      ::std::string* cond_prebuild);

  // required bytes cond_build_cost = 4;
  bool has_cond_build_cost() const;
  void clear_cond_build_cost();
  static const int kCondBuildCostFieldNumber = 4;
  const ::std::string& cond_build_cost() const;
  void set_cond_build_cost(const ::std::string& value);
  #if LANG_CXX11
  void set_cond_build_cost(::std::string&& value);
  #endif
  void set_cond_build_cost(const char* value);
  void set_cond_build_cost(const void* value, size_t size);
  ::std::string* mutable_cond_build_cost();
  ::std::string* release_cond_build_cost();
  void set_allocated_cond_build_cost(::std::string* cond_build_cost);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_cond_build_cost();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_cond_build_cost(
      ::std::string* cond_build_cost);

  // required int32 building_type = 1;
  bool has_building_type() const;
  void clear_building_type();
  static const int kBuildingTypeFieldNumber = 1;
  ::google::protobuf::int32 building_type() const;
  void set_building_type(::google::protobuf::int32 value);

  // required int32 level = 2;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 cond_building_time = 5;
  bool has_cond_building_time() const;
  void clear_cond_building_time();
  static const int kCondBuildingTimeFieldNumber = 5;
  ::google::protobuf::int32 cond_building_time() const;
  void set_cond_building_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGuildBuilding)
 private:
  void set_has_building_type();
  void clear_has_building_type();
  void set_has_level();
  void clear_has_level();
  void set_has_cond_prebuild();
  void clear_has_cond_prebuild();
  void set_has_cond_build_cost();
  void clear_has_cond_build_cost();
  void set_has_cond_building_time();
  void clear_has_cond_building_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cond_prebuild_;
  ::google::protobuf::internal::ArenaStringPtr cond_build_cost_;
  ::google::protobuf::int32 building_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 cond_building_time_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGuildBuildingList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGuildBuildingList) */ {
 public:
  ConfigGuildBuildingList();
  virtual ~ConfigGuildBuildingList();

  ConfigGuildBuildingList(const ConfigGuildBuildingList& from);

  inline ConfigGuildBuildingList& operator=(const ConfigGuildBuildingList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGuildBuildingList(ConfigGuildBuildingList&& from) noexcept
    : ConfigGuildBuildingList() {
    *this = ::std::move(from);
  }

  inline ConfigGuildBuildingList& operator=(ConfigGuildBuildingList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGuildBuildingList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGuildBuildingList* internal_default_instance() {
    return reinterpret_cast<const ConfigGuildBuildingList*>(
               &_ConfigGuildBuildingList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(ConfigGuildBuildingList* other);
  void Swap(ConfigGuildBuildingList* other);
  friend void swap(ConfigGuildBuildingList& a, ConfigGuildBuildingList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGuildBuildingList* New() const final {
    return CreateMaybeMessage<ConfigGuildBuildingList>(NULL);
  }

  ConfigGuildBuildingList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGuildBuildingList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGuildBuildingList& from);
  void MergeFrom(const ConfigGuildBuildingList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGuildBuildingList* other);
  protected:
  explicit ConfigGuildBuildingList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGuildBuilding list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGuildBuilding* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBuilding >*
      mutable_list();
  const ::db::ConfigGuildBuilding& list(int index) const;
  ::db::ConfigGuildBuilding* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBuilding >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGuildBuildingList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBuilding > list_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameGuild : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameGuild) */ {
 public:
  GameGuild();
  virtual ~GameGuild();

  GameGuild(const GameGuild& from);

  inline GameGuild& operator=(const GameGuild& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameGuild(GameGuild&& from) noexcept
    : GameGuild() {
    *this = ::std::move(from);
  }

  inline GameGuild& operator=(GameGuild&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameGuild& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameGuild* internal_default_instance() {
    return reinterpret_cast<const GameGuild*>(
               &_GameGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(GameGuild* other);
  void Swap(GameGuild* other);
  friend void swap(GameGuild& a, GameGuild& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameGuild* New() const final {
    return CreateMaybeMessage<GameGuild>(NULL);
  }

  GameGuild* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameGuild>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameGuild& from);
  void MergeFrom(const GameGuild& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameGuild* other);
  protected:
  explicit GameGuild(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes announcement = 6;
  bool has_announcement() const;
  void clear_announcement();
  static const int kAnnouncementFieldNumber = 6;
  const ::std::string& announcement() const;
  void set_announcement(const ::std::string& value);
  #if LANG_CXX11
  void set_announcement(::std::string&& value);
  #endif
  void set_announcement(const char* value);
  void set_announcement(const void* value, size_t size);
  ::std::string* mutable_announcement();
  ::std::string* release_announcement();
  void set_allocated_announcement(::std::string* announcement);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_announcement();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_announcement(
      ::std::string* announcement);

  // required bytes badge = 8;
  bool has_badge() const;
  void clear_badge();
  static const int kBadgeFieldNumber = 8;
  const ::std::string& badge() const;
  void set_badge(const ::std::string& value);
  #if LANG_CXX11
  void set_badge(::std::string&& value);
  #endif
  void set_badge(const char* value);
  void set_badge(const void* value, size_t size);
  ::std::string* mutable_badge();
  ::std::string* release_badge();
  void set_allocated_badge(::std::string* badge);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_badge();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_badge(
      ::std::string* badge);

  // required int32 guildid = 1;
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // required int32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required uint64 fund = 5;
  bool has_fund() const;
  void clear_fund();
  static const int kFundFieldNumber = 5;
  ::google::protobuf::uint64 fund() const;
  void set_fund(::google::protobuf::uint64 value);

  // required int32 population = 4;
  bool has_population() const;
  void clear_population();
  static const int kPopulationFieldNumber = 4;
  ::google::protobuf::int32 population() const;
  void set_population(::google::protobuf::int32 value);

  // required int32 state = 7;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required int32 accept_type = 11;
  bool has_accept_type() const;
  void clear_accept_type();
  static const int kAcceptTypeFieldNumber = 11;
  ::google::protobuf::int32 accept_type() const;
  void set_accept_type(::google::protobuf::int32 value);

  // required int32 join_level = 12;
  bool has_join_level() const;
  void clear_join_level();
  static const int kJoinLevelFieldNumber = 12;
  ::google::protobuf::int32 join_level() const;
  void set_join_level(::google::protobuf::int32 value);

  // required int32 join_force = 13;
  bool has_join_force() const;
  void clear_join_force();
  static const int kJoinForceFieldNumber = 13;
  ::google::protobuf::int32 join_force() const;
  void set_join_force(::google::protobuf::int32 value);

  // required int32 shopping = 14;
  bool has_shopping() const;
  void clear_shopping();
  static const int kShoppingFieldNumber = 14;
  ::google::protobuf::int32 shopping() const;
  void set_shopping(::google::protobuf::int32 value);

  // required int32 chat = 15;
  bool has_chat() const;
  void clear_chat();
  static const int kChatFieldNumber = 15;
  ::google::protobuf::int32 chat() const;
  void set_chat(::google::protobuf::int32 value);

  // required sfixed64 optime = 21;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 21;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameGuild)
 private:
  void set_has_guildid();
  void clear_has_guildid();
  void set_has_name();
  void clear_has_name();
  void set_has_level();
  void clear_has_level();
  void set_has_population();
  void clear_has_population();
  void set_has_fund();
  void clear_has_fund();
  void set_has_announcement();
  void clear_has_announcement();
  void set_has_state();
  void clear_has_state();
  void set_has_badge();
  void clear_has_badge();
  void set_has_accept_type();
  void clear_has_accept_type();
  void set_has_join_level();
  void clear_has_join_level();
  void set_has_join_force();
  void clear_has_join_force();
  void set_has_shopping();
  void clear_has_shopping();
  void set_has_chat();
  void clear_has_chat();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr announcement_;
  ::google::protobuf::internal::ArenaStringPtr badge_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::uint64 fund_;
  ::google::protobuf::int32 population_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 accept_type_;
  ::google::protobuf::int32 join_level_;
  ::google::protobuf::int32 join_force_;
  ::google::protobuf::int32 shopping_;
  ::google::protobuf::int32 chat_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameGuildBuilding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameGuildBuilding) */ {
 public:
  GameGuildBuilding();
  virtual ~GameGuildBuilding();

  GameGuildBuilding(const GameGuildBuilding& from);

  inline GameGuildBuilding& operator=(const GameGuildBuilding& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameGuildBuilding(GameGuildBuilding&& from) noexcept
    : GameGuildBuilding() {
    *this = ::std::move(from);
  }

  inline GameGuildBuilding& operator=(GameGuildBuilding&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameGuildBuilding& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameGuildBuilding* internal_default_instance() {
    return reinterpret_cast<const GameGuildBuilding*>(
               &_GameGuildBuilding_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(GameGuildBuilding* other);
  void Swap(GameGuildBuilding* other);
  friend void swap(GameGuildBuilding& a, GameGuildBuilding& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameGuildBuilding* New() const final {
    return CreateMaybeMessage<GameGuildBuilding>(NULL);
  }

  GameGuildBuilding* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameGuildBuilding>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameGuildBuilding& from);
  void MergeFrom(const GameGuildBuilding& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameGuildBuilding* other);
  protected:
  explicit GameGuildBuilding(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 guildid = 1;
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // required int32 building_type = 2;
  bool has_building_type() const;
  void clear_building_type();
  static const int kBuildingTypeFieldNumber = 2;
  ::google::protobuf::int32 building_type() const;
  void set_building_type(::google::protobuf::int32 value);

  // required int32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required sfixed64 starttime = 6;
  bool has_starttime() const;
  void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  ::google::protobuf::int64 starttime() const;
  void set_starttime(::google::protobuf::int64 value);

  // required int32 seconds = 5;
  bool has_seconds() const;
  void clear_seconds();
  static const int kSecondsFieldNumber = 5;
  ::google::protobuf::int32 seconds() const;
  void set_seconds(::google::protobuf::int32 value);

  // required sfixed64 optime = 21;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 21;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameGuildBuilding)
 private:
  void set_has_guildid();
  void clear_has_guildid();
  void set_has_building_type();
  void clear_has_building_type();
  void set_has_level();
  void clear_has_level();
  void set_has_state();
  void clear_has_state();
  void set_has_seconds();
  void clear_has_seconds();
  void set_has_starttime();
  void clear_has_starttime();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::int32 building_type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int32 seconds_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameGuildStore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameGuildStore) */ {
 public:
  GameGuildStore();
  virtual ~GameGuildStore();

  GameGuildStore(const GameGuildStore& from);

  inline GameGuildStore& operator=(const GameGuildStore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameGuildStore(GameGuildStore&& from) noexcept
    : GameGuildStore() {
    *this = ::std::move(from);
  }

  inline GameGuildStore& operator=(GameGuildStore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameGuildStore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameGuildStore* internal_default_instance() {
    return reinterpret_cast<const GameGuildStore*>(
               &_GameGuildStore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(GameGuildStore* other);
  void Swap(GameGuildStore* other);
  friend void swap(GameGuildStore& a, GameGuildStore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameGuildStore* New() const final {
    return CreateMaybeMessage<GameGuildStore>(NULL);
  }

  GameGuildStore* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameGuildStore>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameGuildStore& from);
  void MergeFrom(const GameGuildStore& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameGuildStore* other);
  protected:
  explicit GameGuildStore(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 item_typeid = 2;
  bool has_item_typeid() const;
  void clear_item_typeid();
  static const int kItemTypeidFieldNumber = 2;
  ::google::protobuf::uint64 item_typeid() const;
  void set_item_typeid(::google::protobuf::uint64 value);

  // required int32 guildid = 1;
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // required int32 item_num = 3;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // required sfixed64 optime = 11;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 11;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameGuildStore)
 private:
  void set_has_guildid();
  void clear_has_guildid();
  void set_has_item_typeid();
  void clear_has_item_typeid();
  void set_has_item_num();
  void clear_has_item_num();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 item_typeid_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::int32 item_num_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameGuildUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameGuildUser) */ {
 public:
  GameGuildUser();
  virtual ~GameGuildUser();

  GameGuildUser(const GameGuildUser& from);

  inline GameGuildUser& operator=(const GameGuildUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameGuildUser(GameGuildUser&& from) noexcept
    : GameGuildUser() {
    *this = ::std::move(from);
  }

  inline GameGuildUser& operator=(GameGuildUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameGuildUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameGuildUser* internal_default_instance() {
    return reinterpret_cast<const GameGuildUser*>(
               &_GameGuildUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(GameGuildUser* other);
  void Swap(GameGuildUser* other);
  friend void swap(GameGuildUser& a, GameGuildUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameGuildUser* New() const final {
    return CreateMaybeMessage<GameGuildUser>(NULL);
  }

  GameGuildUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameGuildUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameGuildUser& from);
  void MergeFrom(const GameGuildUser& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameGuildUser* other);
  protected:
  explicit GameGuildUser(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 guildid = 1;
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // required int32 ticketid = 2;
  bool has_ticketid() const;
  void clear_ticketid();
  static const int kTicketidFieldNumber = 2;
  ::google::protobuf::int32 ticketid() const;
  void set_ticketid(::google::protobuf::int32 value);

  // required int32 title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  ::google::protobuf::int32 title() const;
  void set_title(::google::protobuf::int32 value);

  // required int32 donation = 4;
  bool has_donation() const;
  void clear_donation();
  static const int kDonationFieldNumber = 4;
  ::google::protobuf::int32 donation() const;
  void set_donation(::google::protobuf::int32 value);

  // required int32 state = 5;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required sfixed64 optime = 11;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 11;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameGuildUser)
 private:
  void set_has_guildid();
  void clear_has_guildid();
  void set_has_ticketid();
  void clear_has_ticketid();
  void set_has_title();
  void clear_has_title();
  void set_has_donation();
  void clear_has_donation();
  void set_has_state();
  void clear_has_state();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::int32 ticketid_;
  ::google::protobuf::int32 title_;
  ::google::protobuf::int32 donation_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameStatsGuildUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameStatsGuildUser) */ {
 public:
  GameStatsGuildUser();
  virtual ~GameStatsGuildUser();

  GameStatsGuildUser(const GameStatsGuildUser& from);

  inline GameStatsGuildUser& operator=(const GameStatsGuildUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameStatsGuildUser(GameStatsGuildUser&& from) noexcept
    : GameStatsGuildUser() {
    *this = ::std::move(from);
  }

  inline GameStatsGuildUser& operator=(GameStatsGuildUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStatsGuildUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameStatsGuildUser* internal_default_instance() {
    return reinterpret_cast<const GameStatsGuildUser*>(
               &_GameStatsGuildUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(GameStatsGuildUser* other);
  void Swap(GameStatsGuildUser* other);
  friend void swap(GameStatsGuildUser& a, GameStatsGuildUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameStatsGuildUser* New() const final {
    return CreateMaybeMessage<GameStatsGuildUser>(NULL);
  }

  GameStatsGuildUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameStatsGuildUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameStatsGuildUser& from);
  void MergeFrom(const GameStatsGuildUser& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameStatsGuildUser* other);
  protected:
  explicit GameStatsGuildUser(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ticketid = 1;
  bool has_ticketid() const;
  void clear_ticketid();
  static const int kTicketidFieldNumber = 1;
  ::google::protobuf::int32 ticketid() const;
  void set_ticketid(::google::protobuf::int32 value);

  // required int32 guildid = 2;
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // required sfixed64 donation_refreshtime = 4;
  bool has_donation_refreshtime() const;
  void clear_donation_refreshtime();
  static const int kDonationRefreshtimeFieldNumber = 4;
  ::google::protobuf::int64 donation_refreshtime() const;
  void set_donation_refreshtime(::google::protobuf::int64 value);

  // required int32 donation = 3;
  bool has_donation() const;
  void clear_donation();
  static const int kDonationFieldNumber = 3;
  ::google::protobuf::int32 donation() const;
  void set_donation(::google::protobuf::int32 value);

  // required int32 signin_state1 = 11;
  bool has_signin_state1() const;
  void clear_signin_state1();
  static const int kSigninState1FieldNumber = 11;
  ::google::protobuf::int32 signin_state1() const;
  void set_signin_state1(::google::protobuf::int32 value);

  // required sfixed64 signin_optime1 = 12;
  bool has_signin_optime1() const;
  void clear_signin_optime1();
  static const int kSigninOptime1FieldNumber = 12;
  ::google::protobuf::int64 signin_optime1() const;
  void set_signin_optime1(::google::protobuf::int64 value);

  // required sfixed64 signin_optime2 = 14;
  bool has_signin_optime2() const;
  void clear_signin_optime2();
  static const int kSigninOptime2FieldNumber = 14;
  ::google::protobuf::int64 signin_optime2() const;
  void set_signin_optime2(::google::protobuf::int64 value);

  // required int32 signin_state2 = 13;
  bool has_signin_state2() const;
  void clear_signin_state2();
  static const int kSigninState2FieldNumber = 13;
  ::google::protobuf::int32 signin_state2() const;
  void set_signin_state2(::google::protobuf::int32 value);

  // required int32 signin_state3 = 15;
  bool has_signin_state3() const;
  void clear_signin_state3();
  static const int kSigninState3FieldNumber = 15;
  ::google::protobuf::int32 signin_state3() const;
  void set_signin_state3(::google::protobuf::int32 value);

  // required sfixed64 signin_optime3 = 16;
  bool has_signin_optime3() const;
  void clear_signin_optime3();
  static const int kSigninOptime3FieldNumber = 16;
  ::google::protobuf::int64 signin_optime3() const;
  void set_signin_optime3(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameStatsGuildUser)
 private:
  void set_has_ticketid();
  void clear_has_ticketid();
  void set_has_guildid();
  void clear_has_guildid();
  void set_has_donation();
  void clear_has_donation();
  void set_has_donation_refreshtime();
  void clear_has_donation_refreshtime();
  void set_has_signin_state1();
  void clear_has_signin_state1();
  void set_has_signin_optime1();
  void clear_has_signin_optime1();
  void set_has_signin_state2();
  void clear_has_signin_state2();
  void set_has_signin_optime2();
  void clear_has_signin_optime2();
  void set_has_signin_state3();
  void clear_has_signin_state3();
  void set_has_signin_optime3();
  void clear_has_signin_optime3();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ticketid_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::int64 donation_refreshtime_;
  ::google::protobuf::int32 donation_;
  ::google::protobuf::int32 signin_state1_;
  ::google::protobuf::int64 signin_optime1_;
  ::google::protobuf::int64 signin_optime2_;
  ::google::protobuf::int32 signin_state2_;
  ::google::protobuf::int32 signin_state3_;
  ::google::protobuf::int64 signin_optime3_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserStatsGuildCommon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserStatsGuildCommon) */ {
 public:
  UserStatsGuildCommon();
  virtual ~UserStatsGuildCommon();

  UserStatsGuildCommon(const UserStatsGuildCommon& from);

  inline UserStatsGuildCommon& operator=(const UserStatsGuildCommon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserStatsGuildCommon(UserStatsGuildCommon&& from) noexcept
    : UserStatsGuildCommon() {
    *this = ::std::move(from);
  }

  inline UserStatsGuildCommon& operator=(UserStatsGuildCommon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStatsGuildCommon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserStatsGuildCommon* internal_default_instance() {
    return reinterpret_cast<const UserStatsGuildCommon*>(
               &_UserStatsGuildCommon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(UserStatsGuildCommon* other);
  void Swap(UserStatsGuildCommon* other);
  friend void swap(UserStatsGuildCommon& a, UserStatsGuildCommon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserStatsGuildCommon* New() const final {
    return CreateMaybeMessage<UserStatsGuildCommon>(NULL);
  }

  UserStatsGuildCommon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserStatsGuildCommon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserStatsGuildCommon& from);
  void MergeFrom(const UserStatsGuildCommon& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserStatsGuildCommon* other);
  protected:
  explicit UserStatsGuildCommon(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required sfixed64 last_quit_guild_time = 2;
  bool has_last_quit_guild_time() const;
  void clear_last_quit_guild_time();
  static const int kLastQuitGuildTimeFieldNumber = 2;
  ::google::protobuf::int64 last_quit_guild_time() const;
  void set_last_quit_guild_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserStatsGuildCommon)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_last_quit_guild_time();
  void clear_has_last_quit_guild_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int64 last_quit_guild_time_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameGuildTrack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameGuildTrack) */ {
 public:
  GameGuildTrack();
  virtual ~GameGuildTrack();

  GameGuildTrack(const GameGuildTrack& from);

  inline GameGuildTrack& operator=(const GameGuildTrack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameGuildTrack(GameGuildTrack&& from) noexcept
    : GameGuildTrack() {
    *this = ::std::move(from);
  }

  inline GameGuildTrack& operator=(GameGuildTrack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameGuildTrack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameGuildTrack* internal_default_instance() {
    return reinterpret_cast<const GameGuildTrack*>(
               &_GameGuildTrack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(GameGuildTrack* other);
  void Swap(GameGuildTrack* other);
  friend void swap(GameGuildTrack& a, GameGuildTrack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameGuildTrack* New() const final {
    return CreateMaybeMessage<GameGuildTrack>(NULL);
  }

  GameGuildTrack* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameGuildTrack>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameGuildTrack& from);
  void MergeFrom(const GameGuildTrack& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameGuildTrack* other);
  protected:
  explicit GameGuildTrack(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes owner_nick = 2;
  bool has_owner_nick() const;
  void clear_owner_nick();
  static const int kOwnerNickFieldNumber = 2;
  const ::std::string& owner_nick() const;
  void set_owner_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_owner_nick(::std::string&& value);
  #endif
  void set_owner_nick(const char* value);
  void set_owner_nick(const void* value, size_t size);
  ::std::string* mutable_owner_nick();
  ::std::string* release_owner_nick();
  void set_allocated_owner_nick(::std::string* owner_nick);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_owner_nick();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_owner_nick(
      ::std::string* owner_nick);

  // required bytes name = 12;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 12;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes announcement = 13;
  bool has_announcement() const;
  void clear_announcement();
  static const int kAnnouncementFieldNumber = 13;
  const ::std::string& announcement() const;
  void set_announcement(const ::std::string& value);
  #if LANG_CXX11
  void set_announcement(::std::string&& value);
  #endif
  void set_announcement(const char* value);
  void set_announcement(const void* value, size_t size);
  ::std::string* mutable_announcement();
  ::std::string* release_announcement();
  void set_allocated_announcement(::std::string* announcement);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_announcement();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_announcement(
      ::std::string* announcement);

  // required bytes target_nick = 15;
  bool has_target_nick() const;
  void clear_target_nick();
  static const int kTargetNickFieldNumber = 15;
  const ::std::string& target_nick() const;
  void set_target_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_target_nick(::std::string&& value);
  #endif
  void set_target_nick(const char* value);
  void set_target_nick(const void* value, size_t size);
  ::std::string* mutable_target_nick();
  ::std::string* release_target_nick();
  void set_allocated_target_nick(::std::string* target_nick);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_target_nick();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_target_nick(
      ::std::string* target_nick);

  // required uint64 owner_uuid = 1;
  bool has_owner_uuid() const;
  void clear_owner_uuid();
  static const int kOwnerUuidFieldNumber = 1;
  ::google::protobuf::uint64 owner_uuid() const;
  void set_owner_uuid(::google::protobuf::uint64 value);

  // required int32 owner_title = 3;
  bool has_owner_title() const;
  void clear_owner_title();
  static const int kOwnerTitleFieldNumber = 3;
  ::google::protobuf::int32 owner_title() const;
  void set_owner_title(::google::protobuf::int32 value);

  // required int32 action_type = 4;
  bool has_action_type() const;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 4;
  ::google::protobuf::int32 action_type() const;
  void set_action_type(::google::protobuf::int32 value);

  // required int32 action = 5;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 5;
  ::google::protobuf::int32 action() const;
  void set_action(::google::protobuf::int32 value);

  // required int32 guildid = 11;
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildidFieldNumber = 11;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // required uint64 target_uuid = 14;
  bool has_target_uuid() const;
  void clear_target_uuid();
  static const int kTargetUuidFieldNumber = 14;
  ::google::protobuf::uint64 target_uuid() const;
  void set_target_uuid(::google::protobuf::uint64 value);

  // required int32 target_title = 16;
  bool has_target_title() const;
  void clear_target_title();
  static const int kTargetTitleFieldNumber = 16;
  ::google::protobuf::int32 target_title() const;
  void set_target_title(::google::protobuf::int32 value);

  // required int32 donation = 17;
  bool has_donation() const;
  void clear_donation();
  static const int kDonationFieldNumber = 17;
  ::google::protobuf::int32 donation() const;
  void set_donation(::google::protobuf::int32 value);

  // required int32 building_type = 18;
  bool has_building_type() const;
  void clear_building_type();
  static const int kBuildingTypeFieldNumber = 18;
  ::google::protobuf::int32 building_type() const;
  void set_building_type(::google::protobuf::int32 value);

  // required int32 building_level = 19;
  bool has_building_level() const;
  void clear_building_level();
  static const int kBuildingLevelFieldNumber = 19;
  ::google::protobuf::int32 building_level() const;
  void set_building_level(::google::protobuf::int32 value);

  // required sfixed64 optime = 21;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 21;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameGuildTrack)
 private:
  void set_has_owner_uuid();
  void clear_has_owner_uuid();
  void set_has_owner_nick();
  void clear_has_owner_nick();
  void set_has_owner_title();
  void clear_has_owner_title();
  void set_has_action_type();
  void clear_has_action_type();
  void set_has_action();
  void clear_has_action();
  void set_has_guildid();
  void clear_has_guildid();
  void set_has_name();
  void clear_has_name();
  void set_has_announcement();
  void clear_has_announcement();
  void set_has_target_uuid();
  void clear_has_target_uuid();
  void set_has_target_nick();
  void clear_has_target_nick();
  void set_has_target_title();
  void clear_has_target_title();
  void set_has_donation();
  void clear_has_donation();
  void set_has_building_type();
  void clear_has_building_type();
  void set_has_building_level();
  void clear_has_building_level();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr owner_nick_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr announcement_;
  ::google::protobuf::internal::ArenaStringPtr target_nick_;
  ::google::protobuf::uint64 owner_uuid_;
  ::google::protobuf::int32 owner_title_;
  ::google::protobuf::int32 action_type_;
  ::google::protobuf::int32 action_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::uint64 target_uuid_;
  ::google::protobuf::int32 target_title_;
  ::google::protobuf::int32 donation_;
  ::google::protobuf::int32 building_type_;
  ::google::protobuf::int32 building_level_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_game_guild_tracks_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_game_guild_tracks.Parameter) */ {
 public:
  proc_i_load_game_guild_tracks_Parameter();
  virtual ~proc_i_load_game_guild_tracks_Parameter();

  proc_i_load_game_guild_tracks_Parameter(const proc_i_load_game_guild_tracks_Parameter& from);

  inline proc_i_load_game_guild_tracks_Parameter& operator=(const proc_i_load_game_guild_tracks_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_game_guild_tracks_Parameter(proc_i_load_game_guild_tracks_Parameter&& from) noexcept
    : proc_i_load_game_guild_tracks_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_load_game_guild_tracks_Parameter& operator=(proc_i_load_game_guild_tracks_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_game_guild_tracks_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_game_guild_tracks_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_game_guild_tracks_Parameter*>(
               &_proc_i_load_game_guild_tracks_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(proc_i_load_game_guild_tracks_Parameter* other);
  void Swap(proc_i_load_game_guild_tracks_Parameter* other);
  friend void swap(proc_i_load_game_guild_tracks_Parameter& a, proc_i_load_game_guild_tracks_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_game_guild_tracks_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_load_game_guild_tracks_Parameter>(NULL);
  }

  proc_i_load_game_guild_tracks_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_game_guild_tracks_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_game_guild_tracks_Parameter& from);
  void MergeFrom(const proc_i_load_game_guild_tracks_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_game_guild_tracks_Parameter* other);
  protected:
  explicit proc_i_load_game_guild_tracks_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_i_load_game_guild_tracks.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_game_guild_tracks_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_game_guild_tracks.ReturnRecord) */ {
 public:
  proc_i_load_game_guild_tracks_ReturnRecord();
  virtual ~proc_i_load_game_guild_tracks_ReturnRecord();

  proc_i_load_game_guild_tracks_ReturnRecord(const proc_i_load_game_guild_tracks_ReturnRecord& from);

  inline proc_i_load_game_guild_tracks_ReturnRecord& operator=(const proc_i_load_game_guild_tracks_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_game_guild_tracks_ReturnRecord(proc_i_load_game_guild_tracks_ReturnRecord&& from) noexcept
    : proc_i_load_game_guild_tracks_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_i_load_game_guild_tracks_ReturnRecord& operator=(proc_i_load_game_guild_tracks_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_game_guild_tracks_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_game_guild_tracks_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_game_guild_tracks_ReturnRecord*>(
               &_proc_i_load_game_guild_tracks_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(proc_i_load_game_guild_tracks_ReturnRecord* other);
  void Swap(proc_i_load_game_guild_tracks_ReturnRecord* other);
  friend void swap(proc_i_load_game_guild_tracks_ReturnRecord& a, proc_i_load_game_guild_tracks_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_game_guild_tracks_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_i_load_game_guild_tracks_ReturnRecord>(NULL);
  }

  proc_i_load_game_guild_tracks_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_game_guild_tracks_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_game_guild_tracks_ReturnRecord& from);
  void MergeFrom(const proc_i_load_game_guild_tracks_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_game_guild_tracks_ReturnRecord* other);
  protected:
  explicit proc_i_load_game_guild_tracks_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.GameGuildTrack item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  private:
  const ::db::GameGuildTrack& _internal_item() const;
  public:
  const ::db::GameGuildTrack& item() const;
  ::db::GameGuildTrack* release_item();
  ::db::GameGuildTrack* mutable_item();
  void set_allocated_item(::db::GameGuildTrack* item);
  void unsafe_arena_set_allocated_item(
      ::db::GameGuildTrack* item);
  ::db::GameGuildTrack* unsafe_arena_release_item();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_game_guild_tracks.ReturnRecord)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::GameGuildTrack* item_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_game_guild_tracks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_game_guild_tracks) */ {
 public:
  proc_i_load_game_guild_tracks();
  virtual ~proc_i_load_game_guild_tracks();

  proc_i_load_game_guild_tracks(const proc_i_load_game_guild_tracks& from);

  inline proc_i_load_game_guild_tracks& operator=(const proc_i_load_game_guild_tracks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_game_guild_tracks(proc_i_load_game_guild_tracks&& from) noexcept
    : proc_i_load_game_guild_tracks() {
    *this = ::std::move(from);
  }

  inline proc_i_load_game_guild_tracks& operator=(proc_i_load_game_guild_tracks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_game_guild_tracks& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_game_guild_tracks* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_game_guild_tracks*>(
               &_proc_i_load_game_guild_tracks_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void UnsafeArenaSwap(proc_i_load_game_guild_tracks* other);
  void Swap(proc_i_load_game_guild_tracks* other);
  friend void swap(proc_i_load_game_guild_tracks& a, proc_i_load_game_guild_tracks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_game_guild_tracks* New() const final {
    return CreateMaybeMessage<proc_i_load_game_guild_tracks>(NULL);
  }

  proc_i_load_game_guild_tracks* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_game_guild_tracks>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_game_guild_tracks& from);
  void MergeFrom(const proc_i_load_game_guild_tracks& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_game_guild_tracks* other);
  protected:
  explicit proc_i_load_game_guild_tracks(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_load_game_guild_tracks_Parameter Parameter;
  typedef proc_i_load_game_guild_tracks_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_i_load_game_guild_tracks.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_i_load_game_guild_tracks_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_guild_tracks_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_i_load_game_guild_tracks_ReturnRecord& return_record_list(int index) const;
  ::db::proc_i_load_game_guild_tracks_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_guild_tracks_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_i_load_game_guild_tracks.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_load_game_guild_tracks_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_load_game_guild_tracks_Parameter& param() const;
  ::db::proc_i_load_game_guild_tracks_Parameter* release_param();
  ::db::proc_i_load_game_guild_tracks_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_load_game_guild_tracks_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_load_game_guild_tracks_Parameter* param);
  ::db::proc_i_load_game_guild_tracks_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_game_guild_tracks)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_guild_tracks_ReturnRecord > return_record_list_;
  ::db::proc_i_load_game_guild_tracks_Parameter* param_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_game_guild_track_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_game_guild_track.Parameter) */ {
 public:
  proc_i_save_game_guild_track_Parameter();
  virtual ~proc_i_save_game_guild_track_Parameter();

  proc_i_save_game_guild_track_Parameter(const proc_i_save_game_guild_track_Parameter& from);

  inline proc_i_save_game_guild_track_Parameter& operator=(const proc_i_save_game_guild_track_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_game_guild_track_Parameter(proc_i_save_game_guild_track_Parameter&& from) noexcept
    : proc_i_save_game_guild_track_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_save_game_guild_track_Parameter& operator=(proc_i_save_game_guild_track_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_game_guild_track_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_game_guild_track_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_game_guild_track_Parameter*>(
               &_proc_i_save_game_guild_track_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void UnsafeArenaSwap(proc_i_save_game_guild_track_Parameter* other);
  void Swap(proc_i_save_game_guild_track_Parameter* other);
  friend void swap(proc_i_save_game_guild_track_Parameter& a, proc_i_save_game_guild_track_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_game_guild_track_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_save_game_guild_track_Parameter>(NULL);
  }

  proc_i_save_game_guild_track_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_game_guild_track_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_game_guild_track_Parameter& from);
  void MergeFrom(const proc_i_save_game_guild_track_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_game_guild_track_Parameter* other);
  protected:
  explicit proc_i_save_game_guild_track_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.GameGuildTrack p_track = 1;
  bool has_p_track() const;
  void clear_p_track();
  static const int kPTrackFieldNumber = 1;
  private:
  const ::db::GameGuildTrack& _internal_p_track() const;
  public:
  const ::db::GameGuildTrack& p_track() const;
  ::db::GameGuildTrack* release_p_track();
  ::db::GameGuildTrack* mutable_p_track();
  void set_allocated_p_track(::db::GameGuildTrack* p_track);
  void unsafe_arena_set_allocated_p_track(
      ::db::GameGuildTrack* p_track);
  ::db::GameGuildTrack* unsafe_arena_release_p_track();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_game_guild_track.Parameter)
 private:
  void set_has_p_track();
  void clear_has_p_track();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::GameGuildTrack* p_track_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_game_guild_track : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_game_guild_track) */ {
 public:
  proc_i_save_game_guild_track();
  virtual ~proc_i_save_game_guild_track();

  proc_i_save_game_guild_track(const proc_i_save_game_guild_track& from);

  inline proc_i_save_game_guild_track& operator=(const proc_i_save_game_guild_track& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_game_guild_track(proc_i_save_game_guild_track&& from) noexcept
    : proc_i_save_game_guild_track() {
    *this = ::std::move(from);
  }

  inline proc_i_save_game_guild_track& operator=(proc_i_save_game_guild_track&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_game_guild_track& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_game_guild_track* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_game_guild_track*>(
               &_proc_i_save_game_guild_track_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void UnsafeArenaSwap(proc_i_save_game_guild_track* other);
  void Swap(proc_i_save_game_guild_track* other);
  friend void swap(proc_i_save_game_guild_track& a, proc_i_save_game_guild_track& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_game_guild_track* New() const final {
    return CreateMaybeMessage<proc_i_save_game_guild_track>(NULL);
  }

  proc_i_save_game_guild_track* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_game_guild_track>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_game_guild_track& from);
  void MergeFrom(const proc_i_save_game_guild_track& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_game_guild_track* other);
  protected:
  explicit proc_i_save_game_guild_track(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_save_game_guild_track_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_save_game_guild_track.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_save_game_guild_track_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_save_game_guild_track_Parameter& param() const;
  ::db::proc_i_save_game_guild_track_Parameter* release_param();
  ::db::proc_i_save_game_guild_track_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_save_game_guild_track_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_save_game_guild_track_Parameter* param);
  ::db::proc_i_save_game_guild_track_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_game_guild_track)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_save_game_guild_track_Parameter* param_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_delete_game_guild_track_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_delete_game_guild_track.Parameter) */ {
 public:
  proc_i_delete_game_guild_track_Parameter();
  virtual ~proc_i_delete_game_guild_track_Parameter();

  proc_i_delete_game_guild_track_Parameter(const proc_i_delete_game_guild_track_Parameter& from);

  inline proc_i_delete_game_guild_track_Parameter& operator=(const proc_i_delete_game_guild_track_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_delete_game_guild_track_Parameter(proc_i_delete_game_guild_track_Parameter&& from) noexcept
    : proc_i_delete_game_guild_track_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_delete_game_guild_track_Parameter& operator=(proc_i_delete_game_guild_track_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_delete_game_guild_track_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_delete_game_guild_track_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_delete_game_guild_track_Parameter*>(
               &_proc_i_delete_game_guild_track_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void UnsafeArenaSwap(proc_i_delete_game_guild_track_Parameter* other);
  void Swap(proc_i_delete_game_guild_track_Parameter* other);
  friend void swap(proc_i_delete_game_guild_track_Parameter& a, proc_i_delete_game_guild_track_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_delete_game_guild_track_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_delete_game_guild_track_Parameter>(NULL);
  }

  proc_i_delete_game_guild_track_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_delete_game_guild_track_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_delete_game_guild_track_Parameter& from);
  void MergeFrom(const proc_i_delete_game_guild_track_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_delete_game_guild_track_Parameter* other);
  protected:
  explicit proc_i_delete_game_guild_track_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 p_guildid = 1;
  bool has_p_guildid() const;
  void clear_p_guildid();
  static const int kPGuildidFieldNumber = 1;
  ::google::protobuf::int32 p_guildid() const;
  void set_p_guildid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.proc_i_delete_game_guild_track.Parameter)
 private:
  void set_has_p_guildid();
  void clear_has_p_guildid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 p_guildid_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_delete_game_guild_track : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_delete_game_guild_track) */ {
 public:
  proc_i_delete_game_guild_track();
  virtual ~proc_i_delete_game_guild_track();

  proc_i_delete_game_guild_track(const proc_i_delete_game_guild_track& from);

  inline proc_i_delete_game_guild_track& operator=(const proc_i_delete_game_guild_track& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_delete_game_guild_track(proc_i_delete_game_guild_track&& from) noexcept
    : proc_i_delete_game_guild_track() {
    *this = ::std::move(from);
  }

  inline proc_i_delete_game_guild_track& operator=(proc_i_delete_game_guild_track&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_delete_game_guild_track& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_delete_game_guild_track* internal_default_instance() {
    return reinterpret_cast<const proc_i_delete_game_guild_track*>(
               &_proc_i_delete_game_guild_track_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void UnsafeArenaSwap(proc_i_delete_game_guild_track* other);
  void Swap(proc_i_delete_game_guild_track* other);
  friend void swap(proc_i_delete_game_guild_track& a, proc_i_delete_game_guild_track& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_delete_game_guild_track* New() const final {
    return CreateMaybeMessage<proc_i_delete_game_guild_track>(NULL);
  }

  proc_i_delete_game_guild_track* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_delete_game_guild_track>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_delete_game_guild_track& from);
  void MergeFrom(const proc_i_delete_game_guild_track& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_delete_game_guild_track* other);
  protected:
  explicit proc_i_delete_game_guild_track(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_delete_game_guild_track_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_delete_game_guild_track.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_delete_game_guild_track_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_delete_game_guild_track_Parameter& param() const;
  ::db::proc_i_delete_game_guild_track_Parameter* release_param();
  ::db::proc_i_delete_game_guild_track_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_delete_game_guild_track_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_delete_game_guild_track_Parameter* param);
  ::db::proc_i_delete_game_guild_track_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_delete_game_guild_track)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_delete_game_guild_track_Parameter* param_;
  friend struct ::protobuf_GameGuild_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigGuild

// required int32 level = 1;
inline bool ConfigGuild::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigGuild::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigGuild::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigGuild::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigGuild::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.level)
  return level_;
}
inline void ConfigGuild::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuild.level)
}

// required bytes desc = 2;
inline bool ConfigGuild::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGuild::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGuild::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGuild::clear_desc() {
  desc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_desc();
}
inline const ::std::string& ConfigGuild::desc() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.desc)
  return desc_.Get();
}
inline void ConfigGuild::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuild.desc)
}
#if LANG_CXX11
inline void ConfigGuild::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuild.desc)
}
#endif
inline void ConfigGuild::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuild.desc)
}
inline void ConfigGuild::set_desc(const void* value,
    size_t size) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuild.desc)
}
inline ::std::string* ConfigGuild::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuild.desc)
  return desc_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuild::release_desc() {
  // @@protoc_insertion_point(field_release:db.ConfigGuild.desc)
  if (!has_desc()) {
    return NULL;
  }
  clear_has_desc();
  return desc_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuild::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuild.desc)
}
inline ::std::string* ConfigGuild::unsafe_arena_release_desc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuild.desc)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_desc();
  return desc_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuild::unsafe_arena_set_allocated_desc(
    ::std::string* desc) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      desc, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuild.desc)
}

// required int32 size = 3;
inline bool ConfigGuild::has_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigGuild::set_has_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigGuild::clear_has_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigGuild::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 ConfigGuild::size() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.size)
  return size_;
}
inline void ConfigGuild::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuild.size)
}

// required int32 vice_leader_num = 4;
inline bool ConfigGuild::has_vice_leader_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigGuild::set_has_vice_leader_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigGuild::clear_has_vice_leader_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigGuild::clear_vice_leader_num() {
  vice_leader_num_ = 0;
  clear_has_vice_leader_num();
}
inline ::google::protobuf::int32 ConfigGuild::vice_leader_num() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.vice_leader_num)
  return vice_leader_num_;
}
inline void ConfigGuild::set_vice_leader_num(::google::protobuf::int32 value) {
  set_has_vice_leader_num();
  vice_leader_num_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuild.vice_leader_num)
}

// required int32 leader_offline_time = 5;
inline bool ConfigGuild::has_leader_offline_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigGuild::set_has_leader_offline_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigGuild::clear_has_leader_offline_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigGuild::clear_leader_offline_time() {
  leader_offline_time_ = 0;
  clear_has_leader_offline_time();
}
inline ::google::protobuf::int32 ConfigGuild::leader_offline_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.leader_offline_time)
  return leader_offline_time_;
}
inline void ConfigGuild::set_leader_offline_time(::google::protobuf::int32 value) {
  set_has_leader_offline_time();
  leader_offline_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuild.leader_offline_time)
}

// required int32 quit_join_cd = 6;
inline bool ConfigGuild::has_quit_join_cd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigGuild::set_has_quit_join_cd() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigGuild::clear_has_quit_join_cd() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigGuild::clear_quit_join_cd() {
  quit_join_cd_ = 0;
  clear_has_quit_join_cd();
}
inline ::google::protobuf::int32 ConfigGuild::quit_join_cd() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.quit_join_cd)
  return quit_join_cd_;
}
inline void ConfigGuild::set_quit_join_cd(::google::protobuf::int32 value) {
  set_has_quit_join_cd();
  quit_join_cd_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuild.quit_join_cd)
}

// required int32 donation_limit = 7;
inline bool ConfigGuild::has_donation_limit() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigGuild::set_has_donation_limit() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigGuild::clear_has_donation_limit() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigGuild::clear_donation_limit() {
  donation_limit_ = 0;
  clear_has_donation_limit();
}
inline ::google::protobuf::int32 ConfigGuild::donation_limit() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.donation_limit)
  return donation_limit_;
}
inline void ConfigGuild::set_donation_limit(::google::protobuf::int32 value) {
  set_has_donation_limit();
  donation_limit_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuild.donation_limit)
}

// required int32 cond_leader_level = 11;
inline bool ConfigGuild::has_cond_leader_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigGuild::set_has_cond_leader_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConfigGuild::clear_has_cond_leader_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConfigGuild::clear_cond_leader_level() {
  cond_leader_level_ = 0;
  clear_has_cond_leader_level();
}
inline ::google::protobuf::int32 ConfigGuild::cond_leader_level() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.cond_leader_level)
  return cond_leader_level_;
}
inline void ConfigGuild::set_cond_leader_level(::google::protobuf::int32 value) {
  set_has_cond_leader_level();
  cond_leader_level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuild.cond_leader_level)
}

// required bytes cond_build_cost = 12;
inline bool ConfigGuild::has_cond_build_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGuild::set_has_cond_build_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGuild::clear_has_cond_build_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGuild::clear_cond_build_cost() {
  cond_build_cost_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_cond_build_cost();
}
inline const ::std::string& ConfigGuild::cond_build_cost() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.cond_build_cost)
  return cond_build_cost_.Get();
}
inline void ConfigGuild::set_cond_build_cost(const ::std::string& value) {
  set_has_cond_build_cost();
  cond_build_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuild.cond_build_cost)
}
#if LANG_CXX11
inline void ConfigGuild::set_cond_build_cost(::std::string&& value) {
  set_has_cond_build_cost();
  cond_build_cost_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuild.cond_build_cost)
}
#endif
inline void ConfigGuild::set_cond_build_cost(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cond_build_cost();
  cond_build_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuild.cond_build_cost)
}
inline void ConfigGuild::set_cond_build_cost(const void* value,
    size_t size) {
  set_has_cond_build_cost();
  cond_build_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuild.cond_build_cost)
}
inline ::std::string* ConfigGuild::mutable_cond_build_cost() {
  set_has_cond_build_cost();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuild.cond_build_cost)
  return cond_build_cost_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuild::release_cond_build_cost() {
  // @@protoc_insertion_point(field_release:db.ConfigGuild.cond_build_cost)
  if (!has_cond_build_cost()) {
    return NULL;
  }
  clear_has_cond_build_cost();
  return cond_build_cost_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuild::set_allocated_cond_build_cost(::std::string* cond_build_cost) {
  if (cond_build_cost != NULL) {
    set_has_cond_build_cost();
  } else {
    clear_has_cond_build_cost();
  }
  cond_build_cost_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cond_build_cost,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuild.cond_build_cost)
}
inline ::std::string* ConfigGuild::unsafe_arena_release_cond_build_cost() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuild.cond_build_cost)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_cond_build_cost();
  return cond_build_cost_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuild::unsafe_arena_set_allocated_cond_build_cost(
    ::std::string* cond_build_cost) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (cond_build_cost != NULL) {
    set_has_cond_build_cost();
  } else {
    clear_has_cond_build_cost();
  }
  cond_build_cost_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      cond_build_cost, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuild.cond_build_cost)
}

// required int32 cond_population = 13;
inline bool ConfigGuild::has_cond_population() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConfigGuild::set_has_cond_population() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ConfigGuild::clear_has_cond_population() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ConfigGuild::clear_cond_population() {
  cond_population_ = 0;
  clear_has_cond_population();
}
inline ::google::protobuf::int32 ConfigGuild::cond_population() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.cond_population)
  return cond_population_;
}
inline void ConfigGuild::set_cond_population(::google::protobuf::int32 value) {
  set_has_cond_population();
  cond_population_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuild.cond_population)
}

// required bytes mail_text_accept = 21;
inline bool ConfigGuild::has_mail_text_accept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGuild::set_has_mail_text_accept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGuild::clear_has_mail_text_accept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGuild::clear_mail_text_accept() {
  mail_text_accept_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_mail_text_accept();
}
inline const ::std::string& ConfigGuild::mail_text_accept() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.mail_text_accept)
  return mail_text_accept_.Get();
}
inline void ConfigGuild::set_mail_text_accept(const ::std::string& value) {
  set_has_mail_text_accept();
  mail_text_accept_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuild.mail_text_accept)
}
#if LANG_CXX11
inline void ConfigGuild::set_mail_text_accept(::std::string&& value) {
  set_has_mail_text_accept();
  mail_text_accept_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuild.mail_text_accept)
}
#endif
inline void ConfigGuild::set_mail_text_accept(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_text_accept();
  mail_text_accept_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuild.mail_text_accept)
}
inline void ConfigGuild::set_mail_text_accept(const void* value,
    size_t size) {
  set_has_mail_text_accept();
  mail_text_accept_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuild.mail_text_accept)
}
inline ::std::string* ConfigGuild::mutable_mail_text_accept() {
  set_has_mail_text_accept();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuild.mail_text_accept)
  return mail_text_accept_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuild::release_mail_text_accept() {
  // @@protoc_insertion_point(field_release:db.ConfigGuild.mail_text_accept)
  if (!has_mail_text_accept()) {
    return NULL;
  }
  clear_has_mail_text_accept();
  return mail_text_accept_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuild::set_allocated_mail_text_accept(::std::string* mail_text_accept) {
  if (mail_text_accept != NULL) {
    set_has_mail_text_accept();
  } else {
    clear_has_mail_text_accept();
  }
  mail_text_accept_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_text_accept,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuild.mail_text_accept)
}
inline ::std::string* ConfigGuild::unsafe_arena_release_mail_text_accept() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuild.mail_text_accept)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_mail_text_accept();
  return mail_text_accept_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuild::unsafe_arena_set_allocated_mail_text_accept(
    ::std::string* mail_text_accept) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (mail_text_accept != NULL) {
    set_has_mail_text_accept();
  } else {
    clear_has_mail_text_accept();
  }
  mail_text_accept_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      mail_text_accept, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuild.mail_text_accept)
}

// required bytes mail_text_kick = 22;
inline bool ConfigGuild::has_mail_text_kick() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGuild::set_has_mail_text_kick() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGuild::clear_has_mail_text_kick() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGuild::clear_mail_text_kick() {
  mail_text_kick_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_mail_text_kick();
}
inline const ::std::string& ConfigGuild::mail_text_kick() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuild.mail_text_kick)
  return mail_text_kick_.Get();
}
inline void ConfigGuild::set_mail_text_kick(const ::std::string& value) {
  set_has_mail_text_kick();
  mail_text_kick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuild.mail_text_kick)
}
#if LANG_CXX11
inline void ConfigGuild::set_mail_text_kick(::std::string&& value) {
  set_has_mail_text_kick();
  mail_text_kick_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuild.mail_text_kick)
}
#endif
inline void ConfigGuild::set_mail_text_kick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_text_kick();
  mail_text_kick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuild.mail_text_kick)
}
inline void ConfigGuild::set_mail_text_kick(const void* value,
    size_t size) {
  set_has_mail_text_kick();
  mail_text_kick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuild.mail_text_kick)
}
inline ::std::string* ConfigGuild::mutable_mail_text_kick() {
  set_has_mail_text_kick();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuild.mail_text_kick)
  return mail_text_kick_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuild::release_mail_text_kick() {
  // @@protoc_insertion_point(field_release:db.ConfigGuild.mail_text_kick)
  if (!has_mail_text_kick()) {
    return NULL;
  }
  clear_has_mail_text_kick();
  return mail_text_kick_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuild::set_allocated_mail_text_kick(::std::string* mail_text_kick) {
  if (mail_text_kick != NULL) {
    set_has_mail_text_kick();
  } else {
    clear_has_mail_text_kick();
  }
  mail_text_kick_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_text_kick,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuild.mail_text_kick)
}
inline ::std::string* ConfigGuild::unsafe_arena_release_mail_text_kick() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuild.mail_text_kick)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_mail_text_kick();
  return mail_text_kick_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuild::unsafe_arena_set_allocated_mail_text_kick(
    ::std::string* mail_text_kick) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (mail_text_kick != NULL) {
    set_has_mail_text_kick();
  } else {
    clear_has_mail_text_kick();
  }
  mail_text_kick_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      mail_text_kick, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuild.mail_text_kick)
}

// -------------------------------------------------------------------

// ConfigGuildList

// repeated .db.ConfigGuild list = 1;
inline int ConfigGuildList::list_size() const {
  return list_.size();
}
inline void ConfigGuildList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGuild* ConfigGuildList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGuild >*
ConfigGuildList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGuildList.list)
  return &list_;
}
inline const ::db::ConfigGuild& ConfigGuildList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildList.list)
  return list_.Get(index);
}
inline ::db::ConfigGuild* ConfigGuildList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGuildList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuild >&
ConfigGuildList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGuildList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGuildUserTitle

// required int32 id = 1;
inline bool ConfigGuildUserTitle::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGuildUserTitle::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGuildUserTitle::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGuildUserTitle::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigGuildUserTitle::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildUserTitle.id)
  return id_;
}
inline void ConfigGuildUserTitle::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildUserTitle.id)
}

// required bytes desc = 2;
inline bool ConfigGuildUserTitle::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGuildUserTitle::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGuildUserTitle::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGuildUserTitle::clear_desc() {
  desc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_desc();
}
inline const ::std::string& ConfigGuildUserTitle::desc() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildUserTitle.desc)
  return desc_.Get();
}
inline void ConfigGuildUserTitle::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuildUserTitle.desc)
}
#if LANG_CXX11
inline void ConfigGuildUserTitle::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuildUserTitle.desc)
}
#endif
inline void ConfigGuildUserTitle::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuildUserTitle.desc)
}
inline void ConfigGuildUserTitle::set_desc(const void* value,
    size_t size) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuildUserTitle.desc)
}
inline ::std::string* ConfigGuildUserTitle::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildUserTitle.desc)
  return desc_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuildUserTitle::release_desc() {
  // @@protoc_insertion_point(field_release:db.ConfigGuildUserTitle.desc)
  if (!has_desc()) {
    return NULL;
  }
  clear_has_desc();
  return desc_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuildUserTitle::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuildUserTitle.desc)
}
inline ::std::string* ConfigGuildUserTitle::unsafe_arena_release_desc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuildUserTitle.desc)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_desc();
  return desc_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuildUserTitle::unsafe_arena_set_allocated_desc(
    ::std::string* desc) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      desc, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuildUserTitle.desc)
}

// required int32 manage_shopping = 11;
inline bool ConfigGuildUserTitle::has_manage_shopping() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGuildUserTitle::set_has_manage_shopping() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGuildUserTitle::clear_has_manage_shopping() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGuildUserTitle::clear_manage_shopping() {
  manage_shopping_ = 0;
  clear_has_manage_shopping();
}
inline ::google::protobuf::int32 ConfigGuildUserTitle::manage_shopping() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildUserTitle.manage_shopping)
  return manage_shopping_;
}
inline void ConfigGuildUserTitle::set_manage_shopping(::google::protobuf::int32 value) {
  set_has_manage_shopping();
  manage_shopping_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildUserTitle.manage_shopping)
}

// required int32 manage_chat = 12;
inline bool ConfigGuildUserTitle::has_manage_chat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGuildUserTitle::set_has_manage_chat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGuildUserTitle::clear_has_manage_chat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGuildUserTitle::clear_manage_chat() {
  manage_chat_ = 0;
  clear_has_manage_chat();
}
inline ::google::protobuf::int32 ConfigGuildUserTitle::manage_chat() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildUserTitle.manage_chat)
  return manage_chat_;
}
inline void ConfigGuildUserTitle::set_manage_chat(::google::protobuf::int32 value) {
  set_has_manage_chat();
  manage_chat_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildUserTitle.manage_chat)
}

// -------------------------------------------------------------------

// ConfigGuildUserTitleList

// repeated .db.ConfigGuildUserTitle list = 1;
inline int ConfigGuildUserTitleList::list_size() const {
  return list_.size();
}
inline void ConfigGuildUserTitleList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGuildUserTitle* ConfigGuildUserTitleList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildUserTitleList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildUserTitle >*
ConfigGuildUserTitleList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGuildUserTitleList.list)
  return &list_;
}
inline const ::db::ConfigGuildUserTitle& ConfigGuildUserTitleList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildUserTitleList.list)
  return list_.Get(index);
}
inline ::db::ConfigGuildUserTitle* ConfigGuildUserTitleList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGuildUserTitleList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildUserTitle >&
ConfigGuildUserTitleList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGuildUserTitleList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGuildSignin

// required int32 level = 1;
inline bool ConfigGuildSignin::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGuildSignin::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGuildSignin::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGuildSignin::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigGuildSignin::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildSignin.level)
  return level_;
}
inline void ConfigGuildSignin::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildSignin.level)
}

// required int32 type = 2;
inline bool ConfigGuildSignin::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGuildSignin::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGuildSignin::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGuildSignin::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConfigGuildSignin::type() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildSignin.type)
  return type_;
}
inline void ConfigGuildSignin::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildSignin.type)
}

// required bytes need = 3;
inline bool ConfigGuildSignin::has_need() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGuildSignin::set_has_need() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGuildSignin::clear_has_need() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGuildSignin::clear_need() {
  need_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_need();
}
inline const ::std::string& ConfigGuildSignin::need() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildSignin.need)
  return need_.Get();
}
inline void ConfigGuildSignin::set_need(const ::std::string& value) {
  set_has_need();
  need_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuildSignin.need)
}
#if LANG_CXX11
inline void ConfigGuildSignin::set_need(::std::string&& value) {
  set_has_need();
  need_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuildSignin.need)
}
#endif
inline void ConfigGuildSignin::set_need(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_need();
  need_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuildSignin.need)
}
inline void ConfigGuildSignin::set_need(const void* value,
    size_t size) {
  set_has_need();
  need_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuildSignin.need)
}
inline ::std::string* ConfigGuildSignin::mutable_need() {
  set_has_need();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildSignin.need)
  return need_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuildSignin::release_need() {
  // @@protoc_insertion_point(field_release:db.ConfigGuildSignin.need)
  if (!has_need()) {
    return NULL;
  }
  clear_has_need();
  return need_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuildSignin::set_allocated_need(::std::string* need) {
  if (need != NULL) {
    set_has_need();
  } else {
    clear_has_need();
  }
  need_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), need,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuildSignin.need)
}
inline ::std::string* ConfigGuildSignin::unsafe_arena_release_need() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuildSignin.need)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_need();
  return need_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuildSignin::unsafe_arena_set_allocated_need(
    ::std::string* need) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (need != NULL) {
    set_has_need();
  } else {
    clear_has_need();
  }
  need_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      need, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuildSignin.need)
}

// required bytes award = 4;
inline bool ConfigGuildSignin::has_award() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGuildSignin::set_has_award() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGuildSignin::clear_has_award() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGuildSignin::clear_award() {
  award_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_award();
}
inline const ::std::string& ConfigGuildSignin::award() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildSignin.award)
  return award_.Get();
}
inline void ConfigGuildSignin::set_award(const ::std::string& value) {
  set_has_award();
  award_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuildSignin.award)
}
#if LANG_CXX11
inline void ConfigGuildSignin::set_award(::std::string&& value) {
  set_has_award();
  award_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuildSignin.award)
}
#endif
inline void ConfigGuildSignin::set_award(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_award();
  award_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuildSignin.award)
}
inline void ConfigGuildSignin::set_award(const void* value,
    size_t size) {
  set_has_award();
  award_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuildSignin.award)
}
inline ::std::string* ConfigGuildSignin::mutable_award() {
  set_has_award();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildSignin.award)
  return award_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuildSignin::release_award() {
  // @@protoc_insertion_point(field_release:db.ConfigGuildSignin.award)
  if (!has_award()) {
    return NULL;
  }
  clear_has_award();
  return award_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuildSignin::set_allocated_award(::std::string* award) {
  if (award != NULL) {
    set_has_award();
  } else {
    clear_has_award();
  }
  award_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), award,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuildSignin.award)
}
inline ::std::string* ConfigGuildSignin::unsafe_arena_release_award() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuildSignin.award)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_award();
  return award_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuildSignin::unsafe_arena_set_allocated_award(
    ::std::string* award) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (award != NULL) {
    set_has_award();
  } else {
    clear_has_award();
  }
  award_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      award, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuildSignin.award)
}

// -------------------------------------------------------------------

// ConfigGuildSigninList

// repeated .db.ConfigGuildSignin list = 1;
inline int ConfigGuildSigninList::list_size() const {
  return list_.size();
}
inline void ConfigGuildSigninList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGuildSignin* ConfigGuildSigninList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildSigninList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildSignin >*
ConfigGuildSigninList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGuildSigninList.list)
  return &list_;
}
inline const ::db::ConfigGuildSignin& ConfigGuildSigninList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildSigninList.list)
  return list_.Get(index);
}
inline ::db::ConfigGuildSignin* ConfigGuildSigninList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGuildSigninList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildSignin >&
ConfigGuildSigninList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGuildSigninList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGuildBadge

// required int32 id = 1;
inline bool ConfigGuildBadge::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGuildBadge::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGuildBadge::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGuildBadge::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigGuildBadge::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBadge.id)
  return id_;
}
inline void ConfigGuildBadge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildBadge.id)
}

// required int32 type = 2;
inline bool ConfigGuildBadge::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGuildBadge::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGuildBadge::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGuildBadge::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConfigGuildBadge::type() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBadge.type)
  return type_;
}
inline void ConfigGuildBadge::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildBadge.type)
}

// required int32 order = 3;
inline bool ConfigGuildBadge::has_order() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGuildBadge::set_has_order() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGuildBadge::clear_has_order() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGuildBadge::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 ConfigGuildBadge::order() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBadge.order)
  return order_;
}
inline void ConfigGuildBadge::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildBadge.order)
}

// required bytes param = 4;
inline bool ConfigGuildBadge::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGuildBadge::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGuildBadge::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGuildBadge::clear_param() {
  param_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_param();
}
inline const ::std::string& ConfigGuildBadge::param() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBadge.param)
  return param_.Get();
}
inline void ConfigGuildBadge::set_param(const ::std::string& value) {
  set_has_param();
  param_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuildBadge.param)
}
#if LANG_CXX11
inline void ConfigGuildBadge::set_param(::std::string&& value) {
  set_has_param();
  param_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuildBadge.param)
}
#endif
inline void ConfigGuildBadge::set_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param();
  param_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuildBadge.param)
}
inline void ConfigGuildBadge::set_param(const void* value,
    size_t size) {
  set_has_param();
  param_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuildBadge.param)
}
inline ::std::string* ConfigGuildBadge::mutable_param() {
  set_has_param();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildBadge.param)
  return param_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuildBadge::release_param() {
  // @@protoc_insertion_point(field_release:db.ConfigGuildBadge.param)
  if (!has_param()) {
    return NULL;
  }
  clear_has_param();
  return param_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuildBadge::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    set_has_param();
  } else {
    clear_has_param();
  }
  param_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuildBadge.param)
}
inline ::std::string* ConfigGuildBadge::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuildBadge.param)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_param();
  return param_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuildBadge::unsafe_arena_set_allocated_param(
    ::std::string* param) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (param != NULL) {
    set_has_param();
  } else {
    clear_has_param();
  }
  param_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      param, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuildBadge.param)
}

// -------------------------------------------------------------------

// ConfigGuildBadgeList

// repeated .db.ConfigGuildBadge list = 1;
inline int ConfigGuildBadgeList::list_size() const {
  return list_.size();
}
inline void ConfigGuildBadgeList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGuildBadge* ConfigGuildBadgeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildBadgeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBadge >*
ConfigGuildBadgeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGuildBadgeList.list)
  return &list_;
}
inline const ::db::ConfigGuildBadge& ConfigGuildBadgeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBadgeList.list)
  return list_.Get(index);
}
inline ::db::ConfigGuildBadge* ConfigGuildBadgeList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGuildBadgeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBadge >&
ConfigGuildBadgeList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGuildBadgeList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGuildDonation

// required int32 id = 1;
inline bool ConfigGuildDonation::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGuildDonation::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGuildDonation::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGuildDonation::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigGuildDonation::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildDonation.id)
  return id_;
}
inline void ConfigGuildDonation::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildDonation.id)
}

// required bytes donates = 2;
inline bool ConfigGuildDonation::has_donates() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGuildDonation::set_has_donates() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGuildDonation::clear_has_donates() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGuildDonation::clear_donates() {
  donates_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_donates();
}
inline const ::std::string& ConfigGuildDonation::donates() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildDonation.donates)
  return donates_.Get();
}
inline void ConfigGuildDonation::set_donates(const ::std::string& value) {
  set_has_donates();
  donates_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuildDonation.donates)
}
#if LANG_CXX11
inline void ConfigGuildDonation::set_donates(::std::string&& value) {
  set_has_donates();
  donates_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuildDonation.donates)
}
#endif
inline void ConfigGuildDonation::set_donates(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_donates();
  donates_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuildDonation.donates)
}
inline void ConfigGuildDonation::set_donates(const void* value,
    size_t size) {
  set_has_donates();
  donates_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuildDonation.donates)
}
inline ::std::string* ConfigGuildDonation::mutable_donates() {
  set_has_donates();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildDonation.donates)
  return donates_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuildDonation::release_donates() {
  // @@protoc_insertion_point(field_release:db.ConfigGuildDonation.donates)
  if (!has_donates()) {
    return NULL;
  }
  clear_has_donates();
  return donates_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuildDonation::set_allocated_donates(::std::string* donates) {
  if (donates != NULL) {
    set_has_donates();
  } else {
    clear_has_donates();
  }
  donates_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), donates,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuildDonation.donates)
}
inline ::std::string* ConfigGuildDonation::unsafe_arena_release_donates() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuildDonation.donates)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_donates();
  return donates_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuildDonation::unsafe_arena_set_allocated_donates(
    ::std::string* donates) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (donates != NULL) {
    set_has_donates();
  } else {
    clear_has_donates();
  }
  donates_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      donates, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuildDonation.donates)
}

// required int32 award_donation = 3;
inline bool ConfigGuildDonation::has_award_donation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGuildDonation::set_has_award_donation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGuildDonation::clear_has_award_donation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGuildDonation::clear_award_donation() {
  award_donation_ = 0;
  clear_has_award_donation();
}
inline ::google::protobuf::int32 ConfigGuildDonation::award_donation() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildDonation.award_donation)
  return award_donation_;
}
inline void ConfigGuildDonation::set_award_donation(::google::protobuf::int32 value) {
  set_has_award_donation();
  award_donation_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildDonation.award_donation)
}

// required uint64 award_item_typeid = 4;
inline bool ConfigGuildDonation::has_award_item_typeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGuildDonation::set_has_award_item_typeid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGuildDonation::clear_has_award_item_typeid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGuildDonation::clear_award_item_typeid() {
  award_item_typeid_ = GOOGLE_ULONGLONG(0);
  clear_has_award_item_typeid();
}
inline ::google::protobuf::uint64 ConfigGuildDonation::award_item_typeid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildDonation.award_item_typeid)
  return award_item_typeid_;
}
inline void ConfigGuildDonation::set_award_item_typeid(::google::protobuf::uint64 value) {
  set_has_award_item_typeid();
  award_item_typeid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildDonation.award_item_typeid)
}

// -------------------------------------------------------------------

// ConfigGuildDonationList

// repeated .db.ConfigGuildDonation list = 1;
inline int ConfigGuildDonationList::list_size() const {
  return list_.size();
}
inline void ConfigGuildDonationList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGuildDonation* ConfigGuildDonationList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildDonationList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildDonation >*
ConfigGuildDonationList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGuildDonationList.list)
  return &list_;
}
inline const ::db::ConfigGuildDonation& ConfigGuildDonationList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildDonationList.list)
  return list_.Get(index);
}
inline ::db::ConfigGuildDonation* ConfigGuildDonationList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGuildDonationList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildDonation >&
ConfigGuildDonationList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGuildDonationList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGuildBuilding

// required int32 building_type = 1;
inline bool ConfigGuildBuilding::has_building_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGuildBuilding::set_has_building_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGuildBuilding::clear_has_building_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGuildBuilding::clear_building_type() {
  building_type_ = 0;
  clear_has_building_type();
}
inline ::google::protobuf::int32 ConfigGuildBuilding::building_type() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBuilding.building_type)
  return building_type_;
}
inline void ConfigGuildBuilding::set_building_type(::google::protobuf::int32 value) {
  set_has_building_type();
  building_type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildBuilding.building_type)
}

// required int32 level = 2;
inline bool ConfigGuildBuilding::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGuildBuilding::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGuildBuilding::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGuildBuilding::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigGuildBuilding::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBuilding.level)
  return level_;
}
inline void ConfigGuildBuilding::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildBuilding.level)
}

// required bytes cond_prebuild = 3;
inline bool ConfigGuildBuilding::has_cond_prebuild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGuildBuilding::set_has_cond_prebuild() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGuildBuilding::clear_has_cond_prebuild() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGuildBuilding::clear_cond_prebuild() {
  cond_prebuild_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_cond_prebuild();
}
inline const ::std::string& ConfigGuildBuilding::cond_prebuild() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBuilding.cond_prebuild)
  return cond_prebuild_.Get();
}
inline void ConfigGuildBuilding::set_cond_prebuild(const ::std::string& value) {
  set_has_cond_prebuild();
  cond_prebuild_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuildBuilding.cond_prebuild)
}
#if LANG_CXX11
inline void ConfigGuildBuilding::set_cond_prebuild(::std::string&& value) {
  set_has_cond_prebuild();
  cond_prebuild_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuildBuilding.cond_prebuild)
}
#endif
inline void ConfigGuildBuilding::set_cond_prebuild(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cond_prebuild();
  cond_prebuild_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuildBuilding.cond_prebuild)
}
inline void ConfigGuildBuilding::set_cond_prebuild(const void* value,
    size_t size) {
  set_has_cond_prebuild();
  cond_prebuild_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuildBuilding.cond_prebuild)
}
inline ::std::string* ConfigGuildBuilding::mutable_cond_prebuild() {
  set_has_cond_prebuild();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildBuilding.cond_prebuild)
  return cond_prebuild_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuildBuilding::release_cond_prebuild() {
  // @@protoc_insertion_point(field_release:db.ConfigGuildBuilding.cond_prebuild)
  if (!has_cond_prebuild()) {
    return NULL;
  }
  clear_has_cond_prebuild();
  return cond_prebuild_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuildBuilding::set_allocated_cond_prebuild(::std::string* cond_prebuild) {
  if (cond_prebuild != NULL) {
    set_has_cond_prebuild();
  } else {
    clear_has_cond_prebuild();
  }
  cond_prebuild_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cond_prebuild,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuildBuilding.cond_prebuild)
}
inline ::std::string* ConfigGuildBuilding::unsafe_arena_release_cond_prebuild() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuildBuilding.cond_prebuild)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_cond_prebuild();
  return cond_prebuild_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuildBuilding::unsafe_arena_set_allocated_cond_prebuild(
    ::std::string* cond_prebuild) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (cond_prebuild != NULL) {
    set_has_cond_prebuild();
  } else {
    clear_has_cond_prebuild();
  }
  cond_prebuild_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      cond_prebuild, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuildBuilding.cond_prebuild)
}

// required bytes cond_build_cost = 4;
inline bool ConfigGuildBuilding::has_cond_build_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGuildBuilding::set_has_cond_build_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGuildBuilding::clear_has_cond_build_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGuildBuilding::clear_cond_build_cost() {
  cond_build_cost_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_cond_build_cost();
}
inline const ::std::string& ConfigGuildBuilding::cond_build_cost() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBuilding.cond_build_cost)
  return cond_build_cost_.Get();
}
inline void ConfigGuildBuilding::set_cond_build_cost(const ::std::string& value) {
  set_has_cond_build_cost();
  cond_build_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGuildBuilding.cond_build_cost)
}
#if LANG_CXX11
inline void ConfigGuildBuilding::set_cond_build_cost(::std::string&& value) {
  set_has_cond_build_cost();
  cond_build_cost_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGuildBuilding.cond_build_cost)
}
#endif
inline void ConfigGuildBuilding::set_cond_build_cost(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cond_build_cost();
  cond_build_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGuildBuilding.cond_build_cost)
}
inline void ConfigGuildBuilding::set_cond_build_cost(const void* value,
    size_t size) {
  set_has_cond_build_cost();
  cond_build_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGuildBuilding.cond_build_cost)
}
inline ::std::string* ConfigGuildBuilding::mutable_cond_build_cost() {
  set_has_cond_build_cost();
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildBuilding.cond_build_cost)
  return cond_build_cost_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGuildBuilding::release_cond_build_cost() {
  // @@protoc_insertion_point(field_release:db.ConfigGuildBuilding.cond_build_cost)
  if (!has_cond_build_cost()) {
    return NULL;
  }
  clear_has_cond_build_cost();
  return cond_build_cost_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGuildBuilding::set_allocated_cond_build_cost(::std::string* cond_build_cost) {
  if (cond_build_cost != NULL) {
    set_has_cond_build_cost();
  } else {
    clear_has_cond_build_cost();
  }
  cond_build_cost_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cond_build_cost,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGuildBuilding.cond_build_cost)
}
inline ::std::string* ConfigGuildBuilding::unsafe_arena_release_cond_build_cost() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGuildBuilding.cond_build_cost)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_cond_build_cost();
  return cond_build_cost_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGuildBuilding::unsafe_arena_set_allocated_cond_build_cost(
    ::std::string* cond_build_cost) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (cond_build_cost != NULL) {
    set_has_cond_build_cost();
  } else {
    clear_has_cond_build_cost();
  }
  cond_build_cost_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      cond_build_cost, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGuildBuilding.cond_build_cost)
}

// required int32 cond_building_time = 5;
inline bool ConfigGuildBuilding::has_cond_building_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigGuildBuilding::set_has_cond_building_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigGuildBuilding::clear_has_cond_building_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigGuildBuilding::clear_cond_building_time() {
  cond_building_time_ = 0;
  clear_has_cond_building_time();
}
inline ::google::protobuf::int32 ConfigGuildBuilding::cond_building_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBuilding.cond_building_time)
  return cond_building_time_;
}
inline void ConfigGuildBuilding::set_cond_building_time(::google::protobuf::int32 value) {
  set_has_cond_building_time();
  cond_building_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGuildBuilding.cond_building_time)
}

// -------------------------------------------------------------------

// ConfigGuildBuildingList

// repeated .db.ConfigGuildBuilding list = 1;
inline int ConfigGuildBuildingList::list_size() const {
  return list_.size();
}
inline void ConfigGuildBuildingList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGuildBuilding* ConfigGuildBuildingList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGuildBuildingList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBuilding >*
ConfigGuildBuildingList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGuildBuildingList.list)
  return &list_;
}
inline const ::db::ConfigGuildBuilding& ConfigGuildBuildingList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGuildBuildingList.list)
  return list_.Get(index);
}
inline ::db::ConfigGuildBuilding* ConfigGuildBuildingList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGuildBuildingList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGuildBuilding >&
ConfigGuildBuildingList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGuildBuildingList.list)
  return list_;
}

// -------------------------------------------------------------------

// GameGuild

// required int32 guildid = 1;
inline bool GameGuild::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameGuild::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameGuild::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameGuild::clear_guildid() {
  guildid_ = 0;
  clear_has_guildid();
}
inline ::google::protobuf::int32 GameGuild::guildid() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.guildid)
  return guildid_;
}
inline void GameGuild::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.guildid)
}

// required bytes name = 2;
inline bool GameGuild::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameGuild::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameGuild::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameGuild::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& GameGuild::name() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.name)
  return name_.Get();
}
inline void GameGuild::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGuild.name)
}
#if LANG_CXX11
inline void GameGuild::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGuild.name)
}
#endif
inline void GameGuild::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGuild.name)
}
inline void GameGuild::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGuild.name)
}
inline ::std::string* GameGuild::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.GameGuild.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGuild::release_name() {
  // @@protoc_insertion_point(field_release:db.GameGuild.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGuild::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGuild.name)
}
inline ::std::string* GameGuild::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGuild.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGuild::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGuild.name)
}

// required int32 level = 3;
inline bool GameGuild::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameGuild::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameGuild::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameGuild::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GameGuild::level() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.level)
  return level_;
}
inline void GameGuild::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.level)
}

// required int32 population = 4;
inline bool GameGuild::has_population() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameGuild::set_has_population() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameGuild::clear_has_population() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameGuild::clear_population() {
  population_ = 0;
  clear_has_population();
}
inline ::google::protobuf::int32 GameGuild::population() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.population)
  return population_;
}
inline void GameGuild::set_population(::google::protobuf::int32 value) {
  set_has_population();
  population_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.population)
}

// required uint64 fund = 5;
inline bool GameGuild::has_fund() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameGuild::set_has_fund() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameGuild::clear_has_fund() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameGuild::clear_fund() {
  fund_ = GOOGLE_ULONGLONG(0);
  clear_has_fund();
}
inline ::google::protobuf::uint64 GameGuild::fund() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.fund)
  return fund_;
}
inline void GameGuild::set_fund(::google::protobuf::uint64 value) {
  set_has_fund();
  fund_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.fund)
}

// required bytes announcement = 6;
inline bool GameGuild::has_announcement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameGuild::set_has_announcement() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameGuild::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameGuild::clear_announcement() {
  announcement_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_announcement();
}
inline const ::std::string& GameGuild::announcement() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.announcement)
  return announcement_.Get();
}
inline void GameGuild::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGuild.announcement)
}
#if LANG_CXX11
inline void GameGuild::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGuild.announcement)
}
#endif
inline void GameGuild::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGuild.announcement)
}
inline void GameGuild::set_announcement(const void* value,
    size_t size) {
  set_has_announcement();
  announcement_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGuild.announcement)
}
inline ::std::string* GameGuild::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:db.GameGuild.announcement)
  return announcement_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGuild::release_announcement() {
  // @@protoc_insertion_point(field_release:db.GameGuild.announcement)
  if (!has_announcement()) {
    return NULL;
  }
  clear_has_announcement();
  return announcement_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGuild::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGuild.announcement)
}
inline ::std::string* GameGuild::unsafe_arena_release_announcement() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGuild.announcement)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_announcement();
  return announcement_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGuild::unsafe_arena_set_allocated_announcement(
    ::std::string* announcement) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      announcement, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGuild.announcement)
}

// required int32 state = 7;
inline bool GameGuild::has_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameGuild::set_has_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameGuild::clear_has_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameGuild::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GameGuild::state() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.state)
  return state_;
}
inline void GameGuild::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.state)
}

// required bytes badge = 8;
inline bool GameGuild::has_badge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameGuild::set_has_badge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameGuild::clear_has_badge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameGuild::clear_badge() {
  badge_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_badge();
}
inline const ::std::string& GameGuild::badge() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.badge)
  return badge_.Get();
}
inline void GameGuild::set_badge(const ::std::string& value) {
  set_has_badge();
  badge_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGuild.badge)
}
#if LANG_CXX11
inline void GameGuild::set_badge(::std::string&& value) {
  set_has_badge();
  badge_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGuild.badge)
}
#endif
inline void GameGuild::set_badge(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_badge();
  badge_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGuild.badge)
}
inline void GameGuild::set_badge(const void* value,
    size_t size) {
  set_has_badge();
  badge_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGuild.badge)
}
inline ::std::string* GameGuild::mutable_badge() {
  set_has_badge();
  // @@protoc_insertion_point(field_mutable:db.GameGuild.badge)
  return badge_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGuild::release_badge() {
  // @@protoc_insertion_point(field_release:db.GameGuild.badge)
  if (!has_badge()) {
    return NULL;
  }
  clear_has_badge();
  return badge_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGuild::set_allocated_badge(::std::string* badge) {
  if (badge != NULL) {
    set_has_badge();
  } else {
    clear_has_badge();
  }
  badge_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), badge,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGuild.badge)
}
inline ::std::string* GameGuild::unsafe_arena_release_badge() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGuild.badge)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_badge();
  return badge_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGuild::unsafe_arena_set_allocated_badge(
    ::std::string* badge) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (badge != NULL) {
    set_has_badge();
  } else {
    clear_has_badge();
  }
  badge_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      badge, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGuild.badge)
}

// required int32 accept_type = 11;
inline bool GameGuild::has_accept_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameGuild::set_has_accept_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameGuild::clear_has_accept_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameGuild::clear_accept_type() {
  accept_type_ = 0;
  clear_has_accept_type();
}
inline ::google::protobuf::int32 GameGuild::accept_type() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.accept_type)
  return accept_type_;
}
inline void GameGuild::set_accept_type(::google::protobuf::int32 value) {
  set_has_accept_type();
  accept_type_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.accept_type)
}

// required int32 join_level = 12;
inline bool GameGuild::has_join_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GameGuild::set_has_join_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GameGuild::clear_has_join_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GameGuild::clear_join_level() {
  join_level_ = 0;
  clear_has_join_level();
}
inline ::google::protobuf::int32 GameGuild::join_level() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.join_level)
  return join_level_;
}
inline void GameGuild::set_join_level(::google::protobuf::int32 value) {
  set_has_join_level();
  join_level_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.join_level)
}

// required int32 join_force = 13;
inline bool GameGuild::has_join_force() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GameGuild::set_has_join_force() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GameGuild::clear_has_join_force() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GameGuild::clear_join_force() {
  join_force_ = 0;
  clear_has_join_force();
}
inline ::google::protobuf::int32 GameGuild::join_force() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.join_force)
  return join_force_;
}
inline void GameGuild::set_join_force(::google::protobuf::int32 value) {
  set_has_join_force();
  join_force_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.join_force)
}

// required int32 shopping = 14;
inline bool GameGuild::has_shopping() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GameGuild::set_has_shopping() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GameGuild::clear_has_shopping() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GameGuild::clear_shopping() {
  shopping_ = 0;
  clear_has_shopping();
}
inline ::google::protobuf::int32 GameGuild::shopping() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.shopping)
  return shopping_;
}
inline void GameGuild::set_shopping(::google::protobuf::int32 value) {
  set_has_shopping();
  shopping_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.shopping)
}

// required int32 chat = 15;
inline bool GameGuild::has_chat() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GameGuild::set_has_chat() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GameGuild::clear_has_chat() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GameGuild::clear_chat() {
  chat_ = 0;
  clear_has_chat();
}
inline ::google::protobuf::int32 GameGuild::chat() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.chat)
  return chat_;
}
inline void GameGuild::set_chat(::google::protobuf::int32 value) {
  set_has_chat();
  chat_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.chat)
}

// required sfixed64 optime = 21;
inline bool GameGuild::has_optime() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GameGuild::set_has_optime() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GameGuild::clear_has_optime() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GameGuild::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 GameGuild::optime() const {
  // @@protoc_insertion_point(field_get:db.GameGuild.optime)
  return optime_;
}
inline void GameGuild::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuild.optime)
}

// -------------------------------------------------------------------

// GameGuildBuilding

// required int32 guildid = 1;
inline bool GameGuildBuilding::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameGuildBuilding::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameGuildBuilding::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameGuildBuilding::clear_guildid() {
  guildid_ = 0;
  clear_has_guildid();
}
inline ::google::protobuf::int32 GameGuildBuilding::guildid() const {
  // @@protoc_insertion_point(field_get:db.GameGuildBuilding.guildid)
  return guildid_;
}
inline void GameGuildBuilding::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildBuilding.guildid)
}

// required int32 building_type = 2;
inline bool GameGuildBuilding::has_building_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameGuildBuilding::set_has_building_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameGuildBuilding::clear_has_building_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameGuildBuilding::clear_building_type() {
  building_type_ = 0;
  clear_has_building_type();
}
inline ::google::protobuf::int32 GameGuildBuilding::building_type() const {
  // @@protoc_insertion_point(field_get:db.GameGuildBuilding.building_type)
  return building_type_;
}
inline void GameGuildBuilding::set_building_type(::google::protobuf::int32 value) {
  set_has_building_type();
  building_type_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildBuilding.building_type)
}

// required int32 level = 3;
inline bool GameGuildBuilding::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameGuildBuilding::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameGuildBuilding::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameGuildBuilding::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GameGuildBuilding::level() const {
  // @@protoc_insertion_point(field_get:db.GameGuildBuilding.level)
  return level_;
}
inline void GameGuildBuilding::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildBuilding.level)
}

// required int32 state = 4;
inline bool GameGuildBuilding::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameGuildBuilding::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameGuildBuilding::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameGuildBuilding::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GameGuildBuilding::state() const {
  // @@protoc_insertion_point(field_get:db.GameGuildBuilding.state)
  return state_;
}
inline void GameGuildBuilding::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildBuilding.state)
}

// required int32 seconds = 5;
inline bool GameGuildBuilding::has_seconds() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameGuildBuilding::set_has_seconds() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameGuildBuilding::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameGuildBuilding::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
inline ::google::protobuf::int32 GameGuildBuilding::seconds() const {
  // @@protoc_insertion_point(field_get:db.GameGuildBuilding.seconds)
  return seconds_;
}
inline void GameGuildBuilding::set_seconds(::google::protobuf::int32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildBuilding.seconds)
}

// required sfixed64 starttime = 6;
inline bool GameGuildBuilding::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameGuildBuilding::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameGuildBuilding::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameGuildBuilding::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 GameGuildBuilding::starttime() const {
  // @@protoc_insertion_point(field_get:db.GameGuildBuilding.starttime)
  return starttime_;
}
inline void GameGuildBuilding::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildBuilding.starttime)
}

// required sfixed64 optime = 21;
inline bool GameGuildBuilding::has_optime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameGuildBuilding::set_has_optime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameGuildBuilding::clear_has_optime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameGuildBuilding::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 GameGuildBuilding::optime() const {
  // @@protoc_insertion_point(field_get:db.GameGuildBuilding.optime)
  return optime_;
}
inline void GameGuildBuilding::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildBuilding.optime)
}

// -------------------------------------------------------------------

// GameGuildStore

// required int32 guildid = 1;
inline bool GameGuildStore::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameGuildStore::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameGuildStore::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameGuildStore::clear_guildid() {
  guildid_ = 0;
  clear_has_guildid();
}
inline ::google::protobuf::int32 GameGuildStore::guildid() const {
  // @@protoc_insertion_point(field_get:db.GameGuildStore.guildid)
  return guildid_;
}
inline void GameGuildStore::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildStore.guildid)
}

// required uint64 item_typeid = 2;
inline bool GameGuildStore::has_item_typeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameGuildStore::set_has_item_typeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameGuildStore::clear_has_item_typeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameGuildStore::clear_item_typeid() {
  item_typeid_ = GOOGLE_ULONGLONG(0);
  clear_has_item_typeid();
}
inline ::google::protobuf::uint64 GameGuildStore::item_typeid() const {
  // @@protoc_insertion_point(field_get:db.GameGuildStore.item_typeid)
  return item_typeid_;
}
inline void GameGuildStore::set_item_typeid(::google::protobuf::uint64 value) {
  set_has_item_typeid();
  item_typeid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildStore.item_typeid)
}

// required int32 item_num = 3;
inline bool GameGuildStore::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameGuildStore::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameGuildStore::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameGuildStore::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 GameGuildStore::item_num() const {
  // @@protoc_insertion_point(field_get:db.GameGuildStore.item_num)
  return item_num_;
}
inline void GameGuildStore::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildStore.item_num)
}

// required sfixed64 optime = 11;
inline bool GameGuildStore::has_optime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameGuildStore::set_has_optime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameGuildStore::clear_has_optime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameGuildStore::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 GameGuildStore::optime() const {
  // @@protoc_insertion_point(field_get:db.GameGuildStore.optime)
  return optime_;
}
inline void GameGuildStore::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildStore.optime)
}

// -------------------------------------------------------------------

// GameGuildUser

// required int32 guildid = 1;
inline bool GameGuildUser::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameGuildUser::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameGuildUser::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameGuildUser::clear_guildid() {
  guildid_ = 0;
  clear_has_guildid();
}
inline ::google::protobuf::int32 GameGuildUser::guildid() const {
  // @@protoc_insertion_point(field_get:db.GameGuildUser.guildid)
  return guildid_;
}
inline void GameGuildUser::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildUser.guildid)
}

// required int32 ticketid = 2;
inline bool GameGuildUser::has_ticketid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameGuildUser::set_has_ticketid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameGuildUser::clear_has_ticketid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameGuildUser::clear_ticketid() {
  ticketid_ = 0;
  clear_has_ticketid();
}
inline ::google::protobuf::int32 GameGuildUser::ticketid() const {
  // @@protoc_insertion_point(field_get:db.GameGuildUser.ticketid)
  return ticketid_;
}
inline void GameGuildUser::set_ticketid(::google::protobuf::int32 value) {
  set_has_ticketid();
  ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildUser.ticketid)
}

// required int32 title = 3;
inline bool GameGuildUser::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameGuildUser::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameGuildUser::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameGuildUser::clear_title() {
  title_ = 0;
  clear_has_title();
}
inline ::google::protobuf::int32 GameGuildUser::title() const {
  // @@protoc_insertion_point(field_get:db.GameGuildUser.title)
  return title_;
}
inline void GameGuildUser::set_title(::google::protobuf::int32 value) {
  set_has_title();
  title_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildUser.title)
}

// required int32 donation = 4;
inline bool GameGuildUser::has_donation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameGuildUser::set_has_donation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameGuildUser::clear_has_donation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameGuildUser::clear_donation() {
  donation_ = 0;
  clear_has_donation();
}
inline ::google::protobuf::int32 GameGuildUser::donation() const {
  // @@protoc_insertion_point(field_get:db.GameGuildUser.donation)
  return donation_;
}
inline void GameGuildUser::set_donation(::google::protobuf::int32 value) {
  set_has_donation();
  donation_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildUser.donation)
}

// required int32 state = 5;
inline bool GameGuildUser::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameGuildUser::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameGuildUser::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameGuildUser::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GameGuildUser::state() const {
  // @@protoc_insertion_point(field_get:db.GameGuildUser.state)
  return state_;
}
inline void GameGuildUser::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildUser.state)
}

// required sfixed64 optime = 11;
inline bool GameGuildUser::has_optime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameGuildUser::set_has_optime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameGuildUser::clear_has_optime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameGuildUser::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 GameGuildUser::optime() const {
  // @@protoc_insertion_point(field_get:db.GameGuildUser.optime)
  return optime_;
}
inline void GameGuildUser::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildUser.optime)
}

// -------------------------------------------------------------------

// GameStatsGuildUser

// required int32 ticketid = 1;
inline bool GameStatsGuildUser::has_ticketid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameStatsGuildUser::set_has_ticketid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameStatsGuildUser::clear_has_ticketid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameStatsGuildUser::clear_ticketid() {
  ticketid_ = 0;
  clear_has_ticketid();
}
inline ::google::protobuf::int32 GameStatsGuildUser::ticketid() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.ticketid)
  return ticketid_;
}
inline void GameStatsGuildUser::set_ticketid(::google::protobuf::int32 value) {
  set_has_ticketid();
  ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.ticketid)
}

// required int32 guildid = 2;
inline bool GameStatsGuildUser::has_guildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameStatsGuildUser::set_has_guildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameStatsGuildUser::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameStatsGuildUser::clear_guildid() {
  guildid_ = 0;
  clear_has_guildid();
}
inline ::google::protobuf::int32 GameStatsGuildUser::guildid() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.guildid)
  return guildid_;
}
inline void GameStatsGuildUser::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.guildid)
}

// required int32 donation = 3;
inline bool GameStatsGuildUser::has_donation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameStatsGuildUser::set_has_donation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameStatsGuildUser::clear_has_donation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameStatsGuildUser::clear_donation() {
  donation_ = 0;
  clear_has_donation();
}
inline ::google::protobuf::int32 GameStatsGuildUser::donation() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.donation)
  return donation_;
}
inline void GameStatsGuildUser::set_donation(::google::protobuf::int32 value) {
  set_has_donation();
  donation_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.donation)
}

// required sfixed64 donation_refreshtime = 4;
inline bool GameStatsGuildUser::has_donation_refreshtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameStatsGuildUser::set_has_donation_refreshtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameStatsGuildUser::clear_has_donation_refreshtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameStatsGuildUser::clear_donation_refreshtime() {
  donation_refreshtime_ = GOOGLE_LONGLONG(0);
  clear_has_donation_refreshtime();
}
inline ::google::protobuf::int64 GameStatsGuildUser::donation_refreshtime() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.donation_refreshtime)
  return donation_refreshtime_;
}
inline void GameStatsGuildUser::set_donation_refreshtime(::google::protobuf::int64 value) {
  set_has_donation_refreshtime();
  donation_refreshtime_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.donation_refreshtime)
}

// required int32 signin_state1 = 11;
inline bool GameStatsGuildUser::has_signin_state1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameStatsGuildUser::set_has_signin_state1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameStatsGuildUser::clear_has_signin_state1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameStatsGuildUser::clear_signin_state1() {
  signin_state1_ = 0;
  clear_has_signin_state1();
}
inline ::google::protobuf::int32 GameStatsGuildUser::signin_state1() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.signin_state1)
  return signin_state1_;
}
inline void GameStatsGuildUser::set_signin_state1(::google::protobuf::int32 value) {
  set_has_signin_state1();
  signin_state1_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.signin_state1)
}

// required sfixed64 signin_optime1 = 12;
inline bool GameStatsGuildUser::has_signin_optime1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameStatsGuildUser::set_has_signin_optime1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameStatsGuildUser::clear_has_signin_optime1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameStatsGuildUser::clear_signin_optime1() {
  signin_optime1_ = GOOGLE_LONGLONG(0);
  clear_has_signin_optime1();
}
inline ::google::protobuf::int64 GameStatsGuildUser::signin_optime1() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.signin_optime1)
  return signin_optime1_;
}
inline void GameStatsGuildUser::set_signin_optime1(::google::protobuf::int64 value) {
  set_has_signin_optime1();
  signin_optime1_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.signin_optime1)
}

// required int32 signin_state2 = 13;
inline bool GameStatsGuildUser::has_signin_state2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameStatsGuildUser::set_has_signin_state2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameStatsGuildUser::clear_has_signin_state2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameStatsGuildUser::clear_signin_state2() {
  signin_state2_ = 0;
  clear_has_signin_state2();
}
inline ::google::protobuf::int32 GameStatsGuildUser::signin_state2() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.signin_state2)
  return signin_state2_;
}
inline void GameStatsGuildUser::set_signin_state2(::google::protobuf::int32 value) {
  set_has_signin_state2();
  signin_state2_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.signin_state2)
}

// required sfixed64 signin_optime2 = 14;
inline bool GameStatsGuildUser::has_signin_optime2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameStatsGuildUser::set_has_signin_optime2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameStatsGuildUser::clear_has_signin_optime2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameStatsGuildUser::clear_signin_optime2() {
  signin_optime2_ = GOOGLE_LONGLONG(0);
  clear_has_signin_optime2();
}
inline ::google::protobuf::int64 GameStatsGuildUser::signin_optime2() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.signin_optime2)
  return signin_optime2_;
}
inline void GameStatsGuildUser::set_signin_optime2(::google::protobuf::int64 value) {
  set_has_signin_optime2();
  signin_optime2_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.signin_optime2)
}

// required int32 signin_state3 = 15;
inline bool GameStatsGuildUser::has_signin_state3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameStatsGuildUser::set_has_signin_state3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameStatsGuildUser::clear_has_signin_state3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameStatsGuildUser::clear_signin_state3() {
  signin_state3_ = 0;
  clear_has_signin_state3();
}
inline ::google::protobuf::int32 GameStatsGuildUser::signin_state3() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.signin_state3)
  return signin_state3_;
}
inline void GameStatsGuildUser::set_signin_state3(::google::protobuf::int32 value) {
  set_has_signin_state3();
  signin_state3_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.signin_state3)
}

// required sfixed64 signin_optime3 = 16;
inline bool GameStatsGuildUser::has_signin_optime3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GameStatsGuildUser::set_has_signin_optime3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GameStatsGuildUser::clear_has_signin_optime3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GameStatsGuildUser::clear_signin_optime3() {
  signin_optime3_ = GOOGLE_LONGLONG(0);
  clear_has_signin_optime3();
}
inline ::google::protobuf::int64 GameStatsGuildUser::signin_optime3() const {
  // @@protoc_insertion_point(field_get:db.GameStatsGuildUser.signin_optime3)
  return signin_optime3_;
}
inline void GameStatsGuildUser::set_signin_optime3(::google::protobuf::int64 value) {
  set_has_signin_optime3();
  signin_optime3_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsGuildUser.signin_optime3)
}

// -------------------------------------------------------------------

// UserStatsGuildCommon

// required bytes userid = 1;
inline bool UserStatsGuildCommon::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatsGuildCommon::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatsGuildCommon::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatsGuildCommon::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserStatsGuildCommon::userid() const {
  // @@protoc_insertion_point(field_get:db.UserStatsGuildCommon.userid)
  return userid_.Get();
}
inline void UserStatsGuildCommon::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserStatsGuildCommon.userid)
}
#if LANG_CXX11
inline void UserStatsGuildCommon::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserStatsGuildCommon.userid)
}
#endif
inline void UserStatsGuildCommon::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserStatsGuildCommon.userid)
}
inline void UserStatsGuildCommon::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserStatsGuildCommon.userid)
}
inline ::std::string* UserStatsGuildCommon::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserStatsGuildCommon.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserStatsGuildCommon::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserStatsGuildCommon.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserStatsGuildCommon::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserStatsGuildCommon.userid)
}
inline ::std::string* UserStatsGuildCommon::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserStatsGuildCommon.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserStatsGuildCommon::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserStatsGuildCommon.userid)
}

// required sfixed64 last_quit_guild_time = 2;
inline bool UserStatsGuildCommon::has_last_quit_guild_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserStatsGuildCommon::set_has_last_quit_guild_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserStatsGuildCommon::clear_has_last_quit_guild_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserStatsGuildCommon::clear_last_quit_guild_time() {
  last_quit_guild_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_quit_guild_time();
}
inline ::google::protobuf::int64 UserStatsGuildCommon::last_quit_guild_time() const {
  // @@protoc_insertion_point(field_get:db.UserStatsGuildCommon.last_quit_guild_time)
  return last_quit_guild_time_;
}
inline void UserStatsGuildCommon::set_last_quit_guild_time(::google::protobuf::int64 value) {
  set_has_last_quit_guild_time();
  last_quit_guild_time_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsGuildCommon.last_quit_guild_time)
}

// -------------------------------------------------------------------

// GameGuildTrack

// required uint64 owner_uuid = 1;
inline bool GameGuildTrack::has_owner_uuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameGuildTrack::set_has_owner_uuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameGuildTrack::clear_has_owner_uuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameGuildTrack::clear_owner_uuid() {
  owner_uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_owner_uuid();
}
inline ::google::protobuf::uint64 GameGuildTrack::owner_uuid() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.owner_uuid)
  return owner_uuid_;
}
inline void GameGuildTrack::set_owner_uuid(::google::protobuf::uint64 value) {
  set_has_owner_uuid();
  owner_uuid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.owner_uuid)
}

// required bytes owner_nick = 2;
inline bool GameGuildTrack::has_owner_nick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameGuildTrack::set_has_owner_nick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameGuildTrack::clear_has_owner_nick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameGuildTrack::clear_owner_nick() {
  owner_nick_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_owner_nick();
}
inline const ::std::string& GameGuildTrack::owner_nick() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.owner_nick)
  return owner_nick_.Get();
}
inline void GameGuildTrack::set_owner_nick(const ::std::string& value) {
  set_has_owner_nick();
  owner_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.owner_nick)
}
#if LANG_CXX11
inline void GameGuildTrack::set_owner_nick(::std::string&& value) {
  set_has_owner_nick();
  owner_nick_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGuildTrack.owner_nick)
}
#endif
inline void GameGuildTrack::set_owner_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_owner_nick();
  owner_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGuildTrack.owner_nick)
}
inline void GameGuildTrack::set_owner_nick(const void* value,
    size_t size) {
  set_has_owner_nick();
  owner_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGuildTrack.owner_nick)
}
inline ::std::string* GameGuildTrack::mutable_owner_nick() {
  set_has_owner_nick();
  // @@protoc_insertion_point(field_mutable:db.GameGuildTrack.owner_nick)
  return owner_nick_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGuildTrack::release_owner_nick() {
  // @@protoc_insertion_point(field_release:db.GameGuildTrack.owner_nick)
  if (!has_owner_nick()) {
    return NULL;
  }
  clear_has_owner_nick();
  return owner_nick_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGuildTrack::set_allocated_owner_nick(::std::string* owner_nick) {
  if (owner_nick != NULL) {
    set_has_owner_nick();
  } else {
    clear_has_owner_nick();
  }
  owner_nick_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_nick,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGuildTrack.owner_nick)
}
inline ::std::string* GameGuildTrack::unsafe_arena_release_owner_nick() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGuildTrack.owner_nick)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_owner_nick();
  return owner_nick_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGuildTrack::unsafe_arena_set_allocated_owner_nick(
    ::std::string* owner_nick) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (owner_nick != NULL) {
    set_has_owner_nick();
  } else {
    clear_has_owner_nick();
  }
  owner_nick_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      owner_nick, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGuildTrack.owner_nick)
}

// required int32 owner_title = 3;
inline bool GameGuildTrack::has_owner_title() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameGuildTrack::set_has_owner_title() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameGuildTrack::clear_has_owner_title() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameGuildTrack::clear_owner_title() {
  owner_title_ = 0;
  clear_has_owner_title();
}
inline ::google::protobuf::int32 GameGuildTrack::owner_title() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.owner_title)
  return owner_title_;
}
inline void GameGuildTrack::set_owner_title(::google::protobuf::int32 value) {
  set_has_owner_title();
  owner_title_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.owner_title)
}

// required int32 action_type = 4;
inline bool GameGuildTrack::has_action_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameGuildTrack::set_has_action_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameGuildTrack::clear_has_action_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameGuildTrack::clear_action_type() {
  action_type_ = 0;
  clear_has_action_type();
}
inline ::google::protobuf::int32 GameGuildTrack::action_type() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.action_type)
  return action_type_;
}
inline void GameGuildTrack::set_action_type(::google::protobuf::int32 value) {
  set_has_action_type();
  action_type_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.action_type)
}

// required int32 action = 5;
inline bool GameGuildTrack::has_action() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameGuildTrack::set_has_action() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameGuildTrack::clear_has_action() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameGuildTrack::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 GameGuildTrack::action() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.action)
  return action_;
}
inline void GameGuildTrack::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.action)
}

// required int32 guildid = 11;
inline bool GameGuildTrack::has_guildid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameGuildTrack::set_has_guildid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameGuildTrack::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameGuildTrack::clear_guildid() {
  guildid_ = 0;
  clear_has_guildid();
}
inline ::google::protobuf::int32 GameGuildTrack::guildid() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.guildid)
  return guildid_;
}
inline void GameGuildTrack::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.guildid)
}

// required bytes name = 12;
inline bool GameGuildTrack::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameGuildTrack::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameGuildTrack::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameGuildTrack::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& GameGuildTrack::name() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.name)
  return name_.Get();
}
inline void GameGuildTrack::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.name)
}
#if LANG_CXX11
inline void GameGuildTrack::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGuildTrack.name)
}
#endif
inline void GameGuildTrack::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGuildTrack.name)
}
inline void GameGuildTrack::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGuildTrack.name)
}
inline ::std::string* GameGuildTrack::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.GameGuildTrack.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGuildTrack::release_name() {
  // @@protoc_insertion_point(field_release:db.GameGuildTrack.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGuildTrack::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGuildTrack.name)
}
inline ::std::string* GameGuildTrack::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGuildTrack.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGuildTrack::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGuildTrack.name)
}

// required bytes announcement = 13;
inline bool GameGuildTrack::has_announcement() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameGuildTrack::set_has_announcement() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameGuildTrack::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameGuildTrack::clear_announcement() {
  announcement_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_announcement();
}
inline const ::std::string& GameGuildTrack::announcement() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.announcement)
  return announcement_.Get();
}
inline void GameGuildTrack::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.announcement)
}
#if LANG_CXX11
inline void GameGuildTrack::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGuildTrack.announcement)
}
#endif
inline void GameGuildTrack::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGuildTrack.announcement)
}
inline void GameGuildTrack::set_announcement(const void* value,
    size_t size) {
  set_has_announcement();
  announcement_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGuildTrack.announcement)
}
inline ::std::string* GameGuildTrack::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:db.GameGuildTrack.announcement)
  return announcement_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGuildTrack::release_announcement() {
  // @@protoc_insertion_point(field_release:db.GameGuildTrack.announcement)
  if (!has_announcement()) {
    return NULL;
  }
  clear_has_announcement();
  return announcement_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGuildTrack::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGuildTrack.announcement)
}
inline ::std::string* GameGuildTrack::unsafe_arena_release_announcement() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGuildTrack.announcement)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_announcement();
  return announcement_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGuildTrack::unsafe_arena_set_allocated_announcement(
    ::std::string* announcement) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      announcement, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGuildTrack.announcement)
}

// required uint64 target_uuid = 14;
inline bool GameGuildTrack::has_target_uuid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GameGuildTrack::set_has_target_uuid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GameGuildTrack::clear_has_target_uuid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GameGuildTrack::clear_target_uuid() {
  target_uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_target_uuid();
}
inline ::google::protobuf::uint64 GameGuildTrack::target_uuid() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.target_uuid)
  return target_uuid_;
}
inline void GameGuildTrack::set_target_uuid(::google::protobuf::uint64 value) {
  set_has_target_uuid();
  target_uuid_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.target_uuid)
}

// required bytes target_nick = 15;
inline bool GameGuildTrack::has_target_nick() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameGuildTrack::set_has_target_nick() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameGuildTrack::clear_has_target_nick() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameGuildTrack::clear_target_nick() {
  target_nick_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_target_nick();
}
inline const ::std::string& GameGuildTrack::target_nick() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.target_nick)
  return target_nick_.Get();
}
inline void GameGuildTrack::set_target_nick(const ::std::string& value) {
  set_has_target_nick();
  target_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.target_nick)
}
#if LANG_CXX11
inline void GameGuildTrack::set_target_nick(::std::string&& value) {
  set_has_target_nick();
  target_nick_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGuildTrack.target_nick)
}
#endif
inline void GameGuildTrack::set_target_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target_nick();
  target_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGuildTrack.target_nick)
}
inline void GameGuildTrack::set_target_nick(const void* value,
    size_t size) {
  set_has_target_nick();
  target_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGuildTrack.target_nick)
}
inline ::std::string* GameGuildTrack::mutable_target_nick() {
  set_has_target_nick();
  // @@protoc_insertion_point(field_mutable:db.GameGuildTrack.target_nick)
  return target_nick_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGuildTrack::release_target_nick() {
  // @@protoc_insertion_point(field_release:db.GameGuildTrack.target_nick)
  if (!has_target_nick()) {
    return NULL;
  }
  clear_has_target_nick();
  return target_nick_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGuildTrack::set_allocated_target_nick(::std::string* target_nick) {
  if (target_nick != NULL) {
    set_has_target_nick();
  } else {
    clear_has_target_nick();
  }
  target_nick_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_nick,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGuildTrack.target_nick)
}
inline ::std::string* GameGuildTrack::unsafe_arena_release_target_nick() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGuildTrack.target_nick)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_target_nick();
  return target_nick_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGuildTrack::unsafe_arena_set_allocated_target_nick(
    ::std::string* target_nick) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (target_nick != NULL) {
    set_has_target_nick();
  } else {
    clear_has_target_nick();
  }
  target_nick_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      target_nick, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGuildTrack.target_nick)
}

// required int32 target_title = 16;
inline bool GameGuildTrack::has_target_title() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GameGuildTrack::set_has_target_title() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GameGuildTrack::clear_has_target_title() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GameGuildTrack::clear_target_title() {
  target_title_ = 0;
  clear_has_target_title();
}
inline ::google::protobuf::int32 GameGuildTrack::target_title() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.target_title)
  return target_title_;
}
inline void GameGuildTrack::set_target_title(::google::protobuf::int32 value) {
  set_has_target_title();
  target_title_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.target_title)
}

// required int32 donation = 17;
inline bool GameGuildTrack::has_donation() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GameGuildTrack::set_has_donation() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GameGuildTrack::clear_has_donation() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GameGuildTrack::clear_donation() {
  donation_ = 0;
  clear_has_donation();
}
inline ::google::protobuf::int32 GameGuildTrack::donation() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.donation)
  return donation_;
}
inline void GameGuildTrack::set_donation(::google::protobuf::int32 value) {
  set_has_donation();
  donation_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.donation)
}

// required int32 building_type = 18;
inline bool GameGuildTrack::has_building_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GameGuildTrack::set_has_building_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GameGuildTrack::clear_has_building_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GameGuildTrack::clear_building_type() {
  building_type_ = 0;
  clear_has_building_type();
}
inline ::google::protobuf::int32 GameGuildTrack::building_type() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.building_type)
  return building_type_;
}
inline void GameGuildTrack::set_building_type(::google::protobuf::int32 value) {
  set_has_building_type();
  building_type_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.building_type)
}

// required int32 building_level = 19;
inline bool GameGuildTrack::has_building_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GameGuildTrack::set_has_building_level() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GameGuildTrack::clear_has_building_level() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GameGuildTrack::clear_building_level() {
  building_level_ = 0;
  clear_has_building_level();
}
inline ::google::protobuf::int32 GameGuildTrack::building_level() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.building_level)
  return building_level_;
}
inline void GameGuildTrack::set_building_level(::google::protobuf::int32 value) {
  set_has_building_level();
  building_level_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.building_level)
}

// required sfixed64 optime = 21;
inline bool GameGuildTrack::has_optime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GameGuildTrack::set_has_optime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GameGuildTrack::clear_has_optime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GameGuildTrack::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 GameGuildTrack::optime() const {
  // @@protoc_insertion_point(field_get:db.GameGuildTrack.optime)
  return optime_;
}
inline void GameGuildTrack::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.GameGuildTrack.optime)
}

// -------------------------------------------------------------------

// proc_i_load_game_guild_tracks_Parameter

// -------------------------------------------------------------------

// proc_i_load_game_guild_tracks_ReturnRecord

// required .db.GameGuildTrack item = 1;
inline bool proc_i_load_game_guild_tracks_ReturnRecord::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_game_guild_tracks_ReturnRecord::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_game_guild_tracks_ReturnRecord::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_game_guild_tracks_ReturnRecord::clear_item() {
  if (item_ != NULL) item_->Clear();
  clear_has_item();
}
inline const ::db::GameGuildTrack& proc_i_load_game_guild_tracks_ReturnRecord::_internal_item() const {
  return *item_;
}
inline const ::db::GameGuildTrack& proc_i_load_game_guild_tracks_ReturnRecord::item() const {
  const ::db::GameGuildTrack* p = item_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_game_guild_tracks.ReturnRecord.item)
  return p != NULL ? *p : *reinterpret_cast<const ::db::GameGuildTrack*>(
      &::db::_GameGuildTrack_default_instance_);
}
inline ::db::GameGuildTrack* proc_i_load_game_guild_tracks_ReturnRecord::release_item() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_game_guild_tracks.ReturnRecord.item)
  clear_has_item();
  ::db::GameGuildTrack* temp = item_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  item_ = NULL;
  return temp;
}
inline ::db::GameGuildTrack* proc_i_load_game_guild_tracks_ReturnRecord::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_game_guild_tracks.ReturnRecord.item)
  clear_has_item();
  ::db::GameGuildTrack* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::db::GameGuildTrack* proc_i_load_game_guild_tracks_ReturnRecord::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::db::GameGuildTrack>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_game_guild_tracks.ReturnRecord.item)
  return item_;
}
inline void proc_i_load_game_guild_tracks_ReturnRecord::set_allocated_item(::db::GameGuildTrack* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(item);
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
  } else {
    clear_has_item();
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_game_guild_tracks.ReturnRecord.item)
}

// -------------------------------------------------------------------

// proc_i_load_game_guild_tracks

// optional .db.proc_i_load_game_guild_tracks.Parameter param = 1;
inline bool proc_i_load_game_guild_tracks::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_game_guild_tracks::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_game_guild_tracks::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_game_guild_tracks::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_load_game_guild_tracks_Parameter& proc_i_load_game_guild_tracks::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_load_game_guild_tracks_Parameter& proc_i_load_game_guild_tracks::param() const {
  const ::db::proc_i_load_game_guild_tracks_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_game_guild_tracks.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_load_game_guild_tracks_Parameter*>(
      &::db::_proc_i_load_game_guild_tracks_Parameter_default_instance_);
}
inline ::db::proc_i_load_game_guild_tracks_Parameter* proc_i_load_game_guild_tracks::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_game_guild_tracks.param)
  clear_has_param();
  ::db::proc_i_load_game_guild_tracks_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_game_guild_tracks_Parameter* proc_i_load_game_guild_tracks::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_game_guild_tracks.param)
  clear_has_param();
  ::db::proc_i_load_game_guild_tracks_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_game_guild_tracks_Parameter* proc_i_load_game_guild_tracks::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_load_game_guild_tracks_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_game_guild_tracks.param)
  return param_;
}
inline void proc_i_load_game_guild_tracks::set_allocated_param(::db::proc_i_load_game_guild_tracks_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_game_guild_tracks.param)
}

// repeated .db.proc_i_load_game_guild_tracks.ReturnRecord return_record_list = 2;
inline int proc_i_load_game_guild_tracks::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_i_load_game_guild_tracks::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_i_load_game_guild_tracks_ReturnRecord* proc_i_load_game_guild_tracks::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_game_guild_tracks.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_guild_tracks_ReturnRecord >*
proc_i_load_game_guild_tracks::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_i_load_game_guild_tracks.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_i_load_game_guild_tracks_ReturnRecord& proc_i_load_game_guild_tracks::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_game_guild_tracks.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_i_load_game_guild_tracks_ReturnRecord* proc_i_load_game_guild_tracks::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_i_load_game_guild_tracks.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_guild_tracks_ReturnRecord >&
proc_i_load_game_guild_tracks::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_i_load_game_guild_tracks.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_i_save_game_guild_track_Parameter

// required .db.GameGuildTrack p_track = 1;
inline bool proc_i_save_game_guild_track_Parameter::has_p_track() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_game_guild_track_Parameter::set_has_p_track() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_game_guild_track_Parameter::clear_has_p_track() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_game_guild_track_Parameter::clear_p_track() {
  if (p_track_ != NULL) p_track_->Clear();
  clear_has_p_track();
}
inline const ::db::GameGuildTrack& proc_i_save_game_guild_track_Parameter::_internal_p_track() const {
  return *p_track_;
}
inline const ::db::GameGuildTrack& proc_i_save_game_guild_track_Parameter::p_track() const {
  const ::db::GameGuildTrack* p = p_track_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_game_guild_track.Parameter.p_track)
  return p != NULL ? *p : *reinterpret_cast<const ::db::GameGuildTrack*>(
      &::db::_GameGuildTrack_default_instance_);
}
inline ::db::GameGuildTrack* proc_i_save_game_guild_track_Parameter::release_p_track() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_game_guild_track.Parameter.p_track)
  clear_has_p_track();
  ::db::GameGuildTrack* temp = p_track_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  p_track_ = NULL;
  return temp;
}
inline ::db::GameGuildTrack* proc_i_save_game_guild_track_Parameter::unsafe_arena_release_p_track() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_game_guild_track.Parameter.p_track)
  clear_has_p_track();
  ::db::GameGuildTrack* temp = p_track_;
  p_track_ = NULL;
  return temp;
}
inline ::db::GameGuildTrack* proc_i_save_game_guild_track_Parameter::mutable_p_track() {
  set_has_p_track();
  if (p_track_ == NULL) {
    auto* p = CreateMaybeMessage<::db::GameGuildTrack>(GetArenaNoVirtual());
    p_track_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_game_guild_track.Parameter.p_track)
  return p_track_;
}
inline void proc_i_save_game_guild_track_Parameter::set_allocated_p_track(::db::GameGuildTrack* p_track) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete p_track_;
  }
  if (p_track) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(p_track);
    if (message_arena != submessage_arena) {
      p_track = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, p_track, submessage_arena);
    }
    set_has_p_track();
  } else {
    clear_has_p_track();
  }
  p_track_ = p_track;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_game_guild_track.Parameter.p_track)
}

// -------------------------------------------------------------------

// proc_i_save_game_guild_track

// optional .db.proc_i_save_game_guild_track.Parameter param = 1;
inline bool proc_i_save_game_guild_track::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_game_guild_track::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_game_guild_track::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_game_guild_track::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_save_game_guild_track_Parameter& proc_i_save_game_guild_track::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_save_game_guild_track_Parameter& proc_i_save_game_guild_track::param() const {
  const ::db::proc_i_save_game_guild_track_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_game_guild_track.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_save_game_guild_track_Parameter*>(
      &::db::_proc_i_save_game_guild_track_Parameter_default_instance_);
}
inline ::db::proc_i_save_game_guild_track_Parameter* proc_i_save_game_guild_track::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_game_guild_track.param)
  clear_has_param();
  ::db::proc_i_save_game_guild_track_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_game_guild_track_Parameter* proc_i_save_game_guild_track::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_game_guild_track.param)
  clear_has_param();
  ::db::proc_i_save_game_guild_track_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_game_guild_track_Parameter* proc_i_save_game_guild_track::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_save_game_guild_track_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_game_guild_track.param)
  return param_;
}
inline void proc_i_save_game_guild_track::set_allocated_param(::db::proc_i_save_game_guild_track_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_game_guild_track.param)
}

// -------------------------------------------------------------------

// proc_i_delete_game_guild_track_Parameter

// required int32 p_guildid = 1;
inline bool proc_i_delete_game_guild_track_Parameter::has_p_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_delete_game_guild_track_Parameter::set_has_p_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_delete_game_guild_track_Parameter::clear_has_p_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_delete_game_guild_track_Parameter::clear_p_guildid() {
  p_guildid_ = 0;
  clear_has_p_guildid();
}
inline ::google::protobuf::int32 proc_i_delete_game_guild_track_Parameter::p_guildid() const {
  // @@protoc_insertion_point(field_get:db.proc_i_delete_game_guild_track.Parameter.p_guildid)
  return p_guildid_;
}
inline void proc_i_delete_game_guild_track_Parameter::set_p_guildid(::google::protobuf::int32 value) {
  set_has_p_guildid();
  p_guildid_ = value;
  // @@protoc_insertion_point(field_set:db.proc_i_delete_game_guild_track.Parameter.p_guildid)
}

// -------------------------------------------------------------------

// proc_i_delete_game_guild_track

// optional .db.proc_i_delete_game_guild_track.Parameter param = 1;
inline bool proc_i_delete_game_guild_track::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_delete_game_guild_track::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_delete_game_guild_track::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_delete_game_guild_track::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_delete_game_guild_track_Parameter& proc_i_delete_game_guild_track::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_delete_game_guild_track_Parameter& proc_i_delete_game_guild_track::param() const {
  const ::db::proc_i_delete_game_guild_track_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_delete_game_guild_track.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_delete_game_guild_track_Parameter*>(
      &::db::_proc_i_delete_game_guild_track_Parameter_default_instance_);
}
inline ::db::proc_i_delete_game_guild_track_Parameter* proc_i_delete_game_guild_track::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_delete_game_guild_track.param)
  clear_has_param();
  ::db::proc_i_delete_game_guild_track_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_delete_game_guild_track_Parameter* proc_i_delete_game_guild_track::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_delete_game_guild_track.param)
  clear_has_param();
  ::db::proc_i_delete_game_guild_track_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_delete_game_guild_track_Parameter* proc_i_delete_game_guild_track::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_delete_game_guild_track_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_delete_game_guild_track.param)
  return param_;
}
inline void proc_i_delete_game_guild_track::set_allocated_param(::db::proc_i_delete_game_guild_track_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_delete_game_guild_track.param)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_GameGuild_2eproto
