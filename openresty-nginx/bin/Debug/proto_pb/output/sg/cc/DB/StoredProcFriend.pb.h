// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcFriend.proto

#ifndef PROTOBUF_INCLUDED_StoredProcFriend_2eproto
#define PROTOBUF_INCLUDED_StoredProcFriend_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto 

namespace protobuf_StoredProcFriend_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[40];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_StoredProcFriend_2eproto
namespace db {
class ConfigFriending;
class ConfigFriendingDefaultTypeInternal;
extern ConfigFriendingDefaultTypeInternal _ConfigFriending_default_instance_;
class ConfigFriendingList;
class ConfigFriendingListDefaultTypeInternal;
extern ConfigFriendingListDefaultTypeInternal _ConfigFriendingList_default_instance_;
class ConfigGameInvite;
class ConfigGameInviteDefaultTypeInternal;
extern ConfigGameInviteDefaultTypeInternal _ConfigGameInvite_default_instance_;
class ConfigGameInviteList;
class ConfigGameInviteListDefaultTypeInternal;
extern ConfigGameInviteListDefaultTypeInternal _ConfigGameInviteList_default_instance_;
class GameStatsUserFriend;
class GameStatsUserFriendDefaultTypeInternal;
extern GameStatsUserFriendDefaultTypeInternal _GameStatsUserFriend_default_instance_;
class GameStatsUserFriendList;
class GameStatsUserFriendListDefaultTypeInternal;
extern GameStatsUserFriendListDefaultTypeInternal _GameStatsUserFriendList_default_instance_;
class TopNRole;
class TopNRoleDefaultTypeInternal;
extern TopNRoleDefaultTypeInternal _TopNRole_default_instance_;
class TopNRoleList;
class TopNRoleListDefaultTypeInternal;
extern TopNRoleListDefaultTypeInternal _TopNRoleList_default_instance_;
class TopNRoleTeamMember;
class TopNRoleTeamMemberDefaultTypeInternal;
extern TopNRoleTeamMemberDefaultTypeInternal _TopNRoleTeamMember_default_instance_;
class TopNRoleTeamMemberList;
class TopNRoleTeamMemberListDefaultTypeInternal;
extern TopNRoleTeamMemberListDefaultTypeInternal _TopNRoleTeamMemberList_default_instance_;
class UserFriend;
class UserFriendDefaultTypeInternal;
extern UserFriendDefaultTypeInternal _UserFriend_default_instance_;
class UserFriendList;
class UserFriendListDefaultTypeInternal;
extern UserFriendListDefaultTypeInternal _UserFriendList_default_instance_;
class UserGameInvite;
class UserGameInviteDefaultTypeInternal;
extern UserGameInviteDefaultTypeInternal _UserGameInvite_default_instance_;
class UserGameInviteList;
class UserGameInviteListDefaultTypeInternal;
extern UserGameInviteListDefaultTypeInternal _UserGameInviteList_default_instance_;
class UserGameInviteReward;
class UserGameInviteRewardDefaultTypeInternal;
extern UserGameInviteRewardDefaultTypeInternal _UserGameInviteReward_default_instance_;
class UserGameInviteRewardList;
class UserGameInviteRewardListDefaultTypeInternal;
extern UserGameInviteRewardListDefaultTypeInternal _UserGameInviteRewardList_default_instance_;
class proc_i_load_top_n_roles;
class proc_i_load_top_n_rolesDefaultTypeInternal;
extern proc_i_load_top_n_rolesDefaultTypeInternal _proc_i_load_top_n_roles_default_instance_;
class proc_i_load_top_n_roles_Parameter;
class proc_i_load_top_n_roles_ParameterDefaultTypeInternal;
extern proc_i_load_top_n_roles_ParameterDefaultTypeInternal _proc_i_load_top_n_roles_Parameter_default_instance_;
class proc_i_load_top_n_roles_ReturnRecord;
class proc_i_load_top_n_roles_ReturnRecordDefaultTypeInternal;
extern proc_i_load_top_n_roles_ReturnRecordDefaultTypeInternal _proc_i_load_top_n_roles_ReturnRecord_default_instance_;
class proc_i_load_user_friends;
class proc_i_load_user_friendsDefaultTypeInternal;
extern proc_i_load_user_friendsDefaultTypeInternal _proc_i_load_user_friends_default_instance_;
class proc_i_load_user_friends_Parameter;
class proc_i_load_user_friends_ParameterDefaultTypeInternal;
extern proc_i_load_user_friends_ParameterDefaultTypeInternal _proc_i_load_user_friends_Parameter_default_instance_;
class proc_i_load_user_friends_ReturnRecord;
class proc_i_load_user_friends_ReturnRecordDefaultTypeInternal;
extern proc_i_load_user_friends_ReturnRecordDefaultTypeInternal _proc_i_load_user_friends_ReturnRecord_default_instance_;
class proc_i_load_user_game_invite_rewards;
class proc_i_load_user_game_invite_rewardsDefaultTypeInternal;
extern proc_i_load_user_game_invite_rewardsDefaultTypeInternal _proc_i_load_user_game_invite_rewards_default_instance_;
class proc_i_load_user_game_invite_rewards_Parameter;
class proc_i_load_user_game_invite_rewards_ParameterDefaultTypeInternal;
extern proc_i_load_user_game_invite_rewards_ParameterDefaultTypeInternal _proc_i_load_user_game_invite_rewards_Parameter_default_instance_;
class proc_i_load_user_game_invite_rewards_ReturnRecord;
class proc_i_load_user_game_invite_rewards_ReturnRecordDefaultTypeInternal;
extern proc_i_load_user_game_invite_rewards_ReturnRecordDefaultTypeInternal _proc_i_load_user_game_invite_rewards_ReturnRecord_default_instance_;
class proc_i_load_user_game_invites;
class proc_i_load_user_game_invitesDefaultTypeInternal;
extern proc_i_load_user_game_invitesDefaultTypeInternal _proc_i_load_user_game_invites_default_instance_;
class proc_i_load_user_game_invites_Parameter;
class proc_i_load_user_game_invites_ParameterDefaultTypeInternal;
extern proc_i_load_user_game_invites_ParameterDefaultTypeInternal _proc_i_load_user_game_invites_Parameter_default_instance_;
class proc_i_load_user_game_invites_ReturnRecord;
class proc_i_load_user_game_invites_ReturnRecordDefaultTypeInternal;
extern proc_i_load_user_game_invites_ReturnRecordDefaultTypeInternal _proc_i_load_user_game_invites_ReturnRecord_default_instance_;
class proc_i_save_user_friend;
class proc_i_save_user_friendDefaultTypeInternal;
extern proc_i_save_user_friendDefaultTypeInternal _proc_i_save_user_friend_default_instance_;
class proc_i_save_user_friend_Parameter;
class proc_i_save_user_friend_ParameterDefaultTypeInternal;
extern proc_i_save_user_friend_ParameterDefaultTypeInternal _proc_i_save_user_friend_Parameter_default_instance_;
class proc_i_save_user_game_invite;
class proc_i_save_user_game_inviteDefaultTypeInternal;
extern proc_i_save_user_game_inviteDefaultTypeInternal _proc_i_save_user_game_invite_default_instance_;
class proc_i_save_user_game_invite_Parameter;
class proc_i_save_user_game_invite_ParameterDefaultTypeInternal;
extern proc_i_save_user_game_invite_ParameterDefaultTypeInternal _proc_i_save_user_game_invite_Parameter_default_instance_;
class proc_i_save_user_game_invite_reward;
class proc_i_save_user_game_invite_rewardDefaultTypeInternal;
extern proc_i_save_user_game_invite_rewardDefaultTypeInternal _proc_i_save_user_game_invite_reward_default_instance_;
class proc_i_save_user_game_invite_reward_Parameter;
class proc_i_save_user_game_invite_reward_ParameterDefaultTypeInternal;
extern proc_i_save_user_game_invite_reward_ParameterDefaultTypeInternal _proc_i_save_user_game_invite_reward_Parameter_default_instance_;
class proc_load_config_friending;
class proc_load_config_friendingDefaultTypeInternal;
extern proc_load_config_friendingDefaultTypeInternal _proc_load_config_friending_default_instance_;
class proc_load_config_friending_Parameter;
class proc_load_config_friending_ParameterDefaultTypeInternal;
extern proc_load_config_friending_ParameterDefaultTypeInternal _proc_load_config_friending_Parameter_default_instance_;
class proc_load_config_friending_ReturnRecord;
class proc_load_config_friending_ReturnRecordDefaultTypeInternal;
extern proc_load_config_friending_ReturnRecordDefaultTypeInternal _proc_load_config_friending_ReturnRecord_default_instance_;
class proc_load_config_game_invite;
class proc_load_config_game_inviteDefaultTypeInternal;
extern proc_load_config_game_inviteDefaultTypeInternal _proc_load_config_game_invite_default_instance_;
class proc_load_config_game_invite_Parameter;
class proc_load_config_game_invite_ParameterDefaultTypeInternal;
extern proc_load_config_game_invite_ParameterDefaultTypeInternal _proc_load_config_game_invite_Parameter_default_instance_;
class proc_load_config_game_invite_ReturnRecord;
class proc_load_config_game_invite_ReturnRecordDefaultTypeInternal;
extern proc_load_config_game_invite_ReturnRecordDefaultTypeInternal _proc_load_config_game_invite_ReturnRecord_default_instance_;
}  // namespace db
namespace google {
namespace protobuf {
template<> ::db::ConfigFriending* Arena::CreateMaybeMessage<::db::ConfigFriending>(Arena*);
template<> ::db::ConfigFriendingList* Arena::CreateMaybeMessage<::db::ConfigFriendingList>(Arena*);
template<> ::db::ConfigGameInvite* Arena::CreateMaybeMessage<::db::ConfigGameInvite>(Arena*);
template<> ::db::ConfigGameInviteList* Arena::CreateMaybeMessage<::db::ConfigGameInviteList>(Arena*);
template<> ::db::GameStatsUserFriend* Arena::CreateMaybeMessage<::db::GameStatsUserFriend>(Arena*);
template<> ::db::GameStatsUserFriendList* Arena::CreateMaybeMessage<::db::GameStatsUserFriendList>(Arena*);
template<> ::db::TopNRole* Arena::CreateMaybeMessage<::db::TopNRole>(Arena*);
template<> ::db::TopNRoleList* Arena::CreateMaybeMessage<::db::TopNRoleList>(Arena*);
template<> ::db::TopNRoleTeamMember* Arena::CreateMaybeMessage<::db::TopNRoleTeamMember>(Arena*);
template<> ::db::TopNRoleTeamMemberList* Arena::CreateMaybeMessage<::db::TopNRoleTeamMemberList>(Arena*);
template<> ::db::UserFriend* Arena::CreateMaybeMessage<::db::UserFriend>(Arena*);
template<> ::db::UserFriendList* Arena::CreateMaybeMessage<::db::UserFriendList>(Arena*);
template<> ::db::UserGameInvite* Arena::CreateMaybeMessage<::db::UserGameInvite>(Arena*);
template<> ::db::UserGameInviteList* Arena::CreateMaybeMessage<::db::UserGameInviteList>(Arena*);
template<> ::db::UserGameInviteReward* Arena::CreateMaybeMessage<::db::UserGameInviteReward>(Arena*);
template<> ::db::UserGameInviteRewardList* Arena::CreateMaybeMessage<::db::UserGameInviteRewardList>(Arena*);
template<> ::db::proc_i_load_top_n_roles* Arena::CreateMaybeMessage<::db::proc_i_load_top_n_roles>(Arena*);
template<> ::db::proc_i_load_top_n_roles_Parameter* Arena::CreateMaybeMessage<::db::proc_i_load_top_n_roles_Parameter>(Arena*);
template<> ::db::proc_i_load_top_n_roles_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_i_load_top_n_roles_ReturnRecord>(Arena*);
template<> ::db::proc_i_load_user_friends* Arena::CreateMaybeMessage<::db::proc_i_load_user_friends>(Arena*);
template<> ::db::proc_i_load_user_friends_Parameter* Arena::CreateMaybeMessage<::db::proc_i_load_user_friends_Parameter>(Arena*);
template<> ::db::proc_i_load_user_friends_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_i_load_user_friends_ReturnRecord>(Arena*);
template<> ::db::proc_i_load_user_game_invite_rewards* Arena::CreateMaybeMessage<::db::proc_i_load_user_game_invite_rewards>(Arena*);
template<> ::db::proc_i_load_user_game_invite_rewards_Parameter* Arena::CreateMaybeMessage<::db::proc_i_load_user_game_invite_rewards_Parameter>(Arena*);
template<> ::db::proc_i_load_user_game_invite_rewards_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_i_load_user_game_invite_rewards_ReturnRecord>(Arena*);
template<> ::db::proc_i_load_user_game_invites* Arena::CreateMaybeMessage<::db::proc_i_load_user_game_invites>(Arena*);
template<> ::db::proc_i_load_user_game_invites_Parameter* Arena::CreateMaybeMessage<::db::proc_i_load_user_game_invites_Parameter>(Arena*);
template<> ::db::proc_i_load_user_game_invites_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_i_load_user_game_invites_ReturnRecord>(Arena*);
template<> ::db::proc_i_save_user_friend* Arena::CreateMaybeMessage<::db::proc_i_save_user_friend>(Arena*);
template<> ::db::proc_i_save_user_friend_Parameter* Arena::CreateMaybeMessage<::db::proc_i_save_user_friend_Parameter>(Arena*);
template<> ::db::proc_i_save_user_game_invite* Arena::CreateMaybeMessage<::db::proc_i_save_user_game_invite>(Arena*);
template<> ::db::proc_i_save_user_game_invite_Parameter* Arena::CreateMaybeMessage<::db::proc_i_save_user_game_invite_Parameter>(Arena*);
template<> ::db::proc_i_save_user_game_invite_reward* Arena::CreateMaybeMessage<::db::proc_i_save_user_game_invite_reward>(Arena*);
template<> ::db::proc_i_save_user_game_invite_reward_Parameter* Arena::CreateMaybeMessage<::db::proc_i_save_user_game_invite_reward_Parameter>(Arena*);
template<> ::db::proc_load_config_friending* Arena::CreateMaybeMessage<::db::proc_load_config_friending>(Arena*);
template<> ::db::proc_load_config_friending_Parameter* Arena::CreateMaybeMessage<::db::proc_load_config_friending_Parameter>(Arena*);
template<> ::db::proc_load_config_friending_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_load_config_friending_ReturnRecord>(Arena*);
template<> ::db::proc_load_config_game_invite* Arena::CreateMaybeMessage<::db::proc_load_config_game_invite>(Arena*);
template<> ::db::proc_load_config_game_invite_Parameter* Arena::CreateMaybeMessage<::db::proc_load_config_game_invite_Parameter>(Arena*);
template<> ::db::proc_load_config_game_invite_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_load_config_game_invite_ReturnRecord>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace db {

// ===================================================================

class TopNRole : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.TopNRole) */ {
 public:
  TopNRole();
  virtual ~TopNRole();

  TopNRole(const TopNRole& from);

  inline TopNRole& operator=(const TopNRole& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TopNRole(TopNRole&& from) noexcept
    : TopNRole() {
    *this = ::std::move(from);
  }

  inline TopNRole& operator=(TopNRole&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TopNRole& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TopNRole* internal_default_instance() {
    return reinterpret_cast<const TopNRole*>(
               &_TopNRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(TopNRole* other);
  void Swap(TopNRole* other);
  friend void swap(TopNRole& a, TopNRole& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TopNRole* New() const final {
    return CreateMaybeMessage<TopNRole>(NULL);
  }

  TopNRole* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TopNRole>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TopNRole& from);
  void MergeFrom(const TopNRole& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TopNRole* other);
  protected:
  explicit TopNRole(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes role_userid = 1;
  bool has_role_userid() const;
  void clear_role_userid();
  static const int kRoleUseridFieldNumber = 1;
  const ::std::string& role_userid() const;
  void set_role_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_role_userid(::std::string&& value);
  #endif
  void set_role_userid(const char* value);
  void set_role_userid(const void* value, size_t size);
  ::std::string* mutable_role_userid();
  ::std::string* release_role_userid();
  void set_allocated_role_userid(::std::string* role_userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_role_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_role_userid(
      ::std::string* role_userid);

  // required bytes role_nick = 11;
  bool has_role_nick() const;
  void clear_role_nick();
  static const int kRoleNickFieldNumber = 11;
  const ::std::string& role_nick() const;
  void set_role_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_role_nick(::std::string&& value);
  #endif
  void set_role_nick(const char* value);
  void set_role_nick(const void* value, size_t size);
  ::std::string* mutable_role_nick();
  ::std::string* release_role_nick();
  void set_allocated_role_nick(::std::string* role_nick);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_role_nick();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_role_nick(
      ::std::string* role_nick);

  // required bytes role_signature = 23;
  bool has_role_signature() const;
  void clear_role_signature();
  static const int kRoleSignatureFieldNumber = 23;
  const ::std::string& role_signature() const;
  void set_role_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_role_signature(::std::string&& value);
  #endif
  void set_role_signature(const char* value);
  void set_role_signature(const void* value, size_t size);
  ::std::string* mutable_role_signature();
  ::std::string* release_role_signature();
  void set_allocated_role_signature(::std::string* role_signature);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_role_signature();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_role_signature(
      ::std::string* role_signature);

  // required bytes role_guild_name = 32;
  bool has_role_guild_name() const;
  void clear_role_guild_name();
  static const int kRoleGuildNameFieldNumber = 32;
  const ::std::string& role_guild_name() const;
  void set_role_guild_name(const ::std::string& value);
  #if LANG_CXX11
  void set_role_guild_name(::std::string&& value);
  #endif
  void set_role_guild_name(const char* value);
  void set_role_guild_name(const void* value, size_t size);
  ::std::string* mutable_role_guild_name();
  ::std::string* release_role_guild_name();
  void set_allocated_role_guild_name(::std::string* role_guild_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_role_guild_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_role_guild_name(
      ::std::string* role_guild_name);

  // required bytes role_guild_badge = 33;
  bool has_role_guild_badge() const;
  void clear_role_guild_badge();
  static const int kRoleGuildBadgeFieldNumber = 33;
  const ::std::string& role_guild_badge() const;
  void set_role_guild_badge(const ::std::string& value);
  #if LANG_CXX11
  void set_role_guild_badge(::std::string&& value);
  #endif
  void set_role_guild_badge(const char* value);
  void set_role_guild_badge(const void* value, size_t size);
  ::std::string* mutable_role_guild_badge();
  ::std::string* release_role_guild_badge();
  void set_allocated_role_guild_badge(::std::string* role_guild_badge);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_role_guild_badge();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_role_guild_badge(
      ::std::string* role_guild_badge);

  // required int64 role_state = 3;
  bool has_role_state() const;
  void clear_role_state();
  static const int kRoleStateFieldNumber = 3;
  ::google::protobuf::int64 role_state() const;
  void set_role_state(::google::protobuf::int64 value);

  // required sfixed64 role_logintime = 4;
  bool has_role_logintime() const;
  void clear_role_logintime();
  static const int kRoleLogintimeFieldNumber = 4;
  ::google::protobuf::int64 role_logintime() const;
  void set_role_logintime(::google::protobuf::int64 value);

  // required int32 role_ticketid = 2;
  bool has_role_ticketid() const;
  void clear_role_ticketid();
  static const int kRoleTicketidFieldNumber = 2;
  ::google::protobuf::int32 role_ticketid() const;
  void set_role_ticketid(::google::protobuf::int32 value);

  // required int32 role_level = 12;
  bool has_role_level() const;
  void clear_role_level();
  static const int kRoleLevelFieldNumber = 12;
  ::google::protobuf::int32 role_level() const;
  void set_role_level(::google::protobuf::int32 value);

  // required int32 role_exp = 13;
  bool has_role_exp() const;
  void clear_role_exp();
  static const int kRoleExpFieldNumber = 13;
  ::google::protobuf::int32 role_exp() const;
  void set_role_exp(::google::protobuf::int32 value);

  // required int32 role_rank = 14;
  bool has_role_rank() const;
  void clear_role_rank();
  static const int kRoleRankFieldNumber = 14;
  ::google::protobuf::int32 role_rank() const;
  void set_role_rank(::google::protobuf::int32 value);

  // required int32 role_guild_title = 34;
  bool has_role_guild_title() const;
  void clear_role_guild_title();
  static const int kRoleGuildTitleFieldNumber = 34;
  ::google::protobuf::int32 role_guild_title() const;
  void set_role_guild_title(::google::protobuf::int32 value);

  // required int32 role_portrait = 21;
  bool has_role_portrait() const;
  void clear_role_portrait();
  static const int kRolePortraitFieldNumber = 21;
  ::google::protobuf::int32 role_portrait() const;
  void set_role_portrait(::google::protobuf::int32 value);

  // required int32 role_portrait_frame = 22;
  bool has_role_portrait_frame() const;
  void clear_role_portrait_frame();
  static const int kRolePortraitFrameFieldNumber = 22;
  ::google::protobuf::int32 role_portrait_frame() const;
  void set_role_portrait_frame(::google::protobuf::int32 value);

  // required int32 role_force = 24;
  bool has_role_force() const;
  void clear_role_force();
  static const int kRoleForceFieldNumber = 24;
  ::google::protobuf::int32 role_force() const;
  void set_role_force(::google::protobuf::int32 value);

  // required int32 role_guildid = 31;
  bool has_role_guildid() const;
  void clear_role_guildid();
  static const int kRoleGuildidFieldNumber = 31;
  ::google::protobuf::int32 role_guildid() const;
  void set_role_guildid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.TopNRole)
 private:
  void set_has_role_userid();
  void clear_has_role_userid();
  void set_has_role_ticketid();
  void clear_has_role_ticketid();
  void set_has_role_state();
  void clear_has_role_state();
  void set_has_role_logintime();
  void clear_has_role_logintime();
  void set_has_role_nick();
  void clear_has_role_nick();
  void set_has_role_level();
  void clear_has_role_level();
  void set_has_role_exp();
  void clear_has_role_exp();
  void set_has_role_rank();
  void clear_has_role_rank();
  void set_has_role_portrait();
  void clear_has_role_portrait();
  void set_has_role_portrait_frame();
  void clear_has_role_portrait_frame();
  void set_has_role_signature();
  void clear_has_role_signature();
  void set_has_role_force();
  void clear_has_role_force();
  void set_has_role_guildid();
  void clear_has_role_guildid();
  void set_has_role_guild_name();
  void clear_has_role_guild_name();
  void set_has_role_guild_badge();
  void clear_has_role_guild_badge();
  void set_has_role_guild_title();
  void clear_has_role_guild_title();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr role_userid_;
  ::google::protobuf::internal::ArenaStringPtr role_nick_;
  ::google::protobuf::internal::ArenaStringPtr role_signature_;
  ::google::protobuf::internal::ArenaStringPtr role_guild_name_;
  ::google::protobuf::internal::ArenaStringPtr role_guild_badge_;
  ::google::protobuf::int64 role_state_;
  ::google::protobuf::int64 role_logintime_;
  ::google::protobuf::int32 role_ticketid_;
  ::google::protobuf::int32 role_level_;
  ::google::protobuf::int32 role_exp_;
  ::google::protobuf::int32 role_rank_;
  ::google::protobuf::int32 role_guild_title_;
  ::google::protobuf::int32 role_portrait_;
  ::google::protobuf::int32 role_portrait_frame_;
  ::google::protobuf::int32 role_force_;
  ::google::protobuf::int32 role_guildid_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TopNRoleList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.TopNRoleList) */ {
 public:
  TopNRoleList();
  virtual ~TopNRoleList();

  TopNRoleList(const TopNRoleList& from);

  inline TopNRoleList& operator=(const TopNRoleList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TopNRoleList(TopNRoleList&& from) noexcept
    : TopNRoleList() {
    *this = ::std::move(from);
  }

  inline TopNRoleList& operator=(TopNRoleList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TopNRoleList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TopNRoleList* internal_default_instance() {
    return reinterpret_cast<const TopNRoleList*>(
               &_TopNRoleList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(TopNRoleList* other);
  void Swap(TopNRoleList* other);
  friend void swap(TopNRoleList& a, TopNRoleList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TopNRoleList* New() const final {
    return CreateMaybeMessage<TopNRoleList>(NULL);
  }

  TopNRoleList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TopNRoleList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TopNRoleList& from);
  void MergeFrom(const TopNRoleList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TopNRoleList* other);
  protected:
  explicit TopNRoleList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.TopNRole list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::TopNRole* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::TopNRole >*
      mutable_list();
  const ::db::TopNRole& list(int index) const;
  ::db::TopNRole* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::TopNRole >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.TopNRoleList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::TopNRole > list_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_top_n_roles_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_top_n_roles.Parameter) */ {
 public:
  proc_i_load_top_n_roles_Parameter();
  virtual ~proc_i_load_top_n_roles_Parameter();

  proc_i_load_top_n_roles_Parameter(const proc_i_load_top_n_roles_Parameter& from);

  inline proc_i_load_top_n_roles_Parameter& operator=(const proc_i_load_top_n_roles_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_top_n_roles_Parameter(proc_i_load_top_n_roles_Parameter&& from) noexcept
    : proc_i_load_top_n_roles_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_load_top_n_roles_Parameter& operator=(proc_i_load_top_n_roles_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_top_n_roles_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_top_n_roles_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_top_n_roles_Parameter*>(
               &_proc_i_load_top_n_roles_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(proc_i_load_top_n_roles_Parameter* other);
  void Swap(proc_i_load_top_n_roles_Parameter* other);
  friend void swap(proc_i_load_top_n_roles_Parameter& a, proc_i_load_top_n_roles_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_top_n_roles_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_load_top_n_roles_Parameter>(NULL);
  }

  proc_i_load_top_n_roles_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_top_n_roles_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_top_n_roles_Parameter& from);
  void MergeFrom(const proc_i_load_top_n_roles_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_top_n_roles_Parameter* other);
  protected:
  explicit proc_i_load_top_n_roles_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_i_load_top_n_roles.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_top_n_roles_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_top_n_roles.ReturnRecord) */ {
 public:
  proc_i_load_top_n_roles_ReturnRecord();
  virtual ~proc_i_load_top_n_roles_ReturnRecord();

  proc_i_load_top_n_roles_ReturnRecord(const proc_i_load_top_n_roles_ReturnRecord& from);

  inline proc_i_load_top_n_roles_ReturnRecord& operator=(const proc_i_load_top_n_roles_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_top_n_roles_ReturnRecord(proc_i_load_top_n_roles_ReturnRecord&& from) noexcept
    : proc_i_load_top_n_roles_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_i_load_top_n_roles_ReturnRecord& operator=(proc_i_load_top_n_roles_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_top_n_roles_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_top_n_roles_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_top_n_roles_ReturnRecord*>(
               &_proc_i_load_top_n_roles_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(proc_i_load_top_n_roles_ReturnRecord* other);
  void Swap(proc_i_load_top_n_roles_ReturnRecord* other);
  friend void swap(proc_i_load_top_n_roles_ReturnRecord& a, proc_i_load_top_n_roles_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_top_n_roles_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_i_load_top_n_roles_ReturnRecord>(NULL);
  }

  proc_i_load_top_n_roles_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_top_n_roles_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_top_n_roles_ReturnRecord& from);
  void MergeFrom(const proc_i_load_top_n_roles_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_top_n_roles_ReturnRecord* other);
  protected:
  explicit proc_i_load_top_n_roles_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.TopNRole item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  private:
  const ::db::TopNRole& _internal_item() const;
  public:
  const ::db::TopNRole& item() const;
  ::db::TopNRole* release_item();
  ::db::TopNRole* mutable_item();
  void set_allocated_item(::db::TopNRole* item);
  void unsafe_arena_set_allocated_item(
      ::db::TopNRole* item);
  ::db::TopNRole* unsafe_arena_release_item();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_top_n_roles.ReturnRecord)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::TopNRole* item_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_top_n_roles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_top_n_roles) */ {
 public:
  proc_i_load_top_n_roles();
  virtual ~proc_i_load_top_n_roles();

  proc_i_load_top_n_roles(const proc_i_load_top_n_roles& from);

  inline proc_i_load_top_n_roles& operator=(const proc_i_load_top_n_roles& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_top_n_roles(proc_i_load_top_n_roles&& from) noexcept
    : proc_i_load_top_n_roles() {
    *this = ::std::move(from);
  }

  inline proc_i_load_top_n_roles& operator=(proc_i_load_top_n_roles&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_top_n_roles& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_top_n_roles* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_top_n_roles*>(
               &_proc_i_load_top_n_roles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(proc_i_load_top_n_roles* other);
  void Swap(proc_i_load_top_n_roles* other);
  friend void swap(proc_i_load_top_n_roles& a, proc_i_load_top_n_roles& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_top_n_roles* New() const final {
    return CreateMaybeMessage<proc_i_load_top_n_roles>(NULL);
  }

  proc_i_load_top_n_roles* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_top_n_roles>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_top_n_roles& from);
  void MergeFrom(const proc_i_load_top_n_roles& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_top_n_roles* other);
  protected:
  explicit proc_i_load_top_n_roles(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_load_top_n_roles_Parameter Parameter;
  typedef proc_i_load_top_n_roles_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_i_load_top_n_roles.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_i_load_top_n_roles_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_top_n_roles_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_i_load_top_n_roles_ReturnRecord& return_record_list(int index) const;
  ::db::proc_i_load_top_n_roles_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_top_n_roles_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_i_load_top_n_roles.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_load_top_n_roles_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_load_top_n_roles_Parameter& param() const;
  ::db::proc_i_load_top_n_roles_Parameter* release_param();
  ::db::proc_i_load_top_n_roles_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_load_top_n_roles_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_load_top_n_roles_Parameter* param);
  ::db::proc_i_load_top_n_roles_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_top_n_roles)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_top_n_roles_ReturnRecord > return_record_list_;
  ::db::proc_i_load_top_n_roles_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TopNRoleTeamMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.TopNRoleTeamMember) */ {
 public:
  TopNRoleTeamMember();
  virtual ~TopNRoleTeamMember();

  TopNRoleTeamMember(const TopNRoleTeamMember& from);

  inline TopNRoleTeamMember& operator=(const TopNRoleTeamMember& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TopNRoleTeamMember(TopNRoleTeamMember&& from) noexcept
    : TopNRoleTeamMember() {
    *this = ::std::move(from);
  }

  inline TopNRoleTeamMember& operator=(TopNRoleTeamMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TopNRoleTeamMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TopNRoleTeamMember* internal_default_instance() {
    return reinterpret_cast<const TopNRoleTeamMember*>(
               &_TopNRoleTeamMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(TopNRoleTeamMember* other);
  void Swap(TopNRoleTeamMember* other);
  friend void swap(TopNRoleTeamMember& a, TopNRoleTeamMember& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TopNRoleTeamMember* New() const final {
    return CreateMaybeMessage<TopNRoleTeamMember>(NULL);
  }

  TopNRoleTeamMember* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TopNRoleTeamMember>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TopNRoleTeamMember& from);
  void MergeFrom(const TopNRoleTeamMember& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TopNRoleTeamMember* other);
  protected:
  explicit TopNRoleTeamMember(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ticketid = 1;
  bool has_ticketid() const;
  void clear_ticketid();
  static const int kTicketidFieldNumber = 1;
  ::google::protobuf::int32 ticketid() const;
  void set_ticketid(::google::protobuf::int32 value);

  // required int32 posid = 2;
  bool has_posid() const;
  void clear_posid();
  static const int kPosidFieldNumber = 2;
  ::google::protobuf::int32 posid() const;
  void set_posid(::google::protobuf::int32 value);

  // required uint64 member_typeid = 4;
  bool has_member_typeid() const;
  void clear_member_typeid();
  static const int kMemberTypeidFieldNumber = 4;
  ::google::protobuf::uint64 member_typeid() const;
  void set_member_typeid(::google::protobuf::uint64 value);

  // required int32 memberid = 3;
  bool has_memberid() const;
  void clear_memberid();
  static const int kMemberidFieldNumber = 3;
  ::google::protobuf::int32 memberid() const;
  void set_memberid(::google::protobuf::int32 value);

  // required int32 member_level = 5;
  bool has_member_level() const;
  void clear_member_level();
  static const int kMemberLevelFieldNumber = 5;
  ::google::protobuf::int32 member_level() const;
  void set_member_level(::google::protobuf::int32 value);

  // required int32 member_star = 6;
  bool has_member_star() const;
  void clear_member_star();
  static const int kMemberStarFieldNumber = 6;
  ::google::protobuf::int32 member_star() const;
  void set_member_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.TopNRoleTeamMember)
 private:
  void set_has_ticketid();
  void clear_has_ticketid();
  void set_has_posid();
  void clear_has_posid();
  void set_has_memberid();
  void clear_has_memberid();
  void set_has_member_typeid();
  void clear_has_member_typeid();
  void set_has_member_level();
  void clear_has_member_level();
  void set_has_member_star();
  void clear_has_member_star();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ticketid_;
  ::google::protobuf::int32 posid_;
  ::google::protobuf::uint64 member_typeid_;
  ::google::protobuf::int32 memberid_;
  ::google::protobuf::int32 member_level_;
  ::google::protobuf::int32 member_star_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TopNRoleTeamMemberList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.TopNRoleTeamMemberList) */ {
 public:
  TopNRoleTeamMemberList();
  virtual ~TopNRoleTeamMemberList();

  TopNRoleTeamMemberList(const TopNRoleTeamMemberList& from);

  inline TopNRoleTeamMemberList& operator=(const TopNRoleTeamMemberList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TopNRoleTeamMemberList(TopNRoleTeamMemberList&& from) noexcept
    : TopNRoleTeamMemberList() {
    *this = ::std::move(from);
  }

  inline TopNRoleTeamMemberList& operator=(TopNRoleTeamMemberList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TopNRoleTeamMemberList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TopNRoleTeamMemberList* internal_default_instance() {
    return reinterpret_cast<const TopNRoleTeamMemberList*>(
               &_TopNRoleTeamMemberList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(TopNRoleTeamMemberList* other);
  void Swap(TopNRoleTeamMemberList* other);
  friend void swap(TopNRoleTeamMemberList& a, TopNRoleTeamMemberList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TopNRoleTeamMemberList* New() const final {
    return CreateMaybeMessage<TopNRoleTeamMemberList>(NULL);
  }

  TopNRoleTeamMemberList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TopNRoleTeamMemberList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TopNRoleTeamMemberList& from);
  void MergeFrom(const TopNRoleTeamMemberList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TopNRoleTeamMemberList* other);
  protected:
  explicit TopNRoleTeamMemberList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.TopNRoleTeamMember list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::TopNRoleTeamMember* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::TopNRoleTeamMember >*
      mutable_list();
  const ::db::TopNRoleTeamMember& list(int index) const;
  ::db::TopNRoleTeamMember* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::TopNRoleTeamMember >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.TopNRoleTeamMemberList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::TopNRoleTeamMember > list_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigFriending : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigFriending) */ {
 public:
  ConfigFriending();
  virtual ~ConfigFriending();

  ConfigFriending(const ConfigFriending& from);

  inline ConfigFriending& operator=(const ConfigFriending& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigFriending(ConfigFriending&& from) noexcept
    : ConfigFriending() {
    *this = ::std::move(from);
  }

  inline ConfigFriending& operator=(ConfigFriending&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFriending& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigFriending* internal_default_instance() {
    return reinterpret_cast<const ConfigFriending*>(
               &_ConfigFriending_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ConfigFriending* other);
  void Swap(ConfigFriending* other);
  friend void swap(ConfigFriending& a, ConfigFriending& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigFriending* New() const final {
    return CreateMaybeMessage<ConfigFriending>(NULL);
  }

  ConfigFriending* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigFriending>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigFriending& from);
  void MergeFrom(const ConfigFriending& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigFriending* other);
  protected:
  explicit ConfigFriending(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 candidate_num_max = 2;
  bool has_candidate_num_max() const;
  void clear_candidate_num_max();
  static const int kCandidateNumMaxFieldNumber = 2;
  ::google::protobuf::int32 candidate_num_max() const;
  void set_candidate_num_max(::google::protobuf::int32 value);

  // required int32 adding_num_max = 3;
  bool has_adding_num_max() const;
  void clear_adding_num_max();
  static const int kAddingNumMaxFieldNumber = 3;
  ::google::protobuf::int32 adding_num_max() const;
  void set_adding_num_max(::google::protobuf::int32 value);

  // required int32 confirming_num_max = 4;
  bool has_confirming_num_max() const;
  void clear_confirming_num_max();
  static const int kConfirmingNumMaxFieldNumber = 4;
  ::google::protobuf::int32 confirming_num_max() const;
  void set_confirming_num_max(::google::protobuf::int32 value);

  // required int32 ok_num_max = 5;
  bool has_ok_num_max() const;
  void clear_ok_num_max();
  static const int kOkNumMaxFieldNumber = 5;
  ::google::protobuf::int32 ok_num_max() const;
  void set_ok_num_max(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigFriending)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_candidate_num_max();
  void clear_has_candidate_num_max();
  void set_has_adding_num_max();
  void clear_has_adding_num_max();
  void set_has_confirming_num_max();
  void clear_has_confirming_num_max();
  void set_has_ok_num_max();
  void clear_has_ok_num_max();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 candidate_num_max_;
  ::google::protobuf::int32 adding_num_max_;
  ::google::protobuf::int32 confirming_num_max_;
  ::google::protobuf::int32 ok_num_max_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigFriendingList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigFriendingList) */ {
 public:
  ConfigFriendingList();
  virtual ~ConfigFriendingList();

  ConfigFriendingList(const ConfigFriendingList& from);

  inline ConfigFriendingList& operator=(const ConfigFriendingList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigFriendingList(ConfigFriendingList&& from) noexcept
    : ConfigFriendingList() {
    *this = ::std::move(from);
  }

  inline ConfigFriendingList& operator=(ConfigFriendingList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFriendingList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigFriendingList* internal_default_instance() {
    return reinterpret_cast<const ConfigFriendingList*>(
               &_ConfigFriendingList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(ConfigFriendingList* other);
  void Swap(ConfigFriendingList* other);
  friend void swap(ConfigFriendingList& a, ConfigFriendingList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigFriendingList* New() const final {
    return CreateMaybeMessage<ConfigFriendingList>(NULL);
  }

  ConfigFriendingList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigFriendingList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigFriendingList& from);
  void MergeFrom(const ConfigFriendingList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigFriendingList* other);
  protected:
  explicit ConfigFriendingList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigFriending list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigFriending* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigFriending >*
      mutable_list();
  const ::db::ConfigFriending& list(int index) const;
  ::db::ConfigFriending* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigFriending >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigFriendingList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigFriending > list_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGameInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGameInvite) */ {
 public:
  ConfigGameInvite();
  virtual ~ConfigGameInvite();

  ConfigGameInvite(const ConfigGameInvite& from);

  inline ConfigGameInvite& operator=(const ConfigGameInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGameInvite(ConfigGameInvite&& from) noexcept
    : ConfigGameInvite() {
    *this = ::std::move(from);
  }

  inline ConfigGameInvite& operator=(ConfigGameInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGameInvite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGameInvite* internal_default_instance() {
    return reinterpret_cast<const ConfigGameInvite*>(
               &_ConfigGameInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(ConfigGameInvite* other);
  void Swap(ConfigGameInvite* other);
  friend void swap(ConfigGameInvite& a, ConfigGameInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGameInvite* New() const final {
    return CreateMaybeMessage<ConfigGameInvite>(NULL);
  }

  ConfigGameInvite* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGameInvite>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGameInvite& from);
  void MergeFrom(const ConfigGameInvite& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGameInvite* other);
  protected:
  explicit ConfigGameInvite(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes reward = 2;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 cond_game_invite_ok_role_level = 11;
  bool has_cond_game_invite_ok_role_level() const;
  void clear_cond_game_invite_ok_role_level();
  static const int kCondGameInviteOkRoleLevelFieldNumber = 11;
  ::google::protobuf::int32 cond_game_invite_ok_role_level() const;
  void set_cond_game_invite_ok_role_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGameInvite)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_reward();
  void clear_has_reward();
  void set_has_cond_game_invite_ok_role_level();
  void clear_has_cond_game_invite_ok_role_level();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cond_game_invite_ok_role_level_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGameInviteList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGameInviteList) */ {
 public:
  ConfigGameInviteList();
  virtual ~ConfigGameInviteList();

  ConfigGameInviteList(const ConfigGameInviteList& from);

  inline ConfigGameInviteList& operator=(const ConfigGameInviteList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGameInviteList(ConfigGameInviteList&& from) noexcept
    : ConfigGameInviteList() {
    *this = ::std::move(from);
  }

  inline ConfigGameInviteList& operator=(ConfigGameInviteList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGameInviteList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGameInviteList* internal_default_instance() {
    return reinterpret_cast<const ConfigGameInviteList*>(
               &_ConfigGameInviteList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(ConfigGameInviteList* other);
  void Swap(ConfigGameInviteList* other);
  friend void swap(ConfigGameInviteList& a, ConfigGameInviteList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGameInviteList* New() const final {
    return CreateMaybeMessage<ConfigGameInviteList>(NULL);
  }

  ConfigGameInviteList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGameInviteList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGameInviteList& from);
  void MergeFrom(const ConfigGameInviteList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGameInviteList* other);
  protected:
  explicit ConfigGameInviteList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGameInvite list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGameInvite* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGameInvite >*
      mutable_list();
  const ::db::ConfigGameInvite& list(int index) const;
  ::db::ConfigGameInvite* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGameInvite >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGameInviteList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGameInvite > list_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_friending_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_friending.Parameter) */ {
 public:
  proc_load_config_friending_Parameter();
  virtual ~proc_load_config_friending_Parameter();

  proc_load_config_friending_Parameter(const proc_load_config_friending_Parameter& from);

  inline proc_load_config_friending_Parameter& operator=(const proc_load_config_friending_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_friending_Parameter(proc_load_config_friending_Parameter&& from) noexcept
    : proc_load_config_friending_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_load_config_friending_Parameter& operator=(proc_load_config_friending_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_friending_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_friending_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_friending_Parameter*>(
               &_proc_load_config_friending_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(proc_load_config_friending_Parameter* other);
  void Swap(proc_load_config_friending_Parameter* other);
  friend void swap(proc_load_config_friending_Parameter& a, proc_load_config_friending_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_friending_Parameter* New() const final {
    return CreateMaybeMessage<proc_load_config_friending_Parameter>(NULL);
  }

  proc_load_config_friending_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_friending_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_friending_Parameter& from);
  void MergeFrom(const proc_load_config_friending_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_friending_Parameter* other);
  protected:
  explicit proc_load_config_friending_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_load_config_friending.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_friending_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_friending.ReturnRecord) */ {
 public:
  proc_load_config_friending_ReturnRecord();
  virtual ~proc_load_config_friending_ReturnRecord();

  proc_load_config_friending_ReturnRecord(const proc_load_config_friending_ReturnRecord& from);

  inline proc_load_config_friending_ReturnRecord& operator=(const proc_load_config_friending_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_friending_ReturnRecord(proc_load_config_friending_ReturnRecord&& from) noexcept
    : proc_load_config_friending_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_load_config_friending_ReturnRecord& operator=(proc_load_config_friending_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_friending_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_friending_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_friending_ReturnRecord*>(
               &_proc_load_config_friending_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(proc_load_config_friending_ReturnRecord* other);
  void Swap(proc_load_config_friending_ReturnRecord* other);
  friend void swap(proc_load_config_friending_ReturnRecord& a, proc_load_config_friending_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_friending_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_load_config_friending_ReturnRecord>(NULL);
  }

  proc_load_config_friending_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_friending_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_friending_ReturnRecord& from);
  void MergeFrom(const proc_load_config_friending_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_friending_ReturnRecord* other);
  protected:
  explicit proc_load_config_friending_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.ConfigFriending cfg = 1;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 1;
  private:
  const ::db::ConfigFriending& _internal_cfg() const;
  public:
  const ::db::ConfigFriending& cfg() const;
  ::db::ConfigFriending* release_cfg();
  ::db::ConfigFriending* mutable_cfg();
  void set_allocated_cfg(::db::ConfigFriending* cfg);
  void unsafe_arena_set_allocated_cfg(
      ::db::ConfigFriending* cfg);
  ::db::ConfigFriending* unsafe_arena_release_cfg();

  // @@protoc_insertion_point(class_scope:db.proc_load_config_friending.ReturnRecord)
 private:
  void set_has_cfg();
  void clear_has_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::ConfigFriending* cfg_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_friending : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_friending) */ {
 public:
  proc_load_config_friending();
  virtual ~proc_load_config_friending();

  proc_load_config_friending(const proc_load_config_friending& from);

  inline proc_load_config_friending& operator=(const proc_load_config_friending& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_friending(proc_load_config_friending&& from) noexcept
    : proc_load_config_friending() {
    *this = ::std::move(from);
  }

  inline proc_load_config_friending& operator=(proc_load_config_friending&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_friending& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_friending* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_friending*>(
               &_proc_load_config_friending_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(proc_load_config_friending* other);
  void Swap(proc_load_config_friending* other);
  friend void swap(proc_load_config_friending& a, proc_load_config_friending& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_friending* New() const final {
    return CreateMaybeMessage<proc_load_config_friending>(NULL);
  }

  proc_load_config_friending* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_friending>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_friending& from);
  void MergeFrom(const proc_load_config_friending& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_friending* other);
  protected:
  explicit proc_load_config_friending(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_load_config_friending_Parameter Parameter;
  typedef proc_load_config_friending_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_load_config_friending.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_load_config_friending_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_friending_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_load_config_friending_ReturnRecord& return_record_list(int index) const;
  ::db::proc_load_config_friending_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_friending_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_load_config_friending.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_load_config_friending_Parameter& _internal_param() const;
  public:
  const ::db::proc_load_config_friending_Parameter& param() const;
  ::db::proc_load_config_friending_Parameter* release_param();
  ::db::proc_load_config_friending_Parameter* mutable_param();
  void set_allocated_param(::db::proc_load_config_friending_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_load_config_friending_Parameter* param);
  ::db::proc_load_config_friending_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_load_config_friending)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_friending_ReturnRecord > return_record_list_;
  ::db::proc_load_config_friending_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_game_invite_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_game_invite.Parameter) */ {
 public:
  proc_load_config_game_invite_Parameter();
  virtual ~proc_load_config_game_invite_Parameter();

  proc_load_config_game_invite_Parameter(const proc_load_config_game_invite_Parameter& from);

  inline proc_load_config_game_invite_Parameter& operator=(const proc_load_config_game_invite_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_game_invite_Parameter(proc_load_config_game_invite_Parameter&& from) noexcept
    : proc_load_config_game_invite_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_load_config_game_invite_Parameter& operator=(proc_load_config_game_invite_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_game_invite_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_game_invite_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_game_invite_Parameter*>(
               &_proc_load_config_game_invite_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(proc_load_config_game_invite_Parameter* other);
  void Swap(proc_load_config_game_invite_Parameter* other);
  friend void swap(proc_load_config_game_invite_Parameter& a, proc_load_config_game_invite_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_game_invite_Parameter* New() const final {
    return CreateMaybeMessage<proc_load_config_game_invite_Parameter>(NULL);
  }

  proc_load_config_game_invite_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_game_invite_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_game_invite_Parameter& from);
  void MergeFrom(const proc_load_config_game_invite_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_game_invite_Parameter* other);
  protected:
  explicit proc_load_config_game_invite_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_load_config_game_invite.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_game_invite_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_game_invite.ReturnRecord) */ {
 public:
  proc_load_config_game_invite_ReturnRecord();
  virtual ~proc_load_config_game_invite_ReturnRecord();

  proc_load_config_game_invite_ReturnRecord(const proc_load_config_game_invite_ReturnRecord& from);

  inline proc_load_config_game_invite_ReturnRecord& operator=(const proc_load_config_game_invite_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_game_invite_ReturnRecord(proc_load_config_game_invite_ReturnRecord&& from) noexcept
    : proc_load_config_game_invite_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_load_config_game_invite_ReturnRecord& operator=(proc_load_config_game_invite_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_game_invite_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_game_invite_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_game_invite_ReturnRecord*>(
               &_proc_load_config_game_invite_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(proc_load_config_game_invite_ReturnRecord* other);
  void Swap(proc_load_config_game_invite_ReturnRecord* other);
  friend void swap(proc_load_config_game_invite_ReturnRecord& a, proc_load_config_game_invite_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_game_invite_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_load_config_game_invite_ReturnRecord>(NULL);
  }

  proc_load_config_game_invite_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_game_invite_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_game_invite_ReturnRecord& from);
  void MergeFrom(const proc_load_config_game_invite_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_game_invite_ReturnRecord* other);
  protected:
  explicit proc_load_config_game_invite_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.ConfigGameInvite cfg = 1;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 1;
  private:
  const ::db::ConfigGameInvite& _internal_cfg() const;
  public:
  const ::db::ConfigGameInvite& cfg() const;
  ::db::ConfigGameInvite* release_cfg();
  ::db::ConfigGameInvite* mutable_cfg();
  void set_allocated_cfg(::db::ConfigGameInvite* cfg);
  void unsafe_arena_set_allocated_cfg(
      ::db::ConfigGameInvite* cfg);
  ::db::ConfigGameInvite* unsafe_arena_release_cfg();

  // @@protoc_insertion_point(class_scope:db.proc_load_config_game_invite.ReturnRecord)
 private:
  void set_has_cfg();
  void clear_has_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::ConfigGameInvite* cfg_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_game_invite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_game_invite) */ {
 public:
  proc_load_config_game_invite();
  virtual ~proc_load_config_game_invite();

  proc_load_config_game_invite(const proc_load_config_game_invite& from);

  inline proc_load_config_game_invite& operator=(const proc_load_config_game_invite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_game_invite(proc_load_config_game_invite&& from) noexcept
    : proc_load_config_game_invite() {
    *this = ::std::move(from);
  }

  inline proc_load_config_game_invite& operator=(proc_load_config_game_invite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_game_invite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_game_invite* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_game_invite*>(
               &_proc_load_config_game_invite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(proc_load_config_game_invite* other);
  void Swap(proc_load_config_game_invite* other);
  friend void swap(proc_load_config_game_invite& a, proc_load_config_game_invite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_game_invite* New() const final {
    return CreateMaybeMessage<proc_load_config_game_invite>(NULL);
  }

  proc_load_config_game_invite* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_game_invite>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_game_invite& from);
  void MergeFrom(const proc_load_config_game_invite& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_game_invite* other);
  protected:
  explicit proc_load_config_game_invite(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_load_config_game_invite_Parameter Parameter;
  typedef proc_load_config_game_invite_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_load_config_game_invite.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_load_config_game_invite_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_game_invite_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_load_config_game_invite_ReturnRecord& return_record_list(int index) const;
  ::db::proc_load_config_game_invite_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_game_invite_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_load_config_game_invite.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_load_config_game_invite_Parameter& _internal_param() const;
  public:
  const ::db::proc_load_config_game_invite_Parameter& param() const;
  ::db::proc_load_config_game_invite_Parameter* release_param();
  ::db::proc_load_config_game_invite_Parameter* mutable_param();
  void set_allocated_param(::db::proc_load_config_game_invite_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_load_config_game_invite_Parameter* param);
  ::db::proc_load_config_game_invite_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_load_config_game_invite)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_game_invite_ReturnRecord > return_record_list_;
  ::db::proc_load_config_game_invite_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserFriend) */ {
 public:
  UserFriend();
  virtual ~UserFriend();

  UserFriend(const UserFriend& from);

  inline UserFriend& operator=(const UserFriend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserFriend(UserFriend&& from) noexcept
    : UserFriend() {
    *this = ::std::move(from);
  }

  inline UserFriend& operator=(UserFriend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserFriend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserFriend* internal_default_instance() {
    return reinterpret_cast<const UserFriend*>(
               &_UserFriend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(UserFriend* other);
  void Swap(UserFriend* other);
  friend void swap(UserFriend& a, UserFriend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserFriend* New() const final {
    return CreateMaybeMessage<UserFriend>(NULL);
  }

  UserFriend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserFriend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserFriend& from);
  void MergeFrom(const UserFriend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserFriend* other);
  protected:
  explicit UserFriend(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 owner_ticketid = 1;
  bool has_owner_ticketid() const;
  void clear_owner_ticketid();
  static const int kOwnerTicketidFieldNumber = 1;
  ::google::protobuf::int32 owner_ticketid() const;
  void set_owner_ticketid(::google::protobuf::int32 value);

  // required int32 friend_ticketid = 2;
  bool has_friend_ticketid() const;
  void clear_friend_ticketid();
  static const int kFriendTicketidFieldNumber = 2;
  ::google::protobuf::int32 friend_ticketid() const;
  void set_friend_ticketid(::google::protobuf::int32 value);

  // optional sfixed64 optime = 4;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 4;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // required int32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.UserFriend)
 private:
  void set_has_owner_ticketid();
  void clear_has_owner_ticketid();
  void set_has_friend_ticketid();
  void clear_has_friend_ticketid();
  void set_has_state();
  void clear_has_state();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 owner_ticketid_;
  ::google::protobuf::int32 friend_ticketid_;
  ::google::protobuf::int64 optime_;
  ::google::protobuf::int32 state_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserFriendList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserFriendList) */ {
 public:
  UserFriendList();
  virtual ~UserFriendList();

  UserFriendList(const UserFriendList& from);

  inline UserFriendList& operator=(const UserFriendList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserFriendList(UserFriendList&& from) noexcept
    : UserFriendList() {
    *this = ::std::move(from);
  }

  inline UserFriendList& operator=(UserFriendList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserFriendList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserFriendList* internal_default_instance() {
    return reinterpret_cast<const UserFriendList*>(
               &_UserFriendList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(UserFriendList* other);
  void Swap(UserFriendList* other);
  friend void swap(UserFriendList& a, UserFriendList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserFriendList* New() const final {
    return CreateMaybeMessage<UserFriendList>(NULL);
  }

  UserFriendList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserFriendList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserFriendList& from);
  void MergeFrom(const UserFriendList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserFriendList* other);
  protected:
  explicit UserFriendList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.UserFriend list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::UserFriend* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::UserFriend >*
      mutable_list();
  const ::db::UserFriend& list(int index) const;
  ::db::UserFriend* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::UserFriend >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.UserFriendList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::UserFriend > list_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameStatsUserFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameStatsUserFriend) */ {
 public:
  GameStatsUserFriend();
  virtual ~GameStatsUserFriend();

  GameStatsUserFriend(const GameStatsUserFriend& from);

  inline GameStatsUserFriend& operator=(const GameStatsUserFriend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameStatsUserFriend(GameStatsUserFriend&& from) noexcept
    : GameStatsUserFriend() {
    *this = ::std::move(from);
  }

  inline GameStatsUserFriend& operator=(GameStatsUserFriend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStatsUserFriend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameStatsUserFriend* internal_default_instance() {
    return reinterpret_cast<const GameStatsUserFriend*>(
               &_GameStatsUserFriend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(GameStatsUserFriend* other);
  void Swap(GameStatsUserFriend* other);
  friend void swap(GameStatsUserFriend& a, GameStatsUserFriend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameStatsUserFriend* New() const final {
    return CreateMaybeMessage<GameStatsUserFriend>(NULL);
  }

  GameStatsUserFriend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameStatsUserFriend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameStatsUserFriend& from);
  void MergeFrom(const GameStatsUserFriend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameStatsUserFriend* other);
  protected:
  explicit GameStatsUserFriend(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 owner_ticketid = 1;
  bool has_owner_ticketid() const;
  void clear_owner_ticketid();
  static const int kOwnerTicketidFieldNumber = 1;
  ::google::protobuf::int32 owner_ticketid() const;
  void set_owner_ticketid(::google::protobuf::int32 value);

  // required int32 friend_ticketid = 2;
  bool has_friend_ticketid() const;
  void clear_friend_ticketid();
  static const int kFriendTicketidFieldNumber = 2;
  ::google::protobuf::int32 friend_ticketid() const;
  void set_friend_ticketid(::google::protobuf::int32 value);

  // optional int32 gift_item_num = 23;
  bool has_gift_item_num() const;
  void clear_gift_item_num();
  static const int kGiftItemNumFieldNumber = 23;
  ::google::protobuf::int32 gift_item_num() const;
  void set_gift_item_num(::google::protobuf::int32 value);

  // optional sfixed64 challenge_time = 11;
  bool has_challenge_time() const;
  void clear_challenge_time();
  static const int kChallengeTimeFieldNumber = 11;
  ::google::protobuf::int64 challenge_time() const;
  void set_challenge_time(::google::protobuf::int64 value);

  // optional int32 challenge_score = 12;
  bool has_challenge_score() const;
  void clear_challenge_score();
  static const int kChallengeScoreFieldNumber = 12;
  ::google::protobuf::int32 challenge_score() const;
  void set_challenge_score(::google::protobuf::int32 value);

  // optional int32 gift_state = 21;
  bool has_gift_state() const;
  void clear_gift_state();
  static const int kGiftStateFieldNumber = 21;
  ::google::protobuf::int32 gift_state() const;
  void set_gift_state(::google::protobuf::int32 value);

  // optional uint64 gift_item_typeid = 22;
  bool has_gift_item_typeid() const;
  void clear_gift_item_typeid();
  static const int kGiftItemTypeidFieldNumber = 22;
  ::google::protobuf::uint64 gift_item_typeid() const;
  void set_gift_item_typeid(::google::protobuf::uint64 value);

  // optional sfixed64 gift_create_time = 24;
  bool has_gift_create_time() const;
  void clear_gift_create_time();
  static const int kGiftCreateTimeFieldNumber = 24;
  ::google::protobuf::int64 gift_create_time() const;
  void set_gift_create_time(::google::protobuf::int64 value);

  // optional sfixed64 gift_accept_time = 25;
  bool has_gift_accept_time() const;
  void clear_gift_accept_time();
  static const int kGiftAcceptTimeFieldNumber = 25;
  ::google::protobuf::int64 gift_accept_time() const;
  void set_gift_accept_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameStatsUserFriend)
 private:
  void set_has_owner_ticketid();
  void clear_has_owner_ticketid();
  void set_has_friend_ticketid();
  void clear_has_friend_ticketid();
  void set_has_challenge_time();
  void clear_has_challenge_time();
  void set_has_challenge_score();
  void clear_has_challenge_score();
  void set_has_gift_state();
  void clear_has_gift_state();
  void set_has_gift_item_typeid();
  void clear_has_gift_item_typeid();
  void set_has_gift_item_num();
  void clear_has_gift_item_num();
  void set_has_gift_create_time();
  void clear_has_gift_create_time();
  void set_has_gift_accept_time();
  void clear_has_gift_accept_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 owner_ticketid_;
  ::google::protobuf::int32 friend_ticketid_;
  ::google::protobuf::int32 gift_item_num_;
  ::google::protobuf::int64 challenge_time_;
  ::google::protobuf::int32 challenge_score_;
  ::google::protobuf::int32 gift_state_;
  ::google::protobuf::uint64 gift_item_typeid_;
  ::google::protobuf::int64 gift_create_time_;
  ::google::protobuf::int64 gift_accept_time_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameStatsUserFriendList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameStatsUserFriendList) */ {
 public:
  GameStatsUserFriendList();
  virtual ~GameStatsUserFriendList();

  GameStatsUserFriendList(const GameStatsUserFriendList& from);

  inline GameStatsUserFriendList& operator=(const GameStatsUserFriendList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameStatsUserFriendList(GameStatsUserFriendList&& from) noexcept
    : GameStatsUserFriendList() {
    *this = ::std::move(from);
  }

  inline GameStatsUserFriendList& operator=(GameStatsUserFriendList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStatsUserFriendList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameStatsUserFriendList* internal_default_instance() {
    return reinterpret_cast<const GameStatsUserFriendList*>(
               &_GameStatsUserFriendList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(GameStatsUserFriendList* other);
  void Swap(GameStatsUserFriendList* other);
  friend void swap(GameStatsUserFriendList& a, GameStatsUserFriendList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameStatsUserFriendList* New() const final {
    return CreateMaybeMessage<GameStatsUserFriendList>(NULL);
  }

  GameStatsUserFriendList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameStatsUserFriendList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameStatsUserFriendList& from);
  void MergeFrom(const GameStatsUserFriendList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameStatsUserFriendList* other);
  protected:
  explicit GameStatsUserFriendList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.GameStatsUserFriend list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::GameStatsUserFriend* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::GameStatsUserFriend >*
      mutable_list();
  const ::db::GameStatsUserFriend& list(int index) const;
  ::db::GameStatsUserFriend* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::GameStatsUserFriend >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.GameStatsUserFriendList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::GameStatsUserFriend > list_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserGameInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserGameInvite) */ {
 public:
  UserGameInvite();
  virtual ~UserGameInvite();

  UserGameInvite(const UserGameInvite& from);

  inline UserGameInvite& operator=(const UserGameInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGameInvite(UserGameInvite&& from) noexcept
    : UserGameInvite() {
    *this = ::std::move(from);
  }

  inline UserGameInvite& operator=(UserGameInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGameInvite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGameInvite* internal_default_instance() {
    return reinterpret_cast<const UserGameInvite*>(
               &_UserGameInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void UnsafeArenaSwap(UserGameInvite* other);
  void Swap(UserGameInvite* other);
  friend void swap(UserGameInvite& a, UserGameInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGameInvite* New() const final {
    return CreateMaybeMessage<UserGameInvite>(NULL);
  }

  UserGameInvite* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserGameInvite>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserGameInvite& from);
  void MergeFrom(const UserGameInvite& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserGameInvite* other);
  protected:
  explicit UserGameInvite(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 owner_ticketid = 1;
  bool has_owner_ticketid() const;
  void clear_owner_ticketid();
  static const int kOwnerTicketidFieldNumber = 1;
  ::google::protobuf::int32 owner_ticketid() const;
  void set_owner_ticketid(::google::protobuf::int32 value);

  // required int32 invitee_ticketid = 2;
  bool has_invitee_ticketid() const;
  void clear_invitee_ticketid();
  static const int kInviteeTicketidFieldNumber = 2;
  ::google::protobuf::int32 invitee_ticketid() const;
  void set_invitee_ticketid(::google::protobuf::int32 value);

  // required int32 invitee_level = 3;
  bool has_invitee_level() const;
  void clear_invitee_level();
  static const int kInviteeLevelFieldNumber = 3;
  ::google::protobuf::int32 invitee_level() const;
  void set_invitee_level(::google::protobuf::int32 value);

  // required int32 state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // optional sfixed64 optime = 5;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 5;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserGameInvite)
 private:
  void set_has_owner_ticketid();
  void clear_has_owner_ticketid();
  void set_has_invitee_ticketid();
  void clear_has_invitee_ticketid();
  void set_has_invitee_level();
  void clear_has_invitee_level();
  void set_has_state();
  void clear_has_state();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 owner_ticketid_;
  ::google::protobuf::int32 invitee_ticketid_;
  ::google::protobuf::int32 invitee_level_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserGameInviteList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserGameInviteList) */ {
 public:
  UserGameInviteList();
  virtual ~UserGameInviteList();

  UserGameInviteList(const UserGameInviteList& from);

  inline UserGameInviteList& operator=(const UserGameInviteList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGameInviteList(UserGameInviteList&& from) noexcept
    : UserGameInviteList() {
    *this = ::std::move(from);
  }

  inline UserGameInviteList& operator=(UserGameInviteList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGameInviteList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGameInviteList* internal_default_instance() {
    return reinterpret_cast<const UserGameInviteList*>(
               &_UserGameInviteList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void UnsafeArenaSwap(UserGameInviteList* other);
  void Swap(UserGameInviteList* other);
  friend void swap(UserGameInviteList& a, UserGameInviteList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGameInviteList* New() const final {
    return CreateMaybeMessage<UserGameInviteList>(NULL);
  }

  UserGameInviteList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserGameInviteList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserGameInviteList& from);
  void MergeFrom(const UserGameInviteList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserGameInviteList* other);
  protected:
  explicit UserGameInviteList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.UserGameInvite list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::UserGameInvite* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::UserGameInvite >*
      mutable_list();
  const ::db::UserGameInvite& list(int index) const;
  ::db::UserGameInvite* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::UserGameInvite >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.UserGameInviteList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::UserGameInvite > list_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserGameInviteReward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserGameInviteReward) */ {
 public:
  UserGameInviteReward();
  virtual ~UserGameInviteReward();

  UserGameInviteReward(const UserGameInviteReward& from);

  inline UserGameInviteReward& operator=(const UserGameInviteReward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGameInviteReward(UserGameInviteReward&& from) noexcept
    : UserGameInviteReward() {
    *this = ::std::move(from);
  }

  inline UserGameInviteReward& operator=(UserGameInviteReward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGameInviteReward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGameInviteReward* internal_default_instance() {
    return reinterpret_cast<const UserGameInviteReward*>(
               &_UserGameInviteReward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void UnsafeArenaSwap(UserGameInviteReward* other);
  void Swap(UserGameInviteReward* other);
  friend void swap(UserGameInviteReward& a, UserGameInviteReward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGameInviteReward* New() const final {
    return CreateMaybeMessage<UserGameInviteReward>(NULL);
  }

  UserGameInviteReward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserGameInviteReward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserGameInviteReward& from);
  void MergeFrom(const UserGameInviteReward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserGameInviteReward* other);
  protected:
  explicit UserGameInviteReward(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 owner_ticketid = 1;
  bool has_owner_ticketid() const;
  void clear_owner_ticketid();
  static const int kOwnerTicketidFieldNumber = 1;
  ::google::protobuf::int32 owner_ticketid() const;
  void set_owner_ticketid(::google::protobuf::int32 value);

  // required int32 slotid = 2;
  bool has_slotid() const;
  void clear_slotid();
  static const int kSlotidFieldNumber = 2;
  ::google::protobuf::int32 slotid() const;
  void set_slotid(::google::protobuf::int32 value);

  // required int32 reward_state = 3;
  bool has_reward_state() const;
  void clear_reward_state();
  static const int kRewardStateFieldNumber = 3;
  ::google::protobuf::int32 reward_state() const;
  void set_reward_state(::google::protobuf::int32 value);

  // required int32 reward_reason = 4;
  bool has_reward_reason() const;
  void clear_reward_reason();
  static const int kRewardReasonFieldNumber = 4;
  ::google::protobuf::int32 reward_reason() const;
  void set_reward_reason(::google::protobuf::int32 value);

  // required uint64 item_typeid = 12;
  bool has_item_typeid() const;
  void clear_item_typeid();
  static const int kItemTypeidFieldNumber = 12;
  ::google::protobuf::uint64 item_typeid() const;
  void set_item_typeid(::google::protobuf::uint64 value);

  // required int32 item_type = 11;
  bool has_item_type() const;
  void clear_item_type();
  static const int kItemTypeFieldNumber = 11;
  ::google::protobuf::int32 item_type() const;
  void set_item_type(::google::protobuf::int32 value);

  // required int32 item_num = 13;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 13;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.UserGameInviteReward)
 private:
  void set_has_owner_ticketid();
  void clear_has_owner_ticketid();
  void set_has_slotid();
  void clear_has_slotid();
  void set_has_reward_state();
  void clear_has_reward_state();
  void set_has_reward_reason();
  void clear_has_reward_reason();
  void set_has_item_type();
  void clear_has_item_type();
  void set_has_item_typeid();
  void clear_has_item_typeid();
  void set_has_item_num();
  void clear_has_item_num();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 owner_ticketid_;
  ::google::protobuf::int32 slotid_;
  ::google::protobuf::int32 reward_state_;
  ::google::protobuf::int32 reward_reason_;
  ::google::protobuf::uint64 item_typeid_;
  ::google::protobuf::int32 item_type_;
  ::google::protobuf::int32 item_num_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserGameInviteRewardList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserGameInviteRewardList) */ {
 public:
  UserGameInviteRewardList();
  virtual ~UserGameInviteRewardList();

  UserGameInviteRewardList(const UserGameInviteRewardList& from);

  inline UserGameInviteRewardList& operator=(const UserGameInviteRewardList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGameInviteRewardList(UserGameInviteRewardList&& from) noexcept
    : UserGameInviteRewardList() {
    *this = ::std::move(from);
  }

  inline UserGameInviteRewardList& operator=(UserGameInviteRewardList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGameInviteRewardList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGameInviteRewardList* internal_default_instance() {
    return reinterpret_cast<const UserGameInviteRewardList*>(
               &_UserGameInviteRewardList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void UnsafeArenaSwap(UserGameInviteRewardList* other);
  void Swap(UserGameInviteRewardList* other);
  friend void swap(UserGameInviteRewardList& a, UserGameInviteRewardList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGameInviteRewardList* New() const final {
    return CreateMaybeMessage<UserGameInviteRewardList>(NULL);
  }

  UserGameInviteRewardList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserGameInviteRewardList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserGameInviteRewardList& from);
  void MergeFrom(const UserGameInviteRewardList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserGameInviteRewardList* other);
  protected:
  explicit UserGameInviteRewardList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.UserGameInviteReward list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::UserGameInviteReward* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::UserGameInviteReward >*
      mutable_list();
  const ::db::UserGameInviteReward& list(int index) const;
  ::db::UserGameInviteReward* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::UserGameInviteReward >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.UserGameInviteRewardList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::UserGameInviteReward > list_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_friends_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_friends.Parameter) */ {
 public:
  proc_i_load_user_friends_Parameter();
  virtual ~proc_i_load_user_friends_Parameter();

  proc_i_load_user_friends_Parameter(const proc_i_load_user_friends_Parameter& from);

  inline proc_i_load_user_friends_Parameter& operator=(const proc_i_load_user_friends_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_friends_Parameter(proc_i_load_user_friends_Parameter&& from) noexcept
    : proc_i_load_user_friends_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_friends_Parameter& operator=(proc_i_load_user_friends_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_friends_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_friends_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_friends_Parameter*>(
               &_proc_i_load_user_friends_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void UnsafeArenaSwap(proc_i_load_user_friends_Parameter* other);
  void Swap(proc_i_load_user_friends_Parameter* other);
  friend void swap(proc_i_load_user_friends_Parameter& a, proc_i_load_user_friends_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_friends_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_load_user_friends_Parameter>(NULL);
  }

  proc_i_load_user_friends_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_friends_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_friends_Parameter& from);
  void MergeFrom(const proc_i_load_user_friends_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_friends_Parameter* other);
  protected:
  explicit proc_i_load_user_friends_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_friends.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_friends_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_friends.ReturnRecord) */ {
 public:
  proc_i_load_user_friends_ReturnRecord();
  virtual ~proc_i_load_user_friends_ReturnRecord();

  proc_i_load_user_friends_ReturnRecord(const proc_i_load_user_friends_ReturnRecord& from);

  inline proc_i_load_user_friends_ReturnRecord& operator=(const proc_i_load_user_friends_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_friends_ReturnRecord(proc_i_load_user_friends_ReturnRecord&& from) noexcept
    : proc_i_load_user_friends_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_friends_ReturnRecord& operator=(proc_i_load_user_friends_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_friends_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_friends_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_friends_ReturnRecord*>(
               &_proc_i_load_user_friends_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void UnsafeArenaSwap(proc_i_load_user_friends_ReturnRecord* other);
  void Swap(proc_i_load_user_friends_ReturnRecord* other);
  friend void swap(proc_i_load_user_friends_ReturnRecord& a, proc_i_load_user_friends_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_friends_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_i_load_user_friends_ReturnRecord>(NULL);
  }

  proc_i_load_user_friends_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_friends_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_friends_ReturnRecord& from);
  void MergeFrom(const proc_i_load_user_friends_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_friends_ReturnRecord* other);
  protected:
  explicit proc_i_load_user_friends_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserFriend item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  private:
  const ::db::UserFriend& _internal_item() const;
  public:
  const ::db::UserFriend& item() const;
  ::db::UserFriend* release_item();
  ::db::UserFriend* mutable_item();
  void set_allocated_item(::db::UserFriend* item);
  void unsafe_arena_set_allocated_item(
      ::db::UserFriend* item);
  ::db::UserFriend* unsafe_arena_release_item();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_friends.ReturnRecord)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserFriend* item_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_friends : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_friends) */ {
 public:
  proc_i_load_user_friends();
  virtual ~proc_i_load_user_friends();

  proc_i_load_user_friends(const proc_i_load_user_friends& from);

  inline proc_i_load_user_friends& operator=(const proc_i_load_user_friends& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_friends(proc_i_load_user_friends&& from) noexcept
    : proc_i_load_user_friends() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_friends& operator=(proc_i_load_user_friends&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_friends& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_friends* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_friends*>(
               &_proc_i_load_user_friends_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void UnsafeArenaSwap(proc_i_load_user_friends* other);
  void Swap(proc_i_load_user_friends* other);
  friend void swap(proc_i_load_user_friends& a, proc_i_load_user_friends& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_friends* New() const final {
    return CreateMaybeMessage<proc_i_load_user_friends>(NULL);
  }

  proc_i_load_user_friends* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_friends>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_friends& from);
  void MergeFrom(const proc_i_load_user_friends& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_friends* other);
  protected:
  explicit proc_i_load_user_friends(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_load_user_friends_Parameter Parameter;
  typedef proc_i_load_user_friends_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_i_load_user_friends.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_i_load_user_friends_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_friends_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_i_load_user_friends_ReturnRecord& return_record_list(int index) const;
  ::db::proc_i_load_user_friends_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_friends_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_i_load_user_friends.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_load_user_friends_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_load_user_friends_Parameter& param() const;
  ::db::proc_i_load_user_friends_Parameter* release_param();
  ::db::proc_i_load_user_friends_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_load_user_friends_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_load_user_friends_Parameter* param);
  ::db::proc_i_load_user_friends_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_friends)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_friends_ReturnRecord > return_record_list_;
  ::db::proc_i_load_user_friends_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_friend_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_friend.Parameter) */ {
 public:
  proc_i_save_user_friend_Parameter();
  virtual ~proc_i_save_user_friend_Parameter();

  proc_i_save_user_friend_Parameter(const proc_i_save_user_friend_Parameter& from);

  inline proc_i_save_user_friend_Parameter& operator=(const proc_i_save_user_friend_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_friend_Parameter(proc_i_save_user_friend_Parameter&& from) noexcept
    : proc_i_save_user_friend_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_friend_Parameter& operator=(proc_i_save_user_friend_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_friend_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_friend_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_friend_Parameter*>(
               &_proc_i_save_user_friend_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void UnsafeArenaSwap(proc_i_save_user_friend_Parameter* other);
  void Swap(proc_i_save_user_friend_Parameter* other);
  friend void swap(proc_i_save_user_friend_Parameter& a, proc_i_save_user_friend_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_friend_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_save_user_friend_Parameter>(NULL);
  }

  proc_i_save_user_friend_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_friend_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_friend_Parameter& from);
  void MergeFrom(const proc_i_save_user_friend_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_friend_Parameter* other);
  protected:
  explicit proc_i_save_user_friend_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserFriend p_friend = 1;
  bool has_p_friend() const;
  void clear_p_friend();
  static const int kPFriendFieldNumber = 1;
  private:
  const ::db::UserFriend& _internal_p_friend() const;
  public:
  const ::db::UserFriend& p_friend() const;
  ::db::UserFriend* release_p_friend();
  ::db::UserFriend* mutable_p_friend();
  void set_allocated_p_friend(::db::UserFriend* p_friend);
  void unsafe_arena_set_allocated_p_friend(
      ::db::UserFriend* p_friend);
  ::db::UserFriend* unsafe_arena_release_p_friend();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_friend.Parameter)
 private:
  void set_has_p_friend();
  void clear_has_p_friend();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserFriend* p_friend_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_friend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_friend) */ {
 public:
  proc_i_save_user_friend();
  virtual ~proc_i_save_user_friend();

  proc_i_save_user_friend(const proc_i_save_user_friend& from);

  inline proc_i_save_user_friend& operator=(const proc_i_save_user_friend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_friend(proc_i_save_user_friend&& from) noexcept
    : proc_i_save_user_friend() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_friend& operator=(proc_i_save_user_friend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_friend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_friend* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_friend*>(
               &_proc_i_save_user_friend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void UnsafeArenaSwap(proc_i_save_user_friend* other);
  void Swap(proc_i_save_user_friend* other);
  friend void swap(proc_i_save_user_friend& a, proc_i_save_user_friend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_friend* New() const final {
    return CreateMaybeMessage<proc_i_save_user_friend>(NULL);
  }

  proc_i_save_user_friend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_friend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_friend& from);
  void MergeFrom(const proc_i_save_user_friend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_friend* other);
  protected:
  explicit proc_i_save_user_friend(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_save_user_friend_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_save_user_friend.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_save_user_friend_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_save_user_friend_Parameter& param() const;
  ::db::proc_i_save_user_friend_Parameter* release_param();
  ::db::proc_i_save_user_friend_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_save_user_friend_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_save_user_friend_Parameter* param);
  ::db::proc_i_save_user_friend_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_friend)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_save_user_friend_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_game_invites_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_game_invites.Parameter) */ {
 public:
  proc_i_load_user_game_invites_Parameter();
  virtual ~proc_i_load_user_game_invites_Parameter();

  proc_i_load_user_game_invites_Parameter(const proc_i_load_user_game_invites_Parameter& from);

  inline proc_i_load_user_game_invites_Parameter& operator=(const proc_i_load_user_game_invites_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_game_invites_Parameter(proc_i_load_user_game_invites_Parameter&& from) noexcept
    : proc_i_load_user_game_invites_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_game_invites_Parameter& operator=(proc_i_load_user_game_invites_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_game_invites_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_game_invites_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_game_invites_Parameter*>(
               &_proc_i_load_user_game_invites_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void UnsafeArenaSwap(proc_i_load_user_game_invites_Parameter* other);
  void Swap(proc_i_load_user_game_invites_Parameter* other);
  friend void swap(proc_i_load_user_game_invites_Parameter& a, proc_i_load_user_game_invites_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_game_invites_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_load_user_game_invites_Parameter>(NULL);
  }

  proc_i_load_user_game_invites_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_game_invites_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_game_invites_Parameter& from);
  void MergeFrom(const proc_i_load_user_game_invites_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_game_invites_Parameter* other);
  protected:
  explicit proc_i_load_user_game_invites_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_game_invites.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_game_invites_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_game_invites.ReturnRecord) */ {
 public:
  proc_i_load_user_game_invites_ReturnRecord();
  virtual ~proc_i_load_user_game_invites_ReturnRecord();

  proc_i_load_user_game_invites_ReturnRecord(const proc_i_load_user_game_invites_ReturnRecord& from);

  inline proc_i_load_user_game_invites_ReturnRecord& operator=(const proc_i_load_user_game_invites_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_game_invites_ReturnRecord(proc_i_load_user_game_invites_ReturnRecord&& from) noexcept
    : proc_i_load_user_game_invites_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_game_invites_ReturnRecord& operator=(proc_i_load_user_game_invites_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_game_invites_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_game_invites_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_game_invites_ReturnRecord*>(
               &_proc_i_load_user_game_invites_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void UnsafeArenaSwap(proc_i_load_user_game_invites_ReturnRecord* other);
  void Swap(proc_i_load_user_game_invites_ReturnRecord* other);
  friend void swap(proc_i_load_user_game_invites_ReturnRecord& a, proc_i_load_user_game_invites_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_game_invites_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_i_load_user_game_invites_ReturnRecord>(NULL);
  }

  proc_i_load_user_game_invites_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_game_invites_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_game_invites_ReturnRecord& from);
  void MergeFrom(const proc_i_load_user_game_invites_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_game_invites_ReturnRecord* other);
  protected:
  explicit proc_i_load_user_game_invites_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserGameInvite game_invite = 1;
  bool has_game_invite() const;
  void clear_game_invite();
  static const int kGameInviteFieldNumber = 1;
  private:
  const ::db::UserGameInvite& _internal_game_invite() const;
  public:
  const ::db::UserGameInvite& game_invite() const;
  ::db::UserGameInvite* release_game_invite();
  ::db::UserGameInvite* mutable_game_invite();
  void set_allocated_game_invite(::db::UserGameInvite* game_invite);
  void unsafe_arena_set_allocated_game_invite(
      ::db::UserGameInvite* game_invite);
  ::db::UserGameInvite* unsafe_arena_release_game_invite();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_game_invites.ReturnRecord)
 private:
  void set_has_game_invite();
  void clear_has_game_invite();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserGameInvite* game_invite_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_game_invites : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_game_invites) */ {
 public:
  proc_i_load_user_game_invites();
  virtual ~proc_i_load_user_game_invites();

  proc_i_load_user_game_invites(const proc_i_load_user_game_invites& from);

  inline proc_i_load_user_game_invites& operator=(const proc_i_load_user_game_invites& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_game_invites(proc_i_load_user_game_invites&& from) noexcept
    : proc_i_load_user_game_invites() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_game_invites& operator=(proc_i_load_user_game_invites&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_game_invites& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_game_invites* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_game_invites*>(
               &_proc_i_load_user_game_invites_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void UnsafeArenaSwap(proc_i_load_user_game_invites* other);
  void Swap(proc_i_load_user_game_invites* other);
  friend void swap(proc_i_load_user_game_invites& a, proc_i_load_user_game_invites& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_game_invites* New() const final {
    return CreateMaybeMessage<proc_i_load_user_game_invites>(NULL);
  }

  proc_i_load_user_game_invites* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_game_invites>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_game_invites& from);
  void MergeFrom(const proc_i_load_user_game_invites& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_game_invites* other);
  protected:
  explicit proc_i_load_user_game_invites(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_load_user_game_invites_Parameter Parameter;
  typedef proc_i_load_user_game_invites_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_i_load_user_game_invites.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_i_load_user_game_invites_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invites_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_i_load_user_game_invites_ReturnRecord& return_record_list(int index) const;
  ::db::proc_i_load_user_game_invites_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invites_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_i_load_user_game_invites.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_load_user_game_invites_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_load_user_game_invites_Parameter& param() const;
  ::db::proc_i_load_user_game_invites_Parameter* release_param();
  ::db::proc_i_load_user_game_invites_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_load_user_game_invites_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_load_user_game_invites_Parameter* param);
  ::db::proc_i_load_user_game_invites_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_game_invites)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invites_ReturnRecord > return_record_list_;
  ::db::proc_i_load_user_game_invites_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_game_invite_rewards_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_game_invite_rewards.Parameter) */ {
 public:
  proc_i_load_user_game_invite_rewards_Parameter();
  virtual ~proc_i_load_user_game_invite_rewards_Parameter();

  proc_i_load_user_game_invite_rewards_Parameter(const proc_i_load_user_game_invite_rewards_Parameter& from);

  inline proc_i_load_user_game_invite_rewards_Parameter& operator=(const proc_i_load_user_game_invite_rewards_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_game_invite_rewards_Parameter(proc_i_load_user_game_invite_rewards_Parameter&& from) noexcept
    : proc_i_load_user_game_invite_rewards_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_game_invite_rewards_Parameter& operator=(proc_i_load_user_game_invite_rewards_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_game_invite_rewards_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_game_invite_rewards_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_game_invite_rewards_Parameter*>(
               &_proc_i_load_user_game_invite_rewards_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void UnsafeArenaSwap(proc_i_load_user_game_invite_rewards_Parameter* other);
  void Swap(proc_i_load_user_game_invite_rewards_Parameter* other);
  friend void swap(proc_i_load_user_game_invite_rewards_Parameter& a, proc_i_load_user_game_invite_rewards_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_game_invite_rewards_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_load_user_game_invite_rewards_Parameter>(NULL);
  }

  proc_i_load_user_game_invite_rewards_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_game_invite_rewards_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_game_invite_rewards_Parameter& from);
  void MergeFrom(const proc_i_load_user_game_invite_rewards_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_game_invite_rewards_Parameter* other);
  protected:
  explicit proc_i_load_user_game_invite_rewards_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_game_invite_rewards.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_game_invite_rewards_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_game_invite_rewards.ReturnRecord) */ {
 public:
  proc_i_load_user_game_invite_rewards_ReturnRecord();
  virtual ~proc_i_load_user_game_invite_rewards_ReturnRecord();

  proc_i_load_user_game_invite_rewards_ReturnRecord(const proc_i_load_user_game_invite_rewards_ReturnRecord& from);

  inline proc_i_load_user_game_invite_rewards_ReturnRecord& operator=(const proc_i_load_user_game_invite_rewards_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_game_invite_rewards_ReturnRecord(proc_i_load_user_game_invite_rewards_ReturnRecord&& from) noexcept
    : proc_i_load_user_game_invite_rewards_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_game_invite_rewards_ReturnRecord& operator=(proc_i_load_user_game_invite_rewards_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_game_invite_rewards_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_game_invite_rewards_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_game_invite_rewards_ReturnRecord*>(
               &_proc_i_load_user_game_invite_rewards_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void UnsafeArenaSwap(proc_i_load_user_game_invite_rewards_ReturnRecord* other);
  void Swap(proc_i_load_user_game_invite_rewards_ReturnRecord* other);
  friend void swap(proc_i_load_user_game_invite_rewards_ReturnRecord& a, proc_i_load_user_game_invite_rewards_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_game_invite_rewards_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_i_load_user_game_invite_rewards_ReturnRecord>(NULL);
  }

  proc_i_load_user_game_invite_rewards_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_game_invite_rewards_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_game_invite_rewards_ReturnRecord& from);
  void MergeFrom(const proc_i_load_user_game_invite_rewards_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_game_invite_rewards_ReturnRecord* other);
  protected:
  explicit proc_i_load_user_game_invite_rewards_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserGameInviteReward reward = 1;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 1;
  private:
  const ::db::UserGameInviteReward& _internal_reward() const;
  public:
  const ::db::UserGameInviteReward& reward() const;
  ::db::UserGameInviteReward* release_reward();
  ::db::UserGameInviteReward* mutable_reward();
  void set_allocated_reward(::db::UserGameInviteReward* reward);
  void unsafe_arena_set_allocated_reward(
      ::db::UserGameInviteReward* reward);
  ::db::UserGameInviteReward* unsafe_arena_release_reward();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
 private:
  void set_has_reward();
  void clear_has_reward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserGameInviteReward* reward_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_game_invite_rewards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_game_invite_rewards) */ {
 public:
  proc_i_load_user_game_invite_rewards();
  virtual ~proc_i_load_user_game_invite_rewards();

  proc_i_load_user_game_invite_rewards(const proc_i_load_user_game_invite_rewards& from);

  inline proc_i_load_user_game_invite_rewards& operator=(const proc_i_load_user_game_invite_rewards& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_game_invite_rewards(proc_i_load_user_game_invite_rewards&& from) noexcept
    : proc_i_load_user_game_invite_rewards() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_game_invite_rewards& operator=(proc_i_load_user_game_invite_rewards&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_game_invite_rewards& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_game_invite_rewards* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_game_invite_rewards*>(
               &_proc_i_load_user_game_invite_rewards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void UnsafeArenaSwap(proc_i_load_user_game_invite_rewards* other);
  void Swap(proc_i_load_user_game_invite_rewards* other);
  friend void swap(proc_i_load_user_game_invite_rewards& a, proc_i_load_user_game_invite_rewards& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_game_invite_rewards* New() const final {
    return CreateMaybeMessage<proc_i_load_user_game_invite_rewards>(NULL);
  }

  proc_i_load_user_game_invite_rewards* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_game_invite_rewards>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_game_invite_rewards& from);
  void MergeFrom(const proc_i_load_user_game_invite_rewards& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_game_invite_rewards* other);
  protected:
  explicit proc_i_load_user_game_invite_rewards(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_load_user_game_invite_rewards_Parameter Parameter;
  typedef proc_i_load_user_game_invite_rewards_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_i_load_user_game_invite_rewards.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_i_load_user_game_invite_rewards_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invite_rewards_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_i_load_user_game_invite_rewards_ReturnRecord& return_record_list(int index) const;
  ::db::proc_i_load_user_game_invite_rewards_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invite_rewards_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_i_load_user_game_invite_rewards.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_load_user_game_invite_rewards_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_load_user_game_invite_rewards_Parameter& param() const;
  ::db::proc_i_load_user_game_invite_rewards_Parameter* release_param();
  ::db::proc_i_load_user_game_invite_rewards_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_load_user_game_invite_rewards_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_load_user_game_invite_rewards_Parameter* param);
  ::db::proc_i_load_user_game_invite_rewards_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_game_invite_rewards)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invite_rewards_ReturnRecord > return_record_list_;
  ::db::proc_i_load_user_game_invite_rewards_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_game_invite_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_game_invite.Parameter) */ {
 public:
  proc_i_save_user_game_invite_Parameter();
  virtual ~proc_i_save_user_game_invite_Parameter();

  proc_i_save_user_game_invite_Parameter(const proc_i_save_user_game_invite_Parameter& from);

  inline proc_i_save_user_game_invite_Parameter& operator=(const proc_i_save_user_game_invite_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_game_invite_Parameter(proc_i_save_user_game_invite_Parameter&& from) noexcept
    : proc_i_save_user_game_invite_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_game_invite_Parameter& operator=(proc_i_save_user_game_invite_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_game_invite_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_game_invite_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_game_invite_Parameter*>(
               &_proc_i_save_user_game_invite_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void UnsafeArenaSwap(proc_i_save_user_game_invite_Parameter* other);
  void Swap(proc_i_save_user_game_invite_Parameter* other);
  friend void swap(proc_i_save_user_game_invite_Parameter& a, proc_i_save_user_game_invite_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_game_invite_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_save_user_game_invite_Parameter>(NULL);
  }

  proc_i_save_user_game_invite_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_game_invite_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_game_invite_Parameter& from);
  void MergeFrom(const proc_i_save_user_game_invite_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_game_invite_Parameter* other);
  protected:
  explicit proc_i_save_user_game_invite_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserGameInvite p_invite = 1;
  bool has_p_invite() const;
  void clear_p_invite();
  static const int kPInviteFieldNumber = 1;
  private:
  const ::db::UserGameInvite& _internal_p_invite() const;
  public:
  const ::db::UserGameInvite& p_invite() const;
  ::db::UserGameInvite* release_p_invite();
  ::db::UserGameInvite* mutable_p_invite();
  void set_allocated_p_invite(::db::UserGameInvite* p_invite);
  void unsafe_arena_set_allocated_p_invite(
      ::db::UserGameInvite* p_invite);
  ::db::UserGameInvite* unsafe_arena_release_p_invite();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_game_invite.Parameter)
 private:
  void set_has_p_invite();
  void clear_has_p_invite();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserGameInvite* p_invite_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_game_invite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_game_invite) */ {
 public:
  proc_i_save_user_game_invite();
  virtual ~proc_i_save_user_game_invite();

  proc_i_save_user_game_invite(const proc_i_save_user_game_invite& from);

  inline proc_i_save_user_game_invite& operator=(const proc_i_save_user_game_invite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_game_invite(proc_i_save_user_game_invite&& from) noexcept
    : proc_i_save_user_game_invite() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_game_invite& operator=(proc_i_save_user_game_invite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_game_invite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_game_invite* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_game_invite*>(
               &_proc_i_save_user_game_invite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void UnsafeArenaSwap(proc_i_save_user_game_invite* other);
  void Swap(proc_i_save_user_game_invite* other);
  friend void swap(proc_i_save_user_game_invite& a, proc_i_save_user_game_invite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_game_invite* New() const final {
    return CreateMaybeMessage<proc_i_save_user_game_invite>(NULL);
  }

  proc_i_save_user_game_invite* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_game_invite>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_game_invite& from);
  void MergeFrom(const proc_i_save_user_game_invite& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_game_invite* other);
  protected:
  explicit proc_i_save_user_game_invite(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_save_user_game_invite_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_save_user_game_invite.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_save_user_game_invite_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_save_user_game_invite_Parameter& param() const;
  ::db::proc_i_save_user_game_invite_Parameter* release_param();
  ::db::proc_i_save_user_game_invite_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_save_user_game_invite_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_save_user_game_invite_Parameter* param);
  ::db::proc_i_save_user_game_invite_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_game_invite)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_save_user_game_invite_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_game_invite_reward_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_game_invite_reward.Parameter) */ {
 public:
  proc_i_save_user_game_invite_reward_Parameter();
  virtual ~proc_i_save_user_game_invite_reward_Parameter();

  proc_i_save_user_game_invite_reward_Parameter(const proc_i_save_user_game_invite_reward_Parameter& from);

  inline proc_i_save_user_game_invite_reward_Parameter& operator=(const proc_i_save_user_game_invite_reward_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_game_invite_reward_Parameter(proc_i_save_user_game_invite_reward_Parameter&& from) noexcept
    : proc_i_save_user_game_invite_reward_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_game_invite_reward_Parameter& operator=(proc_i_save_user_game_invite_reward_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_game_invite_reward_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_game_invite_reward_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_game_invite_reward_Parameter*>(
               &_proc_i_save_user_game_invite_reward_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void UnsafeArenaSwap(proc_i_save_user_game_invite_reward_Parameter* other);
  void Swap(proc_i_save_user_game_invite_reward_Parameter* other);
  friend void swap(proc_i_save_user_game_invite_reward_Parameter& a, proc_i_save_user_game_invite_reward_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_game_invite_reward_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_save_user_game_invite_reward_Parameter>(NULL);
  }

  proc_i_save_user_game_invite_reward_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_game_invite_reward_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_game_invite_reward_Parameter& from);
  void MergeFrom(const proc_i_save_user_game_invite_reward_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_game_invite_reward_Parameter* other);
  protected:
  explicit proc_i_save_user_game_invite_reward_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserGameInviteReward p_reward = 1;
  bool has_p_reward() const;
  void clear_p_reward();
  static const int kPRewardFieldNumber = 1;
  private:
  const ::db::UserGameInviteReward& _internal_p_reward() const;
  public:
  const ::db::UserGameInviteReward& p_reward() const;
  ::db::UserGameInviteReward* release_p_reward();
  ::db::UserGameInviteReward* mutable_p_reward();
  void set_allocated_p_reward(::db::UserGameInviteReward* p_reward);
  void unsafe_arena_set_allocated_p_reward(
      ::db::UserGameInviteReward* p_reward);
  ::db::UserGameInviteReward* unsafe_arena_release_p_reward();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_game_invite_reward.Parameter)
 private:
  void set_has_p_reward();
  void clear_has_p_reward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserGameInviteReward* p_reward_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_game_invite_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_game_invite_reward) */ {
 public:
  proc_i_save_user_game_invite_reward();
  virtual ~proc_i_save_user_game_invite_reward();

  proc_i_save_user_game_invite_reward(const proc_i_save_user_game_invite_reward& from);

  inline proc_i_save_user_game_invite_reward& operator=(const proc_i_save_user_game_invite_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_game_invite_reward(proc_i_save_user_game_invite_reward&& from) noexcept
    : proc_i_save_user_game_invite_reward() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_game_invite_reward& operator=(proc_i_save_user_game_invite_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_game_invite_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_game_invite_reward* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_game_invite_reward*>(
               &_proc_i_save_user_game_invite_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void UnsafeArenaSwap(proc_i_save_user_game_invite_reward* other);
  void Swap(proc_i_save_user_game_invite_reward* other);
  friend void swap(proc_i_save_user_game_invite_reward& a, proc_i_save_user_game_invite_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_game_invite_reward* New() const final {
    return CreateMaybeMessage<proc_i_save_user_game_invite_reward>(NULL);
  }

  proc_i_save_user_game_invite_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_game_invite_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_game_invite_reward& from);
  void MergeFrom(const proc_i_save_user_game_invite_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_game_invite_reward* other);
  protected:
  explicit proc_i_save_user_game_invite_reward(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_save_user_game_invite_reward_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_save_user_game_invite_reward.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_save_user_game_invite_reward_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_save_user_game_invite_reward_Parameter& param() const;
  ::db::proc_i_save_user_game_invite_reward_Parameter* release_param();
  ::db::proc_i_save_user_game_invite_reward_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_save_user_game_invite_reward_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_save_user_game_invite_reward_Parameter* param);
  ::db::proc_i_save_user_game_invite_reward_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_game_invite_reward)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_save_user_game_invite_reward_Parameter* param_;
  friend struct ::protobuf_StoredProcFriend_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TopNRole

// required bytes role_userid = 1;
inline bool TopNRole::has_role_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TopNRole::set_has_role_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TopNRole::clear_has_role_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TopNRole::clear_role_userid() {
  role_userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_role_userid();
}
inline const ::std::string& TopNRole::role_userid() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_userid)
  return role_userid_.Get();
}
inline void TopNRole::set_role_userid(const ::std::string& value) {
  set_has_role_userid();
  role_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.TopNRole.role_userid)
}
#if LANG_CXX11
inline void TopNRole::set_role_userid(::std::string&& value) {
  set_has_role_userid();
  role_userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.TopNRole.role_userid)
}
#endif
inline void TopNRole::set_role_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_role_userid();
  role_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.TopNRole.role_userid)
}
inline void TopNRole::set_role_userid(const void* value,
    size_t size) {
  set_has_role_userid();
  role_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.TopNRole.role_userid)
}
inline ::std::string* TopNRole::mutable_role_userid() {
  set_has_role_userid();
  // @@protoc_insertion_point(field_mutable:db.TopNRole.role_userid)
  return role_userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TopNRole::release_role_userid() {
  // @@protoc_insertion_point(field_release:db.TopNRole.role_userid)
  if (!has_role_userid()) {
    return NULL;
  }
  clear_has_role_userid();
  return role_userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TopNRole::set_allocated_role_userid(::std::string* role_userid) {
  if (role_userid != NULL) {
    set_has_role_userid();
  } else {
    clear_has_role_userid();
  }
  role_userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.TopNRole.role_userid)
}
inline ::std::string* TopNRole::unsafe_arena_release_role_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.TopNRole.role_userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_role_userid();
  return role_userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TopNRole::unsafe_arena_set_allocated_role_userid(
    ::std::string* role_userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (role_userid != NULL) {
    set_has_role_userid();
  } else {
    clear_has_role_userid();
  }
  role_userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      role_userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.TopNRole.role_userid)
}

// required int32 role_ticketid = 2;
inline bool TopNRole::has_role_ticketid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TopNRole::set_has_role_ticketid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TopNRole::clear_has_role_ticketid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TopNRole::clear_role_ticketid() {
  role_ticketid_ = 0;
  clear_has_role_ticketid();
}
inline ::google::protobuf::int32 TopNRole::role_ticketid() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_ticketid)
  return role_ticketid_;
}
inline void TopNRole::set_role_ticketid(::google::protobuf::int32 value) {
  set_has_role_ticketid();
  role_ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_ticketid)
}

// required int64 role_state = 3;
inline bool TopNRole::has_role_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TopNRole::set_has_role_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TopNRole::clear_has_role_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TopNRole::clear_role_state() {
  role_state_ = GOOGLE_LONGLONG(0);
  clear_has_role_state();
}
inline ::google::protobuf::int64 TopNRole::role_state() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_state)
  return role_state_;
}
inline void TopNRole::set_role_state(::google::protobuf::int64 value) {
  set_has_role_state();
  role_state_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_state)
}

// required sfixed64 role_logintime = 4;
inline bool TopNRole::has_role_logintime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TopNRole::set_has_role_logintime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TopNRole::clear_has_role_logintime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TopNRole::clear_role_logintime() {
  role_logintime_ = GOOGLE_LONGLONG(0);
  clear_has_role_logintime();
}
inline ::google::protobuf::int64 TopNRole::role_logintime() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_logintime)
  return role_logintime_;
}
inline void TopNRole::set_role_logintime(::google::protobuf::int64 value) {
  set_has_role_logintime();
  role_logintime_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_logintime)
}

// required bytes role_nick = 11;
inline bool TopNRole::has_role_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TopNRole::set_has_role_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TopNRole::clear_has_role_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TopNRole::clear_role_nick() {
  role_nick_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_role_nick();
}
inline const ::std::string& TopNRole::role_nick() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_nick)
  return role_nick_.Get();
}
inline void TopNRole::set_role_nick(const ::std::string& value) {
  set_has_role_nick();
  role_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.TopNRole.role_nick)
}
#if LANG_CXX11
inline void TopNRole::set_role_nick(::std::string&& value) {
  set_has_role_nick();
  role_nick_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.TopNRole.role_nick)
}
#endif
inline void TopNRole::set_role_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_role_nick();
  role_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.TopNRole.role_nick)
}
inline void TopNRole::set_role_nick(const void* value,
    size_t size) {
  set_has_role_nick();
  role_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.TopNRole.role_nick)
}
inline ::std::string* TopNRole::mutable_role_nick() {
  set_has_role_nick();
  // @@protoc_insertion_point(field_mutable:db.TopNRole.role_nick)
  return role_nick_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TopNRole::release_role_nick() {
  // @@protoc_insertion_point(field_release:db.TopNRole.role_nick)
  if (!has_role_nick()) {
    return NULL;
  }
  clear_has_role_nick();
  return role_nick_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TopNRole::set_allocated_role_nick(::std::string* role_nick) {
  if (role_nick != NULL) {
    set_has_role_nick();
  } else {
    clear_has_role_nick();
  }
  role_nick_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_nick,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.TopNRole.role_nick)
}
inline ::std::string* TopNRole::unsafe_arena_release_role_nick() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.TopNRole.role_nick)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_role_nick();
  return role_nick_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TopNRole::unsafe_arena_set_allocated_role_nick(
    ::std::string* role_nick) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (role_nick != NULL) {
    set_has_role_nick();
  } else {
    clear_has_role_nick();
  }
  role_nick_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      role_nick, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.TopNRole.role_nick)
}

// required int32 role_level = 12;
inline bool TopNRole::has_role_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TopNRole::set_has_role_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TopNRole::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TopNRole::clear_role_level() {
  role_level_ = 0;
  clear_has_role_level();
}
inline ::google::protobuf::int32 TopNRole::role_level() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_level)
  return role_level_;
}
inline void TopNRole::set_role_level(::google::protobuf::int32 value) {
  set_has_role_level();
  role_level_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_level)
}

// required int32 role_exp = 13;
inline bool TopNRole::has_role_exp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TopNRole::set_has_role_exp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TopNRole::clear_has_role_exp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TopNRole::clear_role_exp() {
  role_exp_ = 0;
  clear_has_role_exp();
}
inline ::google::protobuf::int32 TopNRole::role_exp() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_exp)
  return role_exp_;
}
inline void TopNRole::set_role_exp(::google::protobuf::int32 value) {
  set_has_role_exp();
  role_exp_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_exp)
}

// required int32 role_rank = 14;
inline bool TopNRole::has_role_rank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TopNRole::set_has_role_rank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TopNRole::clear_has_role_rank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TopNRole::clear_role_rank() {
  role_rank_ = 0;
  clear_has_role_rank();
}
inline ::google::protobuf::int32 TopNRole::role_rank() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_rank)
  return role_rank_;
}
inline void TopNRole::set_role_rank(::google::protobuf::int32 value) {
  set_has_role_rank();
  role_rank_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_rank)
}

// required int32 role_portrait = 21;
inline bool TopNRole::has_role_portrait() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TopNRole::set_has_role_portrait() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TopNRole::clear_has_role_portrait() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TopNRole::clear_role_portrait() {
  role_portrait_ = 0;
  clear_has_role_portrait();
}
inline ::google::protobuf::int32 TopNRole::role_portrait() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_portrait)
  return role_portrait_;
}
inline void TopNRole::set_role_portrait(::google::protobuf::int32 value) {
  set_has_role_portrait();
  role_portrait_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_portrait)
}

// required int32 role_portrait_frame = 22;
inline bool TopNRole::has_role_portrait_frame() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TopNRole::set_has_role_portrait_frame() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TopNRole::clear_has_role_portrait_frame() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TopNRole::clear_role_portrait_frame() {
  role_portrait_frame_ = 0;
  clear_has_role_portrait_frame();
}
inline ::google::protobuf::int32 TopNRole::role_portrait_frame() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_portrait_frame)
  return role_portrait_frame_;
}
inline void TopNRole::set_role_portrait_frame(::google::protobuf::int32 value) {
  set_has_role_portrait_frame();
  role_portrait_frame_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_portrait_frame)
}

// required bytes role_signature = 23;
inline bool TopNRole::has_role_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TopNRole::set_has_role_signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TopNRole::clear_has_role_signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TopNRole::clear_role_signature() {
  role_signature_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_role_signature();
}
inline const ::std::string& TopNRole::role_signature() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_signature)
  return role_signature_.Get();
}
inline void TopNRole::set_role_signature(const ::std::string& value) {
  set_has_role_signature();
  role_signature_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.TopNRole.role_signature)
}
#if LANG_CXX11
inline void TopNRole::set_role_signature(::std::string&& value) {
  set_has_role_signature();
  role_signature_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.TopNRole.role_signature)
}
#endif
inline void TopNRole::set_role_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_role_signature();
  role_signature_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.TopNRole.role_signature)
}
inline void TopNRole::set_role_signature(const void* value,
    size_t size) {
  set_has_role_signature();
  role_signature_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.TopNRole.role_signature)
}
inline ::std::string* TopNRole::mutable_role_signature() {
  set_has_role_signature();
  // @@protoc_insertion_point(field_mutable:db.TopNRole.role_signature)
  return role_signature_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TopNRole::release_role_signature() {
  // @@protoc_insertion_point(field_release:db.TopNRole.role_signature)
  if (!has_role_signature()) {
    return NULL;
  }
  clear_has_role_signature();
  return role_signature_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TopNRole::set_allocated_role_signature(::std::string* role_signature) {
  if (role_signature != NULL) {
    set_has_role_signature();
  } else {
    clear_has_role_signature();
  }
  role_signature_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_signature,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.TopNRole.role_signature)
}
inline ::std::string* TopNRole::unsafe_arena_release_role_signature() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.TopNRole.role_signature)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_role_signature();
  return role_signature_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TopNRole::unsafe_arena_set_allocated_role_signature(
    ::std::string* role_signature) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (role_signature != NULL) {
    set_has_role_signature();
  } else {
    clear_has_role_signature();
  }
  role_signature_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      role_signature, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.TopNRole.role_signature)
}

// required int32 role_force = 24;
inline bool TopNRole::has_role_force() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TopNRole::set_has_role_force() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TopNRole::clear_has_role_force() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TopNRole::clear_role_force() {
  role_force_ = 0;
  clear_has_role_force();
}
inline ::google::protobuf::int32 TopNRole::role_force() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_force)
  return role_force_;
}
inline void TopNRole::set_role_force(::google::protobuf::int32 value) {
  set_has_role_force();
  role_force_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_force)
}

// required int32 role_guildid = 31;
inline bool TopNRole::has_role_guildid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void TopNRole::set_has_role_guildid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void TopNRole::clear_has_role_guildid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void TopNRole::clear_role_guildid() {
  role_guildid_ = 0;
  clear_has_role_guildid();
}
inline ::google::protobuf::int32 TopNRole::role_guildid() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_guildid)
  return role_guildid_;
}
inline void TopNRole::set_role_guildid(::google::protobuf::int32 value) {
  set_has_role_guildid();
  role_guildid_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_guildid)
}

// required bytes role_guild_name = 32;
inline bool TopNRole::has_role_guild_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TopNRole::set_has_role_guild_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TopNRole::clear_has_role_guild_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TopNRole::clear_role_guild_name() {
  role_guild_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_role_guild_name();
}
inline const ::std::string& TopNRole::role_guild_name() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_guild_name)
  return role_guild_name_.Get();
}
inline void TopNRole::set_role_guild_name(const ::std::string& value) {
  set_has_role_guild_name();
  role_guild_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.TopNRole.role_guild_name)
}
#if LANG_CXX11
inline void TopNRole::set_role_guild_name(::std::string&& value) {
  set_has_role_guild_name();
  role_guild_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.TopNRole.role_guild_name)
}
#endif
inline void TopNRole::set_role_guild_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_role_guild_name();
  role_guild_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.TopNRole.role_guild_name)
}
inline void TopNRole::set_role_guild_name(const void* value,
    size_t size) {
  set_has_role_guild_name();
  role_guild_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.TopNRole.role_guild_name)
}
inline ::std::string* TopNRole::mutable_role_guild_name() {
  set_has_role_guild_name();
  // @@protoc_insertion_point(field_mutable:db.TopNRole.role_guild_name)
  return role_guild_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TopNRole::release_role_guild_name() {
  // @@protoc_insertion_point(field_release:db.TopNRole.role_guild_name)
  if (!has_role_guild_name()) {
    return NULL;
  }
  clear_has_role_guild_name();
  return role_guild_name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TopNRole::set_allocated_role_guild_name(::std::string* role_guild_name) {
  if (role_guild_name != NULL) {
    set_has_role_guild_name();
  } else {
    clear_has_role_guild_name();
  }
  role_guild_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_guild_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.TopNRole.role_guild_name)
}
inline ::std::string* TopNRole::unsafe_arena_release_role_guild_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.TopNRole.role_guild_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_role_guild_name();
  return role_guild_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TopNRole::unsafe_arena_set_allocated_role_guild_name(
    ::std::string* role_guild_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (role_guild_name != NULL) {
    set_has_role_guild_name();
  } else {
    clear_has_role_guild_name();
  }
  role_guild_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      role_guild_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.TopNRole.role_guild_name)
}

// required bytes role_guild_badge = 33;
inline bool TopNRole::has_role_guild_badge() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TopNRole::set_has_role_guild_badge() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TopNRole::clear_has_role_guild_badge() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TopNRole::clear_role_guild_badge() {
  role_guild_badge_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_role_guild_badge();
}
inline const ::std::string& TopNRole::role_guild_badge() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_guild_badge)
  return role_guild_badge_.Get();
}
inline void TopNRole::set_role_guild_badge(const ::std::string& value) {
  set_has_role_guild_badge();
  role_guild_badge_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.TopNRole.role_guild_badge)
}
#if LANG_CXX11
inline void TopNRole::set_role_guild_badge(::std::string&& value) {
  set_has_role_guild_badge();
  role_guild_badge_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.TopNRole.role_guild_badge)
}
#endif
inline void TopNRole::set_role_guild_badge(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_role_guild_badge();
  role_guild_badge_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.TopNRole.role_guild_badge)
}
inline void TopNRole::set_role_guild_badge(const void* value,
    size_t size) {
  set_has_role_guild_badge();
  role_guild_badge_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.TopNRole.role_guild_badge)
}
inline ::std::string* TopNRole::mutable_role_guild_badge() {
  set_has_role_guild_badge();
  // @@protoc_insertion_point(field_mutable:db.TopNRole.role_guild_badge)
  return role_guild_badge_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TopNRole::release_role_guild_badge() {
  // @@protoc_insertion_point(field_release:db.TopNRole.role_guild_badge)
  if (!has_role_guild_badge()) {
    return NULL;
  }
  clear_has_role_guild_badge();
  return role_guild_badge_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void TopNRole::set_allocated_role_guild_badge(::std::string* role_guild_badge) {
  if (role_guild_badge != NULL) {
    set_has_role_guild_badge();
  } else {
    clear_has_role_guild_badge();
  }
  role_guild_badge_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role_guild_badge,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.TopNRole.role_guild_badge)
}
inline ::std::string* TopNRole::unsafe_arena_release_role_guild_badge() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.TopNRole.role_guild_badge)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_role_guild_badge();
  return role_guild_badge_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TopNRole::unsafe_arena_set_allocated_role_guild_badge(
    ::std::string* role_guild_badge) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (role_guild_badge != NULL) {
    set_has_role_guild_badge();
  } else {
    clear_has_role_guild_badge();
  }
  role_guild_badge_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      role_guild_badge, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.TopNRole.role_guild_badge)
}

// required int32 role_guild_title = 34;
inline bool TopNRole::has_role_guild_title() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TopNRole::set_has_role_guild_title() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TopNRole::clear_has_role_guild_title() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TopNRole::clear_role_guild_title() {
  role_guild_title_ = 0;
  clear_has_role_guild_title();
}
inline ::google::protobuf::int32 TopNRole::role_guild_title() const {
  // @@protoc_insertion_point(field_get:db.TopNRole.role_guild_title)
  return role_guild_title_;
}
inline void TopNRole::set_role_guild_title(::google::protobuf::int32 value) {
  set_has_role_guild_title();
  role_guild_title_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRole.role_guild_title)
}

// -------------------------------------------------------------------

// TopNRoleList

// repeated .db.TopNRole list = 1;
inline int TopNRoleList::list_size() const {
  return list_.size();
}
inline void TopNRoleList::clear_list() {
  list_.Clear();
}
inline ::db::TopNRole* TopNRoleList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.TopNRoleList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::TopNRole >*
TopNRoleList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.TopNRoleList.list)
  return &list_;
}
inline const ::db::TopNRole& TopNRoleList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.TopNRoleList.list)
  return list_.Get(index);
}
inline ::db::TopNRole* TopNRoleList::add_list() {
  // @@protoc_insertion_point(field_add:db.TopNRoleList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::TopNRole >&
TopNRoleList::list() const {
  // @@protoc_insertion_point(field_list:db.TopNRoleList.list)
  return list_;
}

// -------------------------------------------------------------------

// proc_i_load_top_n_roles_Parameter

// -------------------------------------------------------------------

// proc_i_load_top_n_roles_ReturnRecord

// required .db.TopNRole item = 1;
inline bool proc_i_load_top_n_roles_ReturnRecord::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_top_n_roles_ReturnRecord::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_top_n_roles_ReturnRecord::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_top_n_roles_ReturnRecord::clear_item() {
  if (item_ != NULL) item_->Clear();
  clear_has_item();
}
inline const ::db::TopNRole& proc_i_load_top_n_roles_ReturnRecord::_internal_item() const {
  return *item_;
}
inline const ::db::TopNRole& proc_i_load_top_n_roles_ReturnRecord::item() const {
  const ::db::TopNRole* p = item_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_top_n_roles.ReturnRecord.item)
  return p != NULL ? *p : *reinterpret_cast<const ::db::TopNRole*>(
      &::db::_TopNRole_default_instance_);
}
inline ::db::TopNRole* proc_i_load_top_n_roles_ReturnRecord::release_item() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_top_n_roles.ReturnRecord.item)
  clear_has_item();
  ::db::TopNRole* temp = item_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  item_ = NULL;
  return temp;
}
inline ::db::TopNRole* proc_i_load_top_n_roles_ReturnRecord::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_top_n_roles.ReturnRecord.item)
  clear_has_item();
  ::db::TopNRole* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::db::TopNRole* proc_i_load_top_n_roles_ReturnRecord::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::db::TopNRole>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_top_n_roles.ReturnRecord.item)
  return item_;
}
inline void proc_i_load_top_n_roles_ReturnRecord::set_allocated_item(::db::TopNRole* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(item);
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
  } else {
    clear_has_item();
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_top_n_roles.ReturnRecord.item)
}

// -------------------------------------------------------------------

// proc_i_load_top_n_roles

// optional .db.proc_i_load_top_n_roles.Parameter param = 1;
inline bool proc_i_load_top_n_roles::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_top_n_roles::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_top_n_roles::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_top_n_roles::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_load_top_n_roles_Parameter& proc_i_load_top_n_roles::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_load_top_n_roles_Parameter& proc_i_load_top_n_roles::param() const {
  const ::db::proc_i_load_top_n_roles_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_top_n_roles.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_load_top_n_roles_Parameter*>(
      &::db::_proc_i_load_top_n_roles_Parameter_default_instance_);
}
inline ::db::proc_i_load_top_n_roles_Parameter* proc_i_load_top_n_roles::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_top_n_roles.param)
  clear_has_param();
  ::db::proc_i_load_top_n_roles_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_top_n_roles_Parameter* proc_i_load_top_n_roles::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_top_n_roles.param)
  clear_has_param();
  ::db::proc_i_load_top_n_roles_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_top_n_roles_Parameter* proc_i_load_top_n_roles::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_load_top_n_roles_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_top_n_roles.param)
  return param_;
}
inline void proc_i_load_top_n_roles::set_allocated_param(::db::proc_i_load_top_n_roles_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_top_n_roles.param)
}

// repeated .db.proc_i_load_top_n_roles.ReturnRecord return_record_list = 2;
inline int proc_i_load_top_n_roles::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_i_load_top_n_roles::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_i_load_top_n_roles_ReturnRecord* proc_i_load_top_n_roles::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_top_n_roles.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_top_n_roles_ReturnRecord >*
proc_i_load_top_n_roles::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_i_load_top_n_roles.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_i_load_top_n_roles_ReturnRecord& proc_i_load_top_n_roles::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_top_n_roles.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_i_load_top_n_roles_ReturnRecord* proc_i_load_top_n_roles::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_i_load_top_n_roles.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_top_n_roles_ReturnRecord >&
proc_i_load_top_n_roles::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_i_load_top_n_roles.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// TopNRoleTeamMember

// required int32 ticketid = 1;
inline bool TopNRoleTeamMember::has_ticketid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TopNRoleTeamMember::set_has_ticketid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TopNRoleTeamMember::clear_has_ticketid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TopNRoleTeamMember::clear_ticketid() {
  ticketid_ = 0;
  clear_has_ticketid();
}
inline ::google::protobuf::int32 TopNRoleTeamMember::ticketid() const {
  // @@protoc_insertion_point(field_get:db.TopNRoleTeamMember.ticketid)
  return ticketid_;
}
inline void TopNRoleTeamMember::set_ticketid(::google::protobuf::int32 value) {
  set_has_ticketid();
  ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRoleTeamMember.ticketid)
}

// required int32 posid = 2;
inline bool TopNRoleTeamMember::has_posid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TopNRoleTeamMember::set_has_posid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TopNRoleTeamMember::clear_has_posid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TopNRoleTeamMember::clear_posid() {
  posid_ = 0;
  clear_has_posid();
}
inline ::google::protobuf::int32 TopNRoleTeamMember::posid() const {
  // @@protoc_insertion_point(field_get:db.TopNRoleTeamMember.posid)
  return posid_;
}
inline void TopNRoleTeamMember::set_posid(::google::protobuf::int32 value) {
  set_has_posid();
  posid_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRoleTeamMember.posid)
}

// required int32 memberid = 3;
inline bool TopNRoleTeamMember::has_memberid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TopNRoleTeamMember::set_has_memberid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TopNRoleTeamMember::clear_has_memberid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TopNRoleTeamMember::clear_memberid() {
  memberid_ = 0;
  clear_has_memberid();
}
inline ::google::protobuf::int32 TopNRoleTeamMember::memberid() const {
  // @@protoc_insertion_point(field_get:db.TopNRoleTeamMember.memberid)
  return memberid_;
}
inline void TopNRoleTeamMember::set_memberid(::google::protobuf::int32 value) {
  set_has_memberid();
  memberid_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRoleTeamMember.memberid)
}

// required uint64 member_typeid = 4;
inline bool TopNRoleTeamMember::has_member_typeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TopNRoleTeamMember::set_has_member_typeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TopNRoleTeamMember::clear_has_member_typeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TopNRoleTeamMember::clear_member_typeid() {
  member_typeid_ = GOOGLE_ULONGLONG(0);
  clear_has_member_typeid();
}
inline ::google::protobuf::uint64 TopNRoleTeamMember::member_typeid() const {
  // @@protoc_insertion_point(field_get:db.TopNRoleTeamMember.member_typeid)
  return member_typeid_;
}
inline void TopNRoleTeamMember::set_member_typeid(::google::protobuf::uint64 value) {
  set_has_member_typeid();
  member_typeid_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRoleTeamMember.member_typeid)
}

// required int32 member_level = 5;
inline bool TopNRoleTeamMember::has_member_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TopNRoleTeamMember::set_has_member_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TopNRoleTeamMember::clear_has_member_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TopNRoleTeamMember::clear_member_level() {
  member_level_ = 0;
  clear_has_member_level();
}
inline ::google::protobuf::int32 TopNRoleTeamMember::member_level() const {
  // @@protoc_insertion_point(field_get:db.TopNRoleTeamMember.member_level)
  return member_level_;
}
inline void TopNRoleTeamMember::set_member_level(::google::protobuf::int32 value) {
  set_has_member_level();
  member_level_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRoleTeamMember.member_level)
}

// required int32 member_star = 6;
inline bool TopNRoleTeamMember::has_member_star() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TopNRoleTeamMember::set_has_member_star() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TopNRoleTeamMember::clear_has_member_star() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TopNRoleTeamMember::clear_member_star() {
  member_star_ = 0;
  clear_has_member_star();
}
inline ::google::protobuf::int32 TopNRoleTeamMember::member_star() const {
  // @@protoc_insertion_point(field_get:db.TopNRoleTeamMember.member_star)
  return member_star_;
}
inline void TopNRoleTeamMember::set_member_star(::google::protobuf::int32 value) {
  set_has_member_star();
  member_star_ = value;
  // @@protoc_insertion_point(field_set:db.TopNRoleTeamMember.member_star)
}

// -------------------------------------------------------------------

// TopNRoleTeamMemberList

// repeated .db.TopNRoleTeamMember list = 1;
inline int TopNRoleTeamMemberList::list_size() const {
  return list_.size();
}
inline void TopNRoleTeamMemberList::clear_list() {
  list_.Clear();
}
inline ::db::TopNRoleTeamMember* TopNRoleTeamMemberList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.TopNRoleTeamMemberList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::TopNRoleTeamMember >*
TopNRoleTeamMemberList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.TopNRoleTeamMemberList.list)
  return &list_;
}
inline const ::db::TopNRoleTeamMember& TopNRoleTeamMemberList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.TopNRoleTeamMemberList.list)
  return list_.Get(index);
}
inline ::db::TopNRoleTeamMember* TopNRoleTeamMemberList::add_list() {
  // @@protoc_insertion_point(field_add:db.TopNRoleTeamMemberList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::TopNRoleTeamMember >&
TopNRoleTeamMemberList::list() const {
  // @@protoc_insertion_point(field_list:db.TopNRoleTeamMemberList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigFriending

// required int32 level = 1;
inline bool ConfigFriending::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigFriending::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigFriending::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigFriending::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigFriending::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigFriending.level)
  return level_;
}
inline void ConfigFriending::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFriending.level)
}

// required int32 candidate_num_max = 2;
inline bool ConfigFriending::has_candidate_num_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigFriending::set_has_candidate_num_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigFriending::clear_has_candidate_num_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigFriending::clear_candidate_num_max() {
  candidate_num_max_ = 0;
  clear_has_candidate_num_max();
}
inline ::google::protobuf::int32 ConfigFriending::candidate_num_max() const {
  // @@protoc_insertion_point(field_get:db.ConfigFriending.candidate_num_max)
  return candidate_num_max_;
}
inline void ConfigFriending::set_candidate_num_max(::google::protobuf::int32 value) {
  set_has_candidate_num_max();
  candidate_num_max_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFriending.candidate_num_max)
}

// required int32 adding_num_max = 3;
inline bool ConfigFriending::has_adding_num_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigFriending::set_has_adding_num_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigFriending::clear_has_adding_num_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigFriending::clear_adding_num_max() {
  adding_num_max_ = 0;
  clear_has_adding_num_max();
}
inline ::google::protobuf::int32 ConfigFriending::adding_num_max() const {
  // @@protoc_insertion_point(field_get:db.ConfigFriending.adding_num_max)
  return adding_num_max_;
}
inline void ConfigFriending::set_adding_num_max(::google::protobuf::int32 value) {
  set_has_adding_num_max();
  adding_num_max_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFriending.adding_num_max)
}

// required int32 confirming_num_max = 4;
inline bool ConfigFriending::has_confirming_num_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigFriending::set_has_confirming_num_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigFriending::clear_has_confirming_num_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigFriending::clear_confirming_num_max() {
  confirming_num_max_ = 0;
  clear_has_confirming_num_max();
}
inline ::google::protobuf::int32 ConfigFriending::confirming_num_max() const {
  // @@protoc_insertion_point(field_get:db.ConfigFriending.confirming_num_max)
  return confirming_num_max_;
}
inline void ConfigFriending::set_confirming_num_max(::google::protobuf::int32 value) {
  set_has_confirming_num_max();
  confirming_num_max_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFriending.confirming_num_max)
}

// required int32 ok_num_max = 5;
inline bool ConfigFriending::has_ok_num_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigFriending::set_has_ok_num_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigFriending::clear_has_ok_num_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigFriending::clear_ok_num_max() {
  ok_num_max_ = 0;
  clear_has_ok_num_max();
}
inline ::google::protobuf::int32 ConfigFriending::ok_num_max() const {
  // @@protoc_insertion_point(field_get:db.ConfigFriending.ok_num_max)
  return ok_num_max_;
}
inline void ConfigFriending::set_ok_num_max(::google::protobuf::int32 value) {
  set_has_ok_num_max();
  ok_num_max_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFriending.ok_num_max)
}

// -------------------------------------------------------------------

// ConfigFriendingList

// repeated .db.ConfigFriending list = 1;
inline int ConfigFriendingList::list_size() const {
  return list_.size();
}
inline void ConfigFriendingList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigFriending* ConfigFriendingList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigFriendingList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigFriending >*
ConfigFriendingList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigFriendingList.list)
  return &list_;
}
inline const ::db::ConfigFriending& ConfigFriendingList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigFriendingList.list)
  return list_.Get(index);
}
inline ::db::ConfigFriending* ConfigFriendingList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigFriendingList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigFriending >&
ConfigFriendingList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigFriendingList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGameInvite

// required int32 id = 1;
inline bool ConfigGameInvite::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGameInvite::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGameInvite::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGameInvite::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigGameInvite::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigGameInvite.id)
  return id_;
}
inline void ConfigGameInvite::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGameInvite.id)
}

// required bytes reward = 2;
inline bool ConfigGameInvite::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGameInvite::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGameInvite::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGameInvite::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGameInvite::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGameInvite.reward)
  return reward_.Get();
}
inline void ConfigGameInvite::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGameInvite.reward)
}
#if LANG_CXX11
inline void ConfigGameInvite::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGameInvite.reward)
}
#endif
inline void ConfigGameInvite::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGameInvite.reward)
}
inline void ConfigGameInvite::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGameInvite.reward)
}
inline ::std::string* ConfigGameInvite::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGameInvite.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGameInvite::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGameInvite.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGameInvite::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGameInvite.reward)
}
inline ::std::string* ConfigGameInvite::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGameInvite.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGameInvite::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGameInvite.reward)
}

// optional int32 cond_game_invite_ok_role_level = 11;
inline bool ConfigGameInvite::has_cond_game_invite_ok_role_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGameInvite::set_has_cond_game_invite_ok_role_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGameInvite::clear_has_cond_game_invite_ok_role_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGameInvite::clear_cond_game_invite_ok_role_level() {
  cond_game_invite_ok_role_level_ = 0;
  clear_has_cond_game_invite_ok_role_level();
}
inline ::google::protobuf::int32 ConfigGameInvite::cond_game_invite_ok_role_level() const {
  // @@protoc_insertion_point(field_get:db.ConfigGameInvite.cond_game_invite_ok_role_level)
  return cond_game_invite_ok_role_level_;
}
inline void ConfigGameInvite::set_cond_game_invite_ok_role_level(::google::protobuf::int32 value) {
  set_has_cond_game_invite_ok_role_level();
  cond_game_invite_ok_role_level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGameInvite.cond_game_invite_ok_role_level)
}

// -------------------------------------------------------------------

// ConfigGameInviteList

// repeated .db.ConfigGameInvite list = 1;
inline int ConfigGameInviteList::list_size() const {
  return list_.size();
}
inline void ConfigGameInviteList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGameInvite* ConfigGameInviteList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGameInviteList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGameInvite >*
ConfigGameInviteList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGameInviteList.list)
  return &list_;
}
inline const ::db::ConfigGameInvite& ConfigGameInviteList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGameInviteList.list)
  return list_.Get(index);
}
inline ::db::ConfigGameInvite* ConfigGameInviteList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGameInviteList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGameInvite >&
ConfigGameInviteList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGameInviteList.list)
  return list_;
}

// -------------------------------------------------------------------

// proc_load_config_friending_Parameter

// -------------------------------------------------------------------

// proc_load_config_friending_ReturnRecord

// required .db.ConfigFriending cfg = 1;
inline bool proc_load_config_friending_ReturnRecord::has_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_config_friending_ReturnRecord::set_has_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_config_friending_ReturnRecord::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_config_friending_ReturnRecord::clear_cfg() {
  if (cfg_ != NULL) cfg_->Clear();
  clear_has_cfg();
}
inline const ::db::ConfigFriending& proc_load_config_friending_ReturnRecord::_internal_cfg() const {
  return *cfg_;
}
inline const ::db::ConfigFriending& proc_load_config_friending_ReturnRecord::cfg() const {
  const ::db::ConfigFriending* p = cfg_;
  // @@protoc_insertion_point(field_get:db.proc_load_config_friending.ReturnRecord.cfg)
  return p != NULL ? *p : *reinterpret_cast<const ::db::ConfigFriending*>(
      &::db::_ConfigFriending_default_instance_);
}
inline ::db::ConfigFriending* proc_load_config_friending_ReturnRecord::release_cfg() {
  // @@protoc_insertion_point(field_release:db.proc_load_config_friending.ReturnRecord.cfg)
  clear_has_cfg();
  ::db::ConfigFriending* temp = cfg_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  cfg_ = NULL;
  return temp;
}
inline ::db::ConfigFriending* proc_load_config_friending_ReturnRecord::unsafe_arena_release_cfg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_config_friending.ReturnRecord.cfg)
  clear_has_cfg();
  ::db::ConfigFriending* temp = cfg_;
  cfg_ = NULL;
  return temp;
}
inline ::db::ConfigFriending* proc_load_config_friending_ReturnRecord::mutable_cfg() {
  set_has_cfg();
  if (cfg_ == NULL) {
    auto* p = CreateMaybeMessage<::db::ConfigFriending>(GetArenaNoVirtual());
    cfg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_friending.ReturnRecord.cfg)
  return cfg_;
}
inline void proc_load_config_friending_ReturnRecord::set_allocated_cfg(::db::ConfigFriending* cfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cfg_;
  }
  if (cfg) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(cfg);
    if (message_arena != submessage_arena) {
      cfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cfg, submessage_arena);
    }
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  cfg_ = cfg;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_config_friending.ReturnRecord.cfg)
}

// -------------------------------------------------------------------

// proc_load_config_friending

// optional .db.proc_load_config_friending.Parameter param = 1;
inline bool proc_load_config_friending::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_config_friending::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_config_friending::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_config_friending::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_load_config_friending_Parameter& proc_load_config_friending::_internal_param() const {
  return *param_;
}
inline const ::db::proc_load_config_friending_Parameter& proc_load_config_friending::param() const {
  const ::db::proc_load_config_friending_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_load_config_friending.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_load_config_friending_Parameter*>(
      &::db::_proc_load_config_friending_Parameter_default_instance_);
}
inline ::db::proc_load_config_friending_Parameter* proc_load_config_friending::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_load_config_friending.param)
  clear_has_param();
  ::db::proc_load_config_friending_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_config_friending_Parameter* proc_load_config_friending::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_config_friending.param)
  clear_has_param();
  ::db::proc_load_config_friending_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_config_friending_Parameter* proc_load_config_friending::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_load_config_friending_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_friending.param)
  return param_;
}
inline void proc_load_config_friending::set_allocated_param(::db::proc_load_config_friending_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_config_friending.param)
}

// repeated .db.proc_load_config_friending.ReturnRecord return_record_list = 2;
inline int proc_load_config_friending::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_load_config_friending::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_load_config_friending_ReturnRecord* proc_load_config_friending::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_friending.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_friending_ReturnRecord >*
proc_load_config_friending::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_load_config_friending.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_load_config_friending_ReturnRecord& proc_load_config_friending::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_load_config_friending.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_load_config_friending_ReturnRecord* proc_load_config_friending::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_load_config_friending.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_friending_ReturnRecord >&
proc_load_config_friending::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_load_config_friending.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_load_config_game_invite_Parameter

// -------------------------------------------------------------------

// proc_load_config_game_invite_ReturnRecord

// required .db.ConfigGameInvite cfg = 1;
inline bool proc_load_config_game_invite_ReturnRecord::has_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_config_game_invite_ReturnRecord::set_has_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_config_game_invite_ReturnRecord::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_config_game_invite_ReturnRecord::clear_cfg() {
  if (cfg_ != NULL) cfg_->Clear();
  clear_has_cfg();
}
inline const ::db::ConfigGameInvite& proc_load_config_game_invite_ReturnRecord::_internal_cfg() const {
  return *cfg_;
}
inline const ::db::ConfigGameInvite& proc_load_config_game_invite_ReturnRecord::cfg() const {
  const ::db::ConfigGameInvite* p = cfg_;
  // @@protoc_insertion_point(field_get:db.proc_load_config_game_invite.ReturnRecord.cfg)
  return p != NULL ? *p : *reinterpret_cast<const ::db::ConfigGameInvite*>(
      &::db::_ConfigGameInvite_default_instance_);
}
inline ::db::ConfigGameInvite* proc_load_config_game_invite_ReturnRecord::release_cfg() {
  // @@protoc_insertion_point(field_release:db.proc_load_config_game_invite.ReturnRecord.cfg)
  clear_has_cfg();
  ::db::ConfigGameInvite* temp = cfg_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  cfg_ = NULL;
  return temp;
}
inline ::db::ConfigGameInvite* proc_load_config_game_invite_ReturnRecord::unsafe_arena_release_cfg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_config_game_invite.ReturnRecord.cfg)
  clear_has_cfg();
  ::db::ConfigGameInvite* temp = cfg_;
  cfg_ = NULL;
  return temp;
}
inline ::db::ConfigGameInvite* proc_load_config_game_invite_ReturnRecord::mutable_cfg() {
  set_has_cfg();
  if (cfg_ == NULL) {
    auto* p = CreateMaybeMessage<::db::ConfigGameInvite>(GetArenaNoVirtual());
    cfg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_game_invite.ReturnRecord.cfg)
  return cfg_;
}
inline void proc_load_config_game_invite_ReturnRecord::set_allocated_cfg(::db::ConfigGameInvite* cfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cfg_;
  }
  if (cfg) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(cfg);
    if (message_arena != submessage_arena) {
      cfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cfg, submessage_arena);
    }
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  cfg_ = cfg;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_config_game_invite.ReturnRecord.cfg)
}

// -------------------------------------------------------------------

// proc_load_config_game_invite

// optional .db.proc_load_config_game_invite.Parameter param = 1;
inline bool proc_load_config_game_invite::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_config_game_invite::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_config_game_invite::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_config_game_invite::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_load_config_game_invite_Parameter& proc_load_config_game_invite::_internal_param() const {
  return *param_;
}
inline const ::db::proc_load_config_game_invite_Parameter& proc_load_config_game_invite::param() const {
  const ::db::proc_load_config_game_invite_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_load_config_game_invite.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_load_config_game_invite_Parameter*>(
      &::db::_proc_load_config_game_invite_Parameter_default_instance_);
}
inline ::db::proc_load_config_game_invite_Parameter* proc_load_config_game_invite::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_load_config_game_invite.param)
  clear_has_param();
  ::db::proc_load_config_game_invite_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_config_game_invite_Parameter* proc_load_config_game_invite::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_config_game_invite.param)
  clear_has_param();
  ::db::proc_load_config_game_invite_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_config_game_invite_Parameter* proc_load_config_game_invite::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_load_config_game_invite_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_game_invite.param)
  return param_;
}
inline void proc_load_config_game_invite::set_allocated_param(::db::proc_load_config_game_invite_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_config_game_invite.param)
}

// repeated .db.proc_load_config_game_invite.ReturnRecord return_record_list = 2;
inline int proc_load_config_game_invite::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_load_config_game_invite::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_load_config_game_invite_ReturnRecord* proc_load_config_game_invite::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_game_invite.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_game_invite_ReturnRecord >*
proc_load_config_game_invite::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_load_config_game_invite.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_load_config_game_invite_ReturnRecord& proc_load_config_game_invite::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_load_config_game_invite.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_load_config_game_invite_ReturnRecord* proc_load_config_game_invite::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_load_config_game_invite.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_game_invite_ReturnRecord >&
proc_load_config_game_invite::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_load_config_game_invite.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// UserFriend

// required int32 owner_ticketid = 1;
inline bool UserFriend::has_owner_ticketid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserFriend::set_has_owner_ticketid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserFriend::clear_has_owner_ticketid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserFriend::clear_owner_ticketid() {
  owner_ticketid_ = 0;
  clear_has_owner_ticketid();
}
inline ::google::protobuf::int32 UserFriend::owner_ticketid() const {
  // @@protoc_insertion_point(field_get:db.UserFriend.owner_ticketid)
  return owner_ticketid_;
}
inline void UserFriend::set_owner_ticketid(::google::protobuf::int32 value) {
  set_has_owner_ticketid();
  owner_ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.UserFriend.owner_ticketid)
}

// required int32 friend_ticketid = 2;
inline bool UserFriend::has_friend_ticketid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserFriend::set_has_friend_ticketid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserFriend::clear_has_friend_ticketid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserFriend::clear_friend_ticketid() {
  friend_ticketid_ = 0;
  clear_has_friend_ticketid();
}
inline ::google::protobuf::int32 UserFriend::friend_ticketid() const {
  // @@protoc_insertion_point(field_get:db.UserFriend.friend_ticketid)
  return friend_ticketid_;
}
inline void UserFriend::set_friend_ticketid(::google::protobuf::int32 value) {
  set_has_friend_ticketid();
  friend_ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.UserFriend.friend_ticketid)
}

// required int32 state = 3;
inline bool UserFriend::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserFriend::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserFriend::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserFriend::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UserFriend::state() const {
  // @@protoc_insertion_point(field_get:db.UserFriend.state)
  return state_;
}
inline void UserFriend::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.UserFriend.state)
}

// optional sfixed64 optime = 4;
inline bool UserFriend::has_optime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserFriend::set_has_optime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserFriend::clear_has_optime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserFriend::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 UserFriend::optime() const {
  // @@protoc_insertion_point(field_get:db.UserFriend.optime)
  return optime_;
}
inline void UserFriend::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.UserFriend.optime)
}

// -------------------------------------------------------------------

// UserFriendList

// repeated .db.UserFriend list = 1;
inline int UserFriendList::list_size() const {
  return list_.size();
}
inline void UserFriendList::clear_list() {
  list_.Clear();
}
inline ::db::UserFriend* UserFriendList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.UserFriendList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::UserFriend >*
UserFriendList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.UserFriendList.list)
  return &list_;
}
inline const ::db::UserFriend& UserFriendList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.UserFriendList.list)
  return list_.Get(index);
}
inline ::db::UserFriend* UserFriendList::add_list() {
  // @@protoc_insertion_point(field_add:db.UserFriendList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::UserFriend >&
UserFriendList::list() const {
  // @@protoc_insertion_point(field_list:db.UserFriendList.list)
  return list_;
}

// -------------------------------------------------------------------

// GameStatsUserFriend

// required int32 owner_ticketid = 1;
inline bool GameStatsUserFriend::has_owner_ticketid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameStatsUserFriend::set_has_owner_ticketid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameStatsUserFriend::clear_has_owner_ticketid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameStatsUserFriend::clear_owner_ticketid() {
  owner_ticketid_ = 0;
  clear_has_owner_ticketid();
}
inline ::google::protobuf::int32 GameStatsUserFriend::owner_ticketid() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.owner_ticketid)
  return owner_ticketid_;
}
inline void GameStatsUserFriend::set_owner_ticketid(::google::protobuf::int32 value) {
  set_has_owner_ticketid();
  owner_ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.owner_ticketid)
}

// required int32 friend_ticketid = 2;
inline bool GameStatsUserFriend::has_friend_ticketid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameStatsUserFriend::set_has_friend_ticketid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameStatsUserFriend::clear_has_friend_ticketid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameStatsUserFriend::clear_friend_ticketid() {
  friend_ticketid_ = 0;
  clear_has_friend_ticketid();
}
inline ::google::protobuf::int32 GameStatsUserFriend::friend_ticketid() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.friend_ticketid)
  return friend_ticketid_;
}
inline void GameStatsUserFriend::set_friend_ticketid(::google::protobuf::int32 value) {
  set_has_friend_ticketid();
  friend_ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.friend_ticketid)
}

// optional sfixed64 challenge_time = 11;
inline bool GameStatsUserFriend::has_challenge_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameStatsUserFriend::set_has_challenge_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameStatsUserFriend::clear_has_challenge_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameStatsUserFriend::clear_challenge_time() {
  challenge_time_ = GOOGLE_LONGLONG(0);
  clear_has_challenge_time();
}
inline ::google::protobuf::int64 GameStatsUserFriend::challenge_time() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.challenge_time)
  return challenge_time_;
}
inline void GameStatsUserFriend::set_challenge_time(::google::protobuf::int64 value) {
  set_has_challenge_time();
  challenge_time_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.challenge_time)
}

// optional int32 challenge_score = 12;
inline bool GameStatsUserFriend::has_challenge_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameStatsUserFriend::set_has_challenge_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameStatsUserFriend::clear_has_challenge_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameStatsUserFriend::clear_challenge_score() {
  challenge_score_ = 0;
  clear_has_challenge_score();
}
inline ::google::protobuf::int32 GameStatsUserFriend::challenge_score() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.challenge_score)
  return challenge_score_;
}
inline void GameStatsUserFriend::set_challenge_score(::google::protobuf::int32 value) {
  set_has_challenge_score();
  challenge_score_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.challenge_score)
}

// optional int32 gift_state = 21;
inline bool GameStatsUserFriend::has_gift_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameStatsUserFriend::set_has_gift_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameStatsUserFriend::clear_has_gift_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameStatsUserFriend::clear_gift_state() {
  gift_state_ = 0;
  clear_has_gift_state();
}
inline ::google::protobuf::int32 GameStatsUserFriend::gift_state() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.gift_state)
  return gift_state_;
}
inline void GameStatsUserFriend::set_gift_state(::google::protobuf::int32 value) {
  set_has_gift_state();
  gift_state_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.gift_state)
}

// optional uint64 gift_item_typeid = 22;
inline bool GameStatsUserFriend::has_gift_item_typeid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameStatsUserFriend::set_has_gift_item_typeid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameStatsUserFriend::clear_has_gift_item_typeid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameStatsUserFriend::clear_gift_item_typeid() {
  gift_item_typeid_ = GOOGLE_ULONGLONG(0);
  clear_has_gift_item_typeid();
}
inline ::google::protobuf::uint64 GameStatsUserFriend::gift_item_typeid() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.gift_item_typeid)
  return gift_item_typeid_;
}
inline void GameStatsUserFriend::set_gift_item_typeid(::google::protobuf::uint64 value) {
  set_has_gift_item_typeid();
  gift_item_typeid_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.gift_item_typeid)
}

// optional int32 gift_item_num = 23;
inline bool GameStatsUserFriend::has_gift_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameStatsUserFriend::set_has_gift_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameStatsUserFriend::clear_has_gift_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameStatsUserFriend::clear_gift_item_num() {
  gift_item_num_ = 0;
  clear_has_gift_item_num();
}
inline ::google::protobuf::int32 GameStatsUserFriend::gift_item_num() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.gift_item_num)
  return gift_item_num_;
}
inline void GameStatsUserFriend::set_gift_item_num(::google::protobuf::int32 value) {
  set_has_gift_item_num();
  gift_item_num_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.gift_item_num)
}

// optional sfixed64 gift_create_time = 24;
inline bool GameStatsUserFriend::has_gift_create_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameStatsUserFriend::set_has_gift_create_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameStatsUserFriend::clear_has_gift_create_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameStatsUserFriend::clear_gift_create_time() {
  gift_create_time_ = GOOGLE_LONGLONG(0);
  clear_has_gift_create_time();
}
inline ::google::protobuf::int64 GameStatsUserFriend::gift_create_time() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.gift_create_time)
  return gift_create_time_;
}
inline void GameStatsUserFriend::set_gift_create_time(::google::protobuf::int64 value) {
  set_has_gift_create_time();
  gift_create_time_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.gift_create_time)
}

// optional sfixed64 gift_accept_time = 25;
inline bool GameStatsUserFriend::has_gift_accept_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameStatsUserFriend::set_has_gift_accept_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameStatsUserFriend::clear_has_gift_accept_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameStatsUserFriend::clear_gift_accept_time() {
  gift_accept_time_ = GOOGLE_LONGLONG(0);
  clear_has_gift_accept_time();
}
inline ::google::protobuf::int64 GameStatsUserFriend::gift_accept_time() const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriend.gift_accept_time)
  return gift_accept_time_;
}
inline void GameStatsUserFriend::set_gift_accept_time(::google::protobuf::int64 value) {
  set_has_gift_accept_time();
  gift_accept_time_ = value;
  // @@protoc_insertion_point(field_set:db.GameStatsUserFriend.gift_accept_time)
}

// -------------------------------------------------------------------

// GameStatsUserFriendList

// repeated .db.GameStatsUserFriend list = 1;
inline int GameStatsUserFriendList::list_size() const {
  return list_.size();
}
inline void GameStatsUserFriendList::clear_list() {
  list_.Clear();
}
inline ::db::GameStatsUserFriend* GameStatsUserFriendList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.GameStatsUserFriendList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::GameStatsUserFriend >*
GameStatsUserFriendList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.GameStatsUserFriendList.list)
  return &list_;
}
inline const ::db::GameStatsUserFriend& GameStatsUserFriendList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.GameStatsUserFriendList.list)
  return list_.Get(index);
}
inline ::db::GameStatsUserFriend* GameStatsUserFriendList::add_list() {
  // @@protoc_insertion_point(field_add:db.GameStatsUserFriendList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::GameStatsUserFriend >&
GameStatsUserFriendList::list() const {
  // @@protoc_insertion_point(field_list:db.GameStatsUserFriendList.list)
  return list_;
}

// -------------------------------------------------------------------

// UserGameInvite

// required int32 owner_ticketid = 1;
inline bool UserGameInvite::has_owner_ticketid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGameInvite::set_has_owner_ticketid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGameInvite::clear_has_owner_ticketid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGameInvite::clear_owner_ticketid() {
  owner_ticketid_ = 0;
  clear_has_owner_ticketid();
}
inline ::google::protobuf::int32 UserGameInvite::owner_ticketid() const {
  // @@protoc_insertion_point(field_get:db.UserGameInvite.owner_ticketid)
  return owner_ticketid_;
}
inline void UserGameInvite::set_owner_ticketid(::google::protobuf::int32 value) {
  set_has_owner_ticketid();
  owner_ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInvite.owner_ticketid)
}

// required int32 invitee_ticketid = 2;
inline bool UserGameInvite::has_invitee_ticketid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGameInvite::set_has_invitee_ticketid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGameInvite::clear_has_invitee_ticketid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGameInvite::clear_invitee_ticketid() {
  invitee_ticketid_ = 0;
  clear_has_invitee_ticketid();
}
inline ::google::protobuf::int32 UserGameInvite::invitee_ticketid() const {
  // @@protoc_insertion_point(field_get:db.UserGameInvite.invitee_ticketid)
  return invitee_ticketid_;
}
inline void UserGameInvite::set_invitee_ticketid(::google::protobuf::int32 value) {
  set_has_invitee_ticketid();
  invitee_ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInvite.invitee_ticketid)
}

// required int32 invitee_level = 3;
inline bool UserGameInvite::has_invitee_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGameInvite::set_has_invitee_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGameInvite::clear_has_invitee_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGameInvite::clear_invitee_level() {
  invitee_level_ = 0;
  clear_has_invitee_level();
}
inline ::google::protobuf::int32 UserGameInvite::invitee_level() const {
  // @@protoc_insertion_point(field_get:db.UserGameInvite.invitee_level)
  return invitee_level_;
}
inline void UserGameInvite::set_invitee_level(::google::protobuf::int32 value) {
  set_has_invitee_level();
  invitee_level_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInvite.invitee_level)
}

// required int32 state = 4;
inline bool UserGameInvite::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserGameInvite::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserGameInvite::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserGameInvite::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UserGameInvite::state() const {
  // @@protoc_insertion_point(field_get:db.UserGameInvite.state)
  return state_;
}
inline void UserGameInvite::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInvite.state)
}

// optional sfixed64 optime = 5;
inline bool UserGameInvite::has_optime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserGameInvite::set_has_optime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserGameInvite::clear_has_optime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserGameInvite::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 UserGameInvite::optime() const {
  // @@protoc_insertion_point(field_get:db.UserGameInvite.optime)
  return optime_;
}
inline void UserGameInvite::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInvite.optime)
}

// -------------------------------------------------------------------

// UserGameInviteList

// repeated .db.UserGameInvite list = 1;
inline int UserGameInviteList::list_size() const {
  return list_.size();
}
inline void UserGameInviteList::clear_list() {
  list_.Clear();
}
inline ::db::UserGameInvite* UserGameInviteList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.UserGameInviteList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::UserGameInvite >*
UserGameInviteList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.UserGameInviteList.list)
  return &list_;
}
inline const ::db::UserGameInvite& UserGameInviteList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteList.list)
  return list_.Get(index);
}
inline ::db::UserGameInvite* UserGameInviteList::add_list() {
  // @@protoc_insertion_point(field_add:db.UserGameInviteList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::UserGameInvite >&
UserGameInviteList::list() const {
  // @@protoc_insertion_point(field_list:db.UserGameInviteList.list)
  return list_;
}

// -------------------------------------------------------------------

// UserGameInviteReward

// required int32 owner_ticketid = 1;
inline bool UserGameInviteReward::has_owner_ticketid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGameInviteReward::set_has_owner_ticketid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGameInviteReward::clear_has_owner_ticketid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGameInviteReward::clear_owner_ticketid() {
  owner_ticketid_ = 0;
  clear_has_owner_ticketid();
}
inline ::google::protobuf::int32 UserGameInviteReward::owner_ticketid() const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteReward.owner_ticketid)
  return owner_ticketid_;
}
inline void UserGameInviteReward::set_owner_ticketid(::google::protobuf::int32 value) {
  set_has_owner_ticketid();
  owner_ticketid_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInviteReward.owner_ticketid)
}

// required int32 slotid = 2;
inline bool UserGameInviteReward::has_slotid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGameInviteReward::set_has_slotid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGameInviteReward::clear_has_slotid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGameInviteReward::clear_slotid() {
  slotid_ = 0;
  clear_has_slotid();
}
inline ::google::protobuf::int32 UserGameInviteReward::slotid() const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteReward.slotid)
  return slotid_;
}
inline void UserGameInviteReward::set_slotid(::google::protobuf::int32 value) {
  set_has_slotid();
  slotid_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInviteReward.slotid)
}

// required int32 reward_state = 3;
inline bool UserGameInviteReward::has_reward_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGameInviteReward::set_has_reward_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGameInviteReward::clear_has_reward_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGameInviteReward::clear_reward_state() {
  reward_state_ = 0;
  clear_has_reward_state();
}
inline ::google::protobuf::int32 UserGameInviteReward::reward_state() const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteReward.reward_state)
  return reward_state_;
}
inline void UserGameInviteReward::set_reward_state(::google::protobuf::int32 value) {
  set_has_reward_state();
  reward_state_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInviteReward.reward_state)
}

// required int32 reward_reason = 4;
inline bool UserGameInviteReward::has_reward_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserGameInviteReward::set_has_reward_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserGameInviteReward::clear_has_reward_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserGameInviteReward::clear_reward_reason() {
  reward_reason_ = 0;
  clear_has_reward_reason();
}
inline ::google::protobuf::int32 UserGameInviteReward::reward_reason() const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteReward.reward_reason)
  return reward_reason_;
}
inline void UserGameInviteReward::set_reward_reason(::google::protobuf::int32 value) {
  set_has_reward_reason();
  reward_reason_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInviteReward.reward_reason)
}

// required int32 item_type = 11;
inline bool UserGameInviteReward::has_item_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserGameInviteReward::set_has_item_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserGameInviteReward::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserGameInviteReward::clear_item_type() {
  item_type_ = 0;
  clear_has_item_type();
}
inline ::google::protobuf::int32 UserGameInviteReward::item_type() const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteReward.item_type)
  return item_type_;
}
inline void UserGameInviteReward::set_item_type(::google::protobuf::int32 value) {
  set_has_item_type();
  item_type_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInviteReward.item_type)
}

// required uint64 item_typeid = 12;
inline bool UserGameInviteReward::has_item_typeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserGameInviteReward::set_has_item_typeid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserGameInviteReward::clear_has_item_typeid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserGameInviteReward::clear_item_typeid() {
  item_typeid_ = GOOGLE_ULONGLONG(0);
  clear_has_item_typeid();
}
inline ::google::protobuf::uint64 UserGameInviteReward::item_typeid() const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteReward.item_typeid)
  return item_typeid_;
}
inline void UserGameInviteReward::set_item_typeid(::google::protobuf::uint64 value) {
  set_has_item_typeid();
  item_typeid_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInviteReward.item_typeid)
}

// required int32 item_num = 13;
inline bool UserGameInviteReward::has_item_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserGameInviteReward::set_has_item_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserGameInviteReward::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserGameInviteReward::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 UserGameInviteReward::item_num() const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteReward.item_num)
  return item_num_;
}
inline void UserGameInviteReward::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserGameInviteReward.item_num)
}

// -------------------------------------------------------------------

// UserGameInviteRewardList

// repeated .db.UserGameInviteReward list = 1;
inline int UserGameInviteRewardList::list_size() const {
  return list_.size();
}
inline void UserGameInviteRewardList::clear_list() {
  list_.Clear();
}
inline ::db::UserGameInviteReward* UserGameInviteRewardList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.UserGameInviteRewardList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::UserGameInviteReward >*
UserGameInviteRewardList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.UserGameInviteRewardList.list)
  return &list_;
}
inline const ::db::UserGameInviteReward& UserGameInviteRewardList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.UserGameInviteRewardList.list)
  return list_.Get(index);
}
inline ::db::UserGameInviteReward* UserGameInviteRewardList::add_list() {
  // @@protoc_insertion_point(field_add:db.UserGameInviteRewardList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::UserGameInviteReward >&
UserGameInviteRewardList::list() const {
  // @@protoc_insertion_point(field_list:db.UserGameInviteRewardList.list)
  return list_;
}

// -------------------------------------------------------------------

// proc_i_load_user_friends_Parameter

// -------------------------------------------------------------------

// proc_i_load_user_friends_ReturnRecord

// required .db.UserFriend item = 1;
inline bool proc_i_load_user_friends_ReturnRecord::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_friends_ReturnRecord::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_friends_ReturnRecord::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_friends_ReturnRecord::clear_item() {
  if (item_ != NULL) item_->Clear();
  clear_has_item();
}
inline const ::db::UserFriend& proc_i_load_user_friends_ReturnRecord::_internal_item() const {
  return *item_;
}
inline const ::db::UserFriend& proc_i_load_user_friends_ReturnRecord::item() const {
  const ::db::UserFriend* p = item_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_friends.ReturnRecord.item)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserFriend*>(
      &::db::_UserFriend_default_instance_);
}
inline ::db::UserFriend* proc_i_load_user_friends_ReturnRecord::release_item() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_friends.ReturnRecord.item)
  clear_has_item();
  ::db::UserFriend* temp = item_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  item_ = NULL;
  return temp;
}
inline ::db::UserFriend* proc_i_load_user_friends_ReturnRecord::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_friends.ReturnRecord.item)
  clear_has_item();
  ::db::UserFriend* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::db::UserFriend* proc_i_load_user_friends_ReturnRecord::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserFriend>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_friends.ReturnRecord.item)
  return item_;
}
inline void proc_i_load_user_friends_ReturnRecord::set_allocated_item(::db::UserFriend* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(item);
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
  } else {
    clear_has_item();
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_friends.ReturnRecord.item)
}

// -------------------------------------------------------------------

// proc_i_load_user_friends

// optional .db.proc_i_load_user_friends.Parameter param = 1;
inline bool proc_i_load_user_friends::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_friends::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_friends::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_friends::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_load_user_friends_Parameter& proc_i_load_user_friends::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_load_user_friends_Parameter& proc_i_load_user_friends::param() const {
  const ::db::proc_i_load_user_friends_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_friends.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_load_user_friends_Parameter*>(
      &::db::_proc_i_load_user_friends_Parameter_default_instance_);
}
inline ::db::proc_i_load_user_friends_Parameter* proc_i_load_user_friends::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_friends.param)
  clear_has_param();
  ::db::proc_i_load_user_friends_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_friends_Parameter* proc_i_load_user_friends::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_friends.param)
  clear_has_param();
  ::db::proc_i_load_user_friends_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_friends_Parameter* proc_i_load_user_friends::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_load_user_friends_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_friends.param)
  return param_;
}
inline void proc_i_load_user_friends::set_allocated_param(::db::proc_i_load_user_friends_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_friends.param)
}

// repeated .db.proc_i_load_user_friends.ReturnRecord return_record_list = 2;
inline int proc_i_load_user_friends::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_i_load_user_friends::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_i_load_user_friends_ReturnRecord* proc_i_load_user_friends::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_friends.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_friends_ReturnRecord >*
proc_i_load_user_friends::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_i_load_user_friends.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_i_load_user_friends_ReturnRecord& proc_i_load_user_friends::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_friends.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_i_load_user_friends_ReturnRecord* proc_i_load_user_friends::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_i_load_user_friends.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_friends_ReturnRecord >&
proc_i_load_user_friends::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_i_load_user_friends.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_i_save_user_friend_Parameter

// required .db.UserFriend p_friend = 1;
inline bool proc_i_save_user_friend_Parameter::has_p_friend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_friend_Parameter::set_has_p_friend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_friend_Parameter::clear_has_p_friend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_friend_Parameter::clear_p_friend() {
  if (p_friend_ != NULL) p_friend_->Clear();
  clear_has_p_friend();
}
inline const ::db::UserFriend& proc_i_save_user_friend_Parameter::_internal_p_friend() const {
  return *p_friend_;
}
inline const ::db::UserFriend& proc_i_save_user_friend_Parameter::p_friend() const {
  const ::db::UserFriend* p = p_friend_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_friend.Parameter.p_friend)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserFriend*>(
      &::db::_UserFriend_default_instance_);
}
inline ::db::UserFriend* proc_i_save_user_friend_Parameter::release_p_friend() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_friend.Parameter.p_friend)
  clear_has_p_friend();
  ::db::UserFriend* temp = p_friend_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  p_friend_ = NULL;
  return temp;
}
inline ::db::UserFriend* proc_i_save_user_friend_Parameter::unsafe_arena_release_p_friend() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_friend.Parameter.p_friend)
  clear_has_p_friend();
  ::db::UserFriend* temp = p_friend_;
  p_friend_ = NULL;
  return temp;
}
inline ::db::UserFriend* proc_i_save_user_friend_Parameter::mutable_p_friend() {
  set_has_p_friend();
  if (p_friend_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserFriend>(GetArenaNoVirtual());
    p_friend_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_friend.Parameter.p_friend)
  return p_friend_;
}
inline void proc_i_save_user_friend_Parameter::set_allocated_p_friend(::db::UserFriend* p_friend) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete p_friend_;
  }
  if (p_friend) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(p_friend);
    if (message_arena != submessage_arena) {
      p_friend = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, p_friend, submessage_arena);
    }
    set_has_p_friend();
  } else {
    clear_has_p_friend();
  }
  p_friend_ = p_friend;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_friend.Parameter.p_friend)
}

// -------------------------------------------------------------------

// proc_i_save_user_friend

// optional .db.proc_i_save_user_friend.Parameter param = 1;
inline bool proc_i_save_user_friend::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_friend::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_friend::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_friend::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_save_user_friend_Parameter& proc_i_save_user_friend::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_save_user_friend_Parameter& proc_i_save_user_friend::param() const {
  const ::db::proc_i_save_user_friend_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_friend.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_save_user_friend_Parameter*>(
      &::db::_proc_i_save_user_friend_Parameter_default_instance_);
}
inline ::db::proc_i_save_user_friend_Parameter* proc_i_save_user_friend::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_friend.param)
  clear_has_param();
  ::db::proc_i_save_user_friend_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_friend_Parameter* proc_i_save_user_friend::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_friend.param)
  clear_has_param();
  ::db::proc_i_save_user_friend_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_friend_Parameter* proc_i_save_user_friend::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_save_user_friend_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_friend.param)
  return param_;
}
inline void proc_i_save_user_friend::set_allocated_param(::db::proc_i_save_user_friend_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_friend.param)
}

// -------------------------------------------------------------------

// proc_i_load_user_game_invites_Parameter

// -------------------------------------------------------------------

// proc_i_load_user_game_invites_ReturnRecord

// required .db.UserGameInvite game_invite = 1;
inline bool proc_i_load_user_game_invites_ReturnRecord::has_game_invite() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_game_invites_ReturnRecord::set_has_game_invite() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_game_invites_ReturnRecord::clear_has_game_invite() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_game_invites_ReturnRecord::clear_game_invite() {
  if (game_invite_ != NULL) game_invite_->Clear();
  clear_has_game_invite();
}
inline const ::db::UserGameInvite& proc_i_load_user_game_invites_ReturnRecord::_internal_game_invite() const {
  return *game_invite_;
}
inline const ::db::UserGameInvite& proc_i_load_user_game_invites_ReturnRecord::game_invite() const {
  const ::db::UserGameInvite* p = game_invite_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_game_invites.ReturnRecord.game_invite)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserGameInvite*>(
      &::db::_UserGameInvite_default_instance_);
}
inline ::db::UserGameInvite* proc_i_load_user_game_invites_ReturnRecord::release_game_invite() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_game_invites.ReturnRecord.game_invite)
  clear_has_game_invite();
  ::db::UserGameInvite* temp = game_invite_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  game_invite_ = NULL;
  return temp;
}
inline ::db::UserGameInvite* proc_i_load_user_game_invites_ReturnRecord::unsafe_arena_release_game_invite() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_game_invites.ReturnRecord.game_invite)
  clear_has_game_invite();
  ::db::UserGameInvite* temp = game_invite_;
  game_invite_ = NULL;
  return temp;
}
inline ::db::UserGameInvite* proc_i_load_user_game_invites_ReturnRecord::mutable_game_invite() {
  set_has_game_invite();
  if (game_invite_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserGameInvite>(GetArenaNoVirtual());
    game_invite_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_game_invites.ReturnRecord.game_invite)
  return game_invite_;
}
inline void proc_i_load_user_game_invites_ReturnRecord::set_allocated_game_invite(::db::UserGameInvite* game_invite) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete game_invite_;
  }
  if (game_invite) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(game_invite);
    if (message_arena != submessage_arena) {
      game_invite = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, game_invite, submessage_arena);
    }
    set_has_game_invite();
  } else {
    clear_has_game_invite();
  }
  game_invite_ = game_invite;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_game_invites.ReturnRecord.game_invite)
}

// -------------------------------------------------------------------

// proc_i_load_user_game_invites

// optional .db.proc_i_load_user_game_invites.Parameter param = 1;
inline bool proc_i_load_user_game_invites::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_game_invites::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_game_invites::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_game_invites::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_load_user_game_invites_Parameter& proc_i_load_user_game_invites::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_load_user_game_invites_Parameter& proc_i_load_user_game_invites::param() const {
  const ::db::proc_i_load_user_game_invites_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_game_invites.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_load_user_game_invites_Parameter*>(
      &::db::_proc_i_load_user_game_invites_Parameter_default_instance_);
}
inline ::db::proc_i_load_user_game_invites_Parameter* proc_i_load_user_game_invites::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_game_invites.param)
  clear_has_param();
  ::db::proc_i_load_user_game_invites_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_game_invites_Parameter* proc_i_load_user_game_invites::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_game_invites.param)
  clear_has_param();
  ::db::proc_i_load_user_game_invites_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_game_invites_Parameter* proc_i_load_user_game_invites::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_load_user_game_invites_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_game_invites.param)
  return param_;
}
inline void proc_i_load_user_game_invites::set_allocated_param(::db::proc_i_load_user_game_invites_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_game_invites.param)
}

// repeated .db.proc_i_load_user_game_invites.ReturnRecord return_record_list = 2;
inline int proc_i_load_user_game_invites::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_i_load_user_game_invites::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_i_load_user_game_invites_ReturnRecord* proc_i_load_user_game_invites::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_game_invites.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invites_ReturnRecord >*
proc_i_load_user_game_invites::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_i_load_user_game_invites.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_i_load_user_game_invites_ReturnRecord& proc_i_load_user_game_invites::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_game_invites.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_i_load_user_game_invites_ReturnRecord* proc_i_load_user_game_invites::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_i_load_user_game_invites.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invites_ReturnRecord >&
proc_i_load_user_game_invites::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_i_load_user_game_invites.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_i_load_user_game_invite_rewards_Parameter

// -------------------------------------------------------------------

// proc_i_load_user_game_invite_rewards_ReturnRecord

// required .db.UserGameInviteReward reward = 1;
inline bool proc_i_load_user_game_invite_rewards_ReturnRecord::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_game_invite_rewards_ReturnRecord::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_game_invite_rewards_ReturnRecord::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_game_invite_rewards_ReturnRecord::clear_reward() {
  if (reward_ != NULL) reward_->Clear();
  clear_has_reward();
}
inline const ::db::UserGameInviteReward& proc_i_load_user_game_invite_rewards_ReturnRecord::_internal_reward() const {
  return *reward_;
}
inline const ::db::UserGameInviteReward& proc_i_load_user_game_invite_rewards_ReturnRecord::reward() const {
  const ::db::UserGameInviteReward* p = reward_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_game_invite_rewards.ReturnRecord.reward)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserGameInviteReward*>(
      &::db::_UserGameInviteReward_default_instance_);
}
inline ::db::UserGameInviteReward* proc_i_load_user_game_invite_rewards_ReturnRecord::release_reward() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_game_invite_rewards.ReturnRecord.reward)
  clear_has_reward();
  ::db::UserGameInviteReward* temp = reward_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  reward_ = NULL;
  return temp;
}
inline ::db::UserGameInviteReward* proc_i_load_user_game_invite_rewards_ReturnRecord::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_game_invite_rewards.ReturnRecord.reward)
  clear_has_reward();
  ::db::UserGameInviteReward* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline ::db::UserGameInviteReward* proc_i_load_user_game_invite_rewards_ReturnRecord::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserGameInviteReward>(GetArenaNoVirtual());
    reward_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_game_invite_rewards.ReturnRecord.reward)
  return reward_;
}
inline void proc_i_load_user_game_invite_rewards_ReturnRecord::set_allocated_reward(::db::UserGameInviteReward* reward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reward_;
  }
  if (reward) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(reward);
    if (message_arena != submessage_arena) {
      reward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reward, submessage_arena);
    }
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_ = reward;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_game_invite_rewards.ReturnRecord.reward)
}

// -------------------------------------------------------------------

// proc_i_load_user_game_invite_rewards

// optional .db.proc_i_load_user_game_invite_rewards.Parameter param = 1;
inline bool proc_i_load_user_game_invite_rewards::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_game_invite_rewards::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_game_invite_rewards::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_game_invite_rewards::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_load_user_game_invite_rewards_Parameter& proc_i_load_user_game_invite_rewards::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_load_user_game_invite_rewards_Parameter& proc_i_load_user_game_invite_rewards::param() const {
  const ::db::proc_i_load_user_game_invite_rewards_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_game_invite_rewards.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_load_user_game_invite_rewards_Parameter*>(
      &::db::_proc_i_load_user_game_invite_rewards_Parameter_default_instance_);
}
inline ::db::proc_i_load_user_game_invite_rewards_Parameter* proc_i_load_user_game_invite_rewards::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_game_invite_rewards.param)
  clear_has_param();
  ::db::proc_i_load_user_game_invite_rewards_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_game_invite_rewards_Parameter* proc_i_load_user_game_invite_rewards::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_game_invite_rewards.param)
  clear_has_param();
  ::db::proc_i_load_user_game_invite_rewards_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_game_invite_rewards_Parameter* proc_i_load_user_game_invite_rewards::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_load_user_game_invite_rewards_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_game_invite_rewards.param)
  return param_;
}
inline void proc_i_load_user_game_invite_rewards::set_allocated_param(::db::proc_i_load_user_game_invite_rewards_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_game_invite_rewards.param)
}

// repeated .db.proc_i_load_user_game_invite_rewards.ReturnRecord return_record_list = 2;
inline int proc_i_load_user_game_invite_rewards::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_i_load_user_game_invite_rewards::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_i_load_user_game_invite_rewards_ReturnRecord* proc_i_load_user_game_invite_rewards::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_game_invite_rewards.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invite_rewards_ReturnRecord >*
proc_i_load_user_game_invite_rewards::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_i_load_user_game_invite_rewards.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_i_load_user_game_invite_rewards_ReturnRecord& proc_i_load_user_game_invite_rewards::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_game_invite_rewards.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_i_load_user_game_invite_rewards_ReturnRecord* proc_i_load_user_game_invite_rewards::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_i_load_user_game_invite_rewards.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_game_invite_rewards_ReturnRecord >&
proc_i_load_user_game_invite_rewards::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_i_load_user_game_invite_rewards.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_i_save_user_game_invite_Parameter

// required .db.UserGameInvite p_invite = 1;
inline bool proc_i_save_user_game_invite_Parameter::has_p_invite() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_game_invite_Parameter::set_has_p_invite() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_game_invite_Parameter::clear_has_p_invite() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_game_invite_Parameter::clear_p_invite() {
  if (p_invite_ != NULL) p_invite_->Clear();
  clear_has_p_invite();
}
inline const ::db::UserGameInvite& proc_i_save_user_game_invite_Parameter::_internal_p_invite() const {
  return *p_invite_;
}
inline const ::db::UserGameInvite& proc_i_save_user_game_invite_Parameter::p_invite() const {
  const ::db::UserGameInvite* p = p_invite_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_game_invite.Parameter.p_invite)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserGameInvite*>(
      &::db::_UserGameInvite_default_instance_);
}
inline ::db::UserGameInvite* proc_i_save_user_game_invite_Parameter::release_p_invite() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_game_invite.Parameter.p_invite)
  clear_has_p_invite();
  ::db::UserGameInvite* temp = p_invite_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  p_invite_ = NULL;
  return temp;
}
inline ::db::UserGameInvite* proc_i_save_user_game_invite_Parameter::unsafe_arena_release_p_invite() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_game_invite.Parameter.p_invite)
  clear_has_p_invite();
  ::db::UserGameInvite* temp = p_invite_;
  p_invite_ = NULL;
  return temp;
}
inline ::db::UserGameInvite* proc_i_save_user_game_invite_Parameter::mutable_p_invite() {
  set_has_p_invite();
  if (p_invite_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserGameInvite>(GetArenaNoVirtual());
    p_invite_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_game_invite.Parameter.p_invite)
  return p_invite_;
}
inline void proc_i_save_user_game_invite_Parameter::set_allocated_p_invite(::db::UserGameInvite* p_invite) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete p_invite_;
  }
  if (p_invite) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(p_invite);
    if (message_arena != submessage_arena) {
      p_invite = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, p_invite, submessage_arena);
    }
    set_has_p_invite();
  } else {
    clear_has_p_invite();
  }
  p_invite_ = p_invite;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_game_invite.Parameter.p_invite)
}

// -------------------------------------------------------------------

// proc_i_save_user_game_invite

// optional .db.proc_i_save_user_game_invite.Parameter param = 1;
inline bool proc_i_save_user_game_invite::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_game_invite::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_game_invite::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_game_invite::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_save_user_game_invite_Parameter& proc_i_save_user_game_invite::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_save_user_game_invite_Parameter& proc_i_save_user_game_invite::param() const {
  const ::db::proc_i_save_user_game_invite_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_game_invite.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_save_user_game_invite_Parameter*>(
      &::db::_proc_i_save_user_game_invite_Parameter_default_instance_);
}
inline ::db::proc_i_save_user_game_invite_Parameter* proc_i_save_user_game_invite::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_game_invite.param)
  clear_has_param();
  ::db::proc_i_save_user_game_invite_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_game_invite_Parameter* proc_i_save_user_game_invite::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_game_invite.param)
  clear_has_param();
  ::db::proc_i_save_user_game_invite_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_game_invite_Parameter* proc_i_save_user_game_invite::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_save_user_game_invite_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_game_invite.param)
  return param_;
}
inline void proc_i_save_user_game_invite::set_allocated_param(::db::proc_i_save_user_game_invite_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_game_invite.param)
}

// -------------------------------------------------------------------

// proc_i_save_user_game_invite_reward_Parameter

// required .db.UserGameInviteReward p_reward = 1;
inline bool proc_i_save_user_game_invite_reward_Parameter::has_p_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_game_invite_reward_Parameter::set_has_p_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_game_invite_reward_Parameter::clear_has_p_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_game_invite_reward_Parameter::clear_p_reward() {
  if (p_reward_ != NULL) p_reward_->Clear();
  clear_has_p_reward();
}
inline const ::db::UserGameInviteReward& proc_i_save_user_game_invite_reward_Parameter::_internal_p_reward() const {
  return *p_reward_;
}
inline const ::db::UserGameInviteReward& proc_i_save_user_game_invite_reward_Parameter::p_reward() const {
  const ::db::UserGameInviteReward* p = p_reward_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_game_invite_reward.Parameter.p_reward)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserGameInviteReward*>(
      &::db::_UserGameInviteReward_default_instance_);
}
inline ::db::UserGameInviteReward* proc_i_save_user_game_invite_reward_Parameter::release_p_reward() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_game_invite_reward.Parameter.p_reward)
  clear_has_p_reward();
  ::db::UserGameInviteReward* temp = p_reward_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  p_reward_ = NULL;
  return temp;
}
inline ::db::UserGameInviteReward* proc_i_save_user_game_invite_reward_Parameter::unsafe_arena_release_p_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_game_invite_reward.Parameter.p_reward)
  clear_has_p_reward();
  ::db::UserGameInviteReward* temp = p_reward_;
  p_reward_ = NULL;
  return temp;
}
inline ::db::UserGameInviteReward* proc_i_save_user_game_invite_reward_Parameter::mutable_p_reward() {
  set_has_p_reward();
  if (p_reward_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserGameInviteReward>(GetArenaNoVirtual());
    p_reward_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_game_invite_reward.Parameter.p_reward)
  return p_reward_;
}
inline void proc_i_save_user_game_invite_reward_Parameter::set_allocated_p_reward(::db::UserGameInviteReward* p_reward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete p_reward_;
  }
  if (p_reward) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(p_reward);
    if (message_arena != submessage_arena) {
      p_reward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, p_reward, submessage_arena);
    }
    set_has_p_reward();
  } else {
    clear_has_p_reward();
  }
  p_reward_ = p_reward;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_game_invite_reward.Parameter.p_reward)
}

// -------------------------------------------------------------------

// proc_i_save_user_game_invite_reward

// optional .db.proc_i_save_user_game_invite_reward.Parameter param = 1;
inline bool proc_i_save_user_game_invite_reward::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_game_invite_reward::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_game_invite_reward::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_game_invite_reward::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_save_user_game_invite_reward_Parameter& proc_i_save_user_game_invite_reward::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_save_user_game_invite_reward_Parameter& proc_i_save_user_game_invite_reward::param() const {
  const ::db::proc_i_save_user_game_invite_reward_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_game_invite_reward.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_save_user_game_invite_reward_Parameter*>(
      &::db::_proc_i_save_user_game_invite_reward_Parameter_default_instance_);
}
inline ::db::proc_i_save_user_game_invite_reward_Parameter* proc_i_save_user_game_invite_reward::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_game_invite_reward.param)
  clear_has_param();
  ::db::proc_i_save_user_game_invite_reward_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_game_invite_reward_Parameter* proc_i_save_user_game_invite_reward::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_game_invite_reward.param)
  clear_has_param();
  ::db::proc_i_save_user_game_invite_reward_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_game_invite_reward_Parameter* proc_i_save_user_game_invite_reward::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_save_user_game_invite_reward_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_game_invite_reward.param)
  return param_;
}
inline void proc_i_save_user_game_invite_reward::set_allocated_param(::db::proc_i_save_user_game_invite_reward_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_game_invite_reward.param)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_StoredProcFriend_2eproto
