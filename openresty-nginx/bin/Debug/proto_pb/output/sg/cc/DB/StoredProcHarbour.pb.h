// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcHarbour.proto

#ifndef PROTOBUF_INCLUDED_StoredProcHarbour_2eproto
#define PROTOBUF_INCLUDED_StoredProcHarbour_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcHarbour_2eproto 

namespace protobuf_StoredProcHarbour_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_StoredProcHarbour_2eproto
namespace db {
class ConfigCustomer;
class ConfigCustomerDefaultTypeInternal;
extern ConfigCustomerDefaultTypeInternal _ConfigCustomer_default_instance_;
class ConfigCustomerList;
class ConfigCustomerListDefaultTypeInternal;
extern ConfigCustomerListDefaultTypeInternal _ConfigCustomerList_default_instance_;
class ConfigCustomerOccupation;
class ConfigCustomerOccupationDefaultTypeInternal;
extern ConfigCustomerOccupationDefaultTypeInternal _ConfigCustomerOccupation_default_instance_;
class ConfigCustomerOccupationList;
class ConfigCustomerOccupationListDefaultTypeInternal;
extern ConfigCustomerOccupationListDefaultTypeInternal _ConfigCustomerOccupationList_default_instance_;
class ConfigCustomerWealthGrade;
class ConfigCustomerWealthGradeDefaultTypeInternal;
extern ConfigCustomerWealthGradeDefaultTypeInternal _ConfigCustomerWealthGrade_default_instance_;
class ConfigCustomerWealthGradeList;
class ConfigCustomerWealthGradeListDefaultTypeInternal;
extern ConfigCustomerWealthGradeListDefaultTypeInternal _ConfigCustomerWealthGradeList_default_instance_;
class ConfigFood;
class ConfigFoodDefaultTypeInternal;
extern ConfigFoodDefaultTypeInternal _ConfigFood_default_instance_;
class ConfigFoodFilter;
class ConfigFoodFilterDefaultTypeInternal;
extern ConfigFoodFilterDefaultTypeInternal _ConfigFoodFilter_default_instance_;
class ConfigFoodFilterList;
class ConfigFoodFilterListDefaultTypeInternal;
extern ConfigFoodFilterListDefaultTypeInternal _ConfigFoodFilterList_default_instance_;
class ConfigFoodList;
class ConfigFoodListDefaultTypeInternal;
extern ConfigFoodListDefaultTypeInternal _ConfigFoodList_default_instance_;
class ConfigFoodRecipe;
class ConfigFoodRecipeDefaultTypeInternal;
extern ConfigFoodRecipeDefaultTypeInternal _ConfigFoodRecipe_default_instance_;
class ConfigFoodRecipeList;
class ConfigFoodRecipeListDefaultTypeInternal;
extern ConfigFoodRecipeListDefaultTypeInternal _ConfigFoodRecipeList_default_instance_;
class ConfigHarborFoodOrder;
class ConfigHarborFoodOrderDefaultTypeInternal;
extern ConfigHarborFoodOrderDefaultTypeInternal _ConfigHarborFoodOrder_default_instance_;
class ConfigHarborFoodOrderList;
class ConfigHarborFoodOrderListDefaultTypeInternal;
extern ConfigHarborFoodOrderListDefaultTypeInternal _ConfigHarborFoodOrderList_default_instance_;
class ConfigPlaceGrade;
class ConfigPlaceGradeDefaultTypeInternal;
extern ConfigPlaceGradeDefaultTypeInternal _ConfigPlaceGrade_default_instance_;
class ConfigPlaceGradeList;
class ConfigPlaceGradeListDefaultTypeInternal;
extern ConfigPlaceGradeListDefaultTypeInternal _ConfigPlaceGradeList_default_instance_;
class UserCustomerUnlock;
class UserCustomerUnlockDefaultTypeInternal;
extern UserCustomerUnlockDefaultTypeInternal _UserCustomerUnlock_default_instance_;
class UserFoodOrderSlot;
class UserFoodOrderSlotDefaultTypeInternal;
extern UserFoodOrderSlotDefaultTypeInternal _UserFoodOrderSlot_default_instance_;
class UserHarbor;
class UserHarborDefaultTypeInternal;
extern UserHarborDefaultTypeInternal _UserHarbor_default_instance_;
class UserHarborNpc;
class UserHarborNpcDefaultTypeInternal;
extern UserHarborNpcDefaultTypeInternal _UserHarborNpc_default_instance_;
}  // namespace db
namespace google {
namespace protobuf {
template<> ::db::ConfigCustomer* Arena::CreateMaybeMessage<::db::ConfigCustomer>(Arena*);
template<> ::db::ConfigCustomerList* Arena::CreateMaybeMessage<::db::ConfigCustomerList>(Arena*);
template<> ::db::ConfigCustomerOccupation* Arena::CreateMaybeMessage<::db::ConfigCustomerOccupation>(Arena*);
template<> ::db::ConfigCustomerOccupationList* Arena::CreateMaybeMessage<::db::ConfigCustomerOccupationList>(Arena*);
template<> ::db::ConfigCustomerWealthGrade* Arena::CreateMaybeMessage<::db::ConfigCustomerWealthGrade>(Arena*);
template<> ::db::ConfigCustomerWealthGradeList* Arena::CreateMaybeMessage<::db::ConfigCustomerWealthGradeList>(Arena*);
template<> ::db::ConfigFood* Arena::CreateMaybeMessage<::db::ConfigFood>(Arena*);
template<> ::db::ConfigFoodFilter* Arena::CreateMaybeMessage<::db::ConfigFoodFilter>(Arena*);
template<> ::db::ConfigFoodFilterList* Arena::CreateMaybeMessage<::db::ConfigFoodFilterList>(Arena*);
template<> ::db::ConfigFoodList* Arena::CreateMaybeMessage<::db::ConfigFoodList>(Arena*);
template<> ::db::ConfigFoodRecipe* Arena::CreateMaybeMessage<::db::ConfigFoodRecipe>(Arena*);
template<> ::db::ConfigFoodRecipeList* Arena::CreateMaybeMessage<::db::ConfigFoodRecipeList>(Arena*);
template<> ::db::ConfigHarborFoodOrder* Arena::CreateMaybeMessage<::db::ConfigHarborFoodOrder>(Arena*);
template<> ::db::ConfigHarborFoodOrderList* Arena::CreateMaybeMessage<::db::ConfigHarborFoodOrderList>(Arena*);
template<> ::db::ConfigPlaceGrade* Arena::CreateMaybeMessage<::db::ConfigPlaceGrade>(Arena*);
template<> ::db::ConfigPlaceGradeList* Arena::CreateMaybeMessage<::db::ConfigPlaceGradeList>(Arena*);
template<> ::db::UserCustomerUnlock* Arena::CreateMaybeMessage<::db::UserCustomerUnlock>(Arena*);
template<> ::db::UserFoodOrderSlot* Arena::CreateMaybeMessage<::db::UserFoodOrderSlot>(Arena*);
template<> ::db::UserHarbor* Arena::CreateMaybeMessage<::db::UserHarbor>(Arena*);
template<> ::db::UserHarborNpc* Arena::CreateMaybeMessage<::db::UserHarborNpc>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace db {

// ===================================================================

class ConfigFood : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigFood) */ {
 public:
  ConfigFood();
  virtual ~ConfigFood();

  ConfigFood(const ConfigFood& from);

  inline ConfigFood& operator=(const ConfigFood& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigFood(ConfigFood&& from) noexcept
    : ConfigFood() {
    *this = ::std::move(from);
  }

  inline ConfigFood& operator=(ConfigFood&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFood& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigFood* internal_default_instance() {
    return reinterpret_cast<const ConfigFood*>(
               &_ConfigFood_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ConfigFood* other);
  void Swap(ConfigFood* other);
  friend void swap(ConfigFood& a, ConfigFood& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigFood* New() const final {
    return CreateMaybeMessage<ConfigFood>(NULL);
  }

  ConfigFood* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigFood>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigFood& from);
  void MergeFrom(const ConfigFood& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigFood* other);
  protected:
  explicit ConfigFood(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 food_group = 4;
  bool has_food_group() const;
  void clear_food_group();
  static const int kFoodGroupFieldNumber = 4;
  ::google::protobuf::int32 food_group() const;
  void set_food_group(::google::protobuf::int32 value);

  // required int32 quality = 5;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 5;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // required int32 fit = 6;
  bool has_fit() const;
  void clear_fit();
  static const int kFitFieldNumber = 6;
  ::google::protobuf::int32 fit() const;
  void set_fit(::google::protobuf::int32 value);

  // required int32 color = 11;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 11;
  ::google::protobuf::int32 color() const;
  void set_color(::google::protobuf::int32 value);

  // required int32 smell = 12;
  bool has_smell() const;
  void clear_smell();
  static const int kSmellFieldNumber = 12;
  ::google::protobuf::int32 smell() const;
  void set_smell(::google::protobuf::int32 value);

  // required int32 taste = 13;
  bool has_taste() const;
  void clear_taste();
  static const int kTasteFieldNumber = 13;
  ::google::protobuf::int32 taste() const;
  void set_taste(::google::protobuf::int32 value);

  // required int32 bellyful = 14;
  bool has_bellyful() const;
  void clear_bellyful();
  static const int kBellyfulFieldNumber = 14;
  ::google::protobuf::int32 bellyful() const;
  void set_bellyful(::google::protobuf::int32 value);

  // required int32 detoxifcation = 21;
  bool has_detoxifcation() const;
  void clear_detoxifcation();
  static const int kDetoxifcationFieldNumber = 21;
  ::google::protobuf::int32 detoxifcation() const;
  void set_detoxifcation(::google::protobuf::int32 value);

  // required int32 sober = 22;
  bool has_sober() const;
  void clear_sober();
  static const int kSoberFieldNumber = 22;
  ::google::protobuf::int32 sober() const;
  void set_sober(::google::protobuf::int32 value);

  // required int32 exorcism = 23;
  bool has_exorcism() const;
  void clear_exorcism();
  static const int kExorcismFieldNumber = 23;
  ::google::protobuf::int32 exorcism() const;
  void set_exorcism(::google::protobuf::int32 value);

  // required int32 poison = 24;
  bool has_poison() const;
  void clear_poison();
  static const int kPoisonFieldNumber = 24;
  ::google::protobuf::int32 poison() const;
  void set_poison(::google::protobuf::int32 value);

  // required int32 alcohol = 25;
  bool has_alcohol() const;
  void clear_alcohol();
  static const int kAlcoholFieldNumber = 25;
  ::google::protobuf::int32 alcohol() const;
  void set_alcohol(::google::protobuf::int32 value);

  // required int32 evil = 26;
  bool has_evil() const;
  void clear_evil();
  static const int kEvilFieldNumber = 26;
  ::google::protobuf::int32 evil() const;
  void set_evil(::google::protobuf::int32 value);

  // required int32 sour = 31;
  bool has_sour() const;
  void clear_sour();
  static const int kSourFieldNumber = 31;
  ::google::protobuf::int32 sour() const;
  void set_sour(::google::protobuf::int32 value);

  // required int32 sweet = 32;
  bool has_sweet() const;
  void clear_sweet();
  static const int kSweetFieldNumber = 32;
  ::google::protobuf::int32 sweet() const;
  void set_sweet(::google::protobuf::int32 value);

  // required int32 bitter = 33;
  bool has_bitter() const;
  void clear_bitter();
  static const int kBitterFieldNumber = 33;
  ::google::protobuf::int32 bitter() const;
  void set_bitter(::google::protobuf::int32 value);

  // required int32 hot = 34;
  bool has_hot() const;
  void clear_hot();
  static const int kHotFieldNumber = 34;
  ::google::protobuf::int32 hot() const;
  void set_hot(::google::protobuf::int32 value);

  // required int32 salty = 35;
  bool has_salty() const;
  void clear_salty();
  static const int kSaltyFieldNumber = 35;
  ::google::protobuf::int32 salty() const;
  void set_salty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigFood)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();
  void set_has_food_group();
  void clear_has_food_group();
  void set_has_quality();
  void clear_has_quality();
  void set_has_fit();
  void clear_has_fit();
  void set_has_color();
  void clear_has_color();
  void set_has_smell();
  void clear_has_smell();
  void set_has_taste();
  void clear_has_taste();
  void set_has_bellyful();
  void clear_has_bellyful();
  void set_has_detoxifcation();
  void clear_has_detoxifcation();
  void set_has_sober();
  void clear_has_sober();
  void set_has_exorcism();
  void clear_has_exorcism();
  void set_has_poison();
  void clear_has_poison();
  void set_has_alcohol();
  void clear_has_alcohol();
  void set_has_evil();
  void clear_has_evil();
  void set_has_sour();
  void clear_has_sour();
  void set_has_sweet();
  void clear_has_sweet();
  void set_has_bitter();
  void clear_has_bitter();
  void set_has_hot();
  void clear_has_hot();
  void set_has_salty();
  void clear_has_salty();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 food_group_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 fit_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 smell_;
  ::google::protobuf::int32 taste_;
  ::google::protobuf::int32 bellyful_;
  ::google::protobuf::int32 detoxifcation_;
  ::google::protobuf::int32 sober_;
  ::google::protobuf::int32 exorcism_;
  ::google::protobuf::int32 poison_;
  ::google::protobuf::int32 alcohol_;
  ::google::protobuf::int32 evil_;
  ::google::protobuf::int32 sour_;
  ::google::protobuf::int32 sweet_;
  ::google::protobuf::int32 bitter_;
  ::google::protobuf::int32 hot_;
  ::google::protobuf::int32 salty_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigFoodList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigFoodList) */ {
 public:
  ConfigFoodList();
  virtual ~ConfigFoodList();

  ConfigFoodList(const ConfigFoodList& from);

  inline ConfigFoodList& operator=(const ConfigFoodList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigFoodList(ConfigFoodList&& from) noexcept
    : ConfigFoodList() {
    *this = ::std::move(from);
  }

  inline ConfigFoodList& operator=(ConfigFoodList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFoodList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigFoodList* internal_default_instance() {
    return reinterpret_cast<const ConfigFoodList*>(
               &_ConfigFoodList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ConfigFoodList* other);
  void Swap(ConfigFoodList* other);
  friend void swap(ConfigFoodList& a, ConfigFoodList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigFoodList* New() const final {
    return CreateMaybeMessage<ConfigFoodList>(NULL);
  }

  ConfigFoodList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigFoodList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigFoodList& from);
  void MergeFrom(const ConfigFoodList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigFoodList* other);
  protected:
  explicit ConfigFoodList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigFood list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigFood* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigFood >*
      mutable_list();
  const ::db::ConfigFood& list(int index) const;
  ::db::ConfigFood* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigFood >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigFoodList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigFood > list_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigFoodRecipe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigFoodRecipe) */ {
 public:
  ConfigFoodRecipe();
  virtual ~ConfigFoodRecipe();

  ConfigFoodRecipe(const ConfigFoodRecipe& from);

  inline ConfigFoodRecipe& operator=(const ConfigFoodRecipe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigFoodRecipe(ConfigFoodRecipe&& from) noexcept
    : ConfigFoodRecipe() {
    *this = ::std::move(from);
  }

  inline ConfigFoodRecipe& operator=(ConfigFoodRecipe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFoodRecipe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigFoodRecipe* internal_default_instance() {
    return reinterpret_cast<const ConfigFoodRecipe*>(
               &_ConfigFoodRecipe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ConfigFoodRecipe* other);
  void Swap(ConfigFoodRecipe* other);
  friend void swap(ConfigFoodRecipe& a, ConfigFoodRecipe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigFoodRecipe* New() const final {
    return CreateMaybeMessage<ConfigFoodRecipe>(NULL);
  }

  ConfigFoodRecipe* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigFoodRecipe>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigFoodRecipe& from);
  void MergeFrom(const ConfigFoodRecipe& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigFoodRecipe* other);
  protected:
  explicit ConfigFoodRecipe(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes constitute = 4;
  bool has_constitute() const;
  void clear_constitute();
  static const int kConstituteFieldNumber = 4;
  const ::std::string& constitute() const;
  void set_constitute(const ::std::string& value);
  #if LANG_CXX11
  void set_constitute(::std::string&& value);
  #endif
  void set_constitute(const char* value);
  void set_constitute(const void* value, size_t size);
  ::std::string* mutable_constitute();
  ::std::string* release_constitute();
  void set_allocated_constitute(::std::string* constitute);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_constitute();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_constitute(
      ::std::string* constitute);

  // required bytes attribute = 14;
  bool has_attribute() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 14;
  const ::std::string& attribute() const;
  void set_attribute(const ::std::string& value);
  #if LANG_CXX11
  void set_attribute(::std::string&& value);
  #endif
  void set_attribute(const char* value);
  void set_attribute(const void* value, size_t size);
  ::std::string* mutable_attribute();
  ::std::string* release_attribute();
  void set_allocated_attribute(::std::string* attribute);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_attribute();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_attribute(
      ::std::string* attribute);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 add_val = 5;
  bool has_add_val() const;
  void clear_add_val();
  static const int kAddValFieldNumber = 5;
  ::google::protobuf::int32 add_val() const;
  void set_add_val(::google::protobuf::int32 value);

  // required int32 ship_exp = 6;
  bool has_ship_exp() const;
  void clear_ship_exp();
  static const int kShipExpFieldNumber = 6;
  ::google::protobuf::int32 ship_exp() const;
  void set_ship_exp(::google::protobuf::int32 value);

  // required int32 cooker_exp = 7;
  bool has_cooker_exp() const;
  void clear_cooker_exp();
  static const int kCookerExpFieldNumber = 7;
  ::google::protobuf::int32 cooker_exp() const;
  void set_cooker_exp(::google::protobuf::int32 value);

  // required int32 gold = 8;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 8;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // required int32 cook_time = 11;
  bool has_cook_time() const;
  void clear_cook_time();
  static const int kCookTimeFieldNumber = 11;
  ::google::protobuf::int32 cook_time() const;
  void set_cook_time(::google::protobuf::int32 value);

  // required int32 eat_time = 12;
  bool has_eat_time() const;
  void clear_eat_time();
  static const int kEatTimeFieldNumber = 12;
  ::google::protobuf::int32 eat_time() const;
  void set_eat_time(::google::protobuf::int32 value);

  // required int32 way = 13;
  bool has_way() const;
  void clear_way();
  static const int kWayFieldNumber = 13;
  ::google::protobuf::int32 way() const;
  void set_way(::google::protobuf::int32 value);

  // required int32 star = 15;
  bool has_star() const;
  void clear_star();
  static const int kStarFieldNumber = 15;
  ::google::protobuf::int32 star() const;
  void set_star(::google::protobuf::int32 value);

  // required int32 satisfaction = 16;
  bool has_satisfaction() const;
  void clear_satisfaction();
  static const int kSatisfactionFieldNumber = 16;
  ::google::protobuf::int32 satisfaction() const;
  void set_satisfaction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigFoodRecipe)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();
  void set_has_constitute();
  void clear_has_constitute();
  void set_has_add_val();
  void clear_has_add_val();
  void set_has_ship_exp();
  void clear_has_ship_exp();
  void set_has_cooker_exp();
  void clear_has_cooker_exp();
  void set_has_gold();
  void clear_has_gold();
  void set_has_cook_time();
  void clear_has_cook_time();
  void set_has_eat_time();
  void clear_has_eat_time();
  void set_has_way();
  void clear_has_way();
  void set_has_attribute();
  void clear_has_attribute();
  void set_has_star();
  void clear_has_star();
  void set_has_satisfaction();
  void clear_has_satisfaction();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr constitute_;
  ::google::protobuf::internal::ArenaStringPtr attribute_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 add_val_;
  ::google::protobuf::int32 ship_exp_;
  ::google::protobuf::int32 cooker_exp_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 cook_time_;
  ::google::protobuf::int32 eat_time_;
  ::google::protobuf::int32 way_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 satisfaction_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigFoodRecipeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigFoodRecipeList) */ {
 public:
  ConfigFoodRecipeList();
  virtual ~ConfigFoodRecipeList();

  ConfigFoodRecipeList(const ConfigFoodRecipeList& from);

  inline ConfigFoodRecipeList& operator=(const ConfigFoodRecipeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigFoodRecipeList(ConfigFoodRecipeList&& from) noexcept
    : ConfigFoodRecipeList() {
    *this = ::std::move(from);
  }

  inline ConfigFoodRecipeList& operator=(ConfigFoodRecipeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFoodRecipeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigFoodRecipeList* internal_default_instance() {
    return reinterpret_cast<const ConfigFoodRecipeList*>(
               &_ConfigFoodRecipeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ConfigFoodRecipeList* other);
  void Swap(ConfigFoodRecipeList* other);
  friend void swap(ConfigFoodRecipeList& a, ConfigFoodRecipeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigFoodRecipeList* New() const final {
    return CreateMaybeMessage<ConfigFoodRecipeList>(NULL);
  }

  ConfigFoodRecipeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigFoodRecipeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigFoodRecipeList& from);
  void MergeFrom(const ConfigFoodRecipeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigFoodRecipeList* other);
  protected:
  explicit ConfigFoodRecipeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigFoodRecipe list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigFoodRecipe* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodRecipe >*
      mutable_list();
  const ::db::ConfigFoodRecipe& list(int index) const;
  ::db::ConfigFoodRecipe* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodRecipe >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigFoodRecipeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodRecipe > list_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigFoodFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigFoodFilter) */ {
 public:
  ConfigFoodFilter();
  virtual ~ConfigFoodFilter();

  ConfigFoodFilter(const ConfigFoodFilter& from);

  inline ConfigFoodFilter& operator=(const ConfigFoodFilter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigFoodFilter(ConfigFoodFilter&& from) noexcept
    : ConfigFoodFilter() {
    *this = ::std::move(from);
  }

  inline ConfigFoodFilter& operator=(ConfigFoodFilter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFoodFilter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigFoodFilter* internal_default_instance() {
    return reinterpret_cast<const ConfigFoodFilter*>(
               &_ConfigFoodFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ConfigFoodFilter* other);
  void Swap(ConfigFoodFilter* other);
  friend void swap(ConfigFoodFilter& a, ConfigFoodFilter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigFoodFilter* New() const final {
    return CreateMaybeMessage<ConfigFoodFilter>(NULL);
  }

  ConfigFoodFilter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigFoodFilter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigFoodFilter& from);
  void MergeFrom(const ConfigFoodFilter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigFoodFilter* other);
  protected:
  explicit ConfigFoodFilter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes parameter_need = 4;
  bool has_parameter_need() const;
  void clear_parameter_need();
  static const int kParameterNeedFieldNumber = 4;
  const ::std::string& parameter_need() const;
  void set_parameter_need(const ::std::string& value);
  #if LANG_CXX11
  void set_parameter_need(::std::string&& value);
  #endif
  void set_parameter_need(const char* value);
  void set_parameter_need(const void* value, size_t size);
  ::std::string* mutable_parameter_need();
  ::std::string* release_parameter_need();
  void set_allocated_parameter_need(::std::string* parameter_need);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parameter_need();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parameter_need(
      ::std::string* parameter_need);

  // required bytes parameter_hate = 5;
  bool has_parameter_hate() const;
  void clear_parameter_hate();
  static const int kParameterHateFieldNumber = 5;
  const ::std::string& parameter_hate() const;
  void set_parameter_hate(const ::std::string& value);
  #if LANG_CXX11
  void set_parameter_hate(::std::string&& value);
  #endif
  void set_parameter_hate(const char* value);
  void set_parameter_hate(const void* value, size_t size);
  ::std::string* mutable_parameter_hate();
  ::std::string* release_parameter_hate();
  void set_allocated_parameter_hate(::std::string* parameter_hate);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_parameter_hate();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_parameter_hate(
      ::std::string* parameter_hate);

  // required bytes color = 11;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 11;
  const ::std::string& color() const;
  void set_color(const ::std::string& value);
  #if LANG_CXX11
  void set_color(::std::string&& value);
  #endif
  void set_color(const char* value);
  void set_color(const void* value, size_t size);
  ::std::string* mutable_color();
  ::std::string* release_color();
  void set_allocated_color(::std::string* color);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_color();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_color(
      ::std::string* color);

  // required bytes smell = 12;
  bool has_smell() const;
  void clear_smell();
  static const int kSmellFieldNumber = 12;
  const ::std::string& smell() const;
  void set_smell(const ::std::string& value);
  #if LANG_CXX11
  void set_smell(::std::string&& value);
  #endif
  void set_smell(const char* value);
  void set_smell(const void* value, size_t size);
  ::std::string* mutable_smell();
  ::std::string* release_smell();
  void set_allocated_smell(::std::string* smell);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_smell();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_smell(
      ::std::string* smell);

  // required bytes taste = 13;
  bool has_taste() const;
  void clear_taste();
  static const int kTasteFieldNumber = 13;
  const ::std::string& taste() const;
  void set_taste(const ::std::string& value);
  #if LANG_CXX11
  void set_taste(::std::string&& value);
  #endif
  void set_taste(const char* value);
  void set_taste(const void* value, size_t size);
  ::std::string* mutable_taste();
  ::std::string* release_taste();
  void set_allocated_taste(::std::string* taste);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_taste();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_taste(
      ::std::string* taste);

  // required bytes bellyful = 14;
  bool has_bellyful() const;
  void clear_bellyful();
  static const int kBellyfulFieldNumber = 14;
  const ::std::string& bellyful() const;
  void set_bellyful(const ::std::string& value);
  #if LANG_CXX11
  void set_bellyful(::std::string&& value);
  #endif
  void set_bellyful(const char* value);
  void set_bellyful(const void* value, size_t size);
  ::std::string* mutable_bellyful();
  ::std::string* release_bellyful();
  void set_allocated_bellyful(::std::string* bellyful);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_bellyful();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bellyful(
      ::std::string* bellyful);

  // required bytes flavor = 15;
  bool has_flavor() const;
  void clear_flavor();
  static const int kFlavorFieldNumber = 15;
  const ::std::string& flavor() const;
  void set_flavor(const ::std::string& value);
  #if LANG_CXX11
  void set_flavor(::std::string&& value);
  #endif
  void set_flavor(const char* value);
  void set_flavor(const void* value, size_t size);
  ::std::string* mutable_flavor();
  ::std::string* release_flavor();
  void set_allocated_flavor(::std::string* flavor);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_flavor();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_flavor(
      ::std::string* flavor);

  // required bytes stuff = 16;
  bool has_stuff() const;
  void clear_stuff();
  static const int kStuffFieldNumber = 16;
  const ::std::string& stuff() const;
  void set_stuff(const ::std::string& value);
  #if LANG_CXX11
  void set_stuff(::std::string&& value);
  #endif
  void set_stuff(const char* value);
  void set_stuff(const void* value, size_t size);
  ::std::string* mutable_stuff();
  ::std::string* release_stuff();
  void set_allocated_stuff(::std::string* stuff);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_stuff();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stuff(
      ::std::string* stuff);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigFoodFilter)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();
  void set_has_parameter_need();
  void clear_has_parameter_need();
  void set_has_parameter_hate();
  void clear_has_parameter_hate();
  void set_has_color();
  void clear_has_color();
  void set_has_smell();
  void clear_has_smell();
  void set_has_taste();
  void clear_has_taste();
  void set_has_bellyful();
  void clear_has_bellyful();
  void set_has_flavor();
  void clear_has_flavor();
  void set_has_stuff();
  void clear_has_stuff();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr parameter_need_;
  ::google::protobuf::internal::ArenaStringPtr parameter_hate_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  ::google::protobuf::internal::ArenaStringPtr smell_;
  ::google::protobuf::internal::ArenaStringPtr taste_;
  ::google::protobuf::internal::ArenaStringPtr bellyful_;
  ::google::protobuf::internal::ArenaStringPtr flavor_;
  ::google::protobuf::internal::ArenaStringPtr stuff_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigFoodFilterList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigFoodFilterList) */ {
 public:
  ConfigFoodFilterList();
  virtual ~ConfigFoodFilterList();

  ConfigFoodFilterList(const ConfigFoodFilterList& from);

  inline ConfigFoodFilterList& operator=(const ConfigFoodFilterList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigFoodFilterList(ConfigFoodFilterList&& from) noexcept
    : ConfigFoodFilterList() {
    *this = ::std::move(from);
  }

  inline ConfigFoodFilterList& operator=(ConfigFoodFilterList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFoodFilterList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigFoodFilterList* internal_default_instance() {
    return reinterpret_cast<const ConfigFoodFilterList*>(
               &_ConfigFoodFilterList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ConfigFoodFilterList* other);
  void Swap(ConfigFoodFilterList* other);
  friend void swap(ConfigFoodFilterList& a, ConfigFoodFilterList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigFoodFilterList* New() const final {
    return CreateMaybeMessage<ConfigFoodFilterList>(NULL);
  }

  ConfigFoodFilterList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigFoodFilterList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigFoodFilterList& from);
  void MergeFrom(const ConfigFoodFilterList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigFoodFilterList* other);
  protected:
  explicit ConfigFoodFilterList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigFoodFilter list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigFoodFilter* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodFilter >*
      mutable_list();
  const ::db::ConfigFoodFilter& list(int index) const;
  ::db::ConfigFoodFilter* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodFilter >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigFoodFilterList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodFilter > list_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigCustomer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigCustomer) */ {
 public:
  ConfigCustomer();
  virtual ~ConfigCustomer();

  ConfigCustomer(const ConfigCustomer& from);

  inline ConfigCustomer& operator=(const ConfigCustomer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigCustomer(ConfigCustomer&& from) noexcept
    : ConfigCustomer() {
    *this = ::std::move(from);
  }

  inline ConfigCustomer& operator=(ConfigCustomer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigCustomer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigCustomer* internal_default_instance() {
    return reinterpret_cast<const ConfigCustomer*>(
               &_ConfigCustomer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ConfigCustomer* other);
  void Swap(ConfigCustomer* other);
  friend void swap(ConfigCustomer& a, ConfigCustomer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigCustomer* New() const final {
    return CreateMaybeMessage<ConfigCustomer>(NULL);
  }

  ConfigCustomer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigCustomer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigCustomer& from);
  void MergeFrom(const ConfigCustomer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigCustomer* other);
  protected:
  explicit ConfigCustomer(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes desc = 3;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_desc();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_desc(
      ::std::string* desc);

  // required bytes food_filter = 11;
  bool has_food_filter() const;
  void clear_food_filter();
  static const int kFoodFilterFieldNumber = 11;
  const ::std::string& food_filter() const;
  void set_food_filter(const ::std::string& value);
  #if LANG_CXX11
  void set_food_filter(::std::string&& value);
  #endif
  void set_food_filter(const char* value);
  void set_food_filter(const void* value, size_t size);
  ::std::string* mutable_food_filter();
  ::std::string* release_food_filter();
  void set_allocated_food_filter(::std::string* food_filter);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_food_filter();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_food_filter(
      ::std::string* food_filter);

  // required bytes food_filter2 = 13;
  bool has_food_filter2() const;
  void clear_food_filter2();
  static const int kFoodFilter2FieldNumber = 13;
  const ::std::string& food_filter2() const;
  void set_food_filter2(const ::std::string& value);
  #if LANG_CXX11
  void set_food_filter2(::std::string&& value);
  #endif
  void set_food_filter2(const char* value);
  void set_food_filter2(const void* value, size_t size);
  ::std::string* mutable_food_filter2();
  ::std::string* release_food_filter2();
  void set_allocated_food_filter2(::std::string* food_filter2);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_food_filter2();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_food_filter2(
      ::std::string* food_filter2);

  // required bytes food_filter3 = 15;
  bool has_food_filter3() const;
  void clear_food_filter3();
  static const int kFoodFilter3FieldNumber = 15;
  const ::std::string& food_filter3() const;
  void set_food_filter3(const ::std::string& value);
  #if LANG_CXX11
  void set_food_filter3(::std::string&& value);
  #endif
  void set_food_filter3(const char* value);
  void set_food_filter3(const void* value, size_t size);
  ::std::string* mutable_food_filter3();
  ::std::string* release_food_filter3();
  void set_allocated_food_filter3(::std::string* food_filter3);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_food_filter3();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_food_filter3(
      ::std::string* food_filter3);

  // required bytes quality_tip = 21;
  bool has_quality_tip() const;
  void clear_quality_tip();
  static const int kQualityTipFieldNumber = 21;
  const ::std::string& quality_tip() const;
  void set_quality_tip(const ::std::string& value);
  #if LANG_CXX11
  void set_quality_tip(::std::string&& value);
  #endif
  void set_quality_tip(const char* value);
  void set_quality_tip(const void* value, size_t size);
  ::std::string* mutable_quality_tip();
  ::std::string* release_quality_tip();
  void set_allocated_quality_tip(::std::string* quality_tip);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_quality_tip();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_quality_tip(
      ::std::string* quality_tip);

  // required bytes special_cond = 22;
  bool has_special_cond() const;
  void clear_special_cond();
  static const int kSpecialCondFieldNumber = 22;
  const ::std::string& special_cond() const;
  void set_special_cond(const ::std::string& value);
  #if LANG_CXX11
  void set_special_cond(::std::string&& value);
  #endif
  void set_special_cond(const char* value);
  void set_special_cond(const void* value, size_t size);
  ::std::string* mutable_special_cond();
  ::std::string* release_special_cond();
  void set_allocated_special_cond(::std::string* special_cond);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_special_cond();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_special_cond(
      ::std::string* special_cond);

  // required bytes satisfaction_cond = 23;
  bool has_satisfaction_cond() const;
  void clear_satisfaction_cond();
  static const int kSatisfactionCondFieldNumber = 23;
  const ::std::string& satisfaction_cond() const;
  void set_satisfaction_cond(const ::std::string& value);
  #if LANG_CXX11
  void set_satisfaction_cond(::std::string&& value);
  #endif
  void set_satisfaction_cond(const char* value);
  void set_satisfaction_cond(const void* value, size_t size);
  ::std::string* mutable_satisfaction_cond();
  ::std::string* release_satisfaction_cond();
  void set_allocated_satisfaction_cond(::std::string* satisfaction_cond);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_satisfaction_cond();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_satisfaction_cond(
      ::std::string* satisfaction_cond);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 occupationid = 4;
  bool has_occupationid() const;
  void clear_occupationid();
  static const int kOccupationidFieldNumber = 4;
  ::google::protobuf::int32 occupationid() const;
  void set_occupationid(::google::protobuf::int32 value);

  // required int32 wealth_grade = 5;
  bool has_wealth_grade() const;
  void clear_wealth_grade();
  static const int kWealthGradeFieldNumber = 5;
  ::google::protobuf::int32 wealth_grade() const;
  void set_wealth_grade(::google::protobuf::int32 value);

  // required int32 gold = 6;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 6;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // required int32 is_unlock = 7;
  bool has_is_unlock() const;
  void clear_is_unlock();
  static const int kIsUnlockFieldNumber = 7;
  ::google::protobuf::int32 is_unlock() const;
  void set_is_unlock(::google::protobuf::int32 value);

  // required int32 unlock_group = 8;
  bool has_unlock_group() const;
  void clear_unlock_group();
  static const int kUnlockGroupFieldNumber = 8;
  ::google::protobuf::int32 unlock_group() const;
  void set_unlock_group(::google::protobuf::int32 value);

  // required float service_ratio = 12;
  bool has_service_ratio() const;
  void clear_service_ratio();
  static const int kServiceRatioFieldNumber = 12;
  float service_ratio() const;
  void set_service_ratio(float value);

  // required float service_ratio2 = 14;
  bool has_service_ratio2() const;
  void clear_service_ratio2();
  static const int kServiceRatio2FieldNumber = 14;
  float service_ratio2() const;
  void set_service_ratio2(float value);

  // required float service_ratio3 = 16;
  bool has_service_ratio3() const;
  void clear_service_ratio3();
  static const int kServiceRatio3FieldNumber = 16;
  float service_ratio3() const;
  void set_service_ratio3(float value);

  // required int32 hungry_timeout = 24;
  bool has_hungry_timeout() const;
  void clear_hungry_timeout();
  static const int kHungryTimeoutFieldNumber = 24;
  ::google::protobuf::int32 hungry_timeout() const;
  void set_hungry_timeout(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigCustomer)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_desc();
  void clear_has_desc();
  void set_has_occupationid();
  void clear_has_occupationid();
  void set_has_wealth_grade();
  void clear_has_wealth_grade();
  void set_has_gold();
  void clear_has_gold();
  void set_has_is_unlock();
  void clear_has_is_unlock();
  void set_has_unlock_group();
  void clear_has_unlock_group();
  void set_has_food_filter();
  void clear_has_food_filter();
  void set_has_service_ratio();
  void clear_has_service_ratio();
  void set_has_food_filter2();
  void clear_has_food_filter2();
  void set_has_service_ratio2();
  void clear_has_service_ratio2();
  void set_has_food_filter3();
  void clear_has_food_filter3();
  void set_has_service_ratio3();
  void clear_has_service_ratio3();
  void set_has_quality_tip();
  void clear_has_quality_tip();
  void set_has_special_cond();
  void clear_has_special_cond();
  void set_has_satisfaction_cond();
  void clear_has_satisfaction_cond();
  void set_has_hungry_timeout();
  void clear_has_hungry_timeout();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr food_filter_;
  ::google::protobuf::internal::ArenaStringPtr food_filter2_;
  ::google::protobuf::internal::ArenaStringPtr food_filter3_;
  ::google::protobuf::internal::ArenaStringPtr quality_tip_;
  ::google::protobuf::internal::ArenaStringPtr special_cond_;
  ::google::protobuf::internal::ArenaStringPtr satisfaction_cond_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 occupationid_;
  ::google::protobuf::int32 wealth_grade_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 is_unlock_;
  ::google::protobuf::int32 unlock_group_;
  float service_ratio_;
  float service_ratio2_;
  float service_ratio3_;
  ::google::protobuf::int32 hungry_timeout_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigCustomerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigCustomerList) */ {
 public:
  ConfigCustomerList();
  virtual ~ConfigCustomerList();

  ConfigCustomerList(const ConfigCustomerList& from);

  inline ConfigCustomerList& operator=(const ConfigCustomerList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigCustomerList(ConfigCustomerList&& from) noexcept
    : ConfigCustomerList() {
    *this = ::std::move(from);
  }

  inline ConfigCustomerList& operator=(ConfigCustomerList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigCustomerList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigCustomerList* internal_default_instance() {
    return reinterpret_cast<const ConfigCustomerList*>(
               &_ConfigCustomerList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ConfigCustomerList* other);
  void Swap(ConfigCustomerList* other);
  friend void swap(ConfigCustomerList& a, ConfigCustomerList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigCustomerList* New() const final {
    return CreateMaybeMessage<ConfigCustomerList>(NULL);
  }

  ConfigCustomerList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigCustomerList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigCustomerList& from);
  void MergeFrom(const ConfigCustomerList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigCustomerList* other);
  protected:
  explicit ConfigCustomerList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigCustomer list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigCustomer* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomer >*
      mutable_list();
  const ::db::ConfigCustomer& list(int index) const;
  ::db::ConfigCustomer* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomer >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigCustomerList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomer > list_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigCustomerOccupation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigCustomerOccupation) */ {
 public:
  ConfigCustomerOccupation();
  virtual ~ConfigCustomerOccupation();

  ConfigCustomerOccupation(const ConfigCustomerOccupation& from);

  inline ConfigCustomerOccupation& operator=(const ConfigCustomerOccupation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigCustomerOccupation(ConfigCustomerOccupation&& from) noexcept
    : ConfigCustomerOccupation() {
    *this = ::std::move(from);
  }

  inline ConfigCustomerOccupation& operator=(ConfigCustomerOccupation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigCustomerOccupation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigCustomerOccupation* internal_default_instance() {
    return reinterpret_cast<const ConfigCustomerOccupation*>(
               &_ConfigCustomerOccupation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(ConfigCustomerOccupation* other);
  void Swap(ConfigCustomerOccupation* other);
  friend void swap(ConfigCustomerOccupation& a, ConfigCustomerOccupation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigCustomerOccupation* New() const final {
    return CreateMaybeMessage<ConfigCustomerOccupation>(NULL);
  }

  ConfigCustomerOccupation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigCustomerOccupation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigCustomerOccupation& from);
  void MergeFrom(const ConfigCustomerOccupation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigCustomerOccupation* other);
  protected:
  explicit ConfigCustomerOccupation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes func = 4;
  bool has_func() const;
  void clear_func();
  static const int kFuncFieldNumber = 4;
  const ::std::string& func() const;
  void set_func(const ::std::string& value);
  #if LANG_CXX11
  void set_func(::std::string&& value);
  #endif
  void set_func(const char* value);
  void set_func(const void* value, size_t size);
  ::std::string* mutable_func();
  ::std::string* release_func();
  void set_allocated_func(::std::string* func);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_func();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_func(
      ::std::string* func);

  // required bytes question_status = 11;
  bool has_question_status() const;
  void clear_question_status();
  static const int kQuestionStatusFieldNumber = 11;
  const ::std::string& question_status() const;
  void set_question_status(const ::std::string& value);
  #if LANG_CXX11
  void set_question_status(::std::string&& value);
  #endif
  void set_question_status(const char* value);
  void set_question_status(const void* value, size_t size);
  ::std::string* mutable_question_status();
  ::std::string* release_question_status();
  void set_allocated_question_status(::std::string* question_status);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_question_status();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_question_status(
      ::std::string* question_status);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required float answer_bonus_ratio = 12;
  bool has_answer_bonus_ratio() const;
  void clear_answer_bonus_ratio();
  static const int kAnswerBonusRatioFieldNumber = 12;
  float answer_bonus_ratio() const;
  void set_answer_bonus_ratio(float value);

  // @@protoc_insertion_point(class_scope:db.ConfigCustomerOccupation)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();
  void set_has_func();
  void clear_has_func();
  void set_has_question_status();
  void clear_has_question_status();
  void set_has_answer_bonus_ratio();
  void clear_has_answer_bonus_ratio();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr func_;
  ::google::protobuf::internal::ArenaStringPtr question_status_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  float answer_bonus_ratio_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigCustomerOccupationList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigCustomerOccupationList) */ {
 public:
  ConfigCustomerOccupationList();
  virtual ~ConfigCustomerOccupationList();

  ConfigCustomerOccupationList(const ConfigCustomerOccupationList& from);

  inline ConfigCustomerOccupationList& operator=(const ConfigCustomerOccupationList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigCustomerOccupationList(ConfigCustomerOccupationList&& from) noexcept
    : ConfigCustomerOccupationList() {
    *this = ::std::move(from);
  }

  inline ConfigCustomerOccupationList& operator=(ConfigCustomerOccupationList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigCustomerOccupationList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigCustomerOccupationList* internal_default_instance() {
    return reinterpret_cast<const ConfigCustomerOccupationList*>(
               &_ConfigCustomerOccupationList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(ConfigCustomerOccupationList* other);
  void Swap(ConfigCustomerOccupationList* other);
  friend void swap(ConfigCustomerOccupationList& a, ConfigCustomerOccupationList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigCustomerOccupationList* New() const final {
    return CreateMaybeMessage<ConfigCustomerOccupationList>(NULL);
  }

  ConfigCustomerOccupationList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigCustomerOccupationList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigCustomerOccupationList& from);
  void MergeFrom(const ConfigCustomerOccupationList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigCustomerOccupationList* other);
  protected:
  explicit ConfigCustomerOccupationList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigCustomerOccupation list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigCustomerOccupation* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerOccupation >*
      mutable_list();
  const ::db::ConfigCustomerOccupation& list(int index) const;
  ::db::ConfigCustomerOccupation* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerOccupation >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigCustomerOccupationList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerOccupation > list_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigCustomerWealthGrade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigCustomerWealthGrade) */ {
 public:
  ConfigCustomerWealthGrade();
  virtual ~ConfigCustomerWealthGrade();

  ConfigCustomerWealthGrade(const ConfigCustomerWealthGrade& from);

  inline ConfigCustomerWealthGrade& operator=(const ConfigCustomerWealthGrade& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigCustomerWealthGrade(ConfigCustomerWealthGrade&& from) noexcept
    : ConfigCustomerWealthGrade() {
    *this = ::std::move(from);
  }

  inline ConfigCustomerWealthGrade& operator=(ConfigCustomerWealthGrade&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigCustomerWealthGrade& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigCustomerWealthGrade* internal_default_instance() {
    return reinterpret_cast<const ConfigCustomerWealthGrade*>(
               &_ConfigCustomerWealthGrade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(ConfigCustomerWealthGrade* other);
  void Swap(ConfigCustomerWealthGrade* other);
  friend void swap(ConfigCustomerWealthGrade& a, ConfigCustomerWealthGrade& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigCustomerWealthGrade* New() const final {
    return CreateMaybeMessage<ConfigCustomerWealthGrade>(NULL);
  }

  ConfigCustomerWealthGrade* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigCustomerWealthGrade>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigCustomerWealthGrade& from);
  void MergeFrom(const ConfigCustomerWealthGrade& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigCustomerWealthGrade* other);
  protected:
  explicit ConfigCustomerWealthGrade(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 grade = 1;
  bool has_grade() const;
  void clear_grade();
  static const int kGradeFieldNumber = 1;
  ::google::protobuf::int32 grade() const;
  void set_grade(::google::protobuf::int32 value);

  // required int32 gold = 2;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 2;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // required int32 comfort = 3;
  bool has_comfort() const;
  void clear_comfort();
  static const int kComfortFieldNumber = 3;
  ::google::protobuf::int32 comfort() const;
  void set_comfort(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigCustomerWealthGrade)
 private:
  void set_has_grade();
  void clear_has_grade();
  void set_has_gold();
  void clear_has_gold();
  void set_has_comfort();
  void clear_has_comfort();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 comfort_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigCustomerWealthGradeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigCustomerWealthGradeList) */ {
 public:
  ConfigCustomerWealthGradeList();
  virtual ~ConfigCustomerWealthGradeList();

  ConfigCustomerWealthGradeList(const ConfigCustomerWealthGradeList& from);

  inline ConfigCustomerWealthGradeList& operator=(const ConfigCustomerWealthGradeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigCustomerWealthGradeList(ConfigCustomerWealthGradeList&& from) noexcept
    : ConfigCustomerWealthGradeList() {
    *this = ::std::move(from);
  }

  inline ConfigCustomerWealthGradeList& operator=(ConfigCustomerWealthGradeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigCustomerWealthGradeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigCustomerWealthGradeList* internal_default_instance() {
    return reinterpret_cast<const ConfigCustomerWealthGradeList*>(
               &_ConfigCustomerWealthGradeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(ConfigCustomerWealthGradeList* other);
  void Swap(ConfigCustomerWealthGradeList* other);
  friend void swap(ConfigCustomerWealthGradeList& a, ConfigCustomerWealthGradeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigCustomerWealthGradeList* New() const final {
    return CreateMaybeMessage<ConfigCustomerWealthGradeList>(NULL);
  }

  ConfigCustomerWealthGradeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigCustomerWealthGradeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigCustomerWealthGradeList& from);
  void MergeFrom(const ConfigCustomerWealthGradeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigCustomerWealthGradeList* other);
  protected:
  explicit ConfigCustomerWealthGradeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigCustomerWealthGrade list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigCustomerWealthGrade* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerWealthGrade >*
      mutable_list();
  const ::db::ConfigCustomerWealthGrade& list(int index) const;
  ::db::ConfigCustomerWealthGrade* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerWealthGrade >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigCustomerWealthGradeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerWealthGrade > list_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigPlaceGrade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigPlaceGrade) */ {
 public:
  ConfigPlaceGrade();
  virtual ~ConfigPlaceGrade();

  ConfigPlaceGrade(const ConfigPlaceGrade& from);

  inline ConfigPlaceGrade& operator=(const ConfigPlaceGrade& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigPlaceGrade(ConfigPlaceGrade&& from) noexcept
    : ConfigPlaceGrade() {
    *this = ::std::move(from);
  }

  inline ConfigPlaceGrade& operator=(ConfigPlaceGrade&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigPlaceGrade& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigPlaceGrade* internal_default_instance() {
    return reinterpret_cast<const ConfigPlaceGrade*>(
               &_ConfigPlaceGrade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(ConfigPlaceGrade* other);
  void Swap(ConfigPlaceGrade* other);
  friend void swap(ConfigPlaceGrade& a, ConfigPlaceGrade& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigPlaceGrade* New() const final {
    return CreateMaybeMessage<ConfigPlaceGrade>(NULL);
  }

  ConfigPlaceGrade* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigPlaceGrade>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigPlaceGrade& from);
  void MergeFrom(const ConfigPlaceGrade& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigPlaceGrade* other);
  protected:
  explicit ConfigPlaceGrade(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes customer_group = 11;
  bool has_customer_group() const;
  void clear_customer_group();
  static const int kCustomerGroupFieldNumber = 11;
  const ::std::string& customer_group() const;
  void set_customer_group(const ::std::string& value);
  #if LANG_CXX11
  void set_customer_group(::std::string&& value);
  #endif
  void set_customer_group(const char* value);
  void set_customer_group(const void* value, size_t size);
  ::std::string* mutable_customer_group();
  ::std::string* release_customer_group();
  void set_allocated_customer_group(::std::string* customer_group);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_customer_group();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_customer_group(
      ::std::string* customer_group);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 place_id = 2;
  bool has_place_id() const;
  void clear_place_id();
  static const int kPlaceIdFieldNumber = 2;
  ::google::protobuf::int32 place_id() const;
  void set_place_id(::google::protobuf::int32 value);

  // required int32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 levelup_unlock = 5;
  bool has_levelup_unlock() const;
  void clear_levelup_unlock();
  static const int kLevelupUnlockFieldNumber = 5;
  ::google::protobuf::int32 levelup_unlock() const;
  void set_levelup_unlock(::google::protobuf::int32 value);

  // required int32 leveldown_unlock = 6;
  bool has_leveldown_unlock() const;
  void clear_leveldown_unlock();
  static const int kLeveldownUnlockFieldNumber = 6;
  ::google::protobuf::int32 leveldown_unlock() const;
  void set_leveldown_unlock(::google::protobuf::int32 value);

  // required int32 boom = 7;
  bool has_boom() const;
  void clear_boom();
  static const int kBoomFieldNumber = 7;
  ::google::protobuf::int32 boom() const;
  void set_boom(::google::protobuf::int32 value);

  // required int32 customer_max = 12;
  bool has_customer_max() const;
  void clear_customer_max();
  static const int kCustomerMaxFieldNumber = 12;
  ::google::protobuf::int32 customer_max() const;
  void set_customer_max(::google::protobuf::int32 value);

  // required float customer_add_number = 13;
  bool has_customer_add_number() const;
  void clear_customer_add_number();
  static const int kCustomerAddNumberFieldNumber = 13;
  float customer_add_number() const;
  void set_customer_add_number(float value);

  // @@protoc_insertion_point(class_scope:db.ConfigPlaceGrade)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_place_id();
  void clear_has_place_id();
  void set_has_name();
  void clear_has_name();
  void set_has_level();
  void clear_has_level();
  void set_has_levelup_unlock();
  void clear_has_levelup_unlock();
  void set_has_leveldown_unlock();
  void clear_has_leveldown_unlock();
  void set_has_boom();
  void clear_has_boom();
  void set_has_customer_group();
  void clear_has_customer_group();
  void set_has_customer_max();
  void clear_has_customer_max();
  void set_has_customer_add_number();
  void clear_has_customer_add_number();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr customer_group_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 place_id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 levelup_unlock_;
  ::google::protobuf::int32 leveldown_unlock_;
  ::google::protobuf::int32 boom_;
  ::google::protobuf::int32 customer_max_;
  float customer_add_number_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigPlaceGradeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigPlaceGradeList) */ {
 public:
  ConfigPlaceGradeList();
  virtual ~ConfigPlaceGradeList();

  ConfigPlaceGradeList(const ConfigPlaceGradeList& from);

  inline ConfigPlaceGradeList& operator=(const ConfigPlaceGradeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigPlaceGradeList(ConfigPlaceGradeList&& from) noexcept
    : ConfigPlaceGradeList() {
    *this = ::std::move(from);
  }

  inline ConfigPlaceGradeList& operator=(ConfigPlaceGradeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigPlaceGradeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigPlaceGradeList* internal_default_instance() {
    return reinterpret_cast<const ConfigPlaceGradeList*>(
               &_ConfigPlaceGradeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(ConfigPlaceGradeList* other);
  void Swap(ConfigPlaceGradeList* other);
  friend void swap(ConfigPlaceGradeList& a, ConfigPlaceGradeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigPlaceGradeList* New() const final {
    return CreateMaybeMessage<ConfigPlaceGradeList>(NULL);
  }

  ConfigPlaceGradeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigPlaceGradeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigPlaceGradeList& from);
  void MergeFrom(const ConfigPlaceGradeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigPlaceGradeList* other);
  protected:
  explicit ConfigPlaceGradeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigPlaceGrade list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigPlaceGrade* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigPlaceGrade >*
      mutable_list();
  const ::db::ConfigPlaceGrade& list(int index) const;
  ::db::ConfigPlaceGrade* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigPlaceGrade >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigPlaceGradeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigPlaceGrade > list_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHarborFoodOrder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHarborFoodOrder) */ {
 public:
  ConfigHarborFoodOrder();
  virtual ~ConfigHarborFoodOrder();

  ConfigHarborFoodOrder(const ConfigHarborFoodOrder& from);

  inline ConfigHarborFoodOrder& operator=(const ConfigHarborFoodOrder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHarborFoodOrder(ConfigHarborFoodOrder&& from) noexcept
    : ConfigHarborFoodOrder() {
    *this = ::std::move(from);
  }

  inline ConfigHarborFoodOrder& operator=(ConfigHarborFoodOrder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHarborFoodOrder& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHarborFoodOrder* internal_default_instance() {
    return reinterpret_cast<const ConfigHarborFoodOrder*>(
               &_ConfigHarborFoodOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(ConfigHarborFoodOrder* other);
  void Swap(ConfigHarborFoodOrder* other);
  friend void swap(ConfigHarborFoodOrder& a, ConfigHarborFoodOrder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHarborFoodOrder* New() const final {
    return CreateMaybeMessage<ConfigHarborFoodOrder>(NULL);
  }

  ConfigHarborFoodOrder* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHarborFoodOrder>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHarborFoodOrder& from);
  void MergeFrom(const ConfigHarborFoodOrder& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHarborFoodOrder* other);
  protected:
  explicit ConfigHarborFoodOrder(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 hungry_timeout = 2;
  bool has_hungry_timeout() const;
  void clear_hungry_timeout();
  static const int kHungryTimeoutFieldNumber = 2;
  ::google::protobuf::int32 hungry_timeout() const;
  void set_hungry_timeout(::google::protobuf::int32 value);

  // required int32 goaboard_interval = 3;
  bool has_goaboard_interval() const;
  void clear_goaboard_interval();
  static const int kGoaboardIntervalFieldNumber = 3;
  ::google::protobuf::int32 goaboard_interval() const;
  void set_goaboard_interval(::google::protobuf::int32 value);

  // required int32 goaboard_flucuation = 4;
  bool has_goaboard_flucuation() const;
  void clear_goaboard_flucuation();
  static const int kGoaboardFlucuationFieldNumber = 4;
  ::google::protobuf::int32 goaboard_flucuation() const;
  void set_goaboard_flucuation(::google::protobuf::int32 value);

  // required int32 queueing_num_max = 5;
  bool has_queueing_num_max() const;
  void clear_queueing_num_max();
  static const int kQueueingNumMaxFieldNumber = 5;
  ::google::protobuf::int32 queueing_num_max() const;
  void set_queueing_num_max(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigHarborFoodOrder)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_hungry_timeout();
  void clear_has_hungry_timeout();
  void set_has_goaboard_interval();
  void clear_has_goaboard_interval();
  void set_has_goaboard_flucuation();
  void clear_has_goaboard_flucuation();
  void set_has_queueing_num_max();
  void clear_has_queueing_num_max();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 hungry_timeout_;
  ::google::protobuf::int32 goaboard_interval_;
  ::google::protobuf::int32 goaboard_flucuation_;
  ::google::protobuf::int32 queueing_num_max_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHarborFoodOrderList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHarborFoodOrderList) */ {
 public:
  ConfigHarborFoodOrderList();
  virtual ~ConfigHarborFoodOrderList();

  ConfigHarborFoodOrderList(const ConfigHarborFoodOrderList& from);

  inline ConfigHarborFoodOrderList& operator=(const ConfigHarborFoodOrderList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHarborFoodOrderList(ConfigHarborFoodOrderList&& from) noexcept
    : ConfigHarborFoodOrderList() {
    *this = ::std::move(from);
  }

  inline ConfigHarborFoodOrderList& operator=(ConfigHarborFoodOrderList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHarborFoodOrderList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHarborFoodOrderList* internal_default_instance() {
    return reinterpret_cast<const ConfigHarborFoodOrderList*>(
               &_ConfigHarborFoodOrderList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(ConfigHarborFoodOrderList* other);
  void Swap(ConfigHarborFoodOrderList* other);
  friend void swap(ConfigHarborFoodOrderList& a, ConfigHarborFoodOrderList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHarborFoodOrderList* New() const final {
    return CreateMaybeMessage<ConfigHarborFoodOrderList>(NULL);
  }

  ConfigHarborFoodOrderList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHarborFoodOrderList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHarborFoodOrderList& from);
  void MergeFrom(const ConfigHarborFoodOrderList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHarborFoodOrderList* other);
  protected:
  explicit ConfigHarborFoodOrderList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigHarborFoodOrder list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigHarborFoodOrder* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHarborFoodOrder >*
      mutable_list();
  const ::db::ConfigHarborFoodOrder& list(int index) const;
  ::db::ConfigHarborFoodOrder* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigHarborFoodOrder >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigHarborFoodOrderList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHarborFoodOrder > list_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserHarbor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserHarbor) */ {
 public:
  UserHarbor();
  virtual ~UserHarbor();

  UserHarbor(const UserHarbor& from);

  inline UserHarbor& operator=(const UserHarbor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserHarbor(UserHarbor&& from) noexcept
    : UserHarbor() {
    *this = ::std::move(from);
  }

  inline UserHarbor& operator=(UserHarbor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserHarbor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserHarbor* internal_default_instance() {
    return reinterpret_cast<const UserHarbor*>(
               &_UserHarbor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(UserHarbor* other);
  void Swap(UserHarbor* other);
  friend void swap(UserHarbor& a, UserHarbor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserHarbor* New() const final {
    return CreateMaybeMessage<UserHarbor>(NULL);
  }

  UserHarbor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserHarbor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserHarbor& from);
  void MergeFrom(const UserHarbor& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserHarbor* other);
  protected:
  explicit UserHarbor(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required int32 harborid = 2;
  bool has_harborid() const;
  void clear_harborid();
  static const int kHarboridFieldNumber = 2;
  ::google::protobuf::int32 harborid() const;
  void set_harborid(::google::protobuf::int32 value);

  // required int32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required int32 grade = 4;
  bool has_grade() const;
  void clear_grade();
  static const int kGradeFieldNumber = 4;
  ::google::protobuf::int32 grade() const;
  void set_grade(::google::protobuf::int32 value);

  // required int32 boom = 5;
  bool has_boom() const;
  void clear_boom();
  static const int kBoomFieldNumber = 5;
  ::google::protobuf::int32 boom() const;
  void set_boom(::google::protobuf::int32 value);

  // required sfixed64 growtime = 6;
  bool has_growtime() const;
  void clear_growtime();
  static const int kGrowtimeFieldNumber = 6;
  ::google::protobuf::int64 growtime() const;
  void set_growtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserHarbor)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_harborid();
  void clear_has_harborid();
  void set_has_state();
  void clear_has_state();
  void set_has_grade();
  void clear_has_grade();
  void set_has_boom();
  void clear_has_boom();
  void set_has_growtime();
  void clear_has_growtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int32 harborid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 boom_;
  ::google::protobuf::int64 growtime_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserHarborNpc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserHarborNpc) */ {
 public:
  UserHarborNpc();
  virtual ~UserHarborNpc();

  UserHarborNpc(const UserHarborNpc& from);

  inline UserHarborNpc& operator=(const UserHarborNpc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserHarborNpc(UserHarborNpc&& from) noexcept
    : UserHarborNpc() {
    *this = ::std::move(from);
  }

  inline UserHarborNpc& operator=(UserHarborNpc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserHarborNpc& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserHarborNpc* internal_default_instance() {
    return reinterpret_cast<const UserHarborNpc*>(
               &_UserHarborNpc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(UserHarborNpc* other);
  void Swap(UserHarborNpc* other);
  friend void swap(UserHarborNpc& a, UserHarborNpc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserHarborNpc* New() const final {
    return CreateMaybeMessage<UserHarborNpc>(NULL);
  }

  UserHarborNpc* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserHarborNpc>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserHarborNpc& from);
  void MergeFrom(const UserHarborNpc& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserHarborNpc* other);
  protected:
  explicit UserHarborNpc(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required int32 harborid = 2;
  bool has_harborid() const;
  void clear_harborid();
  static const int kHarboridFieldNumber = 2;
  ::google::protobuf::int32 harborid() const;
  void set_harborid(::google::protobuf::int32 value);

  // required int32 sn = 3;
  bool has_sn() const;
  void clear_sn();
  static const int kSnFieldNumber = 3;
  ::google::protobuf::int32 sn() const;
  void set_sn(::google::protobuf::int32 value);

  // required uint64 cfgid = 5;
  bool has_cfgid() const;
  void clear_cfgid();
  static const int kCfgidFieldNumber = 5;
  ::google::protobuf::uint64 cfgid() const;
  void set_cfgid(::google::protobuf::uint64 value);

  // required int32 npc_type = 4;
  bool has_npc_type() const;
  void clear_npc_type();
  static const int kNpcTypeFieldNumber = 4;
  ::google::protobuf::int32 npc_type() const;
  void set_npc_type(::google::protobuf::int32 value);

  // required int32 state = 6;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required int32 seconds = 7;
  bool has_seconds() const;
  void clear_seconds();
  static const int kSecondsFieldNumber = 7;
  ::google::protobuf::int32 seconds() const;
  void set_seconds(::google::protobuf::int32 value);

  // required int32 seqno = 11;
  bool has_seqno() const;
  void clear_seqno();
  static const int kSeqnoFieldNumber = 11;
  ::google::protobuf::int32 seqno() const;
  void set_seqno(::google::protobuf::int32 value);

  // required int32 wealth_grade = 12;
  bool has_wealth_grade() const;
  void clear_wealth_grade();
  static const int kWealthGradeFieldNumber = 12;
  ::google::protobuf::int32 wealth_grade() const;
  void set_wealth_grade(::google::protobuf::int32 value);

  // required int32 gold = 13;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 13;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // required int32 satisfaction = 14;
  bool has_satisfaction() const;
  void clear_satisfaction();
  static const int kSatisfactionFieldNumber = 14;
  ::google::protobuf::int32 satisfaction() const;
  void set_satisfaction(::google::protobuf::int32 value);

  // required int32 seatid = 15;
  bool has_seatid() const;
  void clear_seatid();
  static const int kSeatidFieldNumber = 15;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // required sfixed64 occupation_event_starttime = 22;
  bool has_occupation_event_starttime() const;
  void clear_occupation_event_starttime();
  static const int kOccupationEventStarttimeFieldNumber = 22;
  ::google::protobuf::int64 occupation_event_starttime() const;
  void set_occupation_event_starttime(::google::protobuf::int64 value);

  // required int32 occupation_val = 21;
  bool has_occupation_val() const;
  void clear_occupation_val();
  static const int kOccupationValFieldNumber = 21;
  ::google::protobuf::int32 occupation_val() const;
  void set_occupation_val(::google::protobuf::int32 value);

  // required int32 question_status = 23;
  bool has_question_status() const;
  void clear_question_status();
  static const int kQuestionStatusFieldNumber = 23;
  ::google::protobuf::int32 question_status() const;
  void set_question_status(::google::protobuf::int32 value);

  // required int32 special_cond_bonus = 24;
  bool has_special_cond_bonus() const;
  void clear_special_cond_bonus();
  static const int kSpecialCondBonusFieldNumber = 24;
  ::google::protobuf::int32 special_cond_bonus() const;
  void set_special_cond_bonus(::google::protobuf::int32 value);

  // required int32 satisfaction_accepted = 25;
  bool has_satisfaction_accepted() const;
  void clear_satisfaction_accepted();
  static const int kSatisfactionAcceptedFieldNumber = 25;
  ::google::protobuf::int32 satisfaction_accepted() const;
  void set_satisfaction_accepted(::google::protobuf::int32 value);

  // required int32 task_reward_accept3 = 39;
  bool has_task_reward_accept3() const;
  void clear_task_reward_accept3();
  static const int kTaskRewardAccept3FieldNumber = 39;
  ::google::protobuf::int32 task_reward_accept3() const;
  void set_task_reward_accept3(::google::protobuf::int32 value);

  // required int32 task_need_idx1 = 31;
  bool has_task_need_idx1() const;
  void clear_task_need_idx1();
  static const int kTaskNeedIdx1FieldNumber = 31;
  ::google::protobuf::int32 task_need_idx1() const;
  void set_task_need_idx1(::google::protobuf::int32 value);

  // required int32 task_reward_idx1 = 32;
  bool has_task_reward_idx1() const;
  void clear_task_reward_idx1();
  static const int kTaskRewardIdx1FieldNumber = 32;
  ::google::protobuf::int32 task_reward_idx1() const;
  void set_task_reward_idx1(::google::protobuf::int32 value);

  // required int32 task_reward_accept1 = 33;
  bool has_task_reward_accept1() const;
  void clear_task_reward_accept1();
  static const int kTaskRewardAccept1FieldNumber = 33;
  ::google::protobuf::int32 task_reward_accept1() const;
  void set_task_reward_accept1(::google::protobuf::int32 value);

  // required int32 task_need_idx2 = 34;
  bool has_task_need_idx2() const;
  void clear_task_need_idx2();
  static const int kTaskNeedIdx2FieldNumber = 34;
  ::google::protobuf::int32 task_need_idx2() const;
  void set_task_need_idx2(::google::protobuf::int32 value);

  // required int32 task_reward_idx2 = 35;
  bool has_task_reward_idx2() const;
  void clear_task_reward_idx2();
  static const int kTaskRewardIdx2FieldNumber = 35;
  ::google::protobuf::int32 task_reward_idx2() const;
  void set_task_reward_idx2(::google::protobuf::int32 value);

  // required int32 task_reward_accept2 = 36;
  bool has_task_reward_accept2() const;
  void clear_task_reward_accept2();
  static const int kTaskRewardAccept2FieldNumber = 36;
  ::google::protobuf::int32 task_reward_accept2() const;
  void set_task_reward_accept2(::google::protobuf::int32 value);

  // required int32 task_need_idx3 = 37;
  bool has_task_need_idx3() const;
  void clear_task_need_idx3();
  static const int kTaskNeedIdx3FieldNumber = 37;
  ::google::protobuf::int32 task_need_idx3() const;
  void set_task_need_idx3(::google::protobuf::int32 value);

  // required int32 task_reward_idx3 = 38;
  bool has_task_reward_idx3() const;
  void clear_task_reward_idx3();
  static const int kTaskRewardIdx3FieldNumber = 38;
  ::google::protobuf::int32 task_reward_idx3() const;
  void set_task_reward_idx3(::google::protobuf::int32 value);

  // required sfixed64 optime = 41;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 41;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserHarborNpc)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_harborid();
  void clear_has_harborid();
  void set_has_sn();
  void clear_has_sn();
  void set_has_npc_type();
  void clear_has_npc_type();
  void set_has_cfgid();
  void clear_has_cfgid();
  void set_has_state();
  void clear_has_state();
  void set_has_seconds();
  void clear_has_seconds();
  void set_has_seqno();
  void clear_has_seqno();
  void set_has_wealth_grade();
  void clear_has_wealth_grade();
  void set_has_gold();
  void clear_has_gold();
  void set_has_satisfaction();
  void clear_has_satisfaction();
  void set_has_seatid();
  void clear_has_seatid();
  void set_has_occupation_val();
  void clear_has_occupation_val();
  void set_has_occupation_event_starttime();
  void clear_has_occupation_event_starttime();
  void set_has_question_status();
  void clear_has_question_status();
  void set_has_special_cond_bonus();
  void clear_has_special_cond_bonus();
  void set_has_satisfaction_accepted();
  void clear_has_satisfaction_accepted();
  void set_has_task_need_idx1();
  void clear_has_task_need_idx1();
  void set_has_task_reward_idx1();
  void clear_has_task_reward_idx1();
  void set_has_task_reward_accept1();
  void clear_has_task_reward_accept1();
  void set_has_task_need_idx2();
  void clear_has_task_need_idx2();
  void set_has_task_reward_idx2();
  void clear_has_task_reward_idx2();
  void set_has_task_reward_accept2();
  void clear_has_task_reward_accept2();
  void set_has_task_need_idx3();
  void clear_has_task_need_idx3();
  void set_has_task_reward_idx3();
  void clear_has_task_reward_idx3();
  void set_has_task_reward_accept3();
  void clear_has_task_reward_accept3();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int32 harborid_;
  ::google::protobuf::int32 sn_;
  ::google::protobuf::uint64 cfgid_;
  ::google::protobuf::int32 npc_type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 seconds_;
  ::google::protobuf::int32 seqno_;
  ::google::protobuf::int32 wealth_grade_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 satisfaction_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int64 occupation_event_starttime_;
  ::google::protobuf::int32 occupation_val_;
  ::google::protobuf::int32 question_status_;
  ::google::protobuf::int32 special_cond_bonus_;
  ::google::protobuf::int32 satisfaction_accepted_;
  ::google::protobuf::int32 task_reward_accept3_;
  ::google::protobuf::int32 task_need_idx1_;
  ::google::protobuf::int32 task_reward_idx1_;
  ::google::protobuf::int32 task_reward_accept1_;
  ::google::protobuf::int32 task_need_idx2_;
  ::google::protobuf::int32 task_reward_idx2_;
  ::google::protobuf::int32 task_reward_accept2_;
  ::google::protobuf::int32 task_need_idx3_;
  ::google::protobuf::int32 task_reward_idx3_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserFoodOrderSlot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserFoodOrderSlot) */ {
 public:
  UserFoodOrderSlot();
  virtual ~UserFoodOrderSlot();

  UserFoodOrderSlot(const UserFoodOrderSlot& from);

  inline UserFoodOrderSlot& operator=(const UserFoodOrderSlot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserFoodOrderSlot(UserFoodOrderSlot&& from) noexcept
    : UserFoodOrderSlot() {
    *this = ::std::move(from);
  }

  inline UserFoodOrderSlot& operator=(UserFoodOrderSlot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserFoodOrderSlot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserFoodOrderSlot* internal_default_instance() {
    return reinterpret_cast<const UserFoodOrderSlot*>(
               &_UserFoodOrderSlot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(UserFoodOrderSlot* other);
  void Swap(UserFoodOrderSlot* other);
  friend void swap(UserFoodOrderSlot& a, UserFoodOrderSlot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserFoodOrderSlot* New() const final {
    return CreateMaybeMessage<UserFoodOrderSlot>(NULL);
  }

  UserFoodOrderSlot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserFoodOrderSlot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserFoodOrderSlot& from);
  void MergeFrom(const UserFoodOrderSlot& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserFoodOrderSlot* other);
  protected:
  explicit UserFoodOrderSlot(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required int32 slotid = 2;
  bool has_slotid() const;
  void clear_slotid();
  static const int kSlotidFieldNumber = 2;
  ::google::protobuf::int32 slotid() const;
  void set_slotid(::google::protobuf::int32 value);

  // required int32 slot_type = 3;
  bool has_slot_type() const;
  void clear_slot_type();
  static const int kSlotTypeFieldNumber = 3;
  ::google::protobuf::int32 slot_type() const;
  void set_slot_type(::google::protobuf::int32 value);

  // required int32 slot_state = 4;
  bool has_slot_state() const;
  void clear_slot_state();
  static const int kSlotStateFieldNumber = 4;
  ::google::protobuf::int32 slot_state() const;
  void set_slot_state(::google::protobuf::int32 value);

  // required int32 workshopid = 11;
  bool has_workshopid() const;
  void clear_workshopid();
  static const int kWorkshopidFieldNumber = 11;
  ::google::protobuf::int32 workshopid() const;
  void set_workshopid(::google::protobuf::int32 value);

  // required int32 workerid = 12;
  bool has_workerid() const;
  void clear_workerid();
  static const int kWorkeridFieldNumber = 12;
  ::google::protobuf::int32 workerid() const;
  void set_workerid(::google::protobuf::int32 value);

  // required int32 foodfilterid = 13;
  bool has_foodfilterid() const;
  void clear_foodfilterid();
  static const int kFoodfilteridFieldNumber = 13;
  ::google::protobuf::int32 foodfilterid() const;
  void set_foodfilterid(::google::protobuf::int32 value);

  // required uint64 productid = 15;
  bool has_productid() const;
  void clear_productid();
  static const int kProductidFieldNumber = 15;
  ::google::protobuf::uint64 productid() const;
  void set_productid(::google::protobuf::uint64 value);

  // required int32 formulaid = 14;
  bool has_formulaid() const;
  void clear_formulaid();
  static const int kFormulaidFieldNumber = 14;
  ::google::protobuf::int32 formulaid() const;
  void set_formulaid(::google::protobuf::int32 value);

  // required int32 seconds = 16;
  bool has_seconds() const;
  void clear_seconds();
  static const int kSecondsFieldNumber = 16;
  ::google::protobuf::int32 seconds() const;
  void set_seconds(::google::protobuf::int32 value);

  // required int32 star = 21;
  bool has_star() const;
  void clear_star();
  static const int kStarFieldNumber = 21;
  ::google::protobuf::int32 star() const;
  void set_star(::google::protobuf::int32 value);

  // required int32 gather_gold_num = 22;
  bool has_gather_gold_num() const;
  void clear_gather_gold_num();
  static const int kGatherGoldNumFieldNumber = 22;
  ::google::protobuf::int32 gather_gold_num() const;
  void set_gather_gold_num(::google::protobuf::int32 value);

  // required int32 gather_satisfaction_num = 23;
  bool has_gather_satisfaction_num() const;
  void clear_gather_satisfaction_num();
  static const int kGatherSatisfactionNumFieldNumber = 23;
  ::google::protobuf::int32 gather_satisfaction_num() const;
  void set_gather_satisfaction_num(::google::protobuf::int32 value);

  // required int32 tip_gold_num = 24;
  bool has_tip_gold_num() const;
  void clear_tip_gold_num();
  static const int kTipGoldNumFieldNumber = 24;
  ::google::protobuf::int32 tip_gold_num() const;
  void set_tip_gold_num(::google::protobuf::int32 value);

  // required int32 tip_diamond_num = 25;
  bool has_tip_diamond_num() const;
  void clear_tip_diamond_num();
  static const int kTipDiamondNumFieldNumber = 25;
  ::google::protobuf::int32 tip_diamond_num() const;
  void set_tip_diamond_num(::google::protobuf::int32 value);

  // required float answer_bonus_ratio = 26;
  bool has_answer_bonus_ratio() const;
  void clear_answer_bonus_ratio();
  static const int kAnswerBonusRatioFieldNumber = 26;
  float answer_bonus_ratio() const;
  void set_answer_bonus_ratio(float value);

  // required sfixed64 starttime = 31;
  bool has_starttime() const;
  void clear_starttime();
  static const int kStarttimeFieldNumber = 31;
  ::google::protobuf::int64 starttime() const;
  void set_starttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserFoodOrderSlot)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_slotid();
  void clear_has_slotid();
  void set_has_slot_type();
  void clear_has_slot_type();
  void set_has_slot_state();
  void clear_has_slot_state();
  void set_has_workshopid();
  void clear_has_workshopid();
  void set_has_workerid();
  void clear_has_workerid();
  void set_has_foodfilterid();
  void clear_has_foodfilterid();
  void set_has_formulaid();
  void clear_has_formulaid();
  void set_has_productid();
  void clear_has_productid();
  void set_has_seconds();
  void clear_has_seconds();
  void set_has_star();
  void clear_has_star();
  void set_has_gather_gold_num();
  void clear_has_gather_gold_num();
  void set_has_gather_satisfaction_num();
  void clear_has_gather_satisfaction_num();
  void set_has_tip_gold_num();
  void clear_has_tip_gold_num();
  void set_has_tip_diamond_num();
  void clear_has_tip_diamond_num();
  void set_has_answer_bonus_ratio();
  void clear_has_answer_bonus_ratio();
  void set_has_starttime();
  void clear_has_starttime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int32 slotid_;
  ::google::protobuf::int32 slot_type_;
  ::google::protobuf::int32 slot_state_;
  ::google::protobuf::int32 workshopid_;
  ::google::protobuf::int32 workerid_;
  ::google::protobuf::int32 foodfilterid_;
  ::google::protobuf::uint64 productid_;
  ::google::protobuf::int32 formulaid_;
  ::google::protobuf::int32 seconds_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 gather_gold_num_;
  ::google::protobuf::int32 gather_satisfaction_num_;
  ::google::protobuf::int32 tip_gold_num_;
  ::google::protobuf::int32 tip_diamond_num_;
  float answer_bonus_ratio_;
  ::google::protobuf::int64 starttime_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserCustomerUnlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserCustomerUnlock) */ {
 public:
  UserCustomerUnlock();
  virtual ~UserCustomerUnlock();

  UserCustomerUnlock(const UserCustomerUnlock& from);

  inline UserCustomerUnlock& operator=(const UserCustomerUnlock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCustomerUnlock(UserCustomerUnlock&& from) noexcept
    : UserCustomerUnlock() {
    *this = ::std::move(from);
  }

  inline UserCustomerUnlock& operator=(UserCustomerUnlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCustomerUnlock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCustomerUnlock* internal_default_instance() {
    return reinterpret_cast<const UserCustomerUnlock*>(
               &_UserCustomerUnlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(UserCustomerUnlock* other);
  void Swap(UserCustomerUnlock* other);
  friend void swap(UserCustomerUnlock& a, UserCustomerUnlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCustomerUnlock* New() const final {
    return CreateMaybeMessage<UserCustomerUnlock>(NULL);
  }

  UserCustomerUnlock* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserCustomerUnlock>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserCustomerUnlock& from);
  void MergeFrom(const UserCustomerUnlock& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserCustomerUnlock* other);
  protected:
  explicit UserCustomerUnlock(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required uint64 cfgid = 3;
  bool has_cfgid() const;
  void clear_cfgid();
  static const int kCfgidFieldNumber = 3;
  ::google::protobuf::uint64 cfgid() const;
  void set_cfgid(::google::protobuf::uint64 value);

  // required int32 sn = 2;
  bool has_sn() const;
  void clear_sn();
  static const int kSnFieldNumber = 2;
  ::google::protobuf::int32 sn() const;
  void set_sn(::google::protobuf::int32 value);

  // required int32 state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required sfixed64 optime = 11;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 11;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserCustomerUnlock)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_sn();
  void clear_has_sn();
  void set_has_cfgid();
  void clear_has_cfgid();
  void set_has_state();
  void clear_has_state();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::uint64 cfgid_;
  ::google::protobuf::int32 sn_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_StoredProcHarbour_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigFood

// required int32 id = 1;
inline bool ConfigFood::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigFood::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigFood::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigFood::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigFood::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.id)
  return id_;
}
inline void ConfigFood::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.id)
}

// required bytes name = 2;
inline bool ConfigFood::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigFood::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigFood::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigFood::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigFood::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.name)
  return name_.Get();
}
inline void ConfigFood::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFood.name)
}
#if LANG_CXX11
inline void ConfigFood::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFood.name)
}
#endif
inline void ConfigFood::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFood.name)
}
inline void ConfigFood::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFood.name)
}
inline ::std::string* ConfigFood::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigFood.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFood::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigFood.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFood::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFood.name)
}
inline ::std::string* ConfigFood::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFood.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFood::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFood.name)
}

// required int32 type = 3;
inline bool ConfigFood::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigFood::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigFood::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigFood::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConfigFood::type() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.type)
  return type_;
}
inline void ConfigFood::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.type)
}

// required int32 food_group = 4;
inline bool ConfigFood::has_food_group() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigFood::set_has_food_group() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigFood::clear_has_food_group() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigFood::clear_food_group() {
  food_group_ = 0;
  clear_has_food_group();
}
inline ::google::protobuf::int32 ConfigFood::food_group() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.food_group)
  return food_group_;
}
inline void ConfigFood::set_food_group(::google::protobuf::int32 value) {
  set_has_food_group();
  food_group_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.food_group)
}

// required int32 quality = 5;
inline bool ConfigFood::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigFood::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigFood::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigFood::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 ConfigFood::quality() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.quality)
  return quality_;
}
inline void ConfigFood::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.quality)
}

// required int32 fit = 6;
inline bool ConfigFood::has_fit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigFood::set_has_fit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigFood::clear_has_fit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigFood::clear_fit() {
  fit_ = 0;
  clear_has_fit();
}
inline ::google::protobuf::int32 ConfigFood::fit() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.fit)
  return fit_;
}
inline void ConfigFood::set_fit(::google::protobuf::int32 value) {
  set_has_fit();
  fit_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.fit)
}

// required int32 color = 11;
inline bool ConfigFood::has_color() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigFood::set_has_color() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigFood::clear_has_color() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigFood::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 ConfigFood::color() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.color)
  return color_;
}
inline void ConfigFood::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.color)
}

// required int32 smell = 12;
inline bool ConfigFood::has_smell() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigFood::set_has_smell() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigFood::clear_has_smell() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigFood::clear_smell() {
  smell_ = 0;
  clear_has_smell();
}
inline ::google::protobuf::int32 ConfigFood::smell() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.smell)
  return smell_;
}
inline void ConfigFood::set_smell(::google::protobuf::int32 value) {
  set_has_smell();
  smell_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.smell)
}

// required int32 taste = 13;
inline bool ConfigFood::has_taste() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigFood::set_has_taste() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigFood::clear_has_taste() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigFood::clear_taste() {
  taste_ = 0;
  clear_has_taste();
}
inline ::google::protobuf::int32 ConfigFood::taste() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.taste)
  return taste_;
}
inline void ConfigFood::set_taste(::google::protobuf::int32 value) {
  set_has_taste();
  taste_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.taste)
}

// required int32 bellyful = 14;
inline bool ConfigFood::has_bellyful() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigFood::set_has_bellyful() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigFood::clear_has_bellyful() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigFood::clear_bellyful() {
  bellyful_ = 0;
  clear_has_bellyful();
}
inline ::google::protobuf::int32 ConfigFood::bellyful() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.bellyful)
  return bellyful_;
}
inline void ConfigFood::set_bellyful(::google::protobuf::int32 value) {
  set_has_bellyful();
  bellyful_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.bellyful)
}

// required int32 detoxifcation = 21;
inline bool ConfigFood::has_detoxifcation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigFood::set_has_detoxifcation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConfigFood::clear_has_detoxifcation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConfigFood::clear_detoxifcation() {
  detoxifcation_ = 0;
  clear_has_detoxifcation();
}
inline ::google::protobuf::int32 ConfigFood::detoxifcation() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.detoxifcation)
  return detoxifcation_;
}
inline void ConfigFood::set_detoxifcation(::google::protobuf::int32 value) {
  set_has_detoxifcation();
  detoxifcation_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.detoxifcation)
}

// required int32 sober = 22;
inline bool ConfigFood::has_sober() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConfigFood::set_has_sober() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ConfigFood::clear_has_sober() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ConfigFood::clear_sober() {
  sober_ = 0;
  clear_has_sober();
}
inline ::google::protobuf::int32 ConfigFood::sober() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.sober)
  return sober_;
}
inline void ConfigFood::set_sober(::google::protobuf::int32 value) {
  set_has_sober();
  sober_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.sober)
}

// required int32 exorcism = 23;
inline bool ConfigFood::has_exorcism() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConfigFood::set_has_exorcism() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ConfigFood::clear_has_exorcism() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ConfigFood::clear_exorcism() {
  exorcism_ = 0;
  clear_has_exorcism();
}
inline ::google::protobuf::int32 ConfigFood::exorcism() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.exorcism)
  return exorcism_;
}
inline void ConfigFood::set_exorcism(::google::protobuf::int32 value) {
  set_has_exorcism();
  exorcism_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.exorcism)
}

// required int32 poison = 24;
inline bool ConfigFood::has_poison() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConfigFood::set_has_poison() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ConfigFood::clear_has_poison() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ConfigFood::clear_poison() {
  poison_ = 0;
  clear_has_poison();
}
inline ::google::protobuf::int32 ConfigFood::poison() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.poison)
  return poison_;
}
inline void ConfigFood::set_poison(::google::protobuf::int32 value) {
  set_has_poison();
  poison_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.poison)
}

// required int32 alcohol = 25;
inline bool ConfigFood::has_alcohol() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ConfigFood::set_has_alcohol() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ConfigFood::clear_has_alcohol() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ConfigFood::clear_alcohol() {
  alcohol_ = 0;
  clear_has_alcohol();
}
inline ::google::protobuf::int32 ConfigFood::alcohol() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.alcohol)
  return alcohol_;
}
inline void ConfigFood::set_alcohol(::google::protobuf::int32 value) {
  set_has_alcohol();
  alcohol_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.alcohol)
}

// required int32 evil = 26;
inline bool ConfigFood::has_evil() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ConfigFood::set_has_evil() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ConfigFood::clear_has_evil() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ConfigFood::clear_evil() {
  evil_ = 0;
  clear_has_evil();
}
inline ::google::protobuf::int32 ConfigFood::evil() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.evil)
  return evil_;
}
inline void ConfigFood::set_evil(::google::protobuf::int32 value) {
  set_has_evil();
  evil_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.evil)
}

// required int32 sour = 31;
inline bool ConfigFood::has_sour() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ConfigFood::set_has_sour() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ConfigFood::clear_has_sour() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ConfigFood::clear_sour() {
  sour_ = 0;
  clear_has_sour();
}
inline ::google::protobuf::int32 ConfigFood::sour() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.sour)
  return sour_;
}
inline void ConfigFood::set_sour(::google::protobuf::int32 value) {
  set_has_sour();
  sour_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.sour)
}

// required int32 sweet = 32;
inline bool ConfigFood::has_sweet() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ConfigFood::set_has_sweet() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ConfigFood::clear_has_sweet() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ConfigFood::clear_sweet() {
  sweet_ = 0;
  clear_has_sweet();
}
inline ::google::protobuf::int32 ConfigFood::sweet() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.sweet)
  return sweet_;
}
inline void ConfigFood::set_sweet(::google::protobuf::int32 value) {
  set_has_sweet();
  sweet_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.sweet)
}

// required int32 bitter = 33;
inline bool ConfigFood::has_bitter() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ConfigFood::set_has_bitter() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ConfigFood::clear_has_bitter() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ConfigFood::clear_bitter() {
  bitter_ = 0;
  clear_has_bitter();
}
inline ::google::protobuf::int32 ConfigFood::bitter() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.bitter)
  return bitter_;
}
inline void ConfigFood::set_bitter(::google::protobuf::int32 value) {
  set_has_bitter();
  bitter_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.bitter)
}

// required int32 hot = 34;
inline bool ConfigFood::has_hot() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ConfigFood::set_has_hot() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ConfigFood::clear_has_hot() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ConfigFood::clear_hot() {
  hot_ = 0;
  clear_has_hot();
}
inline ::google::protobuf::int32 ConfigFood::hot() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.hot)
  return hot_;
}
inline void ConfigFood::set_hot(::google::protobuf::int32 value) {
  set_has_hot();
  hot_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.hot)
}

// required int32 salty = 35;
inline bool ConfigFood::has_salty() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ConfigFood::set_has_salty() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ConfigFood::clear_has_salty() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ConfigFood::clear_salty() {
  salty_ = 0;
  clear_has_salty();
}
inline ::google::protobuf::int32 ConfigFood::salty() const {
  // @@protoc_insertion_point(field_get:db.ConfigFood.salty)
  return salty_;
}
inline void ConfigFood::set_salty(::google::protobuf::int32 value) {
  set_has_salty();
  salty_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFood.salty)
}

// -------------------------------------------------------------------

// ConfigFoodList

// repeated .db.ConfigFood list = 1;
inline int ConfigFoodList::list_size() const {
  return list_.size();
}
inline void ConfigFoodList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigFood* ConfigFoodList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigFood >*
ConfigFoodList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigFoodList.list)
  return &list_;
}
inline const ::db::ConfigFood& ConfigFoodList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodList.list)
  return list_.Get(index);
}
inline ::db::ConfigFood* ConfigFoodList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigFoodList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigFood >&
ConfigFoodList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigFoodList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigFoodRecipe

// required int32 id = 1;
inline bool ConfigFoodRecipe::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigFoodRecipe::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigFoodRecipe::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigFoodRecipe::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.id)
  return id_;
}
inline void ConfigFoodRecipe::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.id)
}

// required bytes name = 2;
inline bool ConfigFoodRecipe::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigFoodRecipe::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigFoodRecipe::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigFoodRecipe::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigFoodRecipe::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.name)
  return name_.Get();
}
inline void ConfigFoodRecipe::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.name)
}
#if LANG_CXX11
inline void ConfigFoodRecipe::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodRecipe.name)
}
#endif
inline void ConfigFoodRecipe::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodRecipe.name)
}
inline void ConfigFoodRecipe::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodRecipe.name)
}
inline ::std::string* ConfigFoodRecipe::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodRecipe.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodRecipe::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodRecipe.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodRecipe::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodRecipe.name)
}
inline ::std::string* ConfigFoodRecipe::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodRecipe.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodRecipe::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodRecipe.name)
}

// required int32 type = 3;
inline bool ConfigFoodRecipe::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigFoodRecipe::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigFoodRecipe::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigFoodRecipe::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::type() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.type)
  return type_;
}
inline void ConfigFoodRecipe::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.type)
}

// required bytes constitute = 4;
inline bool ConfigFoodRecipe::has_constitute() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigFoodRecipe::set_has_constitute() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigFoodRecipe::clear_has_constitute() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigFoodRecipe::clear_constitute() {
  constitute_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_constitute();
}
inline const ::std::string& ConfigFoodRecipe::constitute() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.constitute)
  return constitute_.Get();
}
inline void ConfigFoodRecipe::set_constitute(const ::std::string& value) {
  set_has_constitute();
  constitute_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.constitute)
}
#if LANG_CXX11
inline void ConfigFoodRecipe::set_constitute(::std::string&& value) {
  set_has_constitute();
  constitute_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodRecipe.constitute)
}
#endif
inline void ConfigFoodRecipe::set_constitute(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_constitute();
  constitute_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodRecipe.constitute)
}
inline void ConfigFoodRecipe::set_constitute(const void* value,
    size_t size) {
  set_has_constitute();
  constitute_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodRecipe.constitute)
}
inline ::std::string* ConfigFoodRecipe::mutable_constitute() {
  set_has_constitute();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodRecipe.constitute)
  return constitute_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodRecipe::release_constitute() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodRecipe.constitute)
  if (!has_constitute()) {
    return NULL;
  }
  clear_has_constitute();
  return constitute_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodRecipe::set_allocated_constitute(::std::string* constitute) {
  if (constitute != NULL) {
    set_has_constitute();
  } else {
    clear_has_constitute();
  }
  constitute_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), constitute,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodRecipe.constitute)
}
inline ::std::string* ConfigFoodRecipe::unsafe_arena_release_constitute() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodRecipe.constitute)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_constitute();
  return constitute_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodRecipe::unsafe_arena_set_allocated_constitute(
    ::std::string* constitute) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (constitute != NULL) {
    set_has_constitute();
  } else {
    clear_has_constitute();
  }
  constitute_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      constitute, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodRecipe.constitute)
}

// required int32 add_val = 5;
inline bool ConfigFoodRecipe::has_add_val() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigFoodRecipe::set_has_add_val() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigFoodRecipe::clear_has_add_val() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigFoodRecipe::clear_add_val() {
  add_val_ = 0;
  clear_has_add_val();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::add_val() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.add_val)
  return add_val_;
}
inline void ConfigFoodRecipe::set_add_val(::google::protobuf::int32 value) {
  set_has_add_val();
  add_val_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.add_val)
}

// required int32 ship_exp = 6;
inline bool ConfigFoodRecipe::has_ship_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigFoodRecipe::set_has_ship_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigFoodRecipe::clear_has_ship_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigFoodRecipe::clear_ship_exp() {
  ship_exp_ = 0;
  clear_has_ship_exp();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::ship_exp() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.ship_exp)
  return ship_exp_;
}
inline void ConfigFoodRecipe::set_ship_exp(::google::protobuf::int32 value) {
  set_has_ship_exp();
  ship_exp_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.ship_exp)
}

// required int32 cooker_exp = 7;
inline bool ConfigFoodRecipe::has_cooker_exp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigFoodRecipe::set_has_cooker_exp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigFoodRecipe::clear_has_cooker_exp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigFoodRecipe::clear_cooker_exp() {
  cooker_exp_ = 0;
  clear_has_cooker_exp();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::cooker_exp() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.cooker_exp)
  return cooker_exp_;
}
inline void ConfigFoodRecipe::set_cooker_exp(::google::protobuf::int32 value) {
  set_has_cooker_exp();
  cooker_exp_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.cooker_exp)
}

// required int32 gold = 8;
inline bool ConfigFoodRecipe::has_gold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigFoodRecipe::set_has_gold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigFoodRecipe::clear_has_gold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigFoodRecipe::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::gold() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.gold)
  return gold_;
}
inline void ConfigFoodRecipe::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.gold)
}

// required int32 cook_time = 11;
inline bool ConfigFoodRecipe::has_cook_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigFoodRecipe::set_has_cook_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigFoodRecipe::clear_has_cook_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigFoodRecipe::clear_cook_time() {
  cook_time_ = 0;
  clear_has_cook_time();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::cook_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.cook_time)
  return cook_time_;
}
inline void ConfigFoodRecipe::set_cook_time(::google::protobuf::int32 value) {
  set_has_cook_time();
  cook_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.cook_time)
}

// required int32 eat_time = 12;
inline bool ConfigFoodRecipe::has_eat_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigFoodRecipe::set_has_eat_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConfigFoodRecipe::clear_has_eat_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConfigFoodRecipe::clear_eat_time() {
  eat_time_ = 0;
  clear_has_eat_time();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::eat_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.eat_time)
  return eat_time_;
}
inline void ConfigFoodRecipe::set_eat_time(::google::protobuf::int32 value) {
  set_has_eat_time();
  eat_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.eat_time)
}

// required int32 way = 13;
inline bool ConfigFoodRecipe::has_way() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConfigFoodRecipe::set_has_way() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ConfigFoodRecipe::clear_has_way() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ConfigFoodRecipe::clear_way() {
  way_ = 0;
  clear_has_way();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::way() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.way)
  return way_;
}
inline void ConfigFoodRecipe::set_way(::google::protobuf::int32 value) {
  set_has_way();
  way_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.way)
}

// required bytes attribute = 14;
inline bool ConfigFoodRecipe::has_attribute() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigFoodRecipe::set_has_attribute() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigFoodRecipe::clear_has_attribute() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigFoodRecipe::clear_attribute() {
  attribute_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_attribute();
}
inline const ::std::string& ConfigFoodRecipe::attribute() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.attribute)
  return attribute_.Get();
}
inline void ConfigFoodRecipe::set_attribute(const ::std::string& value) {
  set_has_attribute();
  attribute_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.attribute)
}
#if LANG_CXX11
inline void ConfigFoodRecipe::set_attribute(::std::string&& value) {
  set_has_attribute();
  attribute_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodRecipe.attribute)
}
#endif
inline void ConfigFoodRecipe::set_attribute(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attribute();
  attribute_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodRecipe.attribute)
}
inline void ConfigFoodRecipe::set_attribute(const void* value,
    size_t size) {
  set_has_attribute();
  attribute_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodRecipe.attribute)
}
inline ::std::string* ConfigFoodRecipe::mutable_attribute() {
  set_has_attribute();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodRecipe.attribute)
  return attribute_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodRecipe::release_attribute() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodRecipe.attribute)
  if (!has_attribute()) {
    return NULL;
  }
  clear_has_attribute();
  return attribute_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodRecipe::set_allocated_attribute(::std::string* attribute) {
  if (attribute != NULL) {
    set_has_attribute();
  } else {
    clear_has_attribute();
  }
  attribute_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attribute,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodRecipe.attribute)
}
inline ::std::string* ConfigFoodRecipe::unsafe_arena_release_attribute() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodRecipe.attribute)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_attribute();
  return attribute_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodRecipe::unsafe_arena_set_allocated_attribute(
    ::std::string* attribute) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (attribute != NULL) {
    set_has_attribute();
  } else {
    clear_has_attribute();
  }
  attribute_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      attribute, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodRecipe.attribute)
}

// required int32 star = 15;
inline bool ConfigFoodRecipe::has_star() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConfigFoodRecipe::set_has_star() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ConfigFoodRecipe::clear_has_star() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ConfigFoodRecipe::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::star() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.star)
  return star_;
}
inline void ConfigFoodRecipe::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.star)
}

// required int32 satisfaction = 16;
inline bool ConfigFoodRecipe::has_satisfaction() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConfigFoodRecipe::set_has_satisfaction() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ConfigFoodRecipe::clear_has_satisfaction() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ConfigFoodRecipe::clear_satisfaction() {
  satisfaction_ = 0;
  clear_has_satisfaction();
}
inline ::google::protobuf::int32 ConfigFoodRecipe::satisfaction() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipe.satisfaction)
  return satisfaction_;
}
inline void ConfigFoodRecipe::set_satisfaction(::google::protobuf::int32 value) {
  set_has_satisfaction();
  satisfaction_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodRecipe.satisfaction)
}

// -------------------------------------------------------------------

// ConfigFoodRecipeList

// repeated .db.ConfigFoodRecipe list = 1;
inline int ConfigFoodRecipeList::list_size() const {
  return list_.size();
}
inline void ConfigFoodRecipeList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigFoodRecipe* ConfigFoodRecipeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodRecipeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodRecipe >*
ConfigFoodRecipeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigFoodRecipeList.list)
  return &list_;
}
inline const ::db::ConfigFoodRecipe& ConfigFoodRecipeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodRecipeList.list)
  return list_.Get(index);
}
inline ::db::ConfigFoodRecipe* ConfigFoodRecipeList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigFoodRecipeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodRecipe >&
ConfigFoodRecipeList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigFoodRecipeList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigFoodFilter

// required int32 id = 1;
inline bool ConfigFoodFilter::has_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigFoodFilter::set_has_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigFoodFilter::clear_has_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigFoodFilter::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigFoodFilter::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.id)
  return id_;
}
inline void ConfigFoodFilter::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.id)
}

// required bytes name = 2;
inline bool ConfigFoodFilter::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigFoodFilter::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigFoodFilter::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigFoodFilter::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigFoodFilter::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.name)
  return name_.Get();
}
inline void ConfigFoodFilter::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.name)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.name)
}
#endif
inline void ConfigFoodFilter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.name)
}
inline void ConfigFoodFilter::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.name)
}
inline ::std::string* ConfigFoodFilter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.name)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.name)
}

// required int32 type = 3;
inline bool ConfigFoodFilter::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigFoodFilter::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConfigFoodFilter::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConfigFoodFilter::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConfigFoodFilter::type() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.type)
  return type_;
}
inline void ConfigFoodFilter::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.type)
}

// required bytes parameter_need = 4;
inline bool ConfigFoodFilter::has_parameter_need() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigFoodFilter::set_has_parameter_need() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigFoodFilter::clear_has_parameter_need() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigFoodFilter::clear_parameter_need() {
  parameter_need_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_parameter_need();
}
inline const ::std::string& ConfigFoodFilter::parameter_need() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.parameter_need)
  return parameter_need_.Get();
}
inline void ConfigFoodFilter::set_parameter_need(const ::std::string& value) {
  set_has_parameter_need();
  parameter_need_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.parameter_need)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_parameter_need(::std::string&& value) {
  set_has_parameter_need();
  parameter_need_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.parameter_need)
}
#endif
inline void ConfigFoodFilter::set_parameter_need(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_parameter_need();
  parameter_need_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.parameter_need)
}
inline void ConfigFoodFilter::set_parameter_need(const void* value,
    size_t size) {
  set_has_parameter_need();
  parameter_need_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.parameter_need)
}
inline ::std::string* ConfigFoodFilter::mutable_parameter_need() {
  set_has_parameter_need();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.parameter_need)
  return parameter_need_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_parameter_need() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.parameter_need)
  if (!has_parameter_need()) {
    return NULL;
  }
  clear_has_parameter_need();
  return parameter_need_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_parameter_need(::std::string* parameter_need) {
  if (parameter_need != NULL) {
    set_has_parameter_need();
  } else {
    clear_has_parameter_need();
  }
  parameter_need_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter_need,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.parameter_need)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_parameter_need() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.parameter_need)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_parameter_need();
  return parameter_need_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_parameter_need(
    ::std::string* parameter_need) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parameter_need != NULL) {
    set_has_parameter_need();
  } else {
    clear_has_parameter_need();
  }
  parameter_need_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parameter_need, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.parameter_need)
}

// required bytes parameter_hate = 5;
inline bool ConfigFoodFilter::has_parameter_hate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigFoodFilter::set_has_parameter_hate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigFoodFilter::clear_has_parameter_hate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigFoodFilter::clear_parameter_hate() {
  parameter_hate_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_parameter_hate();
}
inline const ::std::string& ConfigFoodFilter::parameter_hate() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.parameter_hate)
  return parameter_hate_.Get();
}
inline void ConfigFoodFilter::set_parameter_hate(const ::std::string& value) {
  set_has_parameter_hate();
  parameter_hate_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.parameter_hate)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_parameter_hate(::std::string&& value) {
  set_has_parameter_hate();
  parameter_hate_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.parameter_hate)
}
#endif
inline void ConfigFoodFilter::set_parameter_hate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_parameter_hate();
  parameter_hate_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.parameter_hate)
}
inline void ConfigFoodFilter::set_parameter_hate(const void* value,
    size_t size) {
  set_has_parameter_hate();
  parameter_hate_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.parameter_hate)
}
inline ::std::string* ConfigFoodFilter::mutable_parameter_hate() {
  set_has_parameter_hate();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.parameter_hate)
  return parameter_hate_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_parameter_hate() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.parameter_hate)
  if (!has_parameter_hate()) {
    return NULL;
  }
  clear_has_parameter_hate();
  return parameter_hate_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_parameter_hate(::std::string* parameter_hate) {
  if (parameter_hate != NULL) {
    set_has_parameter_hate();
  } else {
    clear_has_parameter_hate();
  }
  parameter_hate_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter_hate,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.parameter_hate)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_parameter_hate() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.parameter_hate)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_parameter_hate();
  return parameter_hate_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_parameter_hate(
    ::std::string* parameter_hate) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (parameter_hate != NULL) {
    set_has_parameter_hate();
  } else {
    clear_has_parameter_hate();
  }
  parameter_hate_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      parameter_hate, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.parameter_hate)
}

// required bytes color = 11;
inline bool ConfigFoodFilter::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigFoodFilter::set_has_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigFoodFilter::clear_has_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigFoodFilter::clear_color() {
  color_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_color();
}
inline const ::std::string& ConfigFoodFilter::color() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.color)
  return color_.Get();
}
inline void ConfigFoodFilter::set_color(const ::std::string& value) {
  set_has_color();
  color_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.color)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_color(::std::string&& value) {
  set_has_color();
  color_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.color)
}
#endif
inline void ConfigFoodFilter::set_color(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_color();
  color_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.color)
}
inline void ConfigFoodFilter::set_color(const void* value,
    size_t size) {
  set_has_color();
  color_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.color)
}
inline ::std::string* ConfigFoodFilter::mutable_color() {
  set_has_color();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.color)
  return color_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_color() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.color)
  if (!has_color()) {
    return NULL;
  }
  clear_has_color();
  return color_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_color(::std::string* color) {
  if (color != NULL) {
    set_has_color();
  } else {
    clear_has_color();
  }
  color_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.color)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_color() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.color)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_color();
  return color_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_color(
    ::std::string* color) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (color != NULL) {
    set_has_color();
  } else {
    clear_has_color();
  }
  color_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      color, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.color)
}

// required bytes smell = 12;
inline bool ConfigFoodFilter::has_smell() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigFoodFilter::set_has_smell() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigFoodFilter::clear_has_smell() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigFoodFilter::clear_smell() {
  smell_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_smell();
}
inline const ::std::string& ConfigFoodFilter::smell() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.smell)
  return smell_.Get();
}
inline void ConfigFoodFilter::set_smell(const ::std::string& value) {
  set_has_smell();
  smell_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.smell)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_smell(::std::string&& value) {
  set_has_smell();
  smell_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.smell)
}
#endif
inline void ConfigFoodFilter::set_smell(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smell();
  smell_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.smell)
}
inline void ConfigFoodFilter::set_smell(const void* value,
    size_t size) {
  set_has_smell();
  smell_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.smell)
}
inline ::std::string* ConfigFoodFilter::mutable_smell() {
  set_has_smell();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.smell)
  return smell_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_smell() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.smell)
  if (!has_smell()) {
    return NULL;
  }
  clear_has_smell();
  return smell_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_smell(::std::string* smell) {
  if (smell != NULL) {
    set_has_smell();
  } else {
    clear_has_smell();
  }
  smell_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smell,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.smell)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_smell() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.smell)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_smell();
  return smell_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_smell(
    ::std::string* smell) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (smell != NULL) {
    set_has_smell();
  } else {
    clear_has_smell();
  }
  smell_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      smell, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.smell)
}

// required bytes taste = 13;
inline bool ConfigFoodFilter::has_taste() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigFoodFilter::set_has_taste() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigFoodFilter::clear_has_taste() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigFoodFilter::clear_taste() {
  taste_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_taste();
}
inline const ::std::string& ConfigFoodFilter::taste() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.taste)
  return taste_.Get();
}
inline void ConfigFoodFilter::set_taste(const ::std::string& value) {
  set_has_taste();
  taste_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.taste)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_taste(::std::string&& value) {
  set_has_taste();
  taste_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.taste)
}
#endif
inline void ConfigFoodFilter::set_taste(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_taste();
  taste_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.taste)
}
inline void ConfigFoodFilter::set_taste(const void* value,
    size_t size) {
  set_has_taste();
  taste_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.taste)
}
inline ::std::string* ConfigFoodFilter::mutable_taste() {
  set_has_taste();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.taste)
  return taste_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_taste() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.taste)
  if (!has_taste()) {
    return NULL;
  }
  clear_has_taste();
  return taste_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_taste(::std::string* taste) {
  if (taste != NULL) {
    set_has_taste();
  } else {
    clear_has_taste();
  }
  taste_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taste,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.taste)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_taste() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.taste)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_taste();
  return taste_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_taste(
    ::std::string* taste) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (taste != NULL) {
    set_has_taste();
  } else {
    clear_has_taste();
  }
  taste_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      taste, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.taste)
}

// required bytes bellyful = 14;
inline bool ConfigFoodFilter::has_bellyful() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigFoodFilter::set_has_bellyful() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigFoodFilter::clear_has_bellyful() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigFoodFilter::clear_bellyful() {
  bellyful_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_bellyful();
}
inline const ::std::string& ConfigFoodFilter::bellyful() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.bellyful)
  return bellyful_.Get();
}
inline void ConfigFoodFilter::set_bellyful(const ::std::string& value) {
  set_has_bellyful();
  bellyful_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.bellyful)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_bellyful(::std::string&& value) {
  set_has_bellyful();
  bellyful_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.bellyful)
}
#endif
inline void ConfigFoodFilter::set_bellyful(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bellyful();
  bellyful_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.bellyful)
}
inline void ConfigFoodFilter::set_bellyful(const void* value,
    size_t size) {
  set_has_bellyful();
  bellyful_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.bellyful)
}
inline ::std::string* ConfigFoodFilter::mutable_bellyful() {
  set_has_bellyful();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.bellyful)
  return bellyful_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_bellyful() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.bellyful)
  if (!has_bellyful()) {
    return NULL;
  }
  clear_has_bellyful();
  return bellyful_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_bellyful(::std::string* bellyful) {
  if (bellyful != NULL) {
    set_has_bellyful();
  } else {
    clear_has_bellyful();
  }
  bellyful_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bellyful,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.bellyful)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_bellyful() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.bellyful)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_bellyful();
  return bellyful_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_bellyful(
    ::std::string* bellyful) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bellyful != NULL) {
    set_has_bellyful();
  } else {
    clear_has_bellyful();
  }
  bellyful_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bellyful, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.bellyful)
}

// required bytes flavor = 15;
inline bool ConfigFoodFilter::has_flavor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigFoodFilter::set_has_flavor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigFoodFilter::clear_has_flavor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigFoodFilter::clear_flavor() {
  flavor_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_flavor();
}
inline const ::std::string& ConfigFoodFilter::flavor() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.flavor)
  return flavor_.Get();
}
inline void ConfigFoodFilter::set_flavor(const ::std::string& value) {
  set_has_flavor();
  flavor_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.flavor)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_flavor(::std::string&& value) {
  set_has_flavor();
  flavor_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.flavor)
}
#endif
inline void ConfigFoodFilter::set_flavor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_flavor();
  flavor_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.flavor)
}
inline void ConfigFoodFilter::set_flavor(const void* value,
    size_t size) {
  set_has_flavor();
  flavor_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.flavor)
}
inline ::std::string* ConfigFoodFilter::mutable_flavor() {
  set_has_flavor();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.flavor)
  return flavor_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_flavor() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.flavor)
  if (!has_flavor()) {
    return NULL;
  }
  clear_has_flavor();
  return flavor_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_flavor(::std::string* flavor) {
  if (flavor != NULL) {
    set_has_flavor();
  } else {
    clear_has_flavor();
  }
  flavor_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flavor,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.flavor)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_flavor() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.flavor)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_flavor();
  return flavor_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_flavor(
    ::std::string* flavor) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (flavor != NULL) {
    set_has_flavor();
  } else {
    clear_has_flavor();
  }
  flavor_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      flavor, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.flavor)
}

// required bytes stuff = 16;
inline bool ConfigFoodFilter::has_stuff() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigFoodFilter::set_has_stuff() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigFoodFilter::clear_has_stuff() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigFoodFilter::clear_stuff() {
  stuff_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_stuff();
}
inline const ::std::string& ConfigFoodFilter::stuff() const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilter.stuff)
  return stuff_.Get();
}
inline void ConfigFoodFilter::set_stuff(const ::std::string& value) {
  set_has_stuff();
  stuff_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigFoodFilter.stuff)
}
#if LANG_CXX11
inline void ConfigFoodFilter::set_stuff(::std::string&& value) {
  set_has_stuff();
  stuff_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigFoodFilter.stuff)
}
#endif
inline void ConfigFoodFilter::set_stuff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stuff();
  stuff_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigFoodFilter.stuff)
}
inline void ConfigFoodFilter::set_stuff(const void* value,
    size_t size) {
  set_has_stuff();
  stuff_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigFoodFilter.stuff)
}
inline ::std::string* ConfigFoodFilter::mutable_stuff() {
  set_has_stuff();
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilter.stuff)
  return stuff_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigFoodFilter::release_stuff() {
  // @@protoc_insertion_point(field_release:db.ConfigFoodFilter.stuff)
  if (!has_stuff()) {
    return NULL;
  }
  clear_has_stuff();
  return stuff_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigFoodFilter::set_allocated_stuff(::std::string* stuff) {
  if (stuff != NULL) {
    set_has_stuff();
  } else {
    clear_has_stuff();
  }
  stuff_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stuff,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigFoodFilter.stuff)
}
inline ::std::string* ConfigFoodFilter::unsafe_arena_release_stuff() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigFoodFilter.stuff)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_stuff();
  return stuff_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigFoodFilter::unsafe_arena_set_allocated_stuff(
    ::std::string* stuff) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (stuff != NULL) {
    set_has_stuff();
  } else {
    clear_has_stuff();
  }
  stuff_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      stuff, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigFoodFilter.stuff)
}

// -------------------------------------------------------------------

// ConfigFoodFilterList

// repeated .db.ConfigFoodFilter list = 1;
inline int ConfigFoodFilterList::list_size() const {
  return list_.size();
}
inline void ConfigFoodFilterList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigFoodFilter* ConfigFoodFilterList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigFoodFilterList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodFilter >*
ConfigFoodFilterList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigFoodFilterList.list)
  return &list_;
}
inline const ::db::ConfigFoodFilter& ConfigFoodFilterList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigFoodFilterList.list)
  return list_.Get(index);
}
inline ::db::ConfigFoodFilter* ConfigFoodFilterList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigFoodFilterList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigFoodFilter >&
ConfigFoodFilterList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigFoodFilterList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigCustomer

// required int32 id = 1;
inline bool ConfigCustomer::has_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigCustomer::set_has_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigCustomer::clear_has_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigCustomer::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigCustomer::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.id)
  return id_;
}
inline void ConfigCustomer::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.id)
}

// required bytes name = 2;
inline bool ConfigCustomer::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigCustomer::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigCustomer::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigCustomer::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigCustomer::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.name)
  return name_.Get();
}
inline void ConfigCustomer::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.name)
}
#if LANG_CXX11
inline void ConfigCustomer::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomer.name)
}
#endif
inline void ConfigCustomer::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomer.name)
}
inline void ConfigCustomer::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomer.name)
}
inline ::std::string* ConfigCustomer::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomer.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomer::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomer.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomer.name)
}
inline ::std::string* ConfigCustomer::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomer.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomer::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomer.name)
}

// required bytes desc = 3;
inline bool ConfigCustomer::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigCustomer::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigCustomer::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigCustomer::clear_desc() {
  desc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_desc();
}
inline const ::std::string& ConfigCustomer::desc() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.desc)
  return desc_.Get();
}
inline void ConfigCustomer::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.desc)
}
#if LANG_CXX11
inline void ConfigCustomer::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomer.desc)
}
#endif
inline void ConfigCustomer::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomer.desc)
}
inline void ConfigCustomer::set_desc(const void* value,
    size_t size) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomer.desc)
}
inline ::std::string* ConfigCustomer::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomer.desc)
  return desc_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomer::release_desc() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomer.desc)
  if (!has_desc()) {
    return NULL;
  }
  clear_has_desc();
  return desc_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomer::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomer.desc)
}
inline ::std::string* ConfigCustomer::unsafe_arena_release_desc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomer.desc)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_desc();
  return desc_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomer::unsafe_arena_set_allocated_desc(
    ::std::string* desc) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      desc, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomer.desc)
}

// required int32 occupationid = 4;
inline bool ConfigCustomer::has_occupationid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigCustomer::set_has_occupationid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigCustomer::clear_has_occupationid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigCustomer::clear_occupationid() {
  occupationid_ = 0;
  clear_has_occupationid();
}
inline ::google::protobuf::int32 ConfigCustomer::occupationid() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.occupationid)
  return occupationid_;
}
inline void ConfigCustomer::set_occupationid(::google::protobuf::int32 value) {
  set_has_occupationid();
  occupationid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.occupationid)
}

// required int32 wealth_grade = 5;
inline bool ConfigCustomer::has_wealth_grade() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigCustomer::set_has_wealth_grade() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConfigCustomer::clear_has_wealth_grade() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConfigCustomer::clear_wealth_grade() {
  wealth_grade_ = 0;
  clear_has_wealth_grade();
}
inline ::google::protobuf::int32 ConfigCustomer::wealth_grade() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.wealth_grade)
  return wealth_grade_;
}
inline void ConfigCustomer::set_wealth_grade(::google::protobuf::int32 value) {
  set_has_wealth_grade();
  wealth_grade_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.wealth_grade)
}

// required int32 gold = 6;
inline bool ConfigCustomer::has_gold() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConfigCustomer::set_has_gold() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ConfigCustomer::clear_has_gold() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ConfigCustomer::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 ConfigCustomer::gold() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.gold)
  return gold_;
}
inline void ConfigCustomer::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.gold)
}

// required int32 is_unlock = 7;
inline bool ConfigCustomer::has_is_unlock() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConfigCustomer::set_has_is_unlock() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ConfigCustomer::clear_has_is_unlock() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ConfigCustomer::clear_is_unlock() {
  is_unlock_ = 0;
  clear_has_is_unlock();
}
inline ::google::protobuf::int32 ConfigCustomer::is_unlock() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.is_unlock)
  return is_unlock_;
}
inline void ConfigCustomer::set_is_unlock(::google::protobuf::int32 value) {
  set_has_is_unlock();
  is_unlock_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.is_unlock)
}

// required int32 unlock_group = 8;
inline bool ConfigCustomer::has_unlock_group() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConfigCustomer::set_has_unlock_group() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ConfigCustomer::clear_has_unlock_group() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ConfigCustomer::clear_unlock_group() {
  unlock_group_ = 0;
  clear_has_unlock_group();
}
inline ::google::protobuf::int32 ConfigCustomer::unlock_group() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.unlock_group)
  return unlock_group_;
}
inline void ConfigCustomer::set_unlock_group(::google::protobuf::int32 value) {
  set_has_unlock_group();
  unlock_group_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.unlock_group)
}

// required bytes food_filter = 11;
inline bool ConfigCustomer::has_food_filter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigCustomer::set_has_food_filter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigCustomer::clear_has_food_filter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigCustomer::clear_food_filter() {
  food_filter_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_food_filter();
}
inline const ::std::string& ConfigCustomer::food_filter() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.food_filter)
  return food_filter_.Get();
}
inline void ConfigCustomer::set_food_filter(const ::std::string& value) {
  set_has_food_filter();
  food_filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.food_filter)
}
#if LANG_CXX11
inline void ConfigCustomer::set_food_filter(::std::string&& value) {
  set_has_food_filter();
  food_filter_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomer.food_filter)
}
#endif
inline void ConfigCustomer::set_food_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_food_filter();
  food_filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomer.food_filter)
}
inline void ConfigCustomer::set_food_filter(const void* value,
    size_t size) {
  set_has_food_filter();
  food_filter_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomer.food_filter)
}
inline ::std::string* ConfigCustomer::mutable_food_filter() {
  set_has_food_filter();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomer.food_filter)
  return food_filter_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomer::release_food_filter() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomer.food_filter)
  if (!has_food_filter()) {
    return NULL;
  }
  clear_has_food_filter();
  return food_filter_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomer::set_allocated_food_filter(::std::string* food_filter) {
  if (food_filter != NULL) {
    set_has_food_filter();
  } else {
    clear_has_food_filter();
  }
  food_filter_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), food_filter,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomer.food_filter)
}
inline ::std::string* ConfigCustomer::unsafe_arena_release_food_filter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomer.food_filter)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_food_filter();
  return food_filter_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomer::unsafe_arena_set_allocated_food_filter(
    ::std::string* food_filter) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (food_filter != NULL) {
    set_has_food_filter();
  } else {
    clear_has_food_filter();
  }
  food_filter_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      food_filter, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomer.food_filter)
}

// required float service_ratio = 12;
inline bool ConfigCustomer::has_service_ratio() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ConfigCustomer::set_has_service_ratio() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ConfigCustomer::clear_has_service_ratio() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ConfigCustomer::clear_service_ratio() {
  service_ratio_ = 0;
  clear_has_service_ratio();
}
inline float ConfigCustomer::service_ratio() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.service_ratio)
  return service_ratio_;
}
inline void ConfigCustomer::set_service_ratio(float value) {
  set_has_service_ratio();
  service_ratio_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.service_ratio)
}

// required bytes food_filter2 = 13;
inline bool ConfigCustomer::has_food_filter2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigCustomer::set_has_food_filter2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigCustomer::clear_has_food_filter2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigCustomer::clear_food_filter2() {
  food_filter2_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_food_filter2();
}
inline const ::std::string& ConfigCustomer::food_filter2() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.food_filter2)
  return food_filter2_.Get();
}
inline void ConfigCustomer::set_food_filter2(const ::std::string& value) {
  set_has_food_filter2();
  food_filter2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.food_filter2)
}
#if LANG_CXX11
inline void ConfigCustomer::set_food_filter2(::std::string&& value) {
  set_has_food_filter2();
  food_filter2_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomer.food_filter2)
}
#endif
inline void ConfigCustomer::set_food_filter2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_food_filter2();
  food_filter2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomer.food_filter2)
}
inline void ConfigCustomer::set_food_filter2(const void* value,
    size_t size) {
  set_has_food_filter2();
  food_filter2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomer.food_filter2)
}
inline ::std::string* ConfigCustomer::mutable_food_filter2() {
  set_has_food_filter2();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomer.food_filter2)
  return food_filter2_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomer::release_food_filter2() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomer.food_filter2)
  if (!has_food_filter2()) {
    return NULL;
  }
  clear_has_food_filter2();
  return food_filter2_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomer::set_allocated_food_filter2(::std::string* food_filter2) {
  if (food_filter2 != NULL) {
    set_has_food_filter2();
  } else {
    clear_has_food_filter2();
  }
  food_filter2_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), food_filter2,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomer.food_filter2)
}
inline ::std::string* ConfigCustomer::unsafe_arena_release_food_filter2() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomer.food_filter2)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_food_filter2();
  return food_filter2_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomer::unsafe_arena_set_allocated_food_filter2(
    ::std::string* food_filter2) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (food_filter2 != NULL) {
    set_has_food_filter2();
  } else {
    clear_has_food_filter2();
  }
  food_filter2_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      food_filter2, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomer.food_filter2)
}

// required float service_ratio2 = 14;
inline bool ConfigCustomer::has_service_ratio2() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ConfigCustomer::set_has_service_ratio2() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ConfigCustomer::clear_has_service_ratio2() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ConfigCustomer::clear_service_ratio2() {
  service_ratio2_ = 0;
  clear_has_service_ratio2();
}
inline float ConfigCustomer::service_ratio2() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.service_ratio2)
  return service_ratio2_;
}
inline void ConfigCustomer::set_service_ratio2(float value) {
  set_has_service_ratio2();
  service_ratio2_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.service_ratio2)
}

// required bytes food_filter3 = 15;
inline bool ConfigCustomer::has_food_filter3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigCustomer::set_has_food_filter3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigCustomer::clear_has_food_filter3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigCustomer::clear_food_filter3() {
  food_filter3_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_food_filter3();
}
inline const ::std::string& ConfigCustomer::food_filter3() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.food_filter3)
  return food_filter3_.Get();
}
inline void ConfigCustomer::set_food_filter3(const ::std::string& value) {
  set_has_food_filter3();
  food_filter3_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.food_filter3)
}
#if LANG_CXX11
inline void ConfigCustomer::set_food_filter3(::std::string&& value) {
  set_has_food_filter3();
  food_filter3_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomer.food_filter3)
}
#endif
inline void ConfigCustomer::set_food_filter3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_food_filter3();
  food_filter3_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomer.food_filter3)
}
inline void ConfigCustomer::set_food_filter3(const void* value,
    size_t size) {
  set_has_food_filter3();
  food_filter3_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomer.food_filter3)
}
inline ::std::string* ConfigCustomer::mutable_food_filter3() {
  set_has_food_filter3();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomer.food_filter3)
  return food_filter3_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomer::release_food_filter3() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomer.food_filter3)
  if (!has_food_filter3()) {
    return NULL;
  }
  clear_has_food_filter3();
  return food_filter3_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomer::set_allocated_food_filter3(::std::string* food_filter3) {
  if (food_filter3 != NULL) {
    set_has_food_filter3();
  } else {
    clear_has_food_filter3();
  }
  food_filter3_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), food_filter3,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomer.food_filter3)
}
inline ::std::string* ConfigCustomer::unsafe_arena_release_food_filter3() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomer.food_filter3)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_food_filter3();
  return food_filter3_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomer::unsafe_arena_set_allocated_food_filter3(
    ::std::string* food_filter3) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (food_filter3 != NULL) {
    set_has_food_filter3();
  } else {
    clear_has_food_filter3();
  }
  food_filter3_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      food_filter3, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomer.food_filter3)
}

// required float service_ratio3 = 16;
inline bool ConfigCustomer::has_service_ratio3() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ConfigCustomer::set_has_service_ratio3() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ConfigCustomer::clear_has_service_ratio3() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ConfigCustomer::clear_service_ratio3() {
  service_ratio3_ = 0;
  clear_has_service_ratio3();
}
inline float ConfigCustomer::service_ratio3() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.service_ratio3)
  return service_ratio3_;
}
inline void ConfigCustomer::set_service_ratio3(float value) {
  set_has_service_ratio3();
  service_ratio3_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.service_ratio3)
}

// required bytes quality_tip = 21;
inline bool ConfigCustomer::has_quality_tip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigCustomer::set_has_quality_tip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigCustomer::clear_has_quality_tip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigCustomer::clear_quality_tip() {
  quality_tip_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_quality_tip();
}
inline const ::std::string& ConfigCustomer::quality_tip() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.quality_tip)
  return quality_tip_.Get();
}
inline void ConfigCustomer::set_quality_tip(const ::std::string& value) {
  set_has_quality_tip();
  quality_tip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.quality_tip)
}
#if LANG_CXX11
inline void ConfigCustomer::set_quality_tip(::std::string&& value) {
  set_has_quality_tip();
  quality_tip_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomer.quality_tip)
}
#endif
inline void ConfigCustomer::set_quality_tip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_quality_tip();
  quality_tip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomer.quality_tip)
}
inline void ConfigCustomer::set_quality_tip(const void* value,
    size_t size) {
  set_has_quality_tip();
  quality_tip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomer.quality_tip)
}
inline ::std::string* ConfigCustomer::mutable_quality_tip() {
  set_has_quality_tip();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomer.quality_tip)
  return quality_tip_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomer::release_quality_tip() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomer.quality_tip)
  if (!has_quality_tip()) {
    return NULL;
  }
  clear_has_quality_tip();
  return quality_tip_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomer::set_allocated_quality_tip(::std::string* quality_tip) {
  if (quality_tip != NULL) {
    set_has_quality_tip();
  } else {
    clear_has_quality_tip();
  }
  quality_tip_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quality_tip,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomer.quality_tip)
}
inline ::std::string* ConfigCustomer::unsafe_arena_release_quality_tip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomer.quality_tip)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_quality_tip();
  return quality_tip_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomer::unsafe_arena_set_allocated_quality_tip(
    ::std::string* quality_tip) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (quality_tip != NULL) {
    set_has_quality_tip();
  } else {
    clear_has_quality_tip();
  }
  quality_tip_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      quality_tip, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomer.quality_tip)
}

// required bytes special_cond = 22;
inline bool ConfigCustomer::has_special_cond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigCustomer::set_has_special_cond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigCustomer::clear_has_special_cond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigCustomer::clear_special_cond() {
  special_cond_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_special_cond();
}
inline const ::std::string& ConfigCustomer::special_cond() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.special_cond)
  return special_cond_.Get();
}
inline void ConfigCustomer::set_special_cond(const ::std::string& value) {
  set_has_special_cond();
  special_cond_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.special_cond)
}
#if LANG_CXX11
inline void ConfigCustomer::set_special_cond(::std::string&& value) {
  set_has_special_cond();
  special_cond_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomer.special_cond)
}
#endif
inline void ConfigCustomer::set_special_cond(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_special_cond();
  special_cond_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomer.special_cond)
}
inline void ConfigCustomer::set_special_cond(const void* value,
    size_t size) {
  set_has_special_cond();
  special_cond_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomer.special_cond)
}
inline ::std::string* ConfigCustomer::mutable_special_cond() {
  set_has_special_cond();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomer.special_cond)
  return special_cond_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomer::release_special_cond() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomer.special_cond)
  if (!has_special_cond()) {
    return NULL;
  }
  clear_has_special_cond();
  return special_cond_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomer::set_allocated_special_cond(::std::string* special_cond) {
  if (special_cond != NULL) {
    set_has_special_cond();
  } else {
    clear_has_special_cond();
  }
  special_cond_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), special_cond,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomer.special_cond)
}
inline ::std::string* ConfigCustomer::unsafe_arena_release_special_cond() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomer.special_cond)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_special_cond();
  return special_cond_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomer::unsafe_arena_set_allocated_special_cond(
    ::std::string* special_cond) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (special_cond != NULL) {
    set_has_special_cond();
  } else {
    clear_has_special_cond();
  }
  special_cond_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      special_cond, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomer.special_cond)
}

// required bytes satisfaction_cond = 23;
inline bool ConfigCustomer::has_satisfaction_cond() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigCustomer::set_has_satisfaction_cond() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigCustomer::clear_has_satisfaction_cond() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigCustomer::clear_satisfaction_cond() {
  satisfaction_cond_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_satisfaction_cond();
}
inline const ::std::string& ConfigCustomer::satisfaction_cond() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.satisfaction_cond)
  return satisfaction_cond_.Get();
}
inline void ConfigCustomer::set_satisfaction_cond(const ::std::string& value) {
  set_has_satisfaction_cond();
  satisfaction_cond_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.satisfaction_cond)
}
#if LANG_CXX11
inline void ConfigCustomer::set_satisfaction_cond(::std::string&& value) {
  set_has_satisfaction_cond();
  satisfaction_cond_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomer.satisfaction_cond)
}
#endif
inline void ConfigCustomer::set_satisfaction_cond(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_satisfaction_cond();
  satisfaction_cond_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomer.satisfaction_cond)
}
inline void ConfigCustomer::set_satisfaction_cond(const void* value,
    size_t size) {
  set_has_satisfaction_cond();
  satisfaction_cond_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomer.satisfaction_cond)
}
inline ::std::string* ConfigCustomer::mutable_satisfaction_cond() {
  set_has_satisfaction_cond();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomer.satisfaction_cond)
  return satisfaction_cond_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomer::release_satisfaction_cond() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomer.satisfaction_cond)
  if (!has_satisfaction_cond()) {
    return NULL;
  }
  clear_has_satisfaction_cond();
  return satisfaction_cond_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomer::set_allocated_satisfaction_cond(::std::string* satisfaction_cond) {
  if (satisfaction_cond != NULL) {
    set_has_satisfaction_cond();
  } else {
    clear_has_satisfaction_cond();
  }
  satisfaction_cond_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), satisfaction_cond,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomer.satisfaction_cond)
}
inline ::std::string* ConfigCustomer::unsafe_arena_release_satisfaction_cond() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomer.satisfaction_cond)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_satisfaction_cond();
  return satisfaction_cond_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomer::unsafe_arena_set_allocated_satisfaction_cond(
    ::std::string* satisfaction_cond) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (satisfaction_cond != NULL) {
    set_has_satisfaction_cond();
  } else {
    clear_has_satisfaction_cond();
  }
  satisfaction_cond_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      satisfaction_cond, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomer.satisfaction_cond)
}

// required int32 hungry_timeout = 24;
inline bool ConfigCustomer::has_hungry_timeout() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ConfigCustomer::set_has_hungry_timeout() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ConfigCustomer::clear_has_hungry_timeout() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ConfigCustomer::clear_hungry_timeout() {
  hungry_timeout_ = 0;
  clear_has_hungry_timeout();
}
inline ::google::protobuf::int32 ConfigCustomer::hungry_timeout() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomer.hungry_timeout)
  return hungry_timeout_;
}
inline void ConfigCustomer::set_hungry_timeout(::google::protobuf::int32 value) {
  set_has_hungry_timeout();
  hungry_timeout_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomer.hungry_timeout)
}

// -------------------------------------------------------------------

// ConfigCustomerList

// repeated .db.ConfigCustomer list = 1;
inline int ConfigCustomerList::list_size() const {
  return list_.size();
}
inline void ConfigCustomerList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigCustomer* ConfigCustomerList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomerList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomer >*
ConfigCustomerList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigCustomerList.list)
  return &list_;
}
inline const ::db::ConfigCustomer& ConfigCustomerList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerList.list)
  return list_.Get(index);
}
inline ::db::ConfigCustomer* ConfigCustomerList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigCustomerList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomer >&
ConfigCustomerList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigCustomerList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigCustomerOccupation

// required int32 id = 1;
inline bool ConfigCustomerOccupation::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigCustomerOccupation::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigCustomerOccupation::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigCustomerOccupation::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigCustomerOccupation::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerOccupation.id)
  return id_;
}
inline void ConfigCustomerOccupation::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomerOccupation.id)
}

// required bytes name = 2;
inline bool ConfigCustomerOccupation::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigCustomerOccupation::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigCustomerOccupation::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigCustomerOccupation::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigCustomerOccupation::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerOccupation.name)
  return name_.Get();
}
inline void ConfigCustomerOccupation::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomerOccupation.name)
}
#if LANG_CXX11
inline void ConfigCustomerOccupation::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomerOccupation.name)
}
#endif
inline void ConfigCustomerOccupation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomerOccupation.name)
}
inline void ConfigCustomerOccupation::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomerOccupation.name)
}
inline ::std::string* ConfigCustomerOccupation::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomerOccupation.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomerOccupation::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomerOccupation.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomerOccupation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomerOccupation.name)
}
inline ::std::string* ConfigCustomerOccupation::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomerOccupation.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomerOccupation::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomerOccupation.name)
}

// required int32 type = 3;
inline bool ConfigCustomerOccupation::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigCustomerOccupation::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigCustomerOccupation::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigCustomerOccupation::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConfigCustomerOccupation::type() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerOccupation.type)
  return type_;
}
inline void ConfigCustomerOccupation::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomerOccupation.type)
}

// required bytes func = 4;
inline bool ConfigCustomerOccupation::has_func() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigCustomerOccupation::set_has_func() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigCustomerOccupation::clear_has_func() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigCustomerOccupation::clear_func() {
  func_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_func();
}
inline const ::std::string& ConfigCustomerOccupation::func() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerOccupation.func)
  return func_.Get();
}
inline void ConfigCustomerOccupation::set_func(const ::std::string& value) {
  set_has_func();
  func_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomerOccupation.func)
}
#if LANG_CXX11
inline void ConfigCustomerOccupation::set_func(::std::string&& value) {
  set_has_func();
  func_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomerOccupation.func)
}
#endif
inline void ConfigCustomerOccupation::set_func(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_func();
  func_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomerOccupation.func)
}
inline void ConfigCustomerOccupation::set_func(const void* value,
    size_t size) {
  set_has_func();
  func_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomerOccupation.func)
}
inline ::std::string* ConfigCustomerOccupation::mutable_func() {
  set_has_func();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomerOccupation.func)
  return func_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomerOccupation::release_func() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomerOccupation.func)
  if (!has_func()) {
    return NULL;
  }
  clear_has_func();
  return func_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomerOccupation::set_allocated_func(::std::string* func) {
  if (func != NULL) {
    set_has_func();
  } else {
    clear_has_func();
  }
  func_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), func,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomerOccupation.func)
}
inline ::std::string* ConfigCustomerOccupation::unsafe_arena_release_func() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomerOccupation.func)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_func();
  return func_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomerOccupation::unsafe_arena_set_allocated_func(
    ::std::string* func) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (func != NULL) {
    set_has_func();
  } else {
    clear_has_func();
  }
  func_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      func, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomerOccupation.func)
}

// required bytes question_status = 11;
inline bool ConfigCustomerOccupation::has_question_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigCustomerOccupation::set_has_question_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigCustomerOccupation::clear_has_question_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigCustomerOccupation::clear_question_status() {
  question_status_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_question_status();
}
inline const ::std::string& ConfigCustomerOccupation::question_status() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerOccupation.question_status)
  return question_status_.Get();
}
inline void ConfigCustomerOccupation::set_question_status(const ::std::string& value) {
  set_has_question_status();
  question_status_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigCustomerOccupation.question_status)
}
#if LANG_CXX11
inline void ConfigCustomerOccupation::set_question_status(::std::string&& value) {
  set_has_question_status();
  question_status_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigCustomerOccupation.question_status)
}
#endif
inline void ConfigCustomerOccupation::set_question_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_question_status();
  question_status_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigCustomerOccupation.question_status)
}
inline void ConfigCustomerOccupation::set_question_status(const void* value,
    size_t size) {
  set_has_question_status();
  question_status_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigCustomerOccupation.question_status)
}
inline ::std::string* ConfigCustomerOccupation::mutable_question_status() {
  set_has_question_status();
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomerOccupation.question_status)
  return question_status_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigCustomerOccupation::release_question_status() {
  // @@protoc_insertion_point(field_release:db.ConfigCustomerOccupation.question_status)
  if (!has_question_status()) {
    return NULL;
  }
  clear_has_question_status();
  return question_status_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigCustomerOccupation::set_allocated_question_status(::std::string* question_status) {
  if (question_status != NULL) {
    set_has_question_status();
  } else {
    clear_has_question_status();
  }
  question_status_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), question_status,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigCustomerOccupation.question_status)
}
inline ::std::string* ConfigCustomerOccupation::unsafe_arena_release_question_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigCustomerOccupation.question_status)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_question_status();
  return question_status_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigCustomerOccupation::unsafe_arena_set_allocated_question_status(
    ::std::string* question_status) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (question_status != NULL) {
    set_has_question_status();
  } else {
    clear_has_question_status();
  }
  question_status_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      question_status, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigCustomerOccupation.question_status)
}

// required float answer_bonus_ratio = 12;
inline bool ConfigCustomerOccupation::has_answer_bonus_ratio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigCustomerOccupation::set_has_answer_bonus_ratio() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigCustomerOccupation::clear_has_answer_bonus_ratio() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigCustomerOccupation::clear_answer_bonus_ratio() {
  answer_bonus_ratio_ = 0;
  clear_has_answer_bonus_ratio();
}
inline float ConfigCustomerOccupation::answer_bonus_ratio() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerOccupation.answer_bonus_ratio)
  return answer_bonus_ratio_;
}
inline void ConfigCustomerOccupation::set_answer_bonus_ratio(float value) {
  set_has_answer_bonus_ratio();
  answer_bonus_ratio_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomerOccupation.answer_bonus_ratio)
}

// -------------------------------------------------------------------

// ConfigCustomerOccupationList

// repeated .db.ConfigCustomerOccupation list = 1;
inline int ConfigCustomerOccupationList::list_size() const {
  return list_.size();
}
inline void ConfigCustomerOccupationList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigCustomerOccupation* ConfigCustomerOccupationList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomerOccupationList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerOccupation >*
ConfigCustomerOccupationList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigCustomerOccupationList.list)
  return &list_;
}
inline const ::db::ConfigCustomerOccupation& ConfigCustomerOccupationList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerOccupationList.list)
  return list_.Get(index);
}
inline ::db::ConfigCustomerOccupation* ConfigCustomerOccupationList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigCustomerOccupationList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerOccupation >&
ConfigCustomerOccupationList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigCustomerOccupationList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigCustomerWealthGrade

// required int32 grade = 1;
inline bool ConfigCustomerWealthGrade::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigCustomerWealthGrade::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigCustomerWealthGrade::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigCustomerWealthGrade::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 ConfigCustomerWealthGrade::grade() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerWealthGrade.grade)
  return grade_;
}
inline void ConfigCustomerWealthGrade::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomerWealthGrade.grade)
}

// required int32 gold = 2;
inline bool ConfigCustomerWealthGrade::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigCustomerWealthGrade::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigCustomerWealthGrade::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigCustomerWealthGrade::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 ConfigCustomerWealthGrade::gold() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerWealthGrade.gold)
  return gold_;
}
inline void ConfigCustomerWealthGrade::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomerWealthGrade.gold)
}

// required int32 comfort = 3;
inline bool ConfigCustomerWealthGrade::has_comfort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigCustomerWealthGrade::set_has_comfort() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigCustomerWealthGrade::clear_has_comfort() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigCustomerWealthGrade::clear_comfort() {
  comfort_ = 0;
  clear_has_comfort();
}
inline ::google::protobuf::int32 ConfigCustomerWealthGrade::comfort() const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerWealthGrade.comfort)
  return comfort_;
}
inline void ConfigCustomerWealthGrade::set_comfort(::google::protobuf::int32 value) {
  set_has_comfort();
  comfort_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigCustomerWealthGrade.comfort)
}

// -------------------------------------------------------------------

// ConfigCustomerWealthGradeList

// repeated .db.ConfigCustomerWealthGrade list = 1;
inline int ConfigCustomerWealthGradeList::list_size() const {
  return list_.size();
}
inline void ConfigCustomerWealthGradeList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigCustomerWealthGrade* ConfigCustomerWealthGradeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigCustomerWealthGradeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerWealthGrade >*
ConfigCustomerWealthGradeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigCustomerWealthGradeList.list)
  return &list_;
}
inline const ::db::ConfigCustomerWealthGrade& ConfigCustomerWealthGradeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigCustomerWealthGradeList.list)
  return list_.Get(index);
}
inline ::db::ConfigCustomerWealthGrade* ConfigCustomerWealthGradeList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigCustomerWealthGradeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigCustomerWealthGrade >&
ConfigCustomerWealthGradeList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigCustomerWealthGradeList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigPlaceGrade

// required int32 id = 1;
inline bool ConfigPlaceGrade::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigPlaceGrade::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigPlaceGrade::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigPlaceGrade::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigPlaceGrade::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.id)
  return id_;
}
inline void ConfigPlaceGrade::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.id)
}

// required int32 place_id = 2;
inline bool ConfigPlaceGrade::has_place_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigPlaceGrade::set_has_place_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigPlaceGrade::clear_has_place_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigPlaceGrade::clear_place_id() {
  place_id_ = 0;
  clear_has_place_id();
}
inline ::google::protobuf::int32 ConfigPlaceGrade::place_id() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.place_id)
  return place_id_;
}
inline void ConfigPlaceGrade::set_place_id(::google::protobuf::int32 value) {
  set_has_place_id();
  place_id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.place_id)
}

// required bytes name = 3;
inline bool ConfigPlaceGrade::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigPlaceGrade::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigPlaceGrade::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigPlaceGrade::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigPlaceGrade::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.name)
  return name_.Get();
}
inline void ConfigPlaceGrade::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.name)
}
#if LANG_CXX11
inline void ConfigPlaceGrade::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigPlaceGrade.name)
}
#endif
inline void ConfigPlaceGrade::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigPlaceGrade.name)
}
inline void ConfigPlaceGrade::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigPlaceGrade.name)
}
inline ::std::string* ConfigPlaceGrade::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigPlaceGrade.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigPlaceGrade::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigPlaceGrade.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigPlaceGrade::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigPlaceGrade.name)
}
inline ::std::string* ConfigPlaceGrade::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigPlaceGrade.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigPlaceGrade::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigPlaceGrade.name)
}

// required int32 level = 4;
inline bool ConfigPlaceGrade::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigPlaceGrade::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigPlaceGrade::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigPlaceGrade::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigPlaceGrade::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.level)
  return level_;
}
inline void ConfigPlaceGrade::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.level)
}

// required int32 levelup_unlock = 5;
inline bool ConfigPlaceGrade::has_levelup_unlock() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigPlaceGrade::set_has_levelup_unlock() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigPlaceGrade::clear_has_levelup_unlock() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigPlaceGrade::clear_levelup_unlock() {
  levelup_unlock_ = 0;
  clear_has_levelup_unlock();
}
inline ::google::protobuf::int32 ConfigPlaceGrade::levelup_unlock() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.levelup_unlock)
  return levelup_unlock_;
}
inline void ConfigPlaceGrade::set_levelup_unlock(::google::protobuf::int32 value) {
  set_has_levelup_unlock();
  levelup_unlock_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.levelup_unlock)
}

// required int32 leveldown_unlock = 6;
inline bool ConfigPlaceGrade::has_leveldown_unlock() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigPlaceGrade::set_has_leveldown_unlock() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigPlaceGrade::clear_has_leveldown_unlock() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigPlaceGrade::clear_leveldown_unlock() {
  leveldown_unlock_ = 0;
  clear_has_leveldown_unlock();
}
inline ::google::protobuf::int32 ConfigPlaceGrade::leveldown_unlock() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.leveldown_unlock)
  return leveldown_unlock_;
}
inline void ConfigPlaceGrade::set_leveldown_unlock(::google::protobuf::int32 value) {
  set_has_leveldown_unlock();
  leveldown_unlock_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.leveldown_unlock)
}

// required int32 boom = 7;
inline bool ConfigPlaceGrade::has_boom() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigPlaceGrade::set_has_boom() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigPlaceGrade::clear_has_boom() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigPlaceGrade::clear_boom() {
  boom_ = 0;
  clear_has_boom();
}
inline ::google::protobuf::int32 ConfigPlaceGrade::boom() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.boom)
  return boom_;
}
inline void ConfigPlaceGrade::set_boom(::google::protobuf::int32 value) {
  set_has_boom();
  boom_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.boom)
}

// required bytes customer_group = 11;
inline bool ConfigPlaceGrade::has_customer_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigPlaceGrade::set_has_customer_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigPlaceGrade::clear_has_customer_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigPlaceGrade::clear_customer_group() {
  customer_group_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_customer_group();
}
inline const ::std::string& ConfigPlaceGrade::customer_group() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.customer_group)
  return customer_group_.Get();
}
inline void ConfigPlaceGrade::set_customer_group(const ::std::string& value) {
  set_has_customer_group();
  customer_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.customer_group)
}
#if LANG_CXX11
inline void ConfigPlaceGrade::set_customer_group(::std::string&& value) {
  set_has_customer_group();
  customer_group_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigPlaceGrade.customer_group)
}
#endif
inline void ConfigPlaceGrade::set_customer_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_customer_group();
  customer_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigPlaceGrade.customer_group)
}
inline void ConfigPlaceGrade::set_customer_group(const void* value,
    size_t size) {
  set_has_customer_group();
  customer_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigPlaceGrade.customer_group)
}
inline ::std::string* ConfigPlaceGrade::mutable_customer_group() {
  set_has_customer_group();
  // @@protoc_insertion_point(field_mutable:db.ConfigPlaceGrade.customer_group)
  return customer_group_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigPlaceGrade::release_customer_group() {
  // @@protoc_insertion_point(field_release:db.ConfigPlaceGrade.customer_group)
  if (!has_customer_group()) {
    return NULL;
  }
  clear_has_customer_group();
  return customer_group_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigPlaceGrade::set_allocated_customer_group(::std::string* customer_group) {
  if (customer_group != NULL) {
    set_has_customer_group();
  } else {
    clear_has_customer_group();
  }
  customer_group_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer_group,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigPlaceGrade.customer_group)
}
inline ::std::string* ConfigPlaceGrade::unsafe_arena_release_customer_group() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigPlaceGrade.customer_group)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_customer_group();
  return customer_group_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigPlaceGrade::unsafe_arena_set_allocated_customer_group(
    ::std::string* customer_group) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (customer_group != NULL) {
    set_has_customer_group();
  } else {
    clear_has_customer_group();
  }
  customer_group_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      customer_group, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigPlaceGrade.customer_group)
}

// required int32 customer_max = 12;
inline bool ConfigPlaceGrade::has_customer_max() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigPlaceGrade::set_has_customer_max() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigPlaceGrade::clear_has_customer_max() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigPlaceGrade::clear_customer_max() {
  customer_max_ = 0;
  clear_has_customer_max();
}
inline ::google::protobuf::int32 ConfigPlaceGrade::customer_max() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.customer_max)
  return customer_max_;
}
inline void ConfigPlaceGrade::set_customer_max(::google::protobuf::int32 value) {
  set_has_customer_max();
  customer_max_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.customer_max)
}

// required float customer_add_number = 13;
inline bool ConfigPlaceGrade::has_customer_add_number() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigPlaceGrade::set_has_customer_add_number() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigPlaceGrade::clear_has_customer_add_number() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigPlaceGrade::clear_customer_add_number() {
  customer_add_number_ = 0;
  clear_has_customer_add_number();
}
inline float ConfigPlaceGrade::customer_add_number() const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGrade.customer_add_number)
  return customer_add_number_;
}
inline void ConfigPlaceGrade::set_customer_add_number(float value) {
  set_has_customer_add_number();
  customer_add_number_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigPlaceGrade.customer_add_number)
}

// -------------------------------------------------------------------

// ConfigPlaceGradeList

// repeated .db.ConfigPlaceGrade list = 1;
inline int ConfigPlaceGradeList::list_size() const {
  return list_.size();
}
inline void ConfigPlaceGradeList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigPlaceGrade* ConfigPlaceGradeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigPlaceGradeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigPlaceGrade >*
ConfigPlaceGradeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigPlaceGradeList.list)
  return &list_;
}
inline const ::db::ConfigPlaceGrade& ConfigPlaceGradeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigPlaceGradeList.list)
  return list_.Get(index);
}
inline ::db::ConfigPlaceGrade* ConfigPlaceGradeList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigPlaceGradeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigPlaceGrade >&
ConfigPlaceGradeList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigPlaceGradeList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigHarborFoodOrder

// required int32 level = 1;
inline bool ConfigHarborFoodOrder::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigHarborFoodOrder::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigHarborFoodOrder::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigHarborFoodOrder::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigHarborFoodOrder::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigHarborFoodOrder.level)
  return level_;
}
inline void ConfigHarborFoodOrder::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHarborFoodOrder.level)
}

// required int32 hungry_timeout = 2;
inline bool ConfigHarborFoodOrder::has_hungry_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigHarborFoodOrder::set_has_hungry_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigHarborFoodOrder::clear_has_hungry_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigHarborFoodOrder::clear_hungry_timeout() {
  hungry_timeout_ = 0;
  clear_has_hungry_timeout();
}
inline ::google::protobuf::int32 ConfigHarborFoodOrder::hungry_timeout() const {
  // @@protoc_insertion_point(field_get:db.ConfigHarborFoodOrder.hungry_timeout)
  return hungry_timeout_;
}
inline void ConfigHarborFoodOrder::set_hungry_timeout(::google::protobuf::int32 value) {
  set_has_hungry_timeout();
  hungry_timeout_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHarborFoodOrder.hungry_timeout)
}

// required int32 goaboard_interval = 3;
inline bool ConfigHarborFoodOrder::has_goaboard_interval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigHarborFoodOrder::set_has_goaboard_interval() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigHarborFoodOrder::clear_has_goaboard_interval() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigHarborFoodOrder::clear_goaboard_interval() {
  goaboard_interval_ = 0;
  clear_has_goaboard_interval();
}
inline ::google::protobuf::int32 ConfigHarborFoodOrder::goaboard_interval() const {
  // @@protoc_insertion_point(field_get:db.ConfigHarborFoodOrder.goaboard_interval)
  return goaboard_interval_;
}
inline void ConfigHarborFoodOrder::set_goaboard_interval(::google::protobuf::int32 value) {
  set_has_goaboard_interval();
  goaboard_interval_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHarborFoodOrder.goaboard_interval)
}

// required int32 goaboard_flucuation = 4;
inline bool ConfigHarborFoodOrder::has_goaboard_flucuation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigHarborFoodOrder::set_has_goaboard_flucuation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigHarborFoodOrder::clear_has_goaboard_flucuation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigHarborFoodOrder::clear_goaboard_flucuation() {
  goaboard_flucuation_ = 0;
  clear_has_goaboard_flucuation();
}
inline ::google::protobuf::int32 ConfigHarborFoodOrder::goaboard_flucuation() const {
  // @@protoc_insertion_point(field_get:db.ConfigHarborFoodOrder.goaboard_flucuation)
  return goaboard_flucuation_;
}
inline void ConfigHarborFoodOrder::set_goaboard_flucuation(::google::protobuf::int32 value) {
  set_has_goaboard_flucuation();
  goaboard_flucuation_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHarborFoodOrder.goaboard_flucuation)
}

// required int32 queueing_num_max = 5;
inline bool ConfigHarborFoodOrder::has_queueing_num_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigHarborFoodOrder::set_has_queueing_num_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigHarborFoodOrder::clear_has_queueing_num_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigHarborFoodOrder::clear_queueing_num_max() {
  queueing_num_max_ = 0;
  clear_has_queueing_num_max();
}
inline ::google::protobuf::int32 ConfigHarborFoodOrder::queueing_num_max() const {
  // @@protoc_insertion_point(field_get:db.ConfigHarborFoodOrder.queueing_num_max)
  return queueing_num_max_;
}
inline void ConfigHarborFoodOrder::set_queueing_num_max(::google::protobuf::int32 value) {
  set_has_queueing_num_max();
  queueing_num_max_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHarborFoodOrder.queueing_num_max)
}

// -------------------------------------------------------------------

// ConfigHarborFoodOrderList

// repeated .db.ConfigHarborFoodOrder list = 1;
inline int ConfigHarborFoodOrderList::list_size() const {
  return list_.size();
}
inline void ConfigHarborFoodOrderList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigHarborFoodOrder* ConfigHarborFoodOrderList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigHarborFoodOrderList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigHarborFoodOrder >*
ConfigHarborFoodOrderList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigHarborFoodOrderList.list)
  return &list_;
}
inline const ::db::ConfigHarborFoodOrder& ConfigHarborFoodOrderList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigHarborFoodOrderList.list)
  return list_.Get(index);
}
inline ::db::ConfigHarborFoodOrder* ConfigHarborFoodOrderList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigHarborFoodOrderList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigHarborFoodOrder >&
ConfigHarborFoodOrderList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigHarborFoodOrderList.list)
  return list_;
}

// -------------------------------------------------------------------

// UserHarbor

// required bytes userid = 1;
inline bool UserHarbor::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserHarbor::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserHarbor::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserHarbor::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserHarbor::userid() const {
  // @@protoc_insertion_point(field_get:db.UserHarbor.userid)
  return userid_.Get();
}
inline void UserHarbor::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserHarbor.userid)
}
#if LANG_CXX11
inline void UserHarbor::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserHarbor.userid)
}
#endif
inline void UserHarbor::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserHarbor.userid)
}
inline void UserHarbor::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserHarbor.userid)
}
inline ::std::string* UserHarbor::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserHarbor.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserHarbor::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserHarbor.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserHarbor::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserHarbor.userid)
}
inline ::std::string* UserHarbor::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserHarbor.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserHarbor::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserHarbor.userid)
}

// required int32 harborid = 2;
inline bool UserHarbor::has_harborid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserHarbor::set_has_harborid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserHarbor::clear_has_harborid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserHarbor::clear_harborid() {
  harborid_ = 0;
  clear_has_harborid();
}
inline ::google::protobuf::int32 UserHarbor::harborid() const {
  // @@protoc_insertion_point(field_get:db.UserHarbor.harborid)
  return harborid_;
}
inline void UserHarbor::set_harborid(::google::protobuf::int32 value) {
  set_has_harborid();
  harborid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarbor.harborid)
}

// required int32 state = 3;
inline bool UserHarbor::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserHarbor::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserHarbor::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserHarbor::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UserHarbor::state() const {
  // @@protoc_insertion_point(field_get:db.UserHarbor.state)
  return state_;
}
inline void UserHarbor::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarbor.state)
}

// required int32 grade = 4;
inline bool UserHarbor::has_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserHarbor::set_has_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserHarbor::clear_has_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserHarbor::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 UserHarbor::grade() const {
  // @@protoc_insertion_point(field_get:db.UserHarbor.grade)
  return grade_;
}
inline void UserHarbor::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarbor.grade)
}

// required int32 boom = 5;
inline bool UserHarbor::has_boom() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserHarbor::set_has_boom() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserHarbor::clear_has_boom() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserHarbor::clear_boom() {
  boom_ = 0;
  clear_has_boom();
}
inline ::google::protobuf::int32 UserHarbor::boom() const {
  // @@protoc_insertion_point(field_get:db.UserHarbor.boom)
  return boom_;
}
inline void UserHarbor::set_boom(::google::protobuf::int32 value) {
  set_has_boom();
  boom_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarbor.boom)
}

// required sfixed64 growtime = 6;
inline bool UserHarbor::has_growtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserHarbor::set_has_growtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserHarbor::clear_has_growtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserHarbor::clear_growtime() {
  growtime_ = GOOGLE_LONGLONG(0);
  clear_has_growtime();
}
inline ::google::protobuf::int64 UserHarbor::growtime() const {
  // @@protoc_insertion_point(field_get:db.UserHarbor.growtime)
  return growtime_;
}
inline void UserHarbor::set_growtime(::google::protobuf::int64 value) {
  set_has_growtime();
  growtime_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarbor.growtime)
}

// -------------------------------------------------------------------

// UserHarborNpc

// required bytes userid = 1;
inline bool UserHarborNpc::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserHarborNpc::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserHarborNpc::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserHarborNpc::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserHarborNpc::userid() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.userid)
  return userid_.Get();
}
inline void UserHarborNpc::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.userid)
}
#if LANG_CXX11
inline void UserHarborNpc::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserHarborNpc.userid)
}
#endif
inline void UserHarborNpc::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserHarborNpc.userid)
}
inline void UserHarborNpc::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserHarborNpc.userid)
}
inline ::std::string* UserHarborNpc::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserHarborNpc.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserHarborNpc::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserHarborNpc.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserHarborNpc::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserHarborNpc.userid)
}
inline ::std::string* UserHarborNpc::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserHarborNpc.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserHarborNpc::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserHarborNpc.userid)
}

// required int32 harborid = 2;
inline bool UserHarborNpc::has_harborid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserHarborNpc::set_has_harborid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserHarborNpc::clear_has_harborid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserHarborNpc::clear_harborid() {
  harborid_ = 0;
  clear_has_harborid();
}
inline ::google::protobuf::int32 UserHarborNpc::harborid() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.harborid)
  return harborid_;
}
inline void UserHarborNpc::set_harborid(::google::protobuf::int32 value) {
  set_has_harborid();
  harborid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.harborid)
}

// required int32 sn = 3;
inline bool UserHarborNpc::has_sn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserHarborNpc::set_has_sn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserHarborNpc::clear_has_sn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserHarborNpc::clear_sn() {
  sn_ = 0;
  clear_has_sn();
}
inline ::google::protobuf::int32 UserHarborNpc::sn() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.sn)
  return sn_;
}
inline void UserHarborNpc::set_sn(::google::protobuf::int32 value) {
  set_has_sn();
  sn_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.sn)
}

// required int32 npc_type = 4;
inline bool UserHarborNpc::has_npc_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserHarborNpc::set_has_npc_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserHarborNpc::clear_has_npc_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserHarborNpc::clear_npc_type() {
  npc_type_ = 0;
  clear_has_npc_type();
}
inline ::google::protobuf::int32 UserHarborNpc::npc_type() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.npc_type)
  return npc_type_;
}
inline void UserHarborNpc::set_npc_type(::google::protobuf::int32 value) {
  set_has_npc_type();
  npc_type_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.npc_type)
}

// required uint64 cfgid = 5;
inline bool UserHarborNpc::has_cfgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserHarborNpc::set_has_cfgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserHarborNpc::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserHarborNpc::clear_cfgid() {
  cfgid_ = GOOGLE_ULONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::uint64 UserHarborNpc::cfgid() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.cfgid)
  return cfgid_;
}
inline void UserHarborNpc::set_cfgid(::google::protobuf::uint64 value) {
  set_has_cfgid();
  cfgid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.cfgid)
}

// required int32 state = 6;
inline bool UserHarborNpc::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserHarborNpc::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserHarborNpc::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserHarborNpc::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UserHarborNpc::state() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.state)
  return state_;
}
inline void UserHarborNpc::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.state)
}

// required int32 seconds = 7;
inline bool UserHarborNpc::has_seconds() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserHarborNpc::set_has_seconds() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserHarborNpc::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserHarborNpc::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
inline ::google::protobuf::int32 UserHarborNpc::seconds() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.seconds)
  return seconds_;
}
inline void UserHarborNpc::set_seconds(::google::protobuf::int32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.seconds)
}

// required int32 seqno = 11;
inline bool UserHarborNpc::has_seqno() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserHarborNpc::set_has_seqno() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserHarborNpc::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserHarborNpc::clear_seqno() {
  seqno_ = 0;
  clear_has_seqno();
}
inline ::google::protobuf::int32 UserHarborNpc::seqno() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.seqno)
  return seqno_;
}
inline void UserHarborNpc::set_seqno(::google::protobuf::int32 value) {
  set_has_seqno();
  seqno_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.seqno)
}

// required int32 wealth_grade = 12;
inline bool UserHarborNpc::has_wealth_grade() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserHarborNpc::set_has_wealth_grade() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserHarborNpc::clear_has_wealth_grade() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserHarborNpc::clear_wealth_grade() {
  wealth_grade_ = 0;
  clear_has_wealth_grade();
}
inline ::google::protobuf::int32 UserHarborNpc::wealth_grade() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.wealth_grade)
  return wealth_grade_;
}
inline void UserHarborNpc::set_wealth_grade(::google::protobuf::int32 value) {
  set_has_wealth_grade();
  wealth_grade_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.wealth_grade)
}

// required int32 gold = 13;
inline bool UserHarborNpc::has_gold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserHarborNpc::set_has_gold() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserHarborNpc::clear_has_gold() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserHarborNpc::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 UserHarborNpc::gold() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.gold)
  return gold_;
}
inline void UserHarborNpc::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.gold)
}

// required int32 satisfaction = 14;
inline bool UserHarborNpc::has_satisfaction() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserHarborNpc::set_has_satisfaction() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserHarborNpc::clear_has_satisfaction() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserHarborNpc::clear_satisfaction() {
  satisfaction_ = 0;
  clear_has_satisfaction();
}
inline ::google::protobuf::int32 UserHarborNpc::satisfaction() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.satisfaction)
  return satisfaction_;
}
inline void UserHarborNpc::set_satisfaction(::google::protobuf::int32 value) {
  set_has_satisfaction();
  satisfaction_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.satisfaction)
}

// required int32 seatid = 15;
inline bool UserHarborNpc::has_seatid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserHarborNpc::set_has_seatid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserHarborNpc::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserHarborNpc::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 UserHarborNpc::seatid() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.seatid)
  return seatid_;
}
inline void UserHarborNpc::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.seatid)
}

// required int32 occupation_val = 21;
inline bool UserHarborNpc::has_occupation_val() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UserHarborNpc::set_has_occupation_val() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UserHarborNpc::clear_has_occupation_val() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UserHarborNpc::clear_occupation_val() {
  occupation_val_ = 0;
  clear_has_occupation_val();
}
inline ::google::protobuf::int32 UserHarborNpc::occupation_val() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.occupation_val)
  return occupation_val_;
}
inline void UserHarborNpc::set_occupation_val(::google::protobuf::int32 value) {
  set_has_occupation_val();
  occupation_val_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.occupation_val)
}

// required sfixed64 occupation_event_starttime = 22;
inline bool UserHarborNpc::has_occupation_event_starttime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UserHarborNpc::set_has_occupation_event_starttime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UserHarborNpc::clear_has_occupation_event_starttime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UserHarborNpc::clear_occupation_event_starttime() {
  occupation_event_starttime_ = GOOGLE_LONGLONG(0);
  clear_has_occupation_event_starttime();
}
inline ::google::protobuf::int64 UserHarborNpc::occupation_event_starttime() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.occupation_event_starttime)
  return occupation_event_starttime_;
}
inline void UserHarborNpc::set_occupation_event_starttime(::google::protobuf::int64 value) {
  set_has_occupation_event_starttime();
  occupation_event_starttime_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.occupation_event_starttime)
}

// required int32 question_status = 23;
inline bool UserHarborNpc::has_question_status() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void UserHarborNpc::set_has_question_status() {
  _has_bits_[0] |= 0x00004000u;
}
inline void UserHarborNpc::clear_has_question_status() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void UserHarborNpc::clear_question_status() {
  question_status_ = 0;
  clear_has_question_status();
}
inline ::google::protobuf::int32 UserHarborNpc::question_status() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.question_status)
  return question_status_;
}
inline void UserHarborNpc::set_question_status(::google::protobuf::int32 value) {
  set_has_question_status();
  question_status_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.question_status)
}

// required int32 special_cond_bonus = 24;
inline bool UserHarborNpc::has_special_cond_bonus() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void UserHarborNpc::set_has_special_cond_bonus() {
  _has_bits_[0] |= 0x00008000u;
}
inline void UserHarborNpc::clear_has_special_cond_bonus() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void UserHarborNpc::clear_special_cond_bonus() {
  special_cond_bonus_ = 0;
  clear_has_special_cond_bonus();
}
inline ::google::protobuf::int32 UserHarborNpc::special_cond_bonus() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.special_cond_bonus)
  return special_cond_bonus_;
}
inline void UserHarborNpc::set_special_cond_bonus(::google::protobuf::int32 value) {
  set_has_special_cond_bonus();
  special_cond_bonus_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.special_cond_bonus)
}

// required int32 satisfaction_accepted = 25;
inline bool UserHarborNpc::has_satisfaction_accepted() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void UserHarborNpc::set_has_satisfaction_accepted() {
  _has_bits_[0] |= 0x00010000u;
}
inline void UserHarborNpc::clear_has_satisfaction_accepted() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void UserHarborNpc::clear_satisfaction_accepted() {
  satisfaction_accepted_ = 0;
  clear_has_satisfaction_accepted();
}
inline ::google::protobuf::int32 UserHarborNpc::satisfaction_accepted() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.satisfaction_accepted)
  return satisfaction_accepted_;
}
inline void UserHarborNpc::set_satisfaction_accepted(::google::protobuf::int32 value) {
  set_has_satisfaction_accepted();
  satisfaction_accepted_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.satisfaction_accepted)
}

// required int32 task_need_idx1 = 31;
inline bool UserHarborNpc::has_task_need_idx1() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void UserHarborNpc::set_has_task_need_idx1() {
  _has_bits_[0] |= 0x00040000u;
}
inline void UserHarborNpc::clear_has_task_need_idx1() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void UserHarborNpc::clear_task_need_idx1() {
  task_need_idx1_ = 0;
  clear_has_task_need_idx1();
}
inline ::google::protobuf::int32 UserHarborNpc::task_need_idx1() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_need_idx1)
  return task_need_idx1_;
}
inline void UserHarborNpc::set_task_need_idx1(::google::protobuf::int32 value) {
  set_has_task_need_idx1();
  task_need_idx1_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_need_idx1)
}

// required int32 task_reward_idx1 = 32;
inline bool UserHarborNpc::has_task_reward_idx1() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void UserHarborNpc::set_has_task_reward_idx1() {
  _has_bits_[0] |= 0x00080000u;
}
inline void UserHarborNpc::clear_has_task_reward_idx1() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void UserHarborNpc::clear_task_reward_idx1() {
  task_reward_idx1_ = 0;
  clear_has_task_reward_idx1();
}
inline ::google::protobuf::int32 UserHarborNpc::task_reward_idx1() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_reward_idx1)
  return task_reward_idx1_;
}
inline void UserHarborNpc::set_task_reward_idx1(::google::protobuf::int32 value) {
  set_has_task_reward_idx1();
  task_reward_idx1_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_reward_idx1)
}

// required int32 task_reward_accept1 = 33;
inline bool UserHarborNpc::has_task_reward_accept1() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void UserHarborNpc::set_has_task_reward_accept1() {
  _has_bits_[0] |= 0x00100000u;
}
inline void UserHarborNpc::clear_has_task_reward_accept1() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void UserHarborNpc::clear_task_reward_accept1() {
  task_reward_accept1_ = 0;
  clear_has_task_reward_accept1();
}
inline ::google::protobuf::int32 UserHarborNpc::task_reward_accept1() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_reward_accept1)
  return task_reward_accept1_;
}
inline void UserHarborNpc::set_task_reward_accept1(::google::protobuf::int32 value) {
  set_has_task_reward_accept1();
  task_reward_accept1_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_reward_accept1)
}

// required int32 task_need_idx2 = 34;
inline bool UserHarborNpc::has_task_need_idx2() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void UserHarborNpc::set_has_task_need_idx2() {
  _has_bits_[0] |= 0x00200000u;
}
inline void UserHarborNpc::clear_has_task_need_idx2() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void UserHarborNpc::clear_task_need_idx2() {
  task_need_idx2_ = 0;
  clear_has_task_need_idx2();
}
inline ::google::protobuf::int32 UserHarborNpc::task_need_idx2() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_need_idx2)
  return task_need_idx2_;
}
inline void UserHarborNpc::set_task_need_idx2(::google::protobuf::int32 value) {
  set_has_task_need_idx2();
  task_need_idx2_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_need_idx2)
}

// required int32 task_reward_idx2 = 35;
inline bool UserHarborNpc::has_task_reward_idx2() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void UserHarborNpc::set_has_task_reward_idx2() {
  _has_bits_[0] |= 0x00400000u;
}
inline void UserHarborNpc::clear_has_task_reward_idx2() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void UserHarborNpc::clear_task_reward_idx2() {
  task_reward_idx2_ = 0;
  clear_has_task_reward_idx2();
}
inline ::google::protobuf::int32 UserHarborNpc::task_reward_idx2() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_reward_idx2)
  return task_reward_idx2_;
}
inline void UserHarborNpc::set_task_reward_idx2(::google::protobuf::int32 value) {
  set_has_task_reward_idx2();
  task_reward_idx2_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_reward_idx2)
}

// required int32 task_reward_accept2 = 36;
inline bool UserHarborNpc::has_task_reward_accept2() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void UserHarborNpc::set_has_task_reward_accept2() {
  _has_bits_[0] |= 0x00800000u;
}
inline void UserHarborNpc::clear_has_task_reward_accept2() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void UserHarborNpc::clear_task_reward_accept2() {
  task_reward_accept2_ = 0;
  clear_has_task_reward_accept2();
}
inline ::google::protobuf::int32 UserHarborNpc::task_reward_accept2() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_reward_accept2)
  return task_reward_accept2_;
}
inline void UserHarborNpc::set_task_reward_accept2(::google::protobuf::int32 value) {
  set_has_task_reward_accept2();
  task_reward_accept2_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_reward_accept2)
}

// required int32 task_need_idx3 = 37;
inline bool UserHarborNpc::has_task_need_idx3() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void UserHarborNpc::set_has_task_need_idx3() {
  _has_bits_[0] |= 0x01000000u;
}
inline void UserHarborNpc::clear_has_task_need_idx3() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void UserHarborNpc::clear_task_need_idx3() {
  task_need_idx3_ = 0;
  clear_has_task_need_idx3();
}
inline ::google::protobuf::int32 UserHarborNpc::task_need_idx3() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_need_idx3)
  return task_need_idx3_;
}
inline void UserHarborNpc::set_task_need_idx3(::google::protobuf::int32 value) {
  set_has_task_need_idx3();
  task_need_idx3_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_need_idx3)
}

// required int32 task_reward_idx3 = 38;
inline bool UserHarborNpc::has_task_reward_idx3() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void UserHarborNpc::set_has_task_reward_idx3() {
  _has_bits_[0] |= 0x02000000u;
}
inline void UserHarborNpc::clear_has_task_reward_idx3() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void UserHarborNpc::clear_task_reward_idx3() {
  task_reward_idx3_ = 0;
  clear_has_task_reward_idx3();
}
inline ::google::protobuf::int32 UserHarborNpc::task_reward_idx3() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_reward_idx3)
  return task_reward_idx3_;
}
inline void UserHarborNpc::set_task_reward_idx3(::google::protobuf::int32 value) {
  set_has_task_reward_idx3();
  task_reward_idx3_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_reward_idx3)
}

// required int32 task_reward_accept3 = 39;
inline bool UserHarborNpc::has_task_reward_accept3() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void UserHarborNpc::set_has_task_reward_accept3() {
  _has_bits_[0] |= 0x00020000u;
}
inline void UserHarborNpc::clear_has_task_reward_accept3() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void UserHarborNpc::clear_task_reward_accept3() {
  task_reward_accept3_ = 0;
  clear_has_task_reward_accept3();
}
inline ::google::protobuf::int32 UserHarborNpc::task_reward_accept3() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.task_reward_accept3)
  return task_reward_accept3_;
}
inline void UserHarborNpc::set_task_reward_accept3(::google::protobuf::int32 value) {
  set_has_task_reward_accept3();
  task_reward_accept3_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.task_reward_accept3)
}

// required sfixed64 optime = 41;
inline bool UserHarborNpc::has_optime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void UserHarborNpc::set_has_optime() {
  _has_bits_[0] |= 0x04000000u;
}
inline void UserHarborNpc::clear_has_optime() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void UserHarborNpc::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 UserHarborNpc::optime() const {
  // @@protoc_insertion_point(field_get:db.UserHarborNpc.optime)
  return optime_;
}
inline void UserHarborNpc::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.UserHarborNpc.optime)
}

// -------------------------------------------------------------------

// UserFoodOrderSlot

// required bytes userid = 1;
inline bool UserFoodOrderSlot::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserFoodOrderSlot::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserFoodOrderSlot::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserFoodOrderSlot::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserFoodOrderSlot::userid() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.userid)
  return userid_.Get();
}
inline void UserFoodOrderSlot::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.userid)
}
#if LANG_CXX11
inline void UserFoodOrderSlot::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserFoodOrderSlot.userid)
}
#endif
inline void UserFoodOrderSlot::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserFoodOrderSlot.userid)
}
inline void UserFoodOrderSlot::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserFoodOrderSlot.userid)
}
inline ::std::string* UserFoodOrderSlot::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserFoodOrderSlot.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserFoodOrderSlot::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserFoodOrderSlot.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserFoodOrderSlot::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserFoodOrderSlot.userid)
}
inline ::std::string* UserFoodOrderSlot::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserFoodOrderSlot.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserFoodOrderSlot::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserFoodOrderSlot.userid)
}

// required int32 slotid = 2;
inline bool UserFoodOrderSlot::has_slotid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserFoodOrderSlot::set_has_slotid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserFoodOrderSlot::clear_has_slotid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserFoodOrderSlot::clear_slotid() {
  slotid_ = 0;
  clear_has_slotid();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::slotid() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.slotid)
  return slotid_;
}
inline void UserFoodOrderSlot::set_slotid(::google::protobuf::int32 value) {
  set_has_slotid();
  slotid_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.slotid)
}

// required int32 slot_type = 3;
inline bool UserFoodOrderSlot::has_slot_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserFoodOrderSlot::set_has_slot_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserFoodOrderSlot::clear_has_slot_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserFoodOrderSlot::clear_slot_type() {
  slot_type_ = 0;
  clear_has_slot_type();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::slot_type() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.slot_type)
  return slot_type_;
}
inline void UserFoodOrderSlot::set_slot_type(::google::protobuf::int32 value) {
  set_has_slot_type();
  slot_type_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.slot_type)
}

// required int32 slot_state = 4;
inline bool UserFoodOrderSlot::has_slot_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserFoodOrderSlot::set_has_slot_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserFoodOrderSlot::clear_has_slot_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserFoodOrderSlot::clear_slot_state() {
  slot_state_ = 0;
  clear_has_slot_state();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::slot_state() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.slot_state)
  return slot_state_;
}
inline void UserFoodOrderSlot::set_slot_state(::google::protobuf::int32 value) {
  set_has_slot_state();
  slot_state_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.slot_state)
}

// required int32 workshopid = 11;
inline bool UserFoodOrderSlot::has_workshopid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserFoodOrderSlot::set_has_workshopid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserFoodOrderSlot::clear_has_workshopid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserFoodOrderSlot::clear_workshopid() {
  workshopid_ = 0;
  clear_has_workshopid();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::workshopid() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.workshopid)
  return workshopid_;
}
inline void UserFoodOrderSlot::set_workshopid(::google::protobuf::int32 value) {
  set_has_workshopid();
  workshopid_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.workshopid)
}

// required int32 workerid = 12;
inline bool UserFoodOrderSlot::has_workerid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserFoodOrderSlot::set_has_workerid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserFoodOrderSlot::clear_has_workerid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserFoodOrderSlot::clear_workerid() {
  workerid_ = 0;
  clear_has_workerid();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::workerid() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.workerid)
  return workerid_;
}
inline void UserFoodOrderSlot::set_workerid(::google::protobuf::int32 value) {
  set_has_workerid();
  workerid_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.workerid)
}

// required int32 foodfilterid = 13;
inline bool UserFoodOrderSlot::has_foodfilterid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserFoodOrderSlot::set_has_foodfilterid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserFoodOrderSlot::clear_has_foodfilterid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserFoodOrderSlot::clear_foodfilterid() {
  foodfilterid_ = 0;
  clear_has_foodfilterid();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::foodfilterid() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.foodfilterid)
  return foodfilterid_;
}
inline void UserFoodOrderSlot::set_foodfilterid(::google::protobuf::int32 value) {
  set_has_foodfilterid();
  foodfilterid_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.foodfilterid)
}

// required int32 formulaid = 14;
inline bool UserFoodOrderSlot::has_formulaid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserFoodOrderSlot::set_has_formulaid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserFoodOrderSlot::clear_has_formulaid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserFoodOrderSlot::clear_formulaid() {
  formulaid_ = 0;
  clear_has_formulaid();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::formulaid() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.formulaid)
  return formulaid_;
}
inline void UserFoodOrderSlot::set_formulaid(::google::protobuf::int32 value) {
  set_has_formulaid();
  formulaid_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.formulaid)
}

// required uint64 productid = 15;
inline bool UserFoodOrderSlot::has_productid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserFoodOrderSlot::set_has_productid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserFoodOrderSlot::clear_has_productid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserFoodOrderSlot::clear_productid() {
  productid_ = GOOGLE_ULONGLONG(0);
  clear_has_productid();
}
inline ::google::protobuf::uint64 UserFoodOrderSlot::productid() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.productid)
  return productid_;
}
inline void UserFoodOrderSlot::set_productid(::google::protobuf::uint64 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.productid)
}

// required int32 seconds = 16;
inline bool UserFoodOrderSlot::has_seconds() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserFoodOrderSlot::set_has_seconds() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserFoodOrderSlot::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserFoodOrderSlot::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::seconds() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.seconds)
  return seconds_;
}
inline void UserFoodOrderSlot::set_seconds(::google::protobuf::int32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.seconds)
}

// required int32 star = 21;
inline bool UserFoodOrderSlot::has_star() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserFoodOrderSlot::set_has_star() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserFoodOrderSlot::clear_has_star() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserFoodOrderSlot::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::star() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.star)
  return star_;
}
inline void UserFoodOrderSlot::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.star)
}

// required int32 gather_gold_num = 22;
inline bool UserFoodOrderSlot::has_gather_gold_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserFoodOrderSlot::set_has_gather_gold_num() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserFoodOrderSlot::clear_has_gather_gold_num() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserFoodOrderSlot::clear_gather_gold_num() {
  gather_gold_num_ = 0;
  clear_has_gather_gold_num();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::gather_gold_num() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.gather_gold_num)
  return gather_gold_num_;
}
inline void UserFoodOrderSlot::set_gather_gold_num(::google::protobuf::int32 value) {
  set_has_gather_gold_num();
  gather_gold_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.gather_gold_num)
}

// required int32 gather_satisfaction_num = 23;
inline bool UserFoodOrderSlot::has_gather_satisfaction_num() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UserFoodOrderSlot::set_has_gather_satisfaction_num() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UserFoodOrderSlot::clear_has_gather_satisfaction_num() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UserFoodOrderSlot::clear_gather_satisfaction_num() {
  gather_satisfaction_num_ = 0;
  clear_has_gather_satisfaction_num();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::gather_satisfaction_num() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.gather_satisfaction_num)
  return gather_satisfaction_num_;
}
inline void UserFoodOrderSlot::set_gather_satisfaction_num(::google::protobuf::int32 value) {
  set_has_gather_satisfaction_num();
  gather_satisfaction_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.gather_satisfaction_num)
}

// required int32 tip_gold_num = 24;
inline bool UserFoodOrderSlot::has_tip_gold_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UserFoodOrderSlot::set_has_tip_gold_num() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UserFoodOrderSlot::clear_has_tip_gold_num() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UserFoodOrderSlot::clear_tip_gold_num() {
  tip_gold_num_ = 0;
  clear_has_tip_gold_num();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::tip_gold_num() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.tip_gold_num)
  return tip_gold_num_;
}
inline void UserFoodOrderSlot::set_tip_gold_num(::google::protobuf::int32 value) {
  set_has_tip_gold_num();
  tip_gold_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.tip_gold_num)
}

// required int32 tip_diamond_num = 25;
inline bool UserFoodOrderSlot::has_tip_diamond_num() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void UserFoodOrderSlot::set_has_tip_diamond_num() {
  _has_bits_[0] |= 0x00004000u;
}
inline void UserFoodOrderSlot::clear_has_tip_diamond_num() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void UserFoodOrderSlot::clear_tip_diamond_num() {
  tip_diamond_num_ = 0;
  clear_has_tip_diamond_num();
}
inline ::google::protobuf::int32 UserFoodOrderSlot::tip_diamond_num() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.tip_diamond_num)
  return tip_diamond_num_;
}
inline void UserFoodOrderSlot::set_tip_diamond_num(::google::protobuf::int32 value) {
  set_has_tip_diamond_num();
  tip_diamond_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.tip_diamond_num)
}

// required float answer_bonus_ratio = 26;
inline bool UserFoodOrderSlot::has_answer_bonus_ratio() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void UserFoodOrderSlot::set_has_answer_bonus_ratio() {
  _has_bits_[0] |= 0x00008000u;
}
inline void UserFoodOrderSlot::clear_has_answer_bonus_ratio() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void UserFoodOrderSlot::clear_answer_bonus_ratio() {
  answer_bonus_ratio_ = 0;
  clear_has_answer_bonus_ratio();
}
inline float UserFoodOrderSlot::answer_bonus_ratio() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.answer_bonus_ratio)
  return answer_bonus_ratio_;
}
inline void UserFoodOrderSlot::set_answer_bonus_ratio(float value) {
  set_has_answer_bonus_ratio();
  answer_bonus_ratio_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.answer_bonus_ratio)
}

// required sfixed64 starttime = 31;
inline bool UserFoodOrderSlot::has_starttime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void UserFoodOrderSlot::set_has_starttime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void UserFoodOrderSlot::clear_has_starttime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void UserFoodOrderSlot::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 UserFoodOrderSlot::starttime() const {
  // @@protoc_insertion_point(field_get:db.UserFoodOrderSlot.starttime)
  return starttime_;
}
inline void UserFoodOrderSlot::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:db.UserFoodOrderSlot.starttime)
}

// -------------------------------------------------------------------

// UserCustomerUnlock

// required bytes userid = 1;
inline bool UserCustomerUnlock::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCustomerUnlock::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCustomerUnlock::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCustomerUnlock::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserCustomerUnlock::userid() const {
  // @@protoc_insertion_point(field_get:db.UserCustomerUnlock.userid)
  return userid_.Get();
}
inline void UserCustomerUnlock::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserCustomerUnlock.userid)
}
#if LANG_CXX11
inline void UserCustomerUnlock::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserCustomerUnlock.userid)
}
#endif
inline void UserCustomerUnlock::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserCustomerUnlock.userid)
}
inline void UserCustomerUnlock::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserCustomerUnlock.userid)
}
inline ::std::string* UserCustomerUnlock::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserCustomerUnlock.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserCustomerUnlock::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserCustomerUnlock.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserCustomerUnlock::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserCustomerUnlock.userid)
}
inline ::std::string* UserCustomerUnlock::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserCustomerUnlock.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserCustomerUnlock::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserCustomerUnlock.userid)
}

// required int32 sn = 2;
inline bool UserCustomerUnlock::has_sn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCustomerUnlock::set_has_sn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCustomerUnlock::clear_has_sn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCustomerUnlock::clear_sn() {
  sn_ = 0;
  clear_has_sn();
}
inline ::google::protobuf::int32 UserCustomerUnlock::sn() const {
  // @@protoc_insertion_point(field_get:db.UserCustomerUnlock.sn)
  return sn_;
}
inline void UserCustomerUnlock::set_sn(::google::protobuf::int32 value) {
  set_has_sn();
  sn_ = value;
  // @@protoc_insertion_point(field_set:db.UserCustomerUnlock.sn)
}

// required uint64 cfgid = 3;
inline bool UserCustomerUnlock::has_cfgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCustomerUnlock::set_has_cfgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCustomerUnlock::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCustomerUnlock::clear_cfgid() {
  cfgid_ = GOOGLE_ULONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::uint64 UserCustomerUnlock::cfgid() const {
  // @@protoc_insertion_point(field_get:db.UserCustomerUnlock.cfgid)
  return cfgid_;
}
inline void UserCustomerUnlock::set_cfgid(::google::protobuf::uint64 value) {
  set_has_cfgid();
  cfgid_ = value;
  // @@protoc_insertion_point(field_set:db.UserCustomerUnlock.cfgid)
}

// required int32 state = 4;
inline bool UserCustomerUnlock::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserCustomerUnlock::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserCustomerUnlock::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserCustomerUnlock::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UserCustomerUnlock::state() const {
  // @@protoc_insertion_point(field_get:db.UserCustomerUnlock.state)
  return state_;
}
inline void UserCustomerUnlock::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.UserCustomerUnlock.state)
}

// required sfixed64 optime = 11;
inline bool UserCustomerUnlock::has_optime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserCustomerUnlock::set_has_optime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserCustomerUnlock::clear_has_optime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserCustomerUnlock::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 UserCustomerUnlock::optime() const {
  // @@protoc_insertion_point(field_get:db.UserCustomerUnlock.optime)
  return optime_;
}
inline void UserCustomerUnlock::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.UserCustomerUnlock.optime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_StoredProcHarbour_2eproto
