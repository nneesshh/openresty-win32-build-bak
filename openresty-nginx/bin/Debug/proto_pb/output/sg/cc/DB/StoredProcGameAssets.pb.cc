// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcGameAssets.proto

#include "StoredProcGameAssets.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_StoredProcGameAssets_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserCommonData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserRankingData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_common_data_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_ranking_data_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_all_users_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_common_data_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_ranking_data_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_common_data_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_ranking_data_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameAssets_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_all_users_ReturnRecord;
}  // namespace protobuf_StoredProcGameAssets_2eproto
namespace protobuf_UserDef_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_UserDef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserAttribute;
}  // namespace protobuf_UserDef_2eproto
namespace db {
class proc_load_all_users_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_all_users_Parameter>
      _instance;
} _proc_load_all_users_Parameter_default_instance_;
class proc_load_all_users_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_all_users_ReturnRecord>
      _instance;
} _proc_load_all_users_ReturnRecord_default_instance_;
class proc_load_all_usersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_all_users>
      _instance;
} _proc_load_all_users_default_instance_;
class GameStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameState>
      _instance;
} _GameState_default_instance_;
class IslandBattleDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IslandBattleData>
      _instance;
} _IslandBattleData_default_instance_;
class GameRankingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameRanking>
      _instance;
} _GameRanking_default_instance_;
class UserCommonDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserCommonData>
      _instance;
} _UserCommonData_default_instance_;
class proc_i_load_user_common_data_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_common_data_Parameter>
      _instance;
} _proc_i_load_user_common_data_Parameter_default_instance_;
class proc_i_load_user_common_data_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_common_data_ReturnRecord>
      _instance;
} _proc_i_load_user_common_data_ReturnRecord_default_instance_;
class proc_i_load_user_common_dataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_common_data>
      _instance;
} _proc_i_load_user_common_data_default_instance_;
class proc_i_save_user_common_data_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_common_data_Parameter>
      _instance;
} _proc_i_save_user_common_data_Parameter_default_instance_;
class proc_i_save_user_common_dataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_common_data>
      _instance;
} _proc_i_save_user_common_data_default_instance_;
class UserRankingDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRankingData>
      _instance;
} _UserRankingData_default_instance_;
class proc_i_load_user_ranking_data_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_ranking_data_Parameter>
      _instance;
} _proc_i_load_user_ranking_data_Parameter_default_instance_;
class proc_i_load_user_ranking_data_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_ranking_data_ReturnRecord>
      _instance;
} _proc_i_load_user_ranking_data_ReturnRecord_default_instance_;
class proc_i_load_user_ranking_dataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_ranking_data>
      _instance;
} _proc_i_load_user_ranking_data_default_instance_;
class proc_i_save_user_ranking_data_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_ranking_data_Parameter>
      _instance;
} _proc_i_save_user_ranking_data_Parameter_default_instance_;
class proc_i_save_user_ranking_dataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_ranking_data>
      _instance;
} _proc_i_save_user_ranking_data_default_instance_;
class ConfigGameServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGameServer>
      _instance;
} _ConfigGameServer_default_instance_;
class GameRobotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameRobot>
      _instance;
} _GameRobot_default_instance_;
class GameAnnouncementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameAnnouncement>
      _instance;
} _GameAnnouncement_default_instance_;
}  // namespace db
namespace protobuf_StoredProcGameAssets_2eproto {
static void InitDefaultsproc_load_all_users_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_all_users_Parameter_default_instance_;
    new (ptr) ::db::proc_load_all_users_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_all_users_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_all_users_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_load_all_users_Parameter}, {}};

static void InitDefaultsproc_load_all_users_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_all_users_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_load_all_users_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_all_users_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_all_users_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_load_all_users_ReturnRecord}, {
      &protobuf_UserDef_2eproto::scc_info_UserAttribute.base,}};

static void InitDefaultsproc_load_all_users() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_all_users_default_instance_;
    new (ptr) ::db::proc_load_all_users();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_all_users::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_load_all_users =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_load_all_users}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users_Parameter.base,
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users_ReturnRecord.base,}};

static void InitDefaultsGameState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameState_default_instance_;
    new (ptr) ::db::GameState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameState}, {}};

static void InitDefaultsIslandBattleData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_IslandBattleData_default_instance_;
    new (ptr) ::db::IslandBattleData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::IslandBattleData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IslandBattleData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIslandBattleData}, {}};

static void InitDefaultsGameRanking() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameRanking_default_instance_;
    new (ptr) ::db::GameRanking();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameRanking::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameRanking =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameRanking}, {}};

static void InitDefaultsUserCommonData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserCommonData_default_instance_;
    new (ptr) ::db::UserCommonData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserCommonData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserCommonData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserCommonData}, {}};

static void InitDefaultsproc_i_load_user_common_data_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_common_data_Parameter_default_instance_;
    new (ptr) ::db::proc_i_load_user_common_data_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_common_data_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_common_data_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_i_load_user_common_data_Parameter}, {}};

static void InitDefaultsproc_i_load_user_common_data_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_common_data_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_i_load_user_common_data_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_common_data_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_common_data_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_load_user_common_data_ReturnRecord}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_UserCommonData.base,}};

static void InitDefaultsproc_i_load_user_common_data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_common_data_default_instance_;
    new (ptr) ::db::proc_i_load_user_common_data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_common_data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_i_load_user_common_data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_i_load_user_common_data}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data_Parameter.base,
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data_ReturnRecord.base,}};

static void InitDefaultsproc_i_save_user_common_data_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_common_data_Parameter_default_instance_;
    new (ptr) ::db::proc_i_save_user_common_data_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_common_data_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_common_data_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_common_data_Parameter}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_UserCommonData.base,}};

static void InitDefaultsproc_i_save_user_common_data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_common_data_default_instance_;
    new (ptr) ::db::proc_i_save_user_common_data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_common_data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_common_data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_common_data}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_common_data_Parameter.base,}};

static void InitDefaultsUserRankingData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserRankingData_default_instance_;
    new (ptr) ::db::UserRankingData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserRankingData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserRankingData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserRankingData}, {}};

static void InitDefaultsproc_i_load_user_ranking_data_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_ranking_data_Parameter_default_instance_;
    new (ptr) ::db::proc_i_load_user_ranking_data_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_ranking_data_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_ranking_data_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_i_load_user_ranking_data_Parameter}, {}};

static void InitDefaultsproc_i_load_user_ranking_data_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_ranking_data_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_i_load_user_ranking_data_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_ranking_data_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_ranking_data_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_load_user_ranking_data_ReturnRecord}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_UserRankingData.base,}};

static void InitDefaultsproc_i_load_user_ranking_data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_ranking_data_default_instance_;
    new (ptr) ::db::proc_i_load_user_ranking_data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_ranking_data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_i_load_user_ranking_data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_i_load_user_ranking_data}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data_Parameter.base,
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data_ReturnRecord.base,}};

static void InitDefaultsproc_i_save_user_ranking_data_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_ranking_data_Parameter_default_instance_;
    new (ptr) ::db::proc_i_save_user_ranking_data_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_ranking_data_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_ranking_data_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_ranking_data_Parameter}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_UserRankingData.base,}};

static void InitDefaultsproc_i_save_user_ranking_data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_ranking_data_default_instance_;
    new (ptr) ::db::proc_i_save_user_ranking_data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_ranking_data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_ranking_data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_ranking_data}, {
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_ranking_data_Parameter.base,}};

static void InitDefaultsConfigGameServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGameServer_default_instance_;
    new (ptr) ::db::ConfigGameServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGameServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGameServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGameServer}, {}};

static void InitDefaultsGameRobot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameRobot_default_instance_;
    new (ptr) ::db::GameRobot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameRobot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameRobot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameRobot}, {}};

static void InitDefaultsGameAnnouncement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameAnnouncement_default_instance_;
    new (ptr) ::db::GameAnnouncement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameAnnouncement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameAnnouncement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameAnnouncement}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_all_users_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_all_users_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_all_users.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IslandBattleData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameRanking.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserCommonData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_common_data_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_common_data_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_common_data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_common_data_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_common_data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRankingData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_ranking_data_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_ranking_data_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_ranking_data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_ranking_data_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_ranking_data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGameServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameRobot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameAnnouncement.base);
}

::google::protobuf::Metadata file_level_metadata[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users_ReturnRecord, attr_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_all_users, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, daily_gift_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, weekly_gift_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, daily_gift_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, weekly_gift_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, daily_pvp_reward_send_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, weekly_pvp_reward_send_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameState, monthly_pvp_reward_send_time_),
  0,
  1,
  7,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::IslandBattleData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::IslandBattleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::IslandBattleData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::IslandBattleData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::IslandBattleData, defender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::IslandBattleData, defend_team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::IslandBattleData, pve_map_),
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRanking, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRanking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRanking, ranking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRanking, ticketid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserCommonData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserCommonData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserCommonData, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserCommonData, event_record_count_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data_ReturnRecord, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_common_data, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_common_data_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_common_data_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_common_data_Parameter, p_data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_common_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_common_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_common_data, param_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRankingData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRankingData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRankingData, ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRankingData, ranking_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRankingData, win_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRankingData, lose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRankingData, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRankingData, team_),
  1,
  2,
  3,
  4,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data_ReturnRecord, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_ranking_data, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_ranking_data_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_ranking_data_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_ranking_data_Parameter, p_data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_ranking_data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_ranking_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_ranking_data, param_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, first_gold_lottery_id_once_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, first_diamond_lottery_id_ten_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, max_daily_system_task_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, max_occupy_monster_ship_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, max_occupy_player_ship_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, max_occupy_special_ship_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, max_ghost_ship_reset_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, ghost_ship_reset_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, max_fast_reach_ticket_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, fast_reach_ticket_cd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, jjc_daily_mail_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, jjc_daily_mail_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, jjc_weekly_mail_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, jjc_weekly_mail_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, jjc_monthly_mail_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, jjc_monthly_mail_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameServer, repeat_task_refresh_times_),
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  0,
  14,
  15,
  1,
  2,
  3,
  4,
  5,
  6,
  16,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRobot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRobot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRobot, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRobot, ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameRobot, init_level_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameAnnouncement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameAnnouncement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameAnnouncement, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameAnnouncement, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameAnnouncement, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameAnnouncement, circle_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameAnnouncement, read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameAnnouncement, data_),
  1,
  2,
  3,
  4,
  5,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::db::proc_load_all_users_Parameter)},
  { 5, 11, sizeof(::db::proc_load_all_users_ReturnRecord)},
  { 12, 19, sizeof(::db::proc_load_all_users)},
  { 21, 34, sizeof(::db::GameState)},
  { 42, 52, sizeof(::db::IslandBattleData)},
  { 57, 64, sizeof(::db::GameRanking)},
  { 66, 73, sizeof(::db::UserCommonData)},
  { 75, 80, sizeof(::db::proc_i_load_user_common_data_Parameter)},
  { 80, 86, sizeof(::db::proc_i_load_user_common_data_ReturnRecord)},
  { 87, 94, sizeof(::db::proc_i_load_user_common_data)},
  { 96, 102, sizeof(::db::proc_i_save_user_common_data_Parameter)},
  { 103, 109, sizeof(::db::proc_i_save_user_common_data)},
  { 110, 121, sizeof(::db::UserRankingData)},
  { 127, 132, sizeof(::db::proc_i_load_user_ranking_data_Parameter)},
  { 132, 138, sizeof(::db::proc_i_load_user_ranking_data_ReturnRecord)},
  { 139, 146, sizeof(::db::proc_i_load_user_ranking_data)},
  { 148, 154, sizeof(::db::proc_i_save_user_ranking_data_Parameter)},
  { 155, 161, sizeof(::db::proc_i_save_user_ranking_data)},
  { 162, 184, sizeof(::db::ConfigGameServer)},
  { 201, 209, sizeof(::db::GameRobot)},
  { 212, 223, sizeof(::db::GameAnnouncement)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_all_users_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_all_users_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_all_users_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_IslandBattleData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameRanking_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserCommonData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_common_data_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_common_data_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_common_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_common_data_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_common_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserRankingData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_ranking_data_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_ranking_data_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_ranking_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_ranking_data_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_ranking_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGameServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameRobot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameAnnouncement_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "StoredProcGameAssets.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032StoredProcGameAssets.proto\022\002db\032\rUserDe"
      "f.proto\"\307\001\n\023proc_load_all_users\0220\n\005param"
      "\030\001 \001(\0132!.db.proc_load_all_users.Paramete"
      "r\022@\n\022return_record_list\030\002 \003(\0132$.db.proc_"
      "load_all_users.ReturnRecord\032\013\n\tParameter"
      "\032/\n\014ReturnRecord\022\037\n\004attr\030\001 \002(\0132\021.db.User"
      "Attribute\"\370\001\n\tGameState\022\n\n\002id\030\001 \002(\005\022\025\n\rd"
      "aily_gift_id\030\002 \002(\005\022\026\n\016weekly_gift_id\030\003 \002"
      "(\005\022\037\n\027daily_gift_refresh_time\030\004 \001(\020\022 \n\030w"
      "eekly_gift_refresh_time\030\005 \001(\020\022\"\n\032daily_p"
      "vp_reward_send_time\030\006 \001(\020\022#\n\033weekly_pvp_"
      "reward_send_time\030\007 \001(\020\022$\n\034monthly_pvp_re"
      "ward_send_time\030\010 \001(\020\"d\n\020IslandBattleData"
      "\022\n\n\002id\030\001 \002(\004\022\014\n\004type\030\002 \002(\005\022\020\n\010defender\030\003"
      " \002(\014\022\023\n\013defend_team\030\004 \002(\014\022\017\n\007pve_map\030\005 \002"
      "(\014\"0\n\013GameRanking\022\017\n\007ranking\030\001 \002(\005\022\020\n\010ti"
      "cketid\030\002 \002(\005\"<\n\016UserCommonData\022\016\n\006userid"
      "\030\001 \002(\014\022\032\n\022event_record_count\030\002 \002(\004\"\343\001\n\034p"
      "roc_i_load_user_common_data\0229\n\005param\030\001 \001"
      "(\0132*.db.proc_i_load_user_common_data.Par"
      "ameter\022I\n\022return_record_list\030\002 \003(\0132-.db."
      "proc_i_load_user_common_data.ReturnRecor"
      "d\032\013\n\tParameter\0320\n\014ReturnRecord\022 \n\004data\030\001"
      " \002(\0132\022.db.UserCommonData\"\212\001\n\034proc_i_save"
      "_user_common_data\0229\n\005param\030\001 \001(\0132*.db.pr"
      "oc_i_save_user_common_data.Parameter\032/\n\t"
      "Parameter\022\"\n\006p_data\030\001 \002(\0132\022.db.UserCommo"
      "nData\"v\n\017UserRankingData\022\020\n\010ticketid\030\001 \002"
      "(\005\022\025\n\rranking_score\030\002 \002(\005\022\013\n\003win\030\003 \002(\005\022\014"
      "\n\004lose\030\004 \002(\005\022\021\n\ttimestamp\030\005 \002(\020\022\014\n\004team\030"
      "\006 \002(\014\"\347\001\n\035proc_i_load_user_ranking_data\022"
      ":\n\005param\030\001 \001(\0132+.db.proc_i_load_user_ran"
      "king_data.Parameter\022J\n\022return_record_lis"
      "t\030\002 \003(\0132..db.proc_i_load_user_ranking_da"
      "ta.ReturnRecord\032\013\n\tParameter\0321\n\014ReturnRe"
      "cord\022!\n\004data\030\001 \002(\0132\023.db.UserRankingData\""
      "\215\001\n\035proc_i_save_user_ranking_data\022:\n\005par"
      "am\030\001 \001(\0132+.db.proc_i_save_user_ranking_d"
      "ata.Parameter\0320\n\tParameter\022#\n\006p_data\030\001 \002"
      "(\0132\023.db.UserRankingData\"\332\004\n\020ConfigGameSe"
      "rver\022\"\n\032first_gold_lottery_id_once\030\001 \002(\005"
      "\022$\n\034first_diamond_lottery_id_ten\030\002 \002(\005\022!"
      "\n\031max_daily_system_task_num\030\003 \002(\005\022%\n\035max"
      "_occupy_monster_ship_times\030\004 \002(\005\022$\n\034max_"
      "occupy_player_ship_times\030\005 \002(\005\022%\n\035max_oc"
      "cupy_special_ship_times\030\006 \002(\005\022\"\n\032max_gho"
      "st_ship_reset_times\030\007 \002(\005\022\035\n\025ghost_ship_"
      "reset_cost\030\010 \002(\014\022!\n\031max_fast_reach_ticke"
      "t_num\030\t \002(\005\022\034\n\024fast_reach_ticket_cd\030\n \002("
      "\005\022\034\n\024jjc_daily_mail_title\030\013 \002(\014\022\036\n\026jjc_d"
      "aily_mail_content\030\014 \002(\014\022\035\n\025jjc_weekly_ma"
      "il_title\030\r \002(\014\022\037\n\027jjc_weekly_mail_conten"
      "t\030\016 \002(\014\022\036\n\026jjc_monthly_mail_title\030\017 \002(\014\022"
      " \n\030jjc_monthly_mail_content\030\020 \002(\014\022!\n\031rep"
      "eat_task_refresh_times\030\021 \002(\005\"=\n\tGameRobo"
      "t\022\n\n\002id\030\001 \002(\005\022\020\n\010ticketid\030\002 \002(\005\022\022\n\ninit_"
      "level\030\003 \002(\005\"s\n\020GameAnnouncement\022\n\n\002id\030\001 "
      "\002(\005\022\014\n\004type\030\002 \002(\005\022\021\n\ttimestamp\030\003 \002(\020\022\026\n\016"
      "circle_seconds\030\004 \002(\005\022\014\n\004read\030\005 \002(\010\022\014\n\004da"
      "ta\030\006 \002(\014B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2373);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StoredProcGameAssets.proto", &protobuf_RegisterTypes);
  ::protobuf_UserDef_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_StoredProcGameAssets_2eproto
namespace db {

// ===================================================================

void proc_load_all_users_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_all_users_Parameter::proc_load_all_users_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_all_users.Parameter)
}
proc_load_all_users_Parameter::proc_load_all_users_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_all_users.Parameter)
}
proc_load_all_users_Parameter::proc_load_all_users_Parameter(const proc_load_all_users_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_load_all_users.Parameter)
}

void proc_load_all_users_Parameter::SharedCtor() {
}

proc_load_all_users_Parameter::~proc_load_all_users_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_load_all_users.Parameter)
  SharedDtor();
}

void proc_load_all_users_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_load_all_users_Parameter::ArenaDtor(void* object) {
  proc_load_all_users_Parameter* _this = reinterpret_cast< proc_load_all_users_Parameter* >(object);
  (void)_this;
}
void proc_load_all_users_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_all_users_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_all_users_Parameter::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_all_users_Parameter& proc_load_all_users_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users_Parameter.base);
  return *internal_default_instance();
}


void proc_load_all_users_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_all_users.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_all_users_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_all_users.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_all_users.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_all_users.Parameter)
  return false;
#undef DO_
}

void proc_load_all_users_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_all_users.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_all_users.Parameter)
}

::google::protobuf::uint8* proc_load_all_users_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_all_users.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_all_users.Parameter)
  return target;
}

size_t proc_load_all_users_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_all_users.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_all_users_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_all_users.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_all_users_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_all_users_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_all_users.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_all_users.Parameter)
    MergeFrom(*source);
  }
}

void proc_load_all_users_Parameter::MergeFrom(const proc_load_all_users_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_all_users.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_load_all_users_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_all_users.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_all_users_Parameter::CopyFrom(const proc_load_all_users_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_all_users.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_all_users_Parameter::IsInitialized() const {
  return true;
}

void proc_load_all_users_Parameter::Swap(proc_load_all_users_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_all_users_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_all_users_Parameter::UnsafeArenaSwap(proc_load_all_users_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_all_users_Parameter::InternalSwap(proc_load_all_users_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_all_users_Parameter::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_all_users_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_load_all_users_ReturnRecord_default_instance_._instance.get_mutable()->attr_ = const_cast< ::db::UserAttribute*>(
      ::db::UserAttribute::internal_default_instance());
}
void proc_load_all_users_ReturnRecord::unsafe_arena_set_allocated_attr(
    ::db::UserAttribute* attr) {
  if (GetArenaNoVirtual() == NULL) {
    delete attr_;
  }
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_all_users.ReturnRecord.attr)
}
void proc_load_all_users_ReturnRecord::clear_attr() {
  if (attr_ != NULL) attr_->Clear();
  clear_has_attr();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_all_users_ReturnRecord::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_all_users_ReturnRecord::proc_load_all_users_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_all_users.ReturnRecord)
}
proc_load_all_users_ReturnRecord::proc_load_all_users_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_all_users.ReturnRecord)
}
proc_load_all_users_ReturnRecord::proc_load_all_users_ReturnRecord(const proc_load_all_users_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_attr()) {
    attr_ = new ::db::UserAttribute(*from.attr_);
  } else {
    attr_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_all_users.ReturnRecord)
}

void proc_load_all_users_ReturnRecord::SharedCtor() {
  attr_ = NULL;
}

proc_load_all_users_ReturnRecord::~proc_load_all_users_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_load_all_users.ReturnRecord)
  SharedDtor();
}

void proc_load_all_users_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete attr_;
}

void proc_load_all_users_ReturnRecord::ArenaDtor(void* object) {
  proc_load_all_users_ReturnRecord* _this = reinterpret_cast< proc_load_all_users_ReturnRecord* >(object);
  (void)_this;
}
void proc_load_all_users_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_all_users_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_all_users_ReturnRecord::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_all_users_ReturnRecord& proc_load_all_users_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_load_all_users_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_all_users.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(attr_ != NULL);
    attr_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_all_users_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_all_users.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserAttribute attr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_all_users.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_all_users.ReturnRecord)
  return false;
#undef DO_
}

void proc_load_all_users_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_all_users.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserAttribute attr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_attr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_all_users.ReturnRecord)
}

::google::protobuf::uint8* proc_load_all_users_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_all_users.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserAttribute attr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_attr(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_all_users.ReturnRecord)
  return target;
}

size_t proc_load_all_users_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_all_users.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserAttribute attr = 1;
  if (has_attr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attr_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_all_users_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_all_users.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_all_users_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_all_users_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_all_users.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_all_users.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_load_all_users_ReturnRecord::MergeFrom(const proc_load_all_users_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_all_users.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_attr()) {
    mutable_attr()->::db::UserAttribute::MergeFrom(from.attr());
  }
}

void proc_load_all_users_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_all_users.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_all_users_ReturnRecord::CopyFrom(const proc_load_all_users_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_all_users.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_all_users_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_attr()) {
    if (!this->attr_->IsInitialized()) return false;
  }
  return true;
}

void proc_load_all_users_ReturnRecord::Swap(proc_load_all_users_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_all_users_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_all_users_ReturnRecord::UnsafeArenaSwap(proc_load_all_users_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_all_users_ReturnRecord::InternalSwap(proc_load_all_users_ReturnRecord* other) {
  using std::swap;
  swap(attr_, other->attr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_all_users_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_all_users::InitAsDefaultInstance() {
  ::db::_proc_load_all_users_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_load_all_users_Parameter*>(
      ::db::proc_load_all_users_Parameter::internal_default_instance());
}
void proc_load_all_users::unsafe_arena_set_allocated_param(
    ::db::proc_load_all_users_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_all_users.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_all_users::kParamFieldNumber;
const int proc_load_all_users::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_all_users::proc_load_all_users()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_all_users)
}
proc_load_all_users::proc_load_all_users(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_all_users)
}
proc_load_all_users::proc_load_all_users(const proc_load_all_users& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_load_all_users_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_all_users)
}

void proc_load_all_users::SharedCtor() {
  param_ = NULL;
}

proc_load_all_users::~proc_load_all_users() {
  // @@protoc_insertion_point(destructor:db.proc_load_all_users)
  SharedDtor();
}

void proc_load_all_users::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_load_all_users::ArenaDtor(void* object) {
  proc_load_all_users* _this = reinterpret_cast< proc_load_all_users* >(object);
  (void)_this;
}
void proc_load_all_users::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_all_users::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_all_users::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_all_users& proc_load_all_users::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_load_all_users.base);
  return *internal_default_instance();
}


void proc_load_all_users::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_all_users)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_all_users::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_all_users)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_load_all_users.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_load_all_users.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_all_users)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_all_users)
  return false;
#undef DO_
}

void proc_load_all_users::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_all_users)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_all_users.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_load_all_users.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_all_users)
}

::google::protobuf::uint8* proc_load_all_users::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_all_users)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_all_users.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_load_all_users.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_all_users)
  return target;
}

size_t proc_load_all_users::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_all_users)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_load_all_users.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_load_all_users.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_all_users::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_all_users)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_all_users* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_all_users>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_all_users)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_all_users)
    MergeFrom(*source);
  }
}

void proc_load_all_users::MergeFrom(const proc_load_all_users& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_all_users)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_load_all_users_Parameter::MergeFrom(from.param());
  }
}

void proc_load_all_users::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_all_users)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_all_users::CopyFrom(const proc_load_all_users& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_all_users)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_all_users::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_load_all_users::Swap(proc_load_all_users* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_all_users* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_all_users::UnsafeArenaSwap(proc_load_all_users* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_all_users::InternalSwap(proc_load_all_users* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_all_users::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameState::kIdFieldNumber;
const int GameState::kDailyGiftIdFieldNumber;
const int GameState::kWeeklyGiftIdFieldNumber;
const int GameState::kDailyGiftRefreshTimeFieldNumber;
const int GameState::kWeeklyGiftRefreshTimeFieldNumber;
const int GameState::kDailyPvpRewardSendTimeFieldNumber;
const int GameState::kWeeklyPvpRewardSendTimeFieldNumber;
const int GameState::kMonthlyPvpRewardSendTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameState::GameState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_GameState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameState)
}
GameState::GameState(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_GameState.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameState)
}
GameState::GameState(const GameState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&weekly_gift_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(weekly_gift_id_));
  // @@protoc_insertion_point(copy_constructor:db.GameState)
}

void GameState::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weekly_gift_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(weekly_gift_id_));
}

GameState::~GameState() {
  // @@protoc_insertion_point(destructor:db.GameState)
  SharedDtor();
}

void GameState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameState::ArenaDtor(void* object) {
  GameState* _this = reinterpret_cast< GameState* >(object);
  (void)_this;
}
void GameState::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameState::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameState& GameState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_GameState.base);
  return *internal_default_instance();
}


void GameState::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&weekly_gift_id_) -
        reinterpret_cast<char*>(&id_)) + sizeof(weekly_gift_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 daily_gift_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_daily_gift_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_gift_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 weekly_gift_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_weekly_gift_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weekly_gift_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 daily_gift_refresh_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_daily_gift_refresh_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &daily_gift_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 weekly_gift_refresh_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_weekly_gift_refresh_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &weekly_gift_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 daily_pvp_reward_send_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_daily_pvp_reward_send_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &daily_pvp_reward_send_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 weekly_pvp_reward_send_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_weekly_pvp_reward_send_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &weekly_pvp_reward_send_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 monthly_pvp_reward_send_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_monthly_pvp_reward_send_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &monthly_pvp_reward_send_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameState)
  return false;
#undef DO_
}

void GameState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 daily_gift_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->daily_gift_id(), output);
  }

  // required int32 weekly_gift_id = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->weekly_gift_id(), output);
  }

  // optional sfixed64 daily_gift_refresh_time = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->daily_gift_refresh_time(), output);
  }

  // optional sfixed64 weekly_gift_refresh_time = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(5, this->weekly_gift_refresh_time(), output);
  }

  // optional sfixed64 daily_pvp_reward_send_time = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(6, this->daily_pvp_reward_send_time(), output);
  }

  // optional sfixed64 weekly_pvp_reward_send_time = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(7, this->weekly_pvp_reward_send_time(), output);
  }

  // optional sfixed64 monthly_pvp_reward_send_time = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(8, this->monthly_pvp_reward_send_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameState)
}

::google::protobuf::uint8* GameState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 daily_gift_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->daily_gift_id(), target);
  }

  // required int32 weekly_gift_id = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->weekly_gift_id(), target);
  }

  // optional sfixed64 daily_gift_refresh_time = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->daily_gift_refresh_time(), target);
  }

  // optional sfixed64 weekly_gift_refresh_time = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(5, this->weekly_gift_refresh_time(), target);
  }

  // optional sfixed64 daily_pvp_reward_send_time = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(6, this->daily_pvp_reward_send_time(), target);
  }

  // optional sfixed64 weekly_pvp_reward_send_time = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(7, this->weekly_pvp_reward_send_time(), target);
  }

  // optional sfixed64 monthly_pvp_reward_send_time = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(8, this->monthly_pvp_reward_send_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameState)
  return target;
}

size_t GameState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameState)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_daily_gift_id()) {
    // required int32 daily_gift_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->daily_gift_id());
  }

  if (has_weekly_gift_id()) {
    // required int32 weekly_gift_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weekly_gift_id());
  }

  return total_size;
}
size_t GameState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000083) ^ 0x00000083) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 daily_gift_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->daily_gift_id());

    // required int32 weekly_gift_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weekly_gift_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 124u) {
    // optional sfixed64 daily_gift_refresh_time = 4;
    if (has_daily_gift_refresh_time()) {
      total_size += 1 + 8;
    }

    // optional sfixed64 weekly_gift_refresh_time = 5;
    if (has_weekly_gift_refresh_time()) {
      total_size += 1 + 8;
    }

    // optional sfixed64 daily_pvp_reward_send_time = 6;
    if (has_daily_pvp_reward_send_time()) {
      total_size += 1 + 8;
    }

    // optional sfixed64 weekly_pvp_reward_send_time = 7;
    if (has_weekly_pvp_reward_send_time()) {
      total_size += 1 + 8;
    }

    // optional sfixed64 monthly_pvp_reward_send_time = 8;
    if (has_monthly_pvp_reward_send_time()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameState)
  GOOGLE_DCHECK_NE(&from, this);
  const GameState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameState)
    MergeFrom(*source);
  }
}

void GameState::MergeFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      daily_gift_id_ = from.daily_gift_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      daily_gift_refresh_time_ = from.daily_gift_refresh_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      weekly_gift_refresh_time_ = from.weekly_gift_refresh_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      daily_pvp_reward_send_time_ = from.daily_pvp_reward_send_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      weekly_pvp_reward_send_time_ = from.weekly_pvp_reward_send_time_;
    }
    if (cached_has_bits & 0x00000040u) {
      monthly_pvp_reward_send_time_ = from.monthly_pvp_reward_send_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      weekly_gift_id_ = from.weekly_gift_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameState::CopyFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000083) != 0x00000083) return false;
  return true;
}

void GameState::Swap(GameState* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameState* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameState::UnsafeArenaSwap(GameState* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameState::InternalSwap(GameState* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(daily_gift_id_, other->daily_gift_id_);
  swap(daily_gift_refresh_time_, other->daily_gift_refresh_time_);
  swap(weekly_gift_refresh_time_, other->weekly_gift_refresh_time_);
  swap(daily_pvp_reward_send_time_, other->daily_pvp_reward_send_time_);
  swap(weekly_pvp_reward_send_time_, other->weekly_pvp_reward_send_time_);
  swap(monthly_pvp_reward_send_time_, other->monthly_pvp_reward_send_time_);
  swap(weekly_gift_id_, other->weekly_gift_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameState::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IslandBattleData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IslandBattleData::kIdFieldNumber;
const int IslandBattleData::kTypeFieldNumber;
const int IslandBattleData::kDefenderFieldNumber;
const int IslandBattleData::kDefendTeamFieldNumber;
const int IslandBattleData::kPveMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IslandBattleData::IslandBattleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_IslandBattleData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.IslandBattleData)
}
IslandBattleData::IslandBattleData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_IslandBattleData.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.IslandBattleData)
}
IslandBattleData::IslandBattleData(const IslandBattleData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  defender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_defender()) {
    defender_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.defender(),
      GetArenaNoVirtual());
  }
  defend_team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_defend_team()) {
    defend_team_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.defend_team(),
      GetArenaNoVirtual());
  }
  pve_map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pve_map()) {
    pve_map_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pve_map(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:db.IslandBattleData)
}

void IslandBattleData::SharedCtor() {
  defender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defend_team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pve_map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

IslandBattleData::~IslandBattleData() {
  // @@protoc_insertion_point(destructor:db.IslandBattleData)
  SharedDtor();
}

void IslandBattleData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  defender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defend_team_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pve_map_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IslandBattleData::ArenaDtor(void* object) {
  IslandBattleData* _this = reinterpret_cast< IslandBattleData* >(object);
  (void)_this;
}
void IslandBattleData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void IslandBattleData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IslandBattleData::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IslandBattleData& IslandBattleData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_IslandBattleData.base);
  return *internal_default_instance();
}


void IslandBattleData::Clear() {
// @@protoc_insertion_point(message_clear_start:db.IslandBattleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      defender_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      defend_team_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      pve_map_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&id_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IslandBattleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.IslandBattleData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes defender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_defender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes defend_team = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_defend_team()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pve_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pve_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.IslandBattleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.IslandBattleData)
  return false;
#undef DO_
}

void IslandBattleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.IslandBattleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required bytes defender = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->defender(), output);
  }

  // required bytes defend_team = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->defend_team(), output);
  }

  // required bytes pve_map = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->pve_map(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.IslandBattleData)
}

::google::protobuf::uint8* IslandBattleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.IslandBattleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required bytes defender = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->defender(), target);
  }

  // required bytes defend_team = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->defend_team(), target);
  }

  // required bytes pve_map = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->pve_map(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.IslandBattleData)
  return target;
}

size_t IslandBattleData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.IslandBattleData)
  size_t total_size = 0;

  if (has_defender()) {
    // required bytes defender = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->defender());
  }

  if (has_defend_team()) {
    // required bytes defend_team = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->defend_team());
  }

  if (has_pve_map()) {
    // required bytes pve_map = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pve_map());
  }

  if (has_id()) {
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t IslandBattleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.IslandBattleData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes defender = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->defender());

    // required bytes defend_team = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->defend_team());

    // required bytes pve_map = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pve_map());

    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IslandBattleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.IslandBattleData)
  GOOGLE_DCHECK_NE(&from, this);
  const IslandBattleData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IslandBattleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.IslandBattleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.IslandBattleData)
    MergeFrom(*source);
  }
}

void IslandBattleData::MergeFrom(const IslandBattleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.IslandBattleData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_defender(from.defender());
    }
    if (cached_has_bits & 0x00000002u) {
      set_defend_team(from.defend_team());
    }
    if (cached_has_bits & 0x00000004u) {
      set_pve_map(from.pve_map());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IslandBattleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.IslandBattleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IslandBattleData::CopyFrom(const IslandBattleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.IslandBattleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IslandBattleData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void IslandBattleData::Swap(IslandBattleData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    IslandBattleData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void IslandBattleData::UnsafeArenaSwap(IslandBattleData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void IslandBattleData::InternalSwap(IslandBattleData* other) {
  using std::swap;
  defender_.Swap(&other->defender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  defend_team_.Swap(&other->defend_team_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pve_map_.Swap(&other->pve_map_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IslandBattleData::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameRanking::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameRanking::kRankingFieldNumber;
const int GameRanking::kTicketidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameRanking::GameRanking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_GameRanking.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameRanking)
}
GameRanking::GameRanking(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_GameRanking.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameRanking)
}
GameRanking::GameRanking(const GameRanking& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ranking_, &from.ranking_,
    static_cast<size_t>(reinterpret_cast<char*>(&ticketid_) -
    reinterpret_cast<char*>(&ranking_)) + sizeof(ticketid_));
  // @@protoc_insertion_point(copy_constructor:db.GameRanking)
}

void GameRanking::SharedCtor() {
  ::memset(&ranking_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ticketid_) -
      reinterpret_cast<char*>(&ranking_)) + sizeof(ticketid_));
}

GameRanking::~GameRanking() {
  // @@protoc_insertion_point(destructor:db.GameRanking)
  SharedDtor();
}

void GameRanking::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameRanking::ArenaDtor(void* object) {
  GameRanking* _this = reinterpret_cast< GameRanking* >(object);
  (void)_this;
}
void GameRanking::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameRanking::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameRanking::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameRanking& GameRanking::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_GameRanking.base);
  return *internal_default_instance();
}


void GameRanking::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameRanking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ranking_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ticketid_) -
        reinterpret_cast<char*>(&ranking_)) + sizeof(ticketid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameRanking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameRanking)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ranking = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ranking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ticketid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameRanking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameRanking)
  return false;
#undef DO_
}

void GameRanking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameRanking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ranking = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ranking(), output);
  }

  // required int32 ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ticketid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameRanking)
}

::google::protobuf::uint8* GameRanking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameRanking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ranking = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ranking(), target);
  }

  // required int32 ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ticketid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameRanking)
  return target;
}

size_t GameRanking::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameRanking)
  size_t total_size = 0;

  if (has_ranking()) {
    // required int32 ranking = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ranking());
  }

  if (has_ticketid()) {
    // required int32 ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());
  }

  return total_size;
}
size_t GameRanking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameRanking)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 ranking = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ranking());

    // required int32 ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameRanking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameRanking)
  GOOGLE_DCHECK_NE(&from, this);
  const GameRanking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameRanking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameRanking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameRanking)
    MergeFrom(*source);
  }
}

void GameRanking::MergeFrom(const GameRanking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameRanking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ranking_ = from.ranking_;
    }
    if (cached_has_bits & 0x00000002u) {
      ticketid_ = from.ticketid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameRanking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameRanking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameRanking::CopyFrom(const GameRanking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameRanking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameRanking::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GameRanking::Swap(GameRanking* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameRanking* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameRanking::UnsafeArenaSwap(GameRanking* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameRanking::InternalSwap(GameRanking* other) {
  using std::swap;
  swap(ranking_, other->ranking_);
  swap(ticketid_, other->ticketid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameRanking::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserCommonData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserCommonData::kUseridFieldNumber;
const int UserCommonData::kEventRecordCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserCommonData::UserCommonData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_UserCommonData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserCommonData)
}
UserCommonData::UserCommonData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_UserCommonData.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserCommonData)
}
UserCommonData::UserCommonData(const UserCommonData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  event_record_count_ = from.event_record_count_;
  // @@protoc_insertion_point(copy_constructor:db.UserCommonData)
}

void UserCommonData::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_record_count_ = GOOGLE_ULONGLONG(0);
}

UserCommonData::~UserCommonData() {
  // @@protoc_insertion_point(destructor:db.UserCommonData)
  SharedDtor();
}

void UserCommonData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserCommonData::ArenaDtor(void* object) {
  UserCommonData* _this = reinterpret_cast< UserCommonData* >(object);
  (void)_this;
}
void UserCommonData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserCommonData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserCommonData::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserCommonData& UserCommonData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_UserCommonData.base);
  return *internal_default_instance();
}


void UserCommonData::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserCommonData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmpty();
  }
  event_record_count_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserCommonData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserCommonData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 event_record_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_event_record_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &event_record_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserCommonData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserCommonData)
  return false;
#undef DO_
}

void UserCommonData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserCommonData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required uint64 event_record_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->event_record_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserCommonData)
}

::google::protobuf::uint8* UserCommonData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserCommonData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required uint64 event_record_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->event_record_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserCommonData)
  return target;
}

size_t UserCommonData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserCommonData)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_event_record_count()) {
    // required uint64 event_record_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->event_record_count());
  }

  return total_size;
}
size_t UserCommonData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserCommonData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required uint64 event_record_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->event_record_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserCommonData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserCommonData)
  GOOGLE_DCHECK_NE(&from, this);
  const UserCommonData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserCommonData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserCommonData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserCommonData)
    MergeFrom(*source);
  }
}

void UserCommonData::MergeFrom(const UserCommonData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserCommonData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      event_record_count_ = from.event_record_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserCommonData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserCommonData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserCommonData::CopyFrom(const UserCommonData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserCommonData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserCommonData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UserCommonData::Swap(UserCommonData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserCommonData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserCommonData::UnsafeArenaSwap(UserCommonData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserCommonData::InternalSwap(UserCommonData* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(event_record_count_, other->event_record_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserCommonData::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_common_data_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_common_data_Parameter::proc_i_load_user_common_data_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_common_data.Parameter)
}
proc_i_load_user_common_data_Parameter::proc_i_load_user_common_data_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_common_data.Parameter)
}
proc_i_load_user_common_data_Parameter::proc_i_load_user_common_data_Parameter(const proc_i_load_user_common_data_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_common_data.Parameter)
}

void proc_i_load_user_common_data_Parameter::SharedCtor() {
}

proc_i_load_user_common_data_Parameter::~proc_i_load_user_common_data_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_common_data.Parameter)
  SharedDtor();
}

void proc_i_load_user_common_data_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_i_load_user_common_data_Parameter::ArenaDtor(void* object) {
  proc_i_load_user_common_data_Parameter* _this = reinterpret_cast< proc_i_load_user_common_data_Parameter* >(object);
  (void)_this;
}
void proc_i_load_user_common_data_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_common_data_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_common_data_Parameter::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_common_data_Parameter& proc_i_load_user_common_data_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data_Parameter.base);
  return *internal_default_instance();
}


void proc_i_load_user_common_data_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_common_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_common_data_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_common_data.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_common_data.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_common_data.Parameter)
  return false;
#undef DO_
}

void proc_i_load_user_common_data_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_common_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_common_data.Parameter)
}

::google::protobuf::uint8* proc_i_load_user_common_data_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_common_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_common_data.Parameter)
  return target;
}

size_t proc_i_load_user_common_data_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_common_data.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_common_data_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_common_data.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_common_data_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_common_data_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_common_data.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_common_data.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_load_user_common_data_Parameter::MergeFrom(const proc_i_load_user_common_data_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_common_data.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_i_load_user_common_data_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_common_data.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_common_data_Parameter::CopyFrom(const proc_i_load_user_common_data_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_common_data.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_common_data_Parameter::IsInitialized() const {
  return true;
}

void proc_i_load_user_common_data_Parameter::Swap(proc_i_load_user_common_data_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_common_data_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_common_data_Parameter::UnsafeArenaSwap(proc_i_load_user_common_data_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_common_data_Parameter::InternalSwap(proc_i_load_user_common_data_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_common_data_Parameter::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_common_data_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_common_data_ReturnRecord_default_instance_._instance.get_mutable()->data_ = const_cast< ::db::UserCommonData*>(
      ::db::UserCommonData::internal_default_instance());
}
void proc_i_load_user_common_data_ReturnRecord::unsafe_arena_set_allocated_data(
    ::db::UserCommonData* data) {
  if (GetArenaNoVirtual() == NULL) {
    delete data_;
  }
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_common_data.ReturnRecord.data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_common_data_ReturnRecord::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_common_data_ReturnRecord::proc_i_load_user_common_data_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_common_data.ReturnRecord)
}
proc_i_load_user_common_data_ReturnRecord::proc_i_load_user_common_data_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_common_data.ReturnRecord)
}
proc_i_load_user_common_data_ReturnRecord::proc_i_load_user_common_data_ReturnRecord(const proc_i_load_user_common_data_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::db::UserCommonData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_common_data.ReturnRecord)
}

void proc_i_load_user_common_data_ReturnRecord::SharedCtor() {
  data_ = NULL;
}

proc_i_load_user_common_data_ReturnRecord::~proc_i_load_user_common_data_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_common_data.ReturnRecord)
  SharedDtor();
}

void proc_i_load_user_common_data_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete data_;
}

void proc_i_load_user_common_data_ReturnRecord::ArenaDtor(void* object) {
  proc_i_load_user_common_data_ReturnRecord* _this = reinterpret_cast< proc_i_load_user_common_data_ReturnRecord* >(object);
  (void)_this;
}
void proc_i_load_user_common_data_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_common_data_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_common_data_ReturnRecord::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_common_data_ReturnRecord& proc_i_load_user_common_data_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_i_load_user_common_data_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_common_data.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_common_data_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_common_data.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserCommonData data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_common_data.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_common_data.ReturnRecord)
  return false;
#undef DO_
}

void proc_i_load_user_common_data_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_common_data.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserCommonData data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_common_data.ReturnRecord)
}

::google::protobuf::uint8* proc_i_load_user_common_data_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_common_data.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserCommonData data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_common_data.ReturnRecord)
  return target;
}

size_t proc_i_load_user_common_data_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_common_data.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserCommonData data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_common_data_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_common_data.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_common_data_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_common_data_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_common_data.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_common_data.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_i_load_user_common_data_ReturnRecord::MergeFrom(const proc_i_load_user_common_data_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_common_data.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::db::UserCommonData::MergeFrom(from.data());
  }
}

void proc_i_load_user_common_data_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_common_data.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_common_data_ReturnRecord::CopyFrom(const proc_i_load_user_common_data_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_common_data.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_common_data_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_load_user_common_data_ReturnRecord::Swap(proc_i_load_user_common_data_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_common_data_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_common_data_ReturnRecord::UnsafeArenaSwap(proc_i_load_user_common_data_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_common_data_ReturnRecord::InternalSwap(proc_i_load_user_common_data_ReturnRecord* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_common_data_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_common_data::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_common_data_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_load_user_common_data_Parameter*>(
      ::db::proc_i_load_user_common_data_Parameter::internal_default_instance());
}
void proc_i_load_user_common_data::unsafe_arena_set_allocated_param(
    ::db::proc_i_load_user_common_data_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_common_data.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_common_data::kParamFieldNumber;
const int proc_i_load_user_common_data::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_common_data::proc_i_load_user_common_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_common_data)
}
proc_i_load_user_common_data::proc_i_load_user_common_data(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_common_data)
}
proc_i_load_user_common_data::proc_i_load_user_common_data(const proc_i_load_user_common_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_load_user_common_data_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_common_data)
}

void proc_i_load_user_common_data::SharedCtor() {
  param_ = NULL;
}

proc_i_load_user_common_data::~proc_i_load_user_common_data() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_common_data)
  SharedDtor();
}

void proc_i_load_user_common_data::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_load_user_common_data::ArenaDtor(void* object) {
  proc_i_load_user_common_data* _this = reinterpret_cast< proc_i_load_user_common_data* >(object);
  (void)_this;
}
void proc_i_load_user_common_data::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_common_data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_common_data::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_common_data& proc_i_load_user_common_data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_common_data.base);
  return *internal_default_instance();
}


void proc_i_load_user_common_data::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_common_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_common_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_common_data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_load_user_common_data.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_i_load_user_common_data.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_common_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_common_data)
  return false;
#undef DO_
}

void proc_i_load_user_common_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_common_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_common_data.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_i_load_user_common_data.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_common_data)
}

::google::protobuf::uint8* proc_i_load_user_common_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_common_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_common_data.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_i_load_user_common_data.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_common_data)
  return target;
}

size_t proc_i_load_user_common_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_common_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_i_load_user_common_data.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_i_load_user_common_data.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_common_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_common_data)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_common_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_common_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_common_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_common_data)
    MergeFrom(*source);
  }
}

void proc_i_load_user_common_data::MergeFrom(const proc_i_load_user_common_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_common_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_i_load_user_common_data_Parameter::MergeFrom(from.param());
  }
}

void proc_i_load_user_common_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_common_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_common_data::CopyFrom(const proc_i_load_user_common_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_common_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_common_data::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_i_load_user_common_data::Swap(proc_i_load_user_common_data* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_common_data* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_common_data::UnsafeArenaSwap(proc_i_load_user_common_data* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_common_data::InternalSwap(proc_i_load_user_common_data* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_common_data::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_common_data_Parameter::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_common_data_Parameter_default_instance_._instance.get_mutable()->p_data_ = const_cast< ::db::UserCommonData*>(
      ::db::UserCommonData::internal_default_instance());
}
void proc_i_save_user_common_data_Parameter::unsafe_arena_set_allocated_p_data(
    ::db::UserCommonData* p_data) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_data_;
  }
  p_data_ = p_data;
  if (p_data) {
    set_has_p_data();
  } else {
    clear_has_p_data();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_common_data.Parameter.p_data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_common_data_Parameter::kPDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_common_data_Parameter::proc_i_save_user_common_data_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_common_data_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_common_data.Parameter)
}
proc_i_save_user_common_data_Parameter::proc_i_save_user_common_data_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_common_data_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_common_data.Parameter)
}
proc_i_save_user_common_data_Parameter::proc_i_save_user_common_data_Parameter(const proc_i_save_user_common_data_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_data()) {
    p_data_ = new ::db::UserCommonData(*from.p_data_);
  } else {
    p_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_common_data.Parameter)
}

void proc_i_save_user_common_data_Parameter::SharedCtor() {
  p_data_ = NULL;
}

proc_i_save_user_common_data_Parameter::~proc_i_save_user_common_data_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_common_data.Parameter)
  SharedDtor();
}

void proc_i_save_user_common_data_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_data_;
}

void proc_i_save_user_common_data_Parameter::ArenaDtor(void* object) {
  proc_i_save_user_common_data_Parameter* _this = reinterpret_cast< proc_i_save_user_common_data_Parameter* >(object);
  (void)_this;
}
void proc_i_save_user_common_data_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_common_data_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_common_data_Parameter::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_common_data_Parameter& proc_i_save_user_common_data_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_common_data_Parameter.base);
  return *internal_default_instance();
}


void proc_i_save_user_common_data_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_common_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_data_ != NULL);
    p_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_common_data_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_common_data.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserCommonData p_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_common_data.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_common_data.Parameter)
  return false;
#undef DO_
}

void proc_i_save_user_common_data_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_common_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserCommonData p_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_common_data.Parameter)
}

::google::protobuf::uint8* proc_i_save_user_common_data_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_common_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserCommonData p_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_data(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_common_data.Parameter)
  return target;
}

size_t proc_i_save_user_common_data_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_common_data.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserCommonData p_data = 1;
  if (has_p_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_data_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_common_data_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_common_data.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_common_data_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_common_data_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_common_data.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_common_data.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_save_user_common_data_Parameter::MergeFrom(const proc_i_save_user_common_data_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_common_data.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_data()) {
    mutable_p_data()->::db::UserCommonData::MergeFrom(from.p_data());
  }
}

void proc_i_save_user_common_data_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_common_data.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_common_data_Parameter::CopyFrom(const proc_i_save_user_common_data_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_common_data.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_common_data_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_data()) {
    if (!this->p_data_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_common_data_Parameter::Swap(proc_i_save_user_common_data_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_common_data_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_common_data_Parameter::UnsafeArenaSwap(proc_i_save_user_common_data_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_common_data_Parameter::InternalSwap(proc_i_save_user_common_data_Parameter* other) {
  using std::swap;
  swap(p_data_, other->p_data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_common_data_Parameter::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_common_data::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_common_data_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_save_user_common_data_Parameter*>(
      ::db::proc_i_save_user_common_data_Parameter::internal_default_instance());
}
void proc_i_save_user_common_data::unsafe_arena_set_allocated_param(
    ::db::proc_i_save_user_common_data_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_common_data.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_common_data::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_common_data::proc_i_save_user_common_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_common_data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_common_data)
}
proc_i_save_user_common_data::proc_i_save_user_common_data(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_common_data.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_common_data)
}
proc_i_save_user_common_data::proc_i_save_user_common_data(const proc_i_save_user_common_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_save_user_common_data_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_common_data)
}

void proc_i_save_user_common_data::SharedCtor() {
  param_ = NULL;
}

proc_i_save_user_common_data::~proc_i_save_user_common_data() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_common_data)
  SharedDtor();
}

void proc_i_save_user_common_data::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_save_user_common_data::ArenaDtor(void* object) {
  proc_i_save_user_common_data* _this = reinterpret_cast< proc_i_save_user_common_data* >(object);
  (void)_this;
}
void proc_i_save_user_common_data::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_common_data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_common_data::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_common_data& proc_i_save_user_common_data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_common_data.base);
  return *internal_default_instance();
}


void proc_i_save_user_common_data::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_common_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_common_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_common_data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_save_user_common_data.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_common_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_common_data)
  return false;
#undef DO_
}

void proc_i_save_user_common_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_common_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_common_data.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_common_data)
}

::google::protobuf::uint8* proc_i_save_user_common_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_common_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_common_data.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_common_data)
  return target;
}

size_t proc_i_save_user_common_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_common_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_i_save_user_common_data.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_common_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_common_data)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_common_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_common_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_common_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_common_data)
    MergeFrom(*source);
  }
}

void proc_i_save_user_common_data::MergeFrom(const proc_i_save_user_common_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_common_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_i_save_user_common_data_Parameter::MergeFrom(from.param());
  }
}

void proc_i_save_user_common_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_common_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_common_data::CopyFrom(const proc_i_save_user_common_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_common_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_common_data::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_common_data::Swap(proc_i_save_user_common_data* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_common_data* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_common_data::UnsafeArenaSwap(proc_i_save_user_common_data* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_common_data::InternalSwap(proc_i_save_user_common_data* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_common_data::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRankingData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRankingData::kTicketidFieldNumber;
const int UserRankingData::kRankingScoreFieldNumber;
const int UserRankingData::kWinFieldNumber;
const int UserRankingData::kLoseFieldNumber;
const int UserRankingData::kTimestampFieldNumber;
const int UserRankingData::kTeamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRankingData::UserRankingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_UserRankingData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserRankingData)
}
UserRankingData::UserRankingData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_UserRankingData.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserRankingData)
}
UserRankingData::UserRankingData(const UserRankingData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_team()) {
    team_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team(),
      GetArenaNoVirtual());
  }
  ::memcpy(&ticketid_, &from.ticketid_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&ticketid_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:db.UserRankingData)
}

void UserRankingData::SharedCtor() {
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ticketid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&ticketid_)) + sizeof(timestamp_));
}

UserRankingData::~UserRankingData() {
  // @@protoc_insertion_point(destructor:db.UserRankingData)
  SharedDtor();
}

void UserRankingData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  team_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRankingData::ArenaDtor(void* object) {
  UserRankingData* _this = reinterpret_cast< UserRankingData* >(object);
  (void)_this;
}
void UserRankingData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserRankingData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRankingData::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRankingData& UserRankingData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_UserRankingData.base);
  return *internal_default_instance();
}


void UserRankingData::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserRankingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    team_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 62u) {
    ::memset(&ticketid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&ticketid_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRankingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserRankingData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ticketid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ranking_score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ranking_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ranking_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 win = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_win();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lose = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lose();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes team = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_team()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserRankingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserRankingData)
  return false;
#undef DO_
}

void UserRankingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserRankingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ticketid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ticketid(), output);
  }

  // required int32 ranking_score = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ranking_score(), output);
  }

  // required int32 win = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->win(), output);
  }

  // required int32 lose = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lose(), output);
  }

  // required sfixed64 timestamp = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(5, this->timestamp(), output);
  }

  // required bytes team = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->team(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserRankingData)
}

::google::protobuf::uint8* UserRankingData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserRankingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ticketid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ticketid(), target);
  }

  // required int32 ranking_score = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ranking_score(), target);
  }

  // required int32 win = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->win(), target);
  }

  // required int32 lose = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lose(), target);
  }

  // required sfixed64 timestamp = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(5, this->timestamp(), target);
  }

  // required bytes team = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->team(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserRankingData)
  return target;
}

size_t UserRankingData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserRankingData)
  size_t total_size = 0;

  if (has_team()) {
    // required bytes team = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->team());
  }

  if (has_ticketid()) {
    // required int32 ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());
  }

  if (has_ranking_score()) {
    // required int32 ranking_score = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ranking_score());
  }

  if (has_win()) {
    // required int32 win = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->win());
  }

  if (has_lose()) {
    // required int32 lose = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lose());
  }

  if (has_timestamp()) {
    // required sfixed64 timestamp = 5;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t UserRankingData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserRankingData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required bytes team = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->team());

    // required int32 ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());

    // required int32 ranking_score = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ranking_score());

    // required int32 win = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->win());

    // required int32 lose = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lose());

    // required sfixed64 timestamp = 5;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRankingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserRankingData)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRankingData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRankingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserRankingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserRankingData)
    MergeFrom(*source);
  }
}

void UserRankingData::MergeFrom(const UserRankingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserRankingData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_team(from.team());
    }
    if (cached_has_bits & 0x00000002u) {
      ticketid_ = from.ticketid_;
    }
    if (cached_has_bits & 0x00000004u) {
      ranking_score_ = from.ranking_score_;
    }
    if (cached_has_bits & 0x00000008u) {
      win_ = from.win_;
    }
    if (cached_has_bits & 0x00000010u) {
      lose_ = from.lose_;
    }
    if (cached_has_bits & 0x00000020u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserRankingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserRankingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRankingData::CopyFrom(const UserRankingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserRankingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRankingData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void UserRankingData::Swap(UserRankingData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserRankingData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserRankingData::UnsafeArenaSwap(UserRankingData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserRankingData::InternalSwap(UserRankingData* other) {
  using std::swap;
  team_.Swap(&other->team_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ticketid_, other->ticketid_);
  swap(ranking_score_, other->ranking_score_);
  swap(win_, other->win_);
  swap(lose_, other->lose_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRankingData::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_ranking_data_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_ranking_data_Parameter::proc_i_load_user_ranking_data_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_ranking_data.Parameter)
}
proc_i_load_user_ranking_data_Parameter::proc_i_load_user_ranking_data_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_ranking_data.Parameter)
}
proc_i_load_user_ranking_data_Parameter::proc_i_load_user_ranking_data_Parameter(const proc_i_load_user_ranking_data_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_ranking_data.Parameter)
}

void proc_i_load_user_ranking_data_Parameter::SharedCtor() {
}

proc_i_load_user_ranking_data_Parameter::~proc_i_load_user_ranking_data_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_ranking_data.Parameter)
  SharedDtor();
}

void proc_i_load_user_ranking_data_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_i_load_user_ranking_data_Parameter::ArenaDtor(void* object) {
  proc_i_load_user_ranking_data_Parameter* _this = reinterpret_cast< proc_i_load_user_ranking_data_Parameter* >(object);
  (void)_this;
}
void proc_i_load_user_ranking_data_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_ranking_data_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_ranking_data_Parameter::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_ranking_data_Parameter& proc_i_load_user_ranking_data_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data_Parameter.base);
  return *internal_default_instance();
}


void proc_i_load_user_ranking_data_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_ranking_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_ranking_data_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_ranking_data.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_ranking_data.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_ranking_data.Parameter)
  return false;
#undef DO_
}

void proc_i_load_user_ranking_data_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_ranking_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_ranking_data.Parameter)
}

::google::protobuf::uint8* proc_i_load_user_ranking_data_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_ranking_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_ranking_data.Parameter)
  return target;
}

size_t proc_i_load_user_ranking_data_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_ranking_data.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_ranking_data_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_ranking_data.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_ranking_data_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_ranking_data_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_ranking_data.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_ranking_data.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_load_user_ranking_data_Parameter::MergeFrom(const proc_i_load_user_ranking_data_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_ranking_data.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_i_load_user_ranking_data_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_ranking_data.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_ranking_data_Parameter::CopyFrom(const proc_i_load_user_ranking_data_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_ranking_data.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_ranking_data_Parameter::IsInitialized() const {
  return true;
}

void proc_i_load_user_ranking_data_Parameter::Swap(proc_i_load_user_ranking_data_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_ranking_data_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_ranking_data_Parameter::UnsafeArenaSwap(proc_i_load_user_ranking_data_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_ranking_data_Parameter::InternalSwap(proc_i_load_user_ranking_data_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_ranking_data_Parameter::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_ranking_data_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_ranking_data_ReturnRecord_default_instance_._instance.get_mutable()->data_ = const_cast< ::db::UserRankingData*>(
      ::db::UserRankingData::internal_default_instance());
}
void proc_i_load_user_ranking_data_ReturnRecord::unsafe_arena_set_allocated_data(
    ::db::UserRankingData* data) {
  if (GetArenaNoVirtual() == NULL) {
    delete data_;
  }
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_ranking_data.ReturnRecord.data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_ranking_data_ReturnRecord::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_ranking_data_ReturnRecord::proc_i_load_user_ranking_data_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_ranking_data.ReturnRecord)
}
proc_i_load_user_ranking_data_ReturnRecord::proc_i_load_user_ranking_data_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_ranking_data.ReturnRecord)
}
proc_i_load_user_ranking_data_ReturnRecord::proc_i_load_user_ranking_data_ReturnRecord(const proc_i_load_user_ranking_data_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::db::UserRankingData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_ranking_data.ReturnRecord)
}

void proc_i_load_user_ranking_data_ReturnRecord::SharedCtor() {
  data_ = NULL;
}

proc_i_load_user_ranking_data_ReturnRecord::~proc_i_load_user_ranking_data_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_ranking_data.ReturnRecord)
  SharedDtor();
}

void proc_i_load_user_ranking_data_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete data_;
}

void proc_i_load_user_ranking_data_ReturnRecord::ArenaDtor(void* object) {
  proc_i_load_user_ranking_data_ReturnRecord* _this = reinterpret_cast< proc_i_load_user_ranking_data_ReturnRecord* >(object);
  (void)_this;
}
void proc_i_load_user_ranking_data_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_ranking_data_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_ranking_data_ReturnRecord::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_ranking_data_ReturnRecord& proc_i_load_user_ranking_data_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_i_load_user_ranking_data_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_ranking_data_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserRankingData data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_ranking_data.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_ranking_data.ReturnRecord)
  return false;
#undef DO_
}

void proc_i_load_user_ranking_data_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserRankingData data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_ranking_data.ReturnRecord)
}

::google::protobuf::uint8* proc_i_load_user_ranking_data_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserRankingData data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_ranking_data.ReturnRecord)
  return target;
}

size_t proc_i_load_user_ranking_data_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserRankingData data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_ranking_data_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_ranking_data_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_ranking_data_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_ranking_data.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_ranking_data.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_i_load_user_ranking_data_ReturnRecord::MergeFrom(const proc_i_load_user_ranking_data_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::db::UserRankingData::MergeFrom(from.data());
  }
}

void proc_i_load_user_ranking_data_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_ranking_data_ReturnRecord::CopyFrom(const proc_i_load_user_ranking_data_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_ranking_data.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_ranking_data_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_load_user_ranking_data_ReturnRecord::Swap(proc_i_load_user_ranking_data_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_ranking_data_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_ranking_data_ReturnRecord::UnsafeArenaSwap(proc_i_load_user_ranking_data_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_ranking_data_ReturnRecord::InternalSwap(proc_i_load_user_ranking_data_ReturnRecord* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_ranking_data_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_ranking_data::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_ranking_data_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_load_user_ranking_data_Parameter*>(
      ::db::proc_i_load_user_ranking_data_Parameter::internal_default_instance());
}
void proc_i_load_user_ranking_data::unsafe_arena_set_allocated_param(
    ::db::proc_i_load_user_ranking_data_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_ranking_data.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_ranking_data::kParamFieldNumber;
const int proc_i_load_user_ranking_data::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_ranking_data::proc_i_load_user_ranking_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_ranking_data)
}
proc_i_load_user_ranking_data::proc_i_load_user_ranking_data(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_ranking_data)
}
proc_i_load_user_ranking_data::proc_i_load_user_ranking_data(const proc_i_load_user_ranking_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_load_user_ranking_data_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_ranking_data)
}

void proc_i_load_user_ranking_data::SharedCtor() {
  param_ = NULL;
}

proc_i_load_user_ranking_data::~proc_i_load_user_ranking_data() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_ranking_data)
  SharedDtor();
}

void proc_i_load_user_ranking_data::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_load_user_ranking_data::ArenaDtor(void* object) {
  proc_i_load_user_ranking_data* _this = reinterpret_cast< proc_i_load_user_ranking_data* >(object);
  (void)_this;
}
void proc_i_load_user_ranking_data::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_ranking_data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_ranking_data::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_ranking_data& proc_i_load_user_ranking_data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_load_user_ranking_data.base);
  return *internal_default_instance();
}


void proc_i_load_user_ranking_data::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_ranking_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_ranking_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_ranking_data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_load_user_ranking_data.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_i_load_user_ranking_data.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_ranking_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_ranking_data)
  return false;
#undef DO_
}

void proc_i_load_user_ranking_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_ranking_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_ranking_data.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_i_load_user_ranking_data.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_ranking_data)
}

::google::protobuf::uint8* proc_i_load_user_ranking_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_ranking_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_ranking_data.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_i_load_user_ranking_data.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_ranking_data)
  return target;
}

size_t proc_i_load_user_ranking_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_ranking_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_i_load_user_ranking_data.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_i_load_user_ranking_data.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_ranking_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_ranking_data)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_ranking_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_ranking_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_ranking_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_ranking_data)
    MergeFrom(*source);
  }
}

void proc_i_load_user_ranking_data::MergeFrom(const proc_i_load_user_ranking_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_ranking_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_i_load_user_ranking_data_Parameter::MergeFrom(from.param());
  }
}

void proc_i_load_user_ranking_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_ranking_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_ranking_data::CopyFrom(const proc_i_load_user_ranking_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_ranking_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_ranking_data::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_i_load_user_ranking_data::Swap(proc_i_load_user_ranking_data* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_ranking_data* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_ranking_data::UnsafeArenaSwap(proc_i_load_user_ranking_data* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_ranking_data::InternalSwap(proc_i_load_user_ranking_data* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_ranking_data::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_ranking_data_Parameter::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_ranking_data_Parameter_default_instance_._instance.get_mutable()->p_data_ = const_cast< ::db::UserRankingData*>(
      ::db::UserRankingData::internal_default_instance());
}
void proc_i_save_user_ranking_data_Parameter::unsafe_arena_set_allocated_p_data(
    ::db::UserRankingData* p_data) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_data_;
  }
  p_data_ = p_data;
  if (p_data) {
    set_has_p_data();
  } else {
    clear_has_p_data();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_ranking_data.Parameter.p_data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_ranking_data_Parameter::kPDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_ranking_data_Parameter::proc_i_save_user_ranking_data_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_ranking_data_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_ranking_data.Parameter)
}
proc_i_save_user_ranking_data_Parameter::proc_i_save_user_ranking_data_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_ranking_data_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_ranking_data.Parameter)
}
proc_i_save_user_ranking_data_Parameter::proc_i_save_user_ranking_data_Parameter(const proc_i_save_user_ranking_data_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_data()) {
    p_data_ = new ::db::UserRankingData(*from.p_data_);
  } else {
    p_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_ranking_data.Parameter)
}

void proc_i_save_user_ranking_data_Parameter::SharedCtor() {
  p_data_ = NULL;
}

proc_i_save_user_ranking_data_Parameter::~proc_i_save_user_ranking_data_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_ranking_data.Parameter)
  SharedDtor();
}

void proc_i_save_user_ranking_data_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_data_;
}

void proc_i_save_user_ranking_data_Parameter::ArenaDtor(void* object) {
  proc_i_save_user_ranking_data_Parameter* _this = reinterpret_cast< proc_i_save_user_ranking_data_Parameter* >(object);
  (void)_this;
}
void proc_i_save_user_ranking_data_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_ranking_data_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_ranking_data_Parameter::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_ranking_data_Parameter& proc_i_save_user_ranking_data_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_ranking_data_Parameter.base);
  return *internal_default_instance();
}


void proc_i_save_user_ranking_data_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_ranking_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_data_ != NULL);
    p_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_ranking_data_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_ranking_data.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserRankingData p_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_ranking_data.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_ranking_data.Parameter)
  return false;
#undef DO_
}

void proc_i_save_user_ranking_data_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_ranking_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserRankingData p_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_ranking_data.Parameter)
}

::google::protobuf::uint8* proc_i_save_user_ranking_data_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_ranking_data.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserRankingData p_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_data(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_ranking_data.Parameter)
  return target;
}

size_t proc_i_save_user_ranking_data_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_ranking_data.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserRankingData p_data = 1;
  if (has_p_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_data_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_ranking_data_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_ranking_data.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_ranking_data_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_ranking_data_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_ranking_data.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_ranking_data.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_save_user_ranking_data_Parameter::MergeFrom(const proc_i_save_user_ranking_data_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_ranking_data.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_data()) {
    mutable_p_data()->::db::UserRankingData::MergeFrom(from.p_data());
  }
}

void proc_i_save_user_ranking_data_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_ranking_data.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_ranking_data_Parameter::CopyFrom(const proc_i_save_user_ranking_data_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_ranking_data.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_ranking_data_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_data()) {
    if (!this->p_data_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_ranking_data_Parameter::Swap(proc_i_save_user_ranking_data_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_ranking_data_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_ranking_data_Parameter::UnsafeArenaSwap(proc_i_save_user_ranking_data_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_ranking_data_Parameter::InternalSwap(proc_i_save_user_ranking_data_Parameter* other) {
  using std::swap;
  swap(p_data_, other->p_data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_ranking_data_Parameter::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_ranking_data::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_ranking_data_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_save_user_ranking_data_Parameter*>(
      ::db::proc_i_save_user_ranking_data_Parameter::internal_default_instance());
}
void proc_i_save_user_ranking_data::unsafe_arena_set_allocated_param(
    ::db::proc_i_save_user_ranking_data_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_ranking_data.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_ranking_data::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_ranking_data::proc_i_save_user_ranking_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_ranking_data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_ranking_data)
}
proc_i_save_user_ranking_data::proc_i_save_user_ranking_data(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_ranking_data.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_ranking_data)
}
proc_i_save_user_ranking_data::proc_i_save_user_ranking_data(const proc_i_save_user_ranking_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_save_user_ranking_data_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_ranking_data)
}

void proc_i_save_user_ranking_data::SharedCtor() {
  param_ = NULL;
}

proc_i_save_user_ranking_data::~proc_i_save_user_ranking_data() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_ranking_data)
  SharedDtor();
}

void proc_i_save_user_ranking_data::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_save_user_ranking_data::ArenaDtor(void* object) {
  proc_i_save_user_ranking_data* _this = reinterpret_cast< proc_i_save_user_ranking_data* >(object);
  (void)_this;
}
void proc_i_save_user_ranking_data::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_ranking_data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_ranking_data::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_ranking_data& proc_i_save_user_ranking_data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_proc_i_save_user_ranking_data.base);
  return *internal_default_instance();
}


void proc_i_save_user_ranking_data::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_ranking_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_ranking_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_ranking_data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_save_user_ranking_data.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_ranking_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_ranking_data)
  return false;
#undef DO_
}

void proc_i_save_user_ranking_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_ranking_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_ranking_data.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_ranking_data)
}

::google::protobuf::uint8* proc_i_save_user_ranking_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_ranking_data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_ranking_data.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_ranking_data)
  return target;
}

size_t proc_i_save_user_ranking_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_ranking_data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_i_save_user_ranking_data.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_ranking_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_ranking_data)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_ranking_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_ranking_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_ranking_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_ranking_data)
    MergeFrom(*source);
  }
}

void proc_i_save_user_ranking_data::MergeFrom(const proc_i_save_user_ranking_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_ranking_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_i_save_user_ranking_data_Parameter::MergeFrom(from.param());
  }
}

void proc_i_save_user_ranking_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_ranking_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_ranking_data::CopyFrom(const proc_i_save_user_ranking_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_ranking_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_ranking_data::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_ranking_data::Swap(proc_i_save_user_ranking_data* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_ranking_data* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_ranking_data::UnsafeArenaSwap(proc_i_save_user_ranking_data* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_ranking_data::InternalSwap(proc_i_save_user_ranking_data* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_ranking_data::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGameServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGameServer::kFirstGoldLotteryIdOnceFieldNumber;
const int ConfigGameServer::kFirstDiamondLotteryIdTenFieldNumber;
const int ConfigGameServer::kMaxDailySystemTaskNumFieldNumber;
const int ConfigGameServer::kMaxOccupyMonsterShipTimesFieldNumber;
const int ConfigGameServer::kMaxOccupyPlayerShipTimesFieldNumber;
const int ConfigGameServer::kMaxOccupySpecialShipTimesFieldNumber;
const int ConfigGameServer::kMaxGhostShipResetTimesFieldNumber;
const int ConfigGameServer::kGhostShipResetCostFieldNumber;
const int ConfigGameServer::kMaxFastReachTicketNumFieldNumber;
const int ConfigGameServer::kFastReachTicketCdFieldNumber;
const int ConfigGameServer::kJjcDailyMailTitleFieldNumber;
const int ConfigGameServer::kJjcDailyMailContentFieldNumber;
const int ConfigGameServer::kJjcWeeklyMailTitleFieldNumber;
const int ConfigGameServer::kJjcWeeklyMailContentFieldNumber;
const int ConfigGameServer::kJjcMonthlyMailTitleFieldNumber;
const int ConfigGameServer::kJjcMonthlyMailContentFieldNumber;
const int ConfigGameServer::kRepeatTaskRefreshTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGameServer::ConfigGameServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_ConfigGameServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGameServer)
}
ConfigGameServer::ConfigGameServer(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_ConfigGameServer.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGameServer)
}
ConfigGameServer::ConfigGameServer(const ConfigGameServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ghost_ship_reset_cost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ghost_ship_reset_cost()) {
    ghost_ship_reset_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ghost_ship_reset_cost(),
      GetArenaNoVirtual());
  }
  jjc_daily_mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jjc_daily_mail_title()) {
    jjc_daily_mail_title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jjc_daily_mail_title(),
      GetArenaNoVirtual());
  }
  jjc_daily_mail_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jjc_daily_mail_content()) {
    jjc_daily_mail_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jjc_daily_mail_content(),
      GetArenaNoVirtual());
  }
  jjc_weekly_mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jjc_weekly_mail_title()) {
    jjc_weekly_mail_title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jjc_weekly_mail_title(),
      GetArenaNoVirtual());
  }
  jjc_weekly_mail_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jjc_weekly_mail_content()) {
    jjc_weekly_mail_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jjc_weekly_mail_content(),
      GetArenaNoVirtual());
  }
  jjc_monthly_mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jjc_monthly_mail_title()) {
    jjc_monthly_mail_title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jjc_monthly_mail_title(),
      GetArenaNoVirtual());
  }
  jjc_monthly_mail_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jjc_monthly_mail_content()) {
    jjc_monthly_mail_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jjc_monthly_mail_content(),
      GetArenaNoVirtual());
  }
  ::memcpy(&first_gold_lottery_id_once_, &from.first_gold_lottery_id_once_,
    static_cast<size_t>(reinterpret_cast<char*>(&repeat_task_refresh_times_) -
    reinterpret_cast<char*>(&first_gold_lottery_id_once_)) + sizeof(repeat_task_refresh_times_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGameServer)
}

void ConfigGameServer::SharedCtor() {
  ghost_ship_reset_cost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_daily_mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_daily_mail_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_weekly_mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_weekly_mail_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_monthly_mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_monthly_mail_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&first_gold_lottery_id_once_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repeat_task_refresh_times_) -
      reinterpret_cast<char*>(&first_gold_lottery_id_once_)) + sizeof(repeat_task_refresh_times_));
}

ConfigGameServer::~ConfigGameServer() {
  // @@protoc_insertion_point(destructor:db.ConfigGameServer)
  SharedDtor();
}

void ConfigGameServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  ghost_ship_reset_cost_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_daily_mail_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_daily_mail_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_weekly_mail_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_weekly_mail_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_monthly_mail_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jjc_monthly_mail_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGameServer::ArenaDtor(void* object) {
  ConfigGameServer* _this = reinterpret_cast< ConfigGameServer* >(object);
  (void)_this;
}
void ConfigGameServer::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGameServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGameServer::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGameServer& ConfigGameServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_ConfigGameServer.base);
  return *internal_default_instance();
}


void ConfigGameServer::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGameServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      ghost_ship_reset_cost_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      jjc_daily_mail_title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      jjc_daily_mail_content_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      jjc_weekly_mail_title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      jjc_weekly_mail_content_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      jjc_monthly_mail_title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      jjc_monthly_mail_content_.ClearNonDefaultToEmpty();
    }
  }
  first_gold_lottery_id_once_ = 0;
  if (cached_has_bits & 65280u) {
    ::memset(&first_diamond_lottery_id_ten_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fast_reach_ticket_cd_) -
        reinterpret_cast<char*>(&first_diamond_lottery_id_ten_)) + sizeof(fast_reach_ticket_cd_));
  }
  repeat_task_refresh_times_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGameServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGameServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 first_gold_lottery_id_once = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_first_gold_lottery_id_once();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_gold_lottery_id_once_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 first_diamond_lottery_id_ten = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_first_diamond_lottery_id_ten();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_diamond_lottery_id_ten_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 max_daily_system_task_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_max_daily_system_task_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_daily_system_task_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 max_occupy_monster_ship_times = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_max_occupy_monster_ship_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_occupy_monster_ship_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 max_occupy_player_ship_times = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_max_occupy_player_ship_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_occupy_player_ship_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 max_occupy_special_ship_times = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_max_occupy_special_ship_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_occupy_special_ship_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 max_ghost_ship_reset_times = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_max_ghost_ship_reset_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_ghost_ship_reset_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ghost_ship_reset_cost = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ghost_ship_reset_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 max_fast_reach_ticket_num = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_max_fast_reach_ticket_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_fast_reach_ticket_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 fast_reach_ticket_cd = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_fast_reach_ticket_cd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fast_reach_ticket_cd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes jjc_daily_mail_title = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jjc_daily_mail_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes jjc_daily_mail_content = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jjc_daily_mail_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes jjc_weekly_mail_title = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jjc_weekly_mail_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes jjc_weekly_mail_content = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jjc_weekly_mail_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes jjc_monthly_mail_title = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jjc_monthly_mail_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes jjc_monthly_mail_content = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jjc_monthly_mail_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 repeat_task_refresh_times = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_repeat_task_refresh_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &repeat_task_refresh_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGameServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGameServer)
  return false;
#undef DO_
}

void ConfigGameServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGameServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 first_gold_lottery_id_once = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_gold_lottery_id_once(), output);
  }

  // required int32 first_diamond_lottery_id_ten = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_diamond_lottery_id_ten(), output);
  }

  // required int32 max_daily_system_task_num = 3;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_daily_system_task_num(), output);
  }

  // required int32 max_occupy_monster_ship_times = 4;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_occupy_monster_ship_times(), output);
  }

  // required int32 max_occupy_player_ship_times = 5;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->max_occupy_player_ship_times(), output);
  }

  // required int32 max_occupy_special_ship_times = 6;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->max_occupy_special_ship_times(), output);
  }

  // required int32 max_ghost_ship_reset_times = 7;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->max_ghost_ship_reset_times(), output);
  }

  // required bytes ghost_ship_reset_cost = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->ghost_ship_reset_cost(), output);
  }

  // required int32 max_fast_reach_ticket_num = 9;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->max_fast_reach_ticket_num(), output);
  }

  // required int32 fast_reach_ticket_cd = 10;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->fast_reach_ticket_cd(), output);
  }

  // required bytes jjc_daily_mail_title = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->jjc_daily_mail_title(), output);
  }

  // required bytes jjc_daily_mail_content = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->jjc_daily_mail_content(), output);
  }

  // required bytes jjc_weekly_mail_title = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->jjc_weekly_mail_title(), output);
  }

  // required bytes jjc_weekly_mail_content = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->jjc_weekly_mail_content(), output);
  }

  // required bytes jjc_monthly_mail_title = 15;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->jjc_monthly_mail_title(), output);
  }

  // required bytes jjc_monthly_mail_content = 16;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->jjc_monthly_mail_content(), output);
  }

  // required int32 repeat_task_refresh_times = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->repeat_task_refresh_times(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGameServer)
}

::google::protobuf::uint8* ConfigGameServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGameServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 first_gold_lottery_id_once = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_gold_lottery_id_once(), target);
  }

  // required int32 first_diamond_lottery_id_ten = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_diamond_lottery_id_ten(), target);
  }

  // required int32 max_daily_system_task_num = 3;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_daily_system_task_num(), target);
  }

  // required int32 max_occupy_monster_ship_times = 4;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_occupy_monster_ship_times(), target);
  }

  // required int32 max_occupy_player_ship_times = 5;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->max_occupy_player_ship_times(), target);
  }

  // required int32 max_occupy_special_ship_times = 6;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->max_occupy_special_ship_times(), target);
  }

  // required int32 max_ghost_ship_reset_times = 7;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->max_ghost_ship_reset_times(), target);
  }

  // required bytes ghost_ship_reset_cost = 8;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->ghost_ship_reset_cost(), target);
  }

  // required int32 max_fast_reach_ticket_num = 9;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->max_fast_reach_ticket_num(), target);
  }

  // required int32 fast_reach_ticket_cd = 10;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->fast_reach_ticket_cd(), target);
  }

  // required bytes jjc_daily_mail_title = 11;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->jjc_daily_mail_title(), target);
  }

  // required bytes jjc_daily_mail_content = 12;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->jjc_daily_mail_content(), target);
  }

  // required bytes jjc_weekly_mail_title = 13;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->jjc_weekly_mail_title(), target);
  }

  // required bytes jjc_weekly_mail_content = 14;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->jjc_weekly_mail_content(), target);
  }

  // required bytes jjc_monthly_mail_title = 15;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->jjc_monthly_mail_title(), target);
  }

  // required bytes jjc_monthly_mail_content = 16;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->jjc_monthly_mail_content(), target);
  }

  // required int32 repeat_task_refresh_times = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->repeat_task_refresh_times(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGameServer)
  return target;
}

size_t ConfigGameServer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGameServer)
  size_t total_size = 0;

  if (has_ghost_ship_reset_cost()) {
    // required bytes ghost_ship_reset_cost = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ghost_ship_reset_cost());
  }

  if (has_jjc_daily_mail_title()) {
    // required bytes jjc_daily_mail_title = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_daily_mail_title());
  }

  if (has_jjc_daily_mail_content()) {
    // required bytes jjc_daily_mail_content = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_daily_mail_content());
  }

  if (has_jjc_weekly_mail_title()) {
    // required bytes jjc_weekly_mail_title = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_weekly_mail_title());
  }

  if (has_jjc_weekly_mail_content()) {
    // required bytes jjc_weekly_mail_content = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_weekly_mail_content());
  }

  if (has_jjc_monthly_mail_title()) {
    // required bytes jjc_monthly_mail_title = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_monthly_mail_title());
  }

  if (has_jjc_monthly_mail_content()) {
    // required bytes jjc_monthly_mail_content = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_monthly_mail_content());
  }

  if (has_first_gold_lottery_id_once()) {
    // required int32 first_gold_lottery_id_once = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->first_gold_lottery_id_once());
  }

  if (has_first_diamond_lottery_id_ten()) {
    // required int32 first_diamond_lottery_id_ten = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->first_diamond_lottery_id_ten());
  }

  if (has_max_daily_system_task_num()) {
    // required int32 max_daily_system_task_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_daily_system_task_num());
  }

  if (has_max_occupy_monster_ship_times()) {
    // required int32 max_occupy_monster_ship_times = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_occupy_monster_ship_times());
  }

  if (has_max_occupy_player_ship_times()) {
    // required int32 max_occupy_player_ship_times = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_occupy_player_ship_times());
  }

  if (has_max_occupy_special_ship_times()) {
    // required int32 max_occupy_special_ship_times = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_occupy_special_ship_times());
  }

  if (has_max_ghost_ship_reset_times()) {
    // required int32 max_ghost_ship_reset_times = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_ghost_ship_reset_times());
  }

  if (has_max_fast_reach_ticket_num()) {
    // required int32 max_fast_reach_ticket_num = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_fast_reach_ticket_num());
  }

  if (has_fast_reach_ticket_cd()) {
    // required int32 fast_reach_ticket_cd = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fast_reach_ticket_cd());
  }

  if (has_repeat_task_refresh_times()) {
    // required int32 repeat_task_refresh_times = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->repeat_task_refresh_times());
  }

  return total_size;
}
size_t ConfigGameServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGameServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0001ffff) ^ 0x0001ffff) == 0) {  // All required fields are present.
    // required bytes ghost_ship_reset_cost = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ghost_ship_reset_cost());

    // required bytes jjc_daily_mail_title = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_daily_mail_title());

    // required bytes jjc_daily_mail_content = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_daily_mail_content());

    // required bytes jjc_weekly_mail_title = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_weekly_mail_title());

    // required bytes jjc_weekly_mail_content = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_weekly_mail_content());

    // required bytes jjc_monthly_mail_title = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_monthly_mail_title());

    // required bytes jjc_monthly_mail_content = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jjc_monthly_mail_content());

    // required int32 first_gold_lottery_id_once = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->first_gold_lottery_id_once());

    // required int32 first_diamond_lottery_id_ten = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->first_diamond_lottery_id_ten());

    // required int32 max_daily_system_task_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_daily_system_task_num());

    // required int32 max_occupy_monster_ship_times = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_occupy_monster_ship_times());

    // required int32 max_occupy_player_ship_times = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_occupy_player_ship_times());

    // required int32 max_occupy_special_ship_times = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_occupy_special_ship_times());

    // required int32 max_ghost_ship_reset_times = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_ghost_ship_reset_times());

    // required int32 max_fast_reach_ticket_num = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_fast_reach_ticket_num());

    // required int32 fast_reach_ticket_cd = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fast_reach_ticket_cd());

    // required int32 repeat_task_refresh_times = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->repeat_task_refresh_times());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGameServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGameServer)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGameServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGameServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGameServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGameServer)
    MergeFrom(*source);
  }
}

void ConfigGameServer::MergeFrom(const ConfigGameServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGameServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_ghost_ship_reset_cost(from.ghost_ship_reset_cost());
    }
    if (cached_has_bits & 0x00000002u) {
      set_jjc_daily_mail_title(from.jjc_daily_mail_title());
    }
    if (cached_has_bits & 0x00000004u) {
      set_jjc_daily_mail_content(from.jjc_daily_mail_content());
    }
    if (cached_has_bits & 0x00000008u) {
      set_jjc_weekly_mail_title(from.jjc_weekly_mail_title());
    }
    if (cached_has_bits & 0x00000010u) {
      set_jjc_weekly_mail_content(from.jjc_weekly_mail_content());
    }
    if (cached_has_bits & 0x00000020u) {
      set_jjc_monthly_mail_title(from.jjc_monthly_mail_title());
    }
    if (cached_has_bits & 0x00000040u) {
      set_jjc_monthly_mail_content(from.jjc_monthly_mail_content());
    }
    if (cached_has_bits & 0x00000080u) {
      first_gold_lottery_id_once_ = from.first_gold_lottery_id_once_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      first_diamond_lottery_id_ten_ = from.first_diamond_lottery_id_ten_;
    }
    if (cached_has_bits & 0x00000200u) {
      max_daily_system_task_num_ = from.max_daily_system_task_num_;
    }
    if (cached_has_bits & 0x00000400u) {
      max_occupy_monster_ship_times_ = from.max_occupy_monster_ship_times_;
    }
    if (cached_has_bits & 0x00000800u) {
      max_occupy_player_ship_times_ = from.max_occupy_player_ship_times_;
    }
    if (cached_has_bits & 0x00001000u) {
      max_occupy_special_ship_times_ = from.max_occupy_special_ship_times_;
    }
    if (cached_has_bits & 0x00002000u) {
      max_ghost_ship_reset_times_ = from.max_ghost_ship_reset_times_;
    }
    if (cached_has_bits & 0x00004000u) {
      max_fast_reach_ticket_num_ = from.max_fast_reach_ticket_num_;
    }
    if (cached_has_bits & 0x00008000u) {
      fast_reach_ticket_cd_ = from.fast_reach_ticket_cd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_repeat_task_refresh_times(from.repeat_task_refresh_times());
  }
}

void ConfigGameServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGameServer::CopyFrom(const ConfigGameServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGameServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x0001ffff) != 0x0001ffff) return false;
  return true;
}

void ConfigGameServer::Swap(ConfigGameServer* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGameServer* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGameServer::UnsafeArenaSwap(ConfigGameServer* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGameServer::InternalSwap(ConfigGameServer* other) {
  using std::swap;
  ghost_ship_reset_cost_.Swap(&other->ghost_ship_reset_cost_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jjc_daily_mail_title_.Swap(&other->jjc_daily_mail_title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jjc_daily_mail_content_.Swap(&other->jjc_daily_mail_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jjc_weekly_mail_title_.Swap(&other->jjc_weekly_mail_title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jjc_weekly_mail_content_.Swap(&other->jjc_weekly_mail_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jjc_monthly_mail_title_.Swap(&other->jjc_monthly_mail_title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jjc_monthly_mail_content_.Swap(&other->jjc_monthly_mail_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(first_gold_lottery_id_once_, other->first_gold_lottery_id_once_);
  swap(first_diamond_lottery_id_ten_, other->first_diamond_lottery_id_ten_);
  swap(max_daily_system_task_num_, other->max_daily_system_task_num_);
  swap(max_occupy_monster_ship_times_, other->max_occupy_monster_ship_times_);
  swap(max_occupy_player_ship_times_, other->max_occupy_player_ship_times_);
  swap(max_occupy_special_ship_times_, other->max_occupy_special_ship_times_);
  swap(max_ghost_ship_reset_times_, other->max_ghost_ship_reset_times_);
  swap(max_fast_reach_ticket_num_, other->max_fast_reach_ticket_num_);
  swap(fast_reach_ticket_cd_, other->fast_reach_ticket_cd_);
  swap(repeat_task_refresh_times_, other->repeat_task_refresh_times_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGameServer::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameRobot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameRobot::kIdFieldNumber;
const int GameRobot::kTicketidFieldNumber;
const int GameRobot::kInitLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameRobot::GameRobot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_GameRobot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameRobot)
}
GameRobot::GameRobot(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_GameRobot.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameRobot)
}
GameRobot::GameRobot(const GameRobot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&init_level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(init_level_));
  // @@protoc_insertion_point(copy_constructor:db.GameRobot)
}

void GameRobot::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&init_level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(init_level_));
}

GameRobot::~GameRobot() {
  // @@protoc_insertion_point(destructor:db.GameRobot)
  SharedDtor();
}

void GameRobot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameRobot::ArenaDtor(void* object) {
  GameRobot* _this = reinterpret_cast< GameRobot* >(object);
  (void)_this;
}
void GameRobot::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameRobot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameRobot::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameRobot& GameRobot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_GameRobot.base);
  return *internal_default_instance();
}


void GameRobot::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameRobot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&init_level_) -
        reinterpret_cast<char*>(&id_)) + sizeof(init_level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameRobot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameRobot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ticketid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 init_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_init_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &init_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameRobot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameRobot)
  return false;
#undef DO_
}

void GameRobot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameRobot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ticketid(), output);
  }

  // required int32 init_level = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->init_level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameRobot)
}

::google::protobuf::uint8* GameRobot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameRobot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ticketid(), target);
  }

  // required int32 init_level = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->init_level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameRobot)
  return target;
}

size_t GameRobot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameRobot)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_ticketid()) {
    // required int32 ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());
  }

  if (has_init_level()) {
    // required int32 init_level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->init_level());
  }

  return total_size;
}
size_t GameRobot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameRobot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());

    // required int32 init_level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->init_level());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameRobot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameRobot)
  GOOGLE_DCHECK_NE(&from, this);
  const GameRobot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameRobot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameRobot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameRobot)
    MergeFrom(*source);
  }
}

void GameRobot::MergeFrom(const GameRobot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameRobot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      ticketid_ = from.ticketid_;
    }
    if (cached_has_bits & 0x00000004u) {
      init_level_ = from.init_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameRobot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameRobot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameRobot::CopyFrom(const GameRobot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameRobot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameRobot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void GameRobot::Swap(GameRobot* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameRobot* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameRobot::UnsafeArenaSwap(GameRobot* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameRobot::InternalSwap(GameRobot* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(ticketid_, other->ticketid_);
  swap(init_level_, other->init_level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameRobot::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameAnnouncement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameAnnouncement::kIdFieldNumber;
const int GameAnnouncement::kTypeFieldNumber;
const int GameAnnouncement::kTimestampFieldNumber;
const int GameAnnouncement::kCircleSecondsFieldNumber;
const int GameAnnouncement::kReadFieldNumber;
const int GameAnnouncement::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameAnnouncement::GameAnnouncement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameAssets_2eproto::scc_info_GameAnnouncement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameAnnouncement)
}
GameAnnouncement::GameAnnouncement(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_GameAnnouncement.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameAnnouncement)
}
GameAnnouncement::GameAnnouncement(const GameAnnouncement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&read_) -
    reinterpret_cast<char*>(&id_)) + sizeof(read_));
  // @@protoc_insertion_point(copy_constructor:db.GameAnnouncement)
}

void GameAnnouncement::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&read_) -
      reinterpret_cast<char*>(&id_)) + sizeof(read_));
}

GameAnnouncement::~GameAnnouncement() {
  // @@protoc_insertion_point(destructor:db.GameAnnouncement)
  SharedDtor();
}

void GameAnnouncement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameAnnouncement::ArenaDtor(void* object) {
  GameAnnouncement* _this = reinterpret_cast< GameAnnouncement* >(object);
  (void)_this;
}
void GameAnnouncement::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameAnnouncement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameAnnouncement::descriptor() {
  ::protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameAnnouncement& GameAnnouncement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameAssets_2eproto::scc_info_GameAnnouncement.base);
  return *internal_default_instance();
}


void GameAnnouncement::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameAnnouncement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 62u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&read_) -
        reinterpret_cast<char*>(&id_)) + sizeof(read_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameAnnouncement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameAnnouncement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 circle_seconds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_circle_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &circle_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool read = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_read();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameAnnouncement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameAnnouncement)
  return false;
#undef DO_
}

void GameAnnouncement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameAnnouncement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required sfixed64 timestamp = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->timestamp(), output);
  }

  // required int32 circle_seconds = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->circle_seconds(), output);
  }

  // required bool read = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->read(), output);
  }

  // required bytes data = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameAnnouncement)
}

::google::protobuf::uint8* GameAnnouncement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameAnnouncement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required sfixed64 timestamp = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(3, this->timestamp(), target);
  }

  // required int32 circle_seconds = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->circle_seconds(), target);
  }

  // required bool read = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->read(), target);
  }

  // required bytes data = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameAnnouncement)
  return target;
}

size_t GameAnnouncement::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameAnnouncement)
  size_t total_size = 0;

  if (has_data()) {
    // required bytes data = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_timestamp()) {
    // required sfixed64 timestamp = 3;
    total_size += 1 + 8;
  }

  if (has_circle_seconds()) {
    // required int32 circle_seconds = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->circle_seconds());
  }

  if (has_read()) {
    // required bool read = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t GameAnnouncement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameAnnouncement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required bytes data = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required sfixed64 timestamp = 3;
    total_size += 1 + 8;

    // required int32 circle_seconds = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->circle_seconds());

    // required bool read = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameAnnouncement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameAnnouncement)
  GOOGLE_DCHECK_NE(&from, this);
  const GameAnnouncement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameAnnouncement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameAnnouncement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameAnnouncement)
    MergeFrom(*source);
  }
}

void GameAnnouncement::MergeFrom(const GameAnnouncement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameAnnouncement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_data(from.data());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      circle_seconds_ = from.circle_seconds_;
    }
    if (cached_has_bits & 0x00000020u) {
      read_ = from.read_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameAnnouncement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameAnnouncement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameAnnouncement::CopyFrom(const GameAnnouncement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameAnnouncement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameAnnouncement::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void GameAnnouncement::Swap(GameAnnouncement* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameAnnouncement* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameAnnouncement::UnsafeArenaSwap(GameAnnouncement* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameAnnouncement::InternalSwap(GameAnnouncement* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(timestamp_, other->timestamp_);
  swap(circle_seconds_, other->circle_seconds_);
  swap(read_, other->read_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameAnnouncement::GetMetadata() const {
  protobuf_StoredProcGameAssets_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameAssets_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_all_users_Parameter* Arena::CreateMaybeMessage< ::db::proc_load_all_users_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_all_users_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_all_users_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_load_all_users_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_all_users_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_all_users* Arena::CreateMaybeMessage< ::db::proc_load_all_users >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_all_users >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameState* Arena::CreateMaybeMessage< ::db::GameState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::IslandBattleData* Arena::CreateMaybeMessage< ::db::IslandBattleData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::IslandBattleData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameRanking* Arena::CreateMaybeMessage< ::db::GameRanking >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameRanking >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserCommonData* Arena::CreateMaybeMessage< ::db::UserCommonData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserCommonData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_common_data_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_load_user_common_data_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_common_data_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_common_data_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_i_load_user_common_data_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_common_data_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_common_data* Arena::CreateMaybeMessage< ::db::proc_i_load_user_common_data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_common_data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_common_data_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_save_user_common_data_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_common_data_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_common_data* Arena::CreateMaybeMessage< ::db::proc_i_save_user_common_data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_common_data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserRankingData* Arena::CreateMaybeMessage< ::db::UserRankingData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserRankingData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_ranking_data_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_load_user_ranking_data_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_ranking_data_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_ranking_data_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_i_load_user_ranking_data_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_ranking_data_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_ranking_data* Arena::CreateMaybeMessage< ::db::proc_i_load_user_ranking_data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_ranking_data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_ranking_data_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_save_user_ranking_data_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_ranking_data_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_ranking_data* Arena::CreateMaybeMessage< ::db::proc_i_save_user_ranking_data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_ranking_data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGameServer* Arena::CreateMaybeMessage< ::db::ConfigGameServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGameServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameRobot* Arena::CreateMaybeMessage< ::db::GameRobot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameRobot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameAnnouncement* Arena::CreateMaybeMessage< ::db::GameAnnouncement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameAnnouncement >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
