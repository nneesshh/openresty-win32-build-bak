// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcGameLog.proto

#include "StoredProcGameLog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_StoredProcGameLog_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameLog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogGameResource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameLog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogGameShip;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameLog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_log_game_resource_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameLog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_log_game_ship_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameLog_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_log_game_resource_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcGameLog_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_log_game_ship_Parameter;
}  // namespace protobuf_StoredProcGameLog_2eproto
namespace db {
class LogGameResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogGameResource>
      _instance;
} _LogGameResource_default_instance_;
class proc_log_game_resource_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_log_game_resource_Parameter>
      _instance;
} _proc_log_game_resource_Parameter_default_instance_;
class proc_log_game_resource_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_log_game_resource_ReturnRecord>
      _instance;
} _proc_log_game_resource_ReturnRecord_default_instance_;
class proc_log_game_resourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_log_game_resource>
      _instance;
} _proc_log_game_resource_default_instance_;
class LogGameShipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogGameShip>
      _instance;
} _LogGameShip_default_instance_;
class proc_log_game_ship_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_log_game_ship_Parameter>
      _instance;
} _proc_log_game_ship_Parameter_default_instance_;
class proc_log_game_ship_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_log_game_ship_ReturnRecord>
      _instance;
} _proc_log_game_ship_ReturnRecord_default_instance_;
class proc_log_game_shipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_log_game_ship>
      _instance;
} _proc_log_game_ship_default_instance_;
}  // namespace db
namespace protobuf_StoredProcGameLog_2eproto {
static void InitDefaultsLogGameResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_LogGameResource_default_instance_;
    new (ptr) ::db::LogGameResource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::LogGameResource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogGameResource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogGameResource}, {}};

static void InitDefaultsproc_log_game_resource_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_log_game_resource_Parameter_default_instance_;
    new (ptr) ::db::proc_log_game_resource_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_log_game_resource_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_log_game_resource_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_log_game_resource_Parameter}, {
      &protobuf_StoredProcGameLog_2eproto::scc_info_LogGameResource.base,}};

static void InitDefaultsproc_log_game_resource_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_log_game_resource_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_log_game_resource_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_log_game_resource_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_log_game_resource_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_log_game_resource_ReturnRecord}, {}};

static void InitDefaultsproc_log_game_resource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_log_game_resource_default_instance_;
    new (ptr) ::db::proc_log_game_resource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_log_game_resource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_log_game_resource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_log_game_resource}, {
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource_Parameter.base,
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource_ReturnRecord.base,}};

static void InitDefaultsLogGameShip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_LogGameShip_default_instance_;
    new (ptr) ::db::LogGameShip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::LogGameShip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogGameShip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogGameShip}, {}};

static void InitDefaultsproc_log_game_ship_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_log_game_ship_Parameter_default_instance_;
    new (ptr) ::db::proc_log_game_ship_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_log_game_ship_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_log_game_ship_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_log_game_ship_Parameter}, {
      &protobuf_StoredProcGameLog_2eproto::scc_info_LogGameShip.base,}};

static void InitDefaultsproc_log_game_ship_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_log_game_ship_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_log_game_ship_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_log_game_ship_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_log_game_ship_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_log_game_ship_ReturnRecord}, {}};

static void InitDefaultsproc_log_game_ship() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_log_game_ship_default_instance_;
    new (ptr) ::db::proc_log_game_ship();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_log_game_ship::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_log_game_ship =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_log_game_ship}, {
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship_Parameter.base,
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship_ReturnRecord.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LogGameResource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_log_game_resource_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_log_game_resource_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_log_game_resource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogGameShip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_log_game_ship_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_log_game_ship_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_log_game_ship.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, subid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, action_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, entry_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, diamond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, fuel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, ammo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, metal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, titanium_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, res_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, res_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameResource, res_num_add_),
  2,
  3,
  4,
  5,
  0,
  1,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource_Parameter, p_log_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_resource, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, subid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, action_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, entry_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, sn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, typeid__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, affinity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, affinity_exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, engagement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, laser_add_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, livefire_add_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, defense_add_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, intercept_add_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, fuel_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, ammo_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, workplace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogGameShip, protect_),
  2,
  3,
  4,
  5,
  0,
  1,
  7,
  6,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  16,
  17,
  18,
  19,
  20,
  21,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship_Parameter, p_log_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_log_game_ship, return_record_list_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 19, sizeof(::db::LogGameResource)},
  { 33, 39, sizeof(::db::proc_log_game_resource_Parameter)},
  { 40, 45, sizeof(::db::proc_log_game_resource_ReturnRecord)},
  { 45, 52, sizeof(::db::proc_log_game_resource)},
  { 54, 81, sizeof(::db::LogGameShip)},
  { 103, 109, sizeof(::db::proc_log_game_ship_Parameter)},
  { 110, 115, sizeof(::db::proc_log_game_ship_ReturnRecord)},
  { 115, 122, sizeof(::db::proc_log_game_ship)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_LogGameResource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_log_game_resource_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_log_game_resource_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_log_game_resource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_LogGameShip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_log_game_ship_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_log_game_ship_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_log_game_ship_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "StoredProcGameLog.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027StoredProcGameLog.proto\022\002db\"\330\006\n\017LogGam"
      "eResource\022\r\n\005subid\030\001 \002(\004\022\023\n\013action_time\030"
      "\002 \002(\020\0224\n\013action_type\030\003 \002(\0162\037.db.LogGameR"
      "esource.ACTION_TYPE\022\020\n\010entry_id\030\004 \002(\005\022\016\n"
      "\006userid\030\005 \002(\014\022\014\n\004nick\030\006 \002(\014\022\017\n\007diamond\030\013"
      " \001(\004\022\014\n\004fuel\030\025 \001(\005\022\014\n\004ammo\030\026 \001(\005\022\r\n\005meta"
      "l\030\027 \001(\005\022\020\n\010titanium\030\030 \001(\005\022\022\n\nres_typeid\030"
      "\037 \001(\004\022\017\n\007res_num\030  \001(\005\022\023\n\013res_num_add\030! "
      "\001(\005\"\262\004\n\013ACTION_TYPE\022\010\n\004DUMP\020\000\022\017\n\013COST_SU"
      "PPLY\020\001\022\016\n\nCOST_STAGE\020\002\022\016\n\nCOST_BUILD\020\003\022\017"
      "\n\013COST_REPAIR\020\004\022\017\n\013COST_REFORM\020\005\022\017\n\013COST"
      "_EXTEND\020\006\022\020\n\014COST_DISCARD\020\007\022\r\n\tCOST_SHOP"
      "\020\010\022\017\n\013COST_ENGAGE\020\t\022\n\n\006NEWBIE\020\013\022\024\n\020AUTOM"
      "ATIC_FARMER\020\014\022\016\n\nEXPEDITION\020\r\022\n\n\006BATTLE\020"
      "\016\022\t\n\005DRILL\020\017\022\n\n\006STRIKE\020\020\022\017\n\013STRIKE_JUNK\020"
      "\021\022\t\n\005QUEST\020\022\022\n\n\006DATING\020\023\022\020\n\014STAGE_GATHER"
      "\020\025\022\030\n\024STAGE_STORAGE_GATHER\020\026\022\017\n\013ITEM_GAT"
      "HER\020\027\022\017\n\013SHOP_GATHER\020\030\022\026\n\022GAME_INVITE_GA"
      "THER\020\031\022\022\n\016MAILBOX_GATHER\020\032\022\r\n\tGM_GATHER\020"
      "\033\022\027\n\023CHARGE_POINT_GATHER\020\037\022\037\n\033GIFTBAG_RO"
      "LE_LEVELUP_GATHER\020 \022\036\n\032GIFTBAG_ROLE_SIGN"
      "IN_GATHER\020!\022\020\n\014RECYCLE_SHIP\020)\022\021\n\rRECYCLE"
      "_EQUIP\020*\"\323\001\n\026proc_log_game_resource\0223\n\005p"
      "aram\030\001 \001(\0132$.db.proc_log_game_resource.P"
      "arameter\022C\n\022return_record_list\030\002 \003(\0132\'.d"
      "b.proc_log_game_resource.ReturnRecord\032/\n"
      "\tParameter\022\"\n\005p_log\030\001 \002(\0132\023.db.LogGameRe"
      "source\032\016\n\014ReturnRecord\"\320\005\n\013LogGameShip\022\r"
      "\n\005subid\030\001 \002(\004\022\023\n\013action_time\030\002 \002(\020\0220\n\013ac"
      "tion_type\030\003 \002(\0162\033.db.LogGameShip.ACTION_"
      "TYPE\022\020\n\010entry_id\030\004 \002(\005\022\016\n\006userid\030\005 \002(\014\022\014"
      "\n\004nick\030\006 \002(\014\022\n\n\002sn\030\013 \002(\005\022\016\n\006typeid\030\014 \002(\004"
      "\022\r\n\005level\030\r \002(\005\022\013\n\003exp\030\016 \002(\005\022\020\n\010affinity"
      "\030\017 \002(\005\022\024\n\014affinity_exp\030\020 \002(\005\022\022\n\nengageme"
      "nt\030\021 \002(\005\022\021\n\tlaser_add\030\025 \001(\005\022\024\n\014livefire_"
      "add\030\026 \001(\005\022\023\n\013defense_add\030\027 \001(\005\022\025\n\rinterc"
      "ept_add\030\030 \001(\005\022\n\n\002hp\030\037 \001(\005\022\022\n\nfuel_ratio\030"
      "  \001(\002\022\022\n\nammo_ratio\030! \001(\002\022\021\n\tworkplace\030)"
      " \001(\005\022\017\n\007protect\030* \001(\005\"\231\002\n\013ACTION_TYPE\022\010\n"
      "\004DUMP\020\000\022\021\n\rCREATE_NEWBIE\020\001\022\017\n\013CREATE_DRO"
      "P\020\002\022\020\n\014CREATE_BUILD\020\003\022\013\n\007RECYCLE\020\004\022\n\n\006BA"
      "TTLE\020\013\022\t\n\005DRILL\020\014\022\n\n\006STRIKE\020\r\022\n\n\006SUPPLY\020"
      "\016\022\n\n\006REPAIR\020\017\022\016\n\nEXPEDITION\020\020\022\016\n\nSTRENGT"
      "HEN\020\021\022\n\n\006REFORM\020\022\022\007\n\003EXP\020\025\022\014\n\010AFFINITY\020\026"
      "\022\016\n\nENGAGEMENT\020\027\022\006\n\002HP\020\030\022\016\n\nWORK_PLACE\020\031"
      "\022\013\n\007PROTECT\020\032\022\n\n\006ENGAGE\020\033\"\303\001\n\022proc_log_g"
      "ame_ship\022/\n\005param\030\001 \001(\0132 .db.proc_log_ga"
      "me_ship.Parameter\022\?\n\022return_record_list\030"
      "\002 \003(\0132#.db.proc_log_game_ship.ReturnReco"
      "rd\032+\n\tParameter\022\036\n\005p_log\030\001 \002(\0132\017.db.LogG"
      "ameShip\032\016\n\014ReturnRecordB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2028);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StoredProcGameLog.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_StoredProcGameLog_2eproto
namespace db {
const ::google::protobuf::EnumDescriptor* LogGameResource_ACTION_TYPE_descriptor() {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoredProcGameLog_2eproto::file_level_enum_descriptors[0];
}
bool LogGameResource_ACTION_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 31:
    case 32:
    case 33:
    case 41:
    case 42:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogGameResource_ACTION_TYPE LogGameResource::DUMP;
const LogGameResource_ACTION_TYPE LogGameResource::COST_SUPPLY;
const LogGameResource_ACTION_TYPE LogGameResource::COST_STAGE;
const LogGameResource_ACTION_TYPE LogGameResource::COST_BUILD;
const LogGameResource_ACTION_TYPE LogGameResource::COST_REPAIR;
const LogGameResource_ACTION_TYPE LogGameResource::COST_REFORM;
const LogGameResource_ACTION_TYPE LogGameResource::COST_EXTEND;
const LogGameResource_ACTION_TYPE LogGameResource::COST_DISCARD;
const LogGameResource_ACTION_TYPE LogGameResource::COST_SHOP;
const LogGameResource_ACTION_TYPE LogGameResource::COST_ENGAGE;
const LogGameResource_ACTION_TYPE LogGameResource::NEWBIE;
const LogGameResource_ACTION_TYPE LogGameResource::AUTOMATIC_FARMER;
const LogGameResource_ACTION_TYPE LogGameResource::EXPEDITION;
const LogGameResource_ACTION_TYPE LogGameResource::BATTLE;
const LogGameResource_ACTION_TYPE LogGameResource::DRILL;
const LogGameResource_ACTION_TYPE LogGameResource::STRIKE;
const LogGameResource_ACTION_TYPE LogGameResource::STRIKE_JUNK;
const LogGameResource_ACTION_TYPE LogGameResource::QUEST;
const LogGameResource_ACTION_TYPE LogGameResource::DATING;
const LogGameResource_ACTION_TYPE LogGameResource::STAGE_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::STAGE_STORAGE_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::ITEM_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::SHOP_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::GAME_INVITE_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::MAILBOX_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::GM_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::CHARGE_POINT_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::GIFTBAG_ROLE_LEVELUP_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::GIFTBAG_ROLE_SIGNIN_GATHER;
const LogGameResource_ACTION_TYPE LogGameResource::RECYCLE_SHIP;
const LogGameResource_ACTION_TYPE LogGameResource::RECYCLE_EQUIP;
const LogGameResource_ACTION_TYPE LogGameResource::ACTION_TYPE_MIN;
const LogGameResource_ACTION_TYPE LogGameResource::ACTION_TYPE_MAX;
const int LogGameResource::ACTION_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LogGameShip_ACTION_TYPE_descriptor() {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoredProcGameLog_2eproto::file_level_enum_descriptors[1];
}
bool LogGameShip_ACTION_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogGameShip_ACTION_TYPE LogGameShip::DUMP;
const LogGameShip_ACTION_TYPE LogGameShip::CREATE_NEWBIE;
const LogGameShip_ACTION_TYPE LogGameShip::CREATE_DROP;
const LogGameShip_ACTION_TYPE LogGameShip::CREATE_BUILD;
const LogGameShip_ACTION_TYPE LogGameShip::RECYCLE;
const LogGameShip_ACTION_TYPE LogGameShip::BATTLE;
const LogGameShip_ACTION_TYPE LogGameShip::DRILL;
const LogGameShip_ACTION_TYPE LogGameShip::STRIKE;
const LogGameShip_ACTION_TYPE LogGameShip::SUPPLY;
const LogGameShip_ACTION_TYPE LogGameShip::REPAIR;
const LogGameShip_ACTION_TYPE LogGameShip::EXPEDITION;
const LogGameShip_ACTION_TYPE LogGameShip::STRENGTHEN;
const LogGameShip_ACTION_TYPE LogGameShip::REFORM;
const LogGameShip_ACTION_TYPE LogGameShip::EXP;
const LogGameShip_ACTION_TYPE LogGameShip::AFFINITY;
const LogGameShip_ACTION_TYPE LogGameShip::ENGAGEMENT;
const LogGameShip_ACTION_TYPE LogGameShip::HP;
const LogGameShip_ACTION_TYPE LogGameShip::WORK_PLACE;
const LogGameShip_ACTION_TYPE LogGameShip::PROTECT;
const LogGameShip_ACTION_TYPE LogGameShip::ENGAGE;
const LogGameShip_ACTION_TYPE LogGameShip::ACTION_TYPE_MIN;
const LogGameShip_ACTION_TYPE LogGameShip::ACTION_TYPE_MAX;
const int LogGameShip::ACTION_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LogGameResource::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogGameResource::kSubidFieldNumber;
const int LogGameResource::kActionTimeFieldNumber;
const int LogGameResource::kActionTypeFieldNumber;
const int LogGameResource::kEntryIdFieldNumber;
const int LogGameResource::kUseridFieldNumber;
const int LogGameResource::kNickFieldNumber;
const int LogGameResource::kDiamondFieldNumber;
const int LogGameResource::kFuelFieldNumber;
const int LogGameResource::kAmmoFieldNumber;
const int LogGameResource::kMetalFieldNumber;
const int LogGameResource::kTitaniumFieldNumber;
const int LogGameResource::kResTypeidFieldNumber;
const int LogGameResource::kResNumFieldNumber;
const int LogGameResource::kResNumAddFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogGameResource::LogGameResource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameLog_2eproto::scc_info_LogGameResource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.LogGameResource)
}
LogGameResource::LogGameResource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_LogGameResource.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.LogGameResource)
}
LogGameResource::LogGameResource(const LogGameResource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  ::memcpy(&subid_, &from.subid_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_num_add_) -
    reinterpret_cast<char*>(&subid_)) + sizeof(res_num_add_));
  // @@protoc_insertion_point(copy_constructor:db.LogGameResource)
}

void LogGameResource::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&subid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_num_add_) -
      reinterpret_cast<char*>(&subid_)) + sizeof(res_num_add_));
}

LogGameResource::~LogGameResource() {
  // @@protoc_insertion_point(destructor:db.LogGameResource)
  SharedDtor();
}

void LogGameResource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogGameResource::ArenaDtor(void* object) {
  LogGameResource* _this = reinterpret_cast< LogGameResource* >(object);
  (void)_this;
}
void LogGameResource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LogGameResource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogGameResource::descriptor() {
  ::protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogGameResource& LogGameResource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_LogGameResource.base);
  return *internal_default_instance();
}


void LogGameResource::Clear() {
// @@protoc_insertion_point(message_clear_start:db.LogGameResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      nick_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&subid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fuel_) -
        reinterpret_cast<char*>(&subid_)) + sizeof(fuel_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&ammo_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&res_num_add_) -
        reinterpret_cast<char*>(&ammo_)) + sizeof(res_num_add_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogGameResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.LogGameResource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 subid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_subid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 action_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_action_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &action_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .db.LogGameResource.ACTION_TYPE action_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::db::LogGameResource_ACTION_TYPE_IsValid(value)) {
            set_action_type(static_cast< ::db::LogGameResource_ACTION_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 entry_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_entry_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entry_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes userid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 diamond = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_diamond();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &diamond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fuel = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_fuel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fuel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ammo = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_ammo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ammo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 metal = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_metal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &metal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 titanium = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_titanium();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &titanium_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 res_typeid = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_res_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &res_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 res_num = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_res_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 res_num_add = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_res_num_add();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_num_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.LogGameResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.LogGameResource)
  return false;
#undef DO_
}

void LogGameResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.LogGameResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 subid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->subid(), output);
  }

  // required sfixed64 action_time = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->action_time(), output);
  }

  // required .db.LogGameResource.ACTION_TYPE action_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->action_type(), output);
  }

  // required int32 entry_id = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->entry_id(), output);
  }

  // required bytes userid = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->userid(), output);
  }

  // required bytes nick = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->nick(), output);
  }

  // optional uint64 diamond = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->diamond(), output);
  }

  // optional int32 fuel = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->fuel(), output);
  }

  // optional int32 ammo = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->ammo(), output);
  }

  // optional int32 metal = 23;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->metal(), output);
  }

  // optional int32 titanium = 24;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->titanium(), output);
  }

  // optional uint64 res_typeid = 31;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->res_typeid(), output);
  }

  // optional int32 res_num = 32;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->res_num(), output);
  }

  // optional int32 res_num_add = 33;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->res_num_add(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.LogGameResource)
}

::google::protobuf::uint8* LogGameResource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.LogGameResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 subid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->subid(), target);
  }

  // required sfixed64 action_time = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->action_time(), target);
  }

  // required .db.LogGameResource.ACTION_TYPE action_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->action_type(), target);
  }

  // required int32 entry_id = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->entry_id(), target);
  }

  // required bytes userid = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->userid(), target);
  }

  // required bytes nick = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->nick(), target);
  }

  // optional uint64 diamond = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->diamond(), target);
  }

  // optional int32 fuel = 21;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->fuel(), target);
  }

  // optional int32 ammo = 22;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->ammo(), target);
  }

  // optional int32 metal = 23;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->metal(), target);
  }

  // optional int32 titanium = 24;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->titanium(), target);
  }

  // optional uint64 res_typeid = 31;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->res_typeid(), target);
  }

  // optional int32 res_num = 32;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->res_num(), target);
  }

  // optional int32 res_num_add = 33;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->res_num_add(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.LogGameResource)
  return target;
}

size_t LogGameResource::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.LogGameResource)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_nick()) {
    // required bytes nick = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  if (has_subid()) {
    // required uint64 subid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->subid());
  }

  if (has_action_time()) {
    // required sfixed64 action_time = 2;
    total_size += 1 + 8;
  }

  if (has_action_type()) {
    // required .db.LogGameResource.ACTION_TYPE action_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());
  }

  if (has_entry_id()) {
    // required int32 entry_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entry_id());
  }

  return total_size;
}
size_t LogGameResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.LogGameResource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required bytes userid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required bytes nick = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

    // required uint64 subid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->subid());

    // required sfixed64 action_time = 2;
    total_size += 1 + 8;

    // required .db.LogGameResource.ACTION_TYPE action_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());

    // required int32 entry_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entry_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional uint64 diamond = 11;
    if (has_diamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->diamond());
    }

    // optional int32 fuel = 21;
    if (has_fuel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fuel());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional int32 ammo = 22;
    if (has_ammo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ammo());
    }

    // optional int32 metal = 23;
    if (has_metal()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->metal());
    }

    // optional int32 titanium = 24;
    if (has_titanium()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->titanium());
    }

    // optional uint64 res_typeid = 31;
    if (has_res_typeid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->res_typeid());
    }

    // optional int32 res_num = 32;
    if (has_res_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_num());
    }

    // optional int32 res_num_add = 33;
    if (has_res_num_add()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->res_num_add());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogGameResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.LogGameResource)
  GOOGLE_DCHECK_NE(&from, this);
  const LogGameResource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogGameResource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.LogGameResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.LogGameResource)
    MergeFrom(*source);
  }
}

void LogGameResource::MergeFrom(const LogGameResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.LogGameResource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000004u) {
      subid_ = from.subid_;
    }
    if (cached_has_bits & 0x00000008u) {
      action_time_ = from.action_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      action_type_ = from.action_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      entry_id_ = from.entry_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      diamond_ = from.diamond_;
    }
    if (cached_has_bits & 0x00000080u) {
      fuel_ = from.fuel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      ammo_ = from.ammo_;
    }
    if (cached_has_bits & 0x00000200u) {
      metal_ = from.metal_;
    }
    if (cached_has_bits & 0x00000400u) {
      titanium_ = from.titanium_;
    }
    if (cached_has_bits & 0x00000800u) {
      res_typeid_ = from.res_typeid_;
    }
    if (cached_has_bits & 0x00001000u) {
      res_num_ = from.res_num_;
    }
    if (cached_has_bits & 0x00002000u) {
      res_num_add_ = from.res_num_add_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LogGameResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.LogGameResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogGameResource::CopyFrom(const LogGameResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.LogGameResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogGameResource::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void LogGameResource::Swap(LogGameResource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogGameResource* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LogGameResource::UnsafeArenaSwap(LogGameResource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogGameResource::InternalSwap(LogGameResource* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(subid_, other->subid_);
  swap(action_time_, other->action_time_);
  swap(action_type_, other->action_type_);
  swap(entry_id_, other->entry_id_);
  swap(diamond_, other->diamond_);
  swap(fuel_, other->fuel_);
  swap(ammo_, other->ammo_);
  swap(metal_, other->metal_);
  swap(titanium_, other->titanium_);
  swap(res_typeid_, other->res_typeid_);
  swap(res_num_, other->res_num_);
  swap(res_num_add_, other->res_num_add_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogGameResource::GetMetadata() const {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_log_game_resource_Parameter::InitAsDefaultInstance() {
  ::db::_proc_log_game_resource_Parameter_default_instance_._instance.get_mutable()->p_log_ = const_cast< ::db::LogGameResource*>(
      ::db::LogGameResource::internal_default_instance());
}
void proc_log_game_resource_Parameter::unsafe_arena_set_allocated_p_log(
    ::db::LogGameResource* p_log) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_log_;
  }
  p_log_ = p_log;
  if (p_log) {
    set_has_p_log();
  } else {
    clear_has_p_log();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_log_game_resource.Parameter.p_log)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_log_game_resource_Parameter::kPLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_log_game_resource_Parameter::proc_log_game_resource_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_log_game_resource.Parameter)
}
proc_log_game_resource_Parameter::proc_log_game_resource_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_log_game_resource.Parameter)
}
proc_log_game_resource_Parameter::proc_log_game_resource_Parameter(const proc_log_game_resource_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_log()) {
    p_log_ = new ::db::LogGameResource(*from.p_log_);
  } else {
    p_log_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_log_game_resource.Parameter)
}

void proc_log_game_resource_Parameter::SharedCtor() {
  p_log_ = NULL;
}

proc_log_game_resource_Parameter::~proc_log_game_resource_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_log_game_resource.Parameter)
  SharedDtor();
}

void proc_log_game_resource_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_log_;
}

void proc_log_game_resource_Parameter::ArenaDtor(void* object) {
  proc_log_game_resource_Parameter* _this = reinterpret_cast< proc_log_game_resource_Parameter* >(object);
  (void)_this;
}
void proc_log_game_resource_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_log_game_resource_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_log_game_resource_Parameter::descriptor() {
  ::protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_log_game_resource_Parameter& proc_log_game_resource_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource_Parameter.base);
  return *internal_default_instance();
}


void proc_log_game_resource_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_log_game_resource.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_log_ != NULL);
    p_log_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_log_game_resource_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_log_game_resource.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.LogGameResource p_log = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_log_game_resource.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_log_game_resource.Parameter)
  return false;
#undef DO_
}

void proc_log_game_resource_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_log_game_resource.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.LogGameResource p_log = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_log(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_log_game_resource.Parameter)
}

::google::protobuf::uint8* proc_log_game_resource_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_log_game_resource.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.LogGameResource p_log = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_log(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_log_game_resource.Parameter)
  return target;
}

size_t proc_log_game_resource_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_log_game_resource.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.LogGameResource p_log = 1;
  if (has_p_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_log_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_log_game_resource_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_log_game_resource.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_log_game_resource_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_log_game_resource_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_log_game_resource.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_log_game_resource.Parameter)
    MergeFrom(*source);
  }
}

void proc_log_game_resource_Parameter::MergeFrom(const proc_log_game_resource_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_log_game_resource.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_log()) {
    mutable_p_log()->::db::LogGameResource::MergeFrom(from.p_log());
  }
}

void proc_log_game_resource_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_log_game_resource.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_log_game_resource_Parameter::CopyFrom(const proc_log_game_resource_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_log_game_resource.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_log_game_resource_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_log()) {
    if (!this->p_log_->IsInitialized()) return false;
  }
  return true;
}

void proc_log_game_resource_Parameter::Swap(proc_log_game_resource_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_log_game_resource_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_log_game_resource_Parameter::UnsafeArenaSwap(proc_log_game_resource_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_log_game_resource_Parameter::InternalSwap(proc_log_game_resource_Parameter* other) {
  using std::swap;
  swap(p_log_, other->p_log_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_log_game_resource_Parameter::GetMetadata() const {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_log_game_resource_ReturnRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_log_game_resource_ReturnRecord::proc_log_game_resource_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_log_game_resource.ReturnRecord)
}
proc_log_game_resource_ReturnRecord::proc_log_game_resource_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_log_game_resource.ReturnRecord)
}
proc_log_game_resource_ReturnRecord::proc_log_game_resource_ReturnRecord(const proc_log_game_resource_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_log_game_resource.ReturnRecord)
}

void proc_log_game_resource_ReturnRecord::SharedCtor() {
}

proc_log_game_resource_ReturnRecord::~proc_log_game_resource_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_log_game_resource.ReturnRecord)
  SharedDtor();
}

void proc_log_game_resource_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_log_game_resource_ReturnRecord::ArenaDtor(void* object) {
  proc_log_game_resource_ReturnRecord* _this = reinterpret_cast< proc_log_game_resource_ReturnRecord* >(object);
  (void)_this;
}
void proc_log_game_resource_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_log_game_resource_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_log_game_resource_ReturnRecord::descriptor() {
  ::protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_log_game_resource_ReturnRecord& proc_log_game_resource_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_log_game_resource_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_log_game_resource.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_log_game_resource_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_log_game_resource.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_log_game_resource.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_log_game_resource.ReturnRecord)
  return false;
#undef DO_
}

void proc_log_game_resource_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_log_game_resource.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_log_game_resource.ReturnRecord)
}

::google::protobuf::uint8* proc_log_game_resource_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_log_game_resource.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_log_game_resource.ReturnRecord)
  return target;
}

size_t proc_log_game_resource_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_log_game_resource.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_log_game_resource_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_log_game_resource.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_log_game_resource_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_log_game_resource_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_log_game_resource.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_log_game_resource.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_log_game_resource_ReturnRecord::MergeFrom(const proc_log_game_resource_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_log_game_resource.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_log_game_resource_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_log_game_resource.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_log_game_resource_ReturnRecord::CopyFrom(const proc_log_game_resource_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_log_game_resource.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_log_game_resource_ReturnRecord::IsInitialized() const {
  return true;
}

void proc_log_game_resource_ReturnRecord::Swap(proc_log_game_resource_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_log_game_resource_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_log_game_resource_ReturnRecord::UnsafeArenaSwap(proc_log_game_resource_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_log_game_resource_ReturnRecord::InternalSwap(proc_log_game_resource_ReturnRecord* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_log_game_resource_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_log_game_resource::InitAsDefaultInstance() {
  ::db::_proc_log_game_resource_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_log_game_resource_Parameter*>(
      ::db::proc_log_game_resource_Parameter::internal_default_instance());
}
void proc_log_game_resource::unsafe_arena_set_allocated_param(
    ::db::proc_log_game_resource_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_log_game_resource.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_log_game_resource::kParamFieldNumber;
const int proc_log_game_resource::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_log_game_resource::proc_log_game_resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_log_game_resource)
}
proc_log_game_resource::proc_log_game_resource(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_log_game_resource)
}
proc_log_game_resource::proc_log_game_resource(const proc_log_game_resource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_log_game_resource_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_log_game_resource)
}

void proc_log_game_resource::SharedCtor() {
  param_ = NULL;
}

proc_log_game_resource::~proc_log_game_resource() {
  // @@protoc_insertion_point(destructor:db.proc_log_game_resource)
  SharedDtor();
}

void proc_log_game_resource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_log_game_resource::ArenaDtor(void* object) {
  proc_log_game_resource* _this = reinterpret_cast< proc_log_game_resource* >(object);
  (void)_this;
}
void proc_log_game_resource::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_log_game_resource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_log_game_resource::descriptor() {
  ::protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_log_game_resource& proc_log_game_resource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_resource.base);
  return *internal_default_instance();
}


void proc_log_game_resource::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_log_game_resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_log_game_resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_log_game_resource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_log_game_resource.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_log_game_resource.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_log_game_resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_log_game_resource)
  return false;
#undef DO_
}

void proc_log_game_resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_log_game_resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_log_game_resource.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_log_game_resource.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_log_game_resource)
}

::google::protobuf::uint8* proc_log_game_resource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_log_game_resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_log_game_resource.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_log_game_resource.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_log_game_resource)
  return target;
}

size_t proc_log_game_resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_log_game_resource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_log_game_resource.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_log_game_resource.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_log_game_resource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_log_game_resource)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_log_game_resource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_log_game_resource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_log_game_resource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_log_game_resource)
    MergeFrom(*source);
  }
}

void proc_log_game_resource::MergeFrom(const proc_log_game_resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_log_game_resource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_log_game_resource_Parameter::MergeFrom(from.param());
  }
}

void proc_log_game_resource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_log_game_resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_log_game_resource::CopyFrom(const proc_log_game_resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_log_game_resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_log_game_resource::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_log_game_resource::Swap(proc_log_game_resource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_log_game_resource* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_log_game_resource::UnsafeArenaSwap(proc_log_game_resource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_log_game_resource::InternalSwap(proc_log_game_resource* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_log_game_resource::GetMetadata() const {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogGameShip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogGameShip::kSubidFieldNumber;
const int LogGameShip::kActionTimeFieldNumber;
const int LogGameShip::kActionTypeFieldNumber;
const int LogGameShip::kEntryIdFieldNumber;
const int LogGameShip::kUseridFieldNumber;
const int LogGameShip::kNickFieldNumber;
const int LogGameShip::kSnFieldNumber;
const int LogGameShip::kTypeidFieldNumber;
const int LogGameShip::kLevelFieldNumber;
const int LogGameShip::kExpFieldNumber;
const int LogGameShip::kAffinityFieldNumber;
const int LogGameShip::kAffinityExpFieldNumber;
const int LogGameShip::kEngagementFieldNumber;
const int LogGameShip::kLaserAddFieldNumber;
const int LogGameShip::kLivefireAddFieldNumber;
const int LogGameShip::kDefenseAddFieldNumber;
const int LogGameShip::kInterceptAddFieldNumber;
const int LogGameShip::kHpFieldNumber;
const int LogGameShip::kFuelRatioFieldNumber;
const int LogGameShip::kAmmoRatioFieldNumber;
const int LogGameShip::kWorkplaceFieldNumber;
const int LogGameShip::kProtectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogGameShip::LogGameShip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameLog_2eproto::scc_info_LogGameShip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.LogGameShip)
}
LogGameShip::LogGameShip(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_LogGameShip.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.LogGameShip)
}
LogGameShip::LogGameShip(const LogGameShip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  ::memcpy(&subid_, &from.subid_,
    static_cast<size_t>(reinterpret_cast<char*>(&workplace_) -
    reinterpret_cast<char*>(&subid_)) + sizeof(workplace_));
  // @@protoc_insertion_point(copy_constructor:db.LogGameShip)
}

void LogGameShip::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&subid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&workplace_) -
      reinterpret_cast<char*>(&subid_)) + sizeof(workplace_));
}

LogGameShip::~LogGameShip() {
  // @@protoc_insertion_point(destructor:db.LogGameShip)
  SharedDtor();
}

void LogGameShip::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogGameShip::ArenaDtor(void* object) {
  LogGameShip* _this = reinterpret_cast< LogGameShip* >(object);
  (void)_this;
}
void LogGameShip::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LogGameShip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogGameShip::descriptor() {
  ::protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogGameShip& LogGameShip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_LogGameShip.base);
  return *internal_default_instance();
}


void LogGameShip::Clear() {
// @@protoc_insertion_point(message_clear_start:db.LogGameShip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      nick_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&subid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sn_) -
        reinterpret_cast<char*>(&subid_)) + sizeof(sn_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&protect_) -
        reinterpret_cast<char*>(&level_)) + sizeof(protect_));
  }
  if (cached_has_bits & 4128768u) {
    ::memset(&defense_add_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&workplace_) -
        reinterpret_cast<char*>(&defense_add_)) + sizeof(workplace_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogGameShip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.LogGameShip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 subid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_subid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 action_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_action_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &action_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .db.LogGameShip.ACTION_TYPE action_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::db::LogGameShip_ACTION_TYPE_IsValid(value)) {
            set_action_type(static_cast< ::db::LogGameShip_ACTION_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 entry_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_entry_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entry_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes userid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sn = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_sn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 typeid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_typeid_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &typeid__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 exp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 affinity = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_affinity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &affinity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 affinity_exp = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_affinity_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &affinity_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 engagement = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_engagement();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &engagement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 laser_add = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_laser_add();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &laser_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 livefire_add = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_livefire_add();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &livefire_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 defense_add = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_defense_add();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defense_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 intercept_add = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_intercept_add();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intercept_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hp = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_hp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fuel_ratio = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(5u /* 261 & 0xFF */)) {
          set_has_fuel_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fuel_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float ammo_ratio = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 269 & 0xFF */)) {
          set_has_ammo_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ammo_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 workplace = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          set_has_workplace();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &workplace_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 protect = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_protect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.LogGameShip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.LogGameShip)
  return false;
#undef DO_
}

void LogGameShip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.LogGameShip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 subid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->subid(), output);
  }

  // required sfixed64 action_time = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->action_time(), output);
  }

  // required .db.LogGameShip.ACTION_TYPE action_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->action_type(), output);
  }

  // required int32 entry_id = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->entry_id(), output);
  }

  // required bytes userid = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->userid(), output);
  }

  // required bytes nick = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->nick(), output);
  }

  // required int32 sn = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->sn(), output);
  }

  // required uint64 typeid = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->typeid_(), output);
  }

  // required int32 level = 13;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->level(), output);
  }

  // required int32 exp = 14;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->exp(), output);
  }

  // required int32 affinity = 15;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->affinity(), output);
  }

  // required int32 affinity_exp = 16;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->affinity_exp(), output);
  }

  // required int32 engagement = 17;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->engagement(), output);
  }

  // optional int32 laser_add = 21;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->laser_add(), output);
  }

  // optional int32 livefire_add = 22;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->livefire_add(), output);
  }

  // optional int32 defense_add = 23;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->defense_add(), output);
  }

  // optional int32 intercept_add = 24;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->intercept_add(), output);
  }

  // optional int32 hp = 31;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->hp(), output);
  }

  // optional float fuel_ratio = 32;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(32, this->fuel_ratio(), output);
  }

  // optional float ammo_ratio = 33;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(33, this->ammo_ratio(), output);
  }

  // optional int32 workplace = 41;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->workplace(), output);
  }

  // optional int32 protect = 42;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->protect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.LogGameShip)
}

::google::protobuf::uint8* LogGameShip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.LogGameShip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 subid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->subid(), target);
  }

  // required sfixed64 action_time = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->action_time(), target);
  }

  // required .db.LogGameShip.ACTION_TYPE action_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->action_type(), target);
  }

  // required int32 entry_id = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->entry_id(), target);
  }

  // required bytes userid = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->userid(), target);
  }

  // required bytes nick = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->nick(), target);
  }

  // required int32 sn = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->sn(), target);
  }

  // required uint64 typeid = 12;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->typeid_(), target);
  }

  // required int32 level = 13;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->level(), target);
  }

  // required int32 exp = 14;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->exp(), target);
  }

  // required int32 affinity = 15;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->affinity(), target);
  }

  // required int32 affinity_exp = 16;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->affinity_exp(), target);
  }

  // required int32 engagement = 17;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->engagement(), target);
  }

  // optional int32 laser_add = 21;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->laser_add(), target);
  }

  // optional int32 livefire_add = 22;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->livefire_add(), target);
  }

  // optional int32 defense_add = 23;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->defense_add(), target);
  }

  // optional int32 intercept_add = 24;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->intercept_add(), target);
  }

  // optional int32 hp = 31;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->hp(), target);
  }

  // optional float fuel_ratio = 32;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(32, this->fuel_ratio(), target);
  }

  // optional float ammo_ratio = 33;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(33, this->ammo_ratio(), target);
  }

  // optional int32 workplace = 41;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->workplace(), target);
  }

  // optional int32 protect = 42;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->protect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.LogGameShip)
  return target;
}

size_t LogGameShip::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.LogGameShip)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_nick()) {
    // required bytes nick = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  if (has_subid()) {
    // required uint64 subid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->subid());
  }

  if (has_action_time()) {
    // required sfixed64 action_time = 2;
    total_size += 1 + 8;
  }

  if (has_action_type()) {
    // required .db.LogGameShip.ACTION_TYPE action_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());
  }

  if (has_entry_id()) {
    // required int32 entry_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entry_id());
  }

  if (has_typeid_()) {
    // required uint64 typeid = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->typeid_());
  }

  if (has_sn()) {
    // required int32 sn = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sn());
  }

  if (has_level()) {
    // required int32 level = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_exp()) {
    // required int32 exp = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  if (has_affinity()) {
    // required int32 affinity = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->affinity());
  }

  if (has_affinity_exp()) {
    // required int32 affinity_exp = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->affinity_exp());
  }

  if (has_engagement()) {
    // required int32 engagement = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->engagement());
  }

  return total_size;
}
size_t LogGameShip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.LogGameShip)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001fff) ^ 0x00001fff) == 0) {  // All required fields are present.
    // required bytes userid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required bytes nick = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

    // required uint64 subid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->subid());

    // required sfixed64 action_time = 2;
    total_size += 1 + 8;

    // required .db.LogGameShip.ACTION_TYPE action_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());

    // required int32 entry_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entry_id());

    // required uint64 typeid = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->typeid_());

    // required int32 sn = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sn());

    // required int32 level = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 exp = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());

    // required int32 affinity = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->affinity());

    // required int32 affinity_exp = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->affinity_exp());

    // required int32 engagement = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->engagement());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[8 / 32] & 57344u) {
    // optional int32 laser_add = 21;
    if (has_laser_add()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->laser_add());
    }

    // optional int32 livefire_add = 22;
    if (has_livefire_add()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->livefire_add());
    }

    // optional int32 protect = 42;
    if (has_protect()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protect());
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional int32 defense_add = 23;
    if (has_defense_add()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->defense_add());
    }

    // optional int32 intercept_add = 24;
    if (has_intercept_add()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intercept_add());
    }

    // optional int32 hp = 31;
    if (has_hp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

    // optional float fuel_ratio = 32;
    if (has_fuel_ratio()) {
      total_size += 2 + 4;
    }

    // optional float ammo_ratio = 33;
    if (has_ammo_ratio()) {
      total_size += 2 + 4;
    }

    // optional int32 workplace = 41;
    if (has_workplace()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->workplace());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogGameShip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.LogGameShip)
  GOOGLE_DCHECK_NE(&from, this);
  const LogGameShip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogGameShip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.LogGameShip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.LogGameShip)
    MergeFrom(*source);
  }
}

void LogGameShip::MergeFrom(const LogGameShip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.LogGameShip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000004u) {
      subid_ = from.subid_;
    }
    if (cached_has_bits & 0x00000008u) {
      action_time_ = from.action_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      action_type_ = from.action_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      entry_id_ = from.entry_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      typeid__ = from.typeid__;
    }
    if (cached_has_bits & 0x00000080u) {
      sn_ = from.sn_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000200u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000400u) {
      affinity_ = from.affinity_;
    }
    if (cached_has_bits & 0x00000800u) {
      affinity_exp_ = from.affinity_exp_;
    }
    if (cached_has_bits & 0x00001000u) {
      engagement_ = from.engagement_;
    }
    if (cached_has_bits & 0x00002000u) {
      laser_add_ = from.laser_add_;
    }
    if (cached_has_bits & 0x00004000u) {
      livefire_add_ = from.livefire_add_;
    }
    if (cached_has_bits & 0x00008000u) {
      protect_ = from.protect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      defense_add_ = from.defense_add_;
    }
    if (cached_has_bits & 0x00020000u) {
      intercept_add_ = from.intercept_add_;
    }
    if (cached_has_bits & 0x00040000u) {
      hp_ = from.hp_;
    }
    if (cached_has_bits & 0x00080000u) {
      fuel_ratio_ = from.fuel_ratio_;
    }
    if (cached_has_bits & 0x00100000u) {
      ammo_ratio_ = from.ammo_ratio_;
    }
    if (cached_has_bits & 0x00200000u) {
      workplace_ = from.workplace_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LogGameShip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.LogGameShip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogGameShip::CopyFrom(const LogGameShip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.LogGameShip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogGameShip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;
  return true;
}

void LogGameShip::Swap(LogGameShip* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogGameShip* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LogGameShip::UnsafeArenaSwap(LogGameShip* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogGameShip::InternalSwap(LogGameShip* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(subid_, other->subid_);
  swap(action_time_, other->action_time_);
  swap(action_type_, other->action_type_);
  swap(entry_id_, other->entry_id_);
  swap(typeid__, other->typeid__);
  swap(sn_, other->sn_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(affinity_, other->affinity_);
  swap(affinity_exp_, other->affinity_exp_);
  swap(engagement_, other->engagement_);
  swap(laser_add_, other->laser_add_);
  swap(livefire_add_, other->livefire_add_);
  swap(protect_, other->protect_);
  swap(defense_add_, other->defense_add_);
  swap(intercept_add_, other->intercept_add_);
  swap(hp_, other->hp_);
  swap(fuel_ratio_, other->fuel_ratio_);
  swap(ammo_ratio_, other->ammo_ratio_);
  swap(workplace_, other->workplace_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogGameShip::GetMetadata() const {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_log_game_ship_Parameter::InitAsDefaultInstance() {
  ::db::_proc_log_game_ship_Parameter_default_instance_._instance.get_mutable()->p_log_ = const_cast< ::db::LogGameShip*>(
      ::db::LogGameShip::internal_default_instance());
}
void proc_log_game_ship_Parameter::unsafe_arena_set_allocated_p_log(
    ::db::LogGameShip* p_log) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_log_;
  }
  p_log_ = p_log;
  if (p_log) {
    set_has_p_log();
  } else {
    clear_has_p_log();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_log_game_ship.Parameter.p_log)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_log_game_ship_Parameter::kPLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_log_game_ship_Parameter::proc_log_game_ship_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_log_game_ship.Parameter)
}
proc_log_game_ship_Parameter::proc_log_game_ship_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_log_game_ship.Parameter)
}
proc_log_game_ship_Parameter::proc_log_game_ship_Parameter(const proc_log_game_ship_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_log()) {
    p_log_ = new ::db::LogGameShip(*from.p_log_);
  } else {
    p_log_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_log_game_ship.Parameter)
}

void proc_log_game_ship_Parameter::SharedCtor() {
  p_log_ = NULL;
}

proc_log_game_ship_Parameter::~proc_log_game_ship_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_log_game_ship.Parameter)
  SharedDtor();
}

void proc_log_game_ship_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_log_;
}

void proc_log_game_ship_Parameter::ArenaDtor(void* object) {
  proc_log_game_ship_Parameter* _this = reinterpret_cast< proc_log_game_ship_Parameter* >(object);
  (void)_this;
}
void proc_log_game_ship_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_log_game_ship_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_log_game_ship_Parameter::descriptor() {
  ::protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_log_game_ship_Parameter& proc_log_game_ship_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship_Parameter.base);
  return *internal_default_instance();
}


void proc_log_game_ship_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_log_game_ship.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_log_ != NULL);
    p_log_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_log_game_ship_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_log_game_ship.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.LogGameShip p_log = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_log_game_ship.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_log_game_ship.Parameter)
  return false;
#undef DO_
}

void proc_log_game_ship_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_log_game_ship.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.LogGameShip p_log = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_log(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_log_game_ship.Parameter)
}

::google::protobuf::uint8* proc_log_game_ship_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_log_game_ship.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.LogGameShip p_log = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_log(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_log_game_ship.Parameter)
  return target;
}

size_t proc_log_game_ship_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_log_game_ship.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.LogGameShip p_log = 1;
  if (has_p_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_log_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_log_game_ship_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_log_game_ship.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_log_game_ship_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_log_game_ship_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_log_game_ship.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_log_game_ship.Parameter)
    MergeFrom(*source);
  }
}

void proc_log_game_ship_Parameter::MergeFrom(const proc_log_game_ship_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_log_game_ship.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_log()) {
    mutable_p_log()->::db::LogGameShip::MergeFrom(from.p_log());
  }
}

void proc_log_game_ship_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_log_game_ship.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_log_game_ship_Parameter::CopyFrom(const proc_log_game_ship_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_log_game_ship.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_log_game_ship_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_log()) {
    if (!this->p_log_->IsInitialized()) return false;
  }
  return true;
}

void proc_log_game_ship_Parameter::Swap(proc_log_game_ship_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_log_game_ship_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_log_game_ship_Parameter::UnsafeArenaSwap(proc_log_game_ship_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_log_game_ship_Parameter::InternalSwap(proc_log_game_ship_Parameter* other) {
  using std::swap;
  swap(p_log_, other->p_log_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_log_game_ship_Parameter::GetMetadata() const {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_log_game_ship_ReturnRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_log_game_ship_ReturnRecord::proc_log_game_ship_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_log_game_ship.ReturnRecord)
}
proc_log_game_ship_ReturnRecord::proc_log_game_ship_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_log_game_ship.ReturnRecord)
}
proc_log_game_ship_ReturnRecord::proc_log_game_ship_ReturnRecord(const proc_log_game_ship_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_log_game_ship.ReturnRecord)
}

void proc_log_game_ship_ReturnRecord::SharedCtor() {
}

proc_log_game_ship_ReturnRecord::~proc_log_game_ship_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_log_game_ship.ReturnRecord)
  SharedDtor();
}

void proc_log_game_ship_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_log_game_ship_ReturnRecord::ArenaDtor(void* object) {
  proc_log_game_ship_ReturnRecord* _this = reinterpret_cast< proc_log_game_ship_ReturnRecord* >(object);
  (void)_this;
}
void proc_log_game_ship_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_log_game_ship_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_log_game_ship_ReturnRecord::descriptor() {
  ::protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_log_game_ship_ReturnRecord& proc_log_game_ship_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_log_game_ship_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_log_game_ship.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_log_game_ship_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_log_game_ship.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_log_game_ship.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_log_game_ship.ReturnRecord)
  return false;
#undef DO_
}

void proc_log_game_ship_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_log_game_ship.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_log_game_ship.ReturnRecord)
}

::google::protobuf::uint8* proc_log_game_ship_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_log_game_ship.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_log_game_ship.ReturnRecord)
  return target;
}

size_t proc_log_game_ship_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_log_game_ship.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_log_game_ship_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_log_game_ship.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_log_game_ship_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_log_game_ship_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_log_game_ship.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_log_game_ship.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_log_game_ship_ReturnRecord::MergeFrom(const proc_log_game_ship_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_log_game_ship.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_log_game_ship_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_log_game_ship.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_log_game_ship_ReturnRecord::CopyFrom(const proc_log_game_ship_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_log_game_ship.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_log_game_ship_ReturnRecord::IsInitialized() const {
  return true;
}

void proc_log_game_ship_ReturnRecord::Swap(proc_log_game_ship_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_log_game_ship_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_log_game_ship_ReturnRecord::UnsafeArenaSwap(proc_log_game_ship_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_log_game_ship_ReturnRecord::InternalSwap(proc_log_game_ship_ReturnRecord* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_log_game_ship_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_log_game_ship::InitAsDefaultInstance() {
  ::db::_proc_log_game_ship_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_log_game_ship_Parameter*>(
      ::db::proc_log_game_ship_Parameter::internal_default_instance());
}
void proc_log_game_ship::unsafe_arena_set_allocated_param(
    ::db::proc_log_game_ship_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_log_game_ship.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_log_game_ship::kParamFieldNumber;
const int proc_log_game_ship::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_log_game_ship::proc_log_game_ship()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_log_game_ship)
}
proc_log_game_ship::proc_log_game_ship(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_log_game_ship)
}
proc_log_game_ship::proc_log_game_ship(const proc_log_game_ship& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_log_game_ship_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_log_game_ship)
}

void proc_log_game_ship::SharedCtor() {
  param_ = NULL;
}

proc_log_game_ship::~proc_log_game_ship() {
  // @@protoc_insertion_point(destructor:db.proc_log_game_ship)
  SharedDtor();
}

void proc_log_game_ship::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_log_game_ship::ArenaDtor(void* object) {
  proc_log_game_ship* _this = reinterpret_cast< proc_log_game_ship* >(object);
  (void)_this;
}
void proc_log_game_ship::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_log_game_ship::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_log_game_ship::descriptor() {
  ::protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_log_game_ship& proc_log_game_ship::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcGameLog_2eproto::scc_info_proc_log_game_ship.base);
  return *internal_default_instance();
}


void proc_log_game_ship::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_log_game_ship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_log_game_ship::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_log_game_ship)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_log_game_ship.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_log_game_ship.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_log_game_ship)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_log_game_ship)
  return false;
#undef DO_
}

void proc_log_game_ship::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_log_game_ship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_log_game_ship.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_log_game_ship.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_log_game_ship)
}

::google::protobuf::uint8* proc_log_game_ship::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_log_game_ship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_log_game_ship.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_log_game_ship.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_log_game_ship)
  return target;
}

size_t proc_log_game_ship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_log_game_ship)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_log_game_ship.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_log_game_ship.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_log_game_ship::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_log_game_ship)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_log_game_ship* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_log_game_ship>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_log_game_ship)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_log_game_ship)
    MergeFrom(*source);
  }
}

void proc_log_game_ship::MergeFrom(const proc_log_game_ship& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_log_game_ship)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_log_game_ship_Parameter::MergeFrom(from.param());
  }
}

void proc_log_game_ship::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_log_game_ship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_log_game_ship::CopyFrom(const proc_log_game_ship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_log_game_ship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_log_game_ship::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_log_game_ship::Swap(proc_log_game_ship* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_log_game_ship* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_log_game_ship::UnsafeArenaSwap(proc_log_game_ship* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_log_game_ship::InternalSwap(proc_log_game_ship* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_log_game_ship::GetMetadata() const {
  protobuf_StoredProcGameLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcGameLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::LogGameResource* Arena::CreateMaybeMessage< ::db::LogGameResource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::LogGameResource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_log_game_resource_Parameter* Arena::CreateMaybeMessage< ::db::proc_log_game_resource_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_log_game_resource_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_log_game_resource_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_log_game_resource_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_log_game_resource_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_log_game_resource* Arena::CreateMaybeMessage< ::db::proc_log_game_resource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_log_game_resource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::LogGameShip* Arena::CreateMaybeMessage< ::db::LogGameShip >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::LogGameShip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_log_game_ship_Parameter* Arena::CreateMaybeMessage< ::db::proc_log_game_ship_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_log_game_ship_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_log_game_ship_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_log_game_ship_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_log_game_ship_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_log_game_ship* Arena::CreateMaybeMessage< ::db::proc_log_game_ship >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_log_game_ship >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
