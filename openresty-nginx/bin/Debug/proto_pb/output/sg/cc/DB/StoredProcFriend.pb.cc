// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcFriend.proto

#include "StoredProcFriend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_StoredProcFriend_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigFriending;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGameInvite;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameStatsUserFriend;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TopNRole;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TopNRoleTeamMember;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserFriend;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserGameInvite;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserGameInviteReward;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_top_n_roles_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_friends_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_game_invite_rewards_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_game_invites_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_config_friending_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_config_game_invite_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_top_n_roles_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_friends_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_game_invite_rewards_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_game_invites_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_friend_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_game_invite_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_game_invite_reward_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_config_friending_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcFriend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_config_game_invite_ReturnRecord;
}  // namespace protobuf_StoredProcFriend_2eproto
namespace db {
class TopNRoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopNRole>
      _instance;
} _TopNRole_default_instance_;
class TopNRoleListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopNRoleList>
      _instance;
} _TopNRoleList_default_instance_;
class proc_i_load_top_n_roles_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_top_n_roles_Parameter>
      _instance;
} _proc_i_load_top_n_roles_Parameter_default_instance_;
class proc_i_load_top_n_roles_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_top_n_roles_ReturnRecord>
      _instance;
} _proc_i_load_top_n_roles_ReturnRecord_default_instance_;
class proc_i_load_top_n_rolesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_top_n_roles>
      _instance;
} _proc_i_load_top_n_roles_default_instance_;
class TopNRoleTeamMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopNRoleTeamMember>
      _instance;
} _TopNRoleTeamMember_default_instance_;
class TopNRoleTeamMemberListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopNRoleTeamMemberList>
      _instance;
} _TopNRoleTeamMemberList_default_instance_;
class ConfigFriendingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigFriending>
      _instance;
} _ConfigFriending_default_instance_;
class ConfigFriendingListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigFriendingList>
      _instance;
} _ConfigFriendingList_default_instance_;
class ConfigGameInviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGameInvite>
      _instance;
} _ConfigGameInvite_default_instance_;
class ConfigGameInviteListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGameInviteList>
      _instance;
} _ConfigGameInviteList_default_instance_;
class proc_load_config_friending_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_config_friending_Parameter>
      _instance;
} _proc_load_config_friending_Parameter_default_instance_;
class proc_load_config_friending_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_config_friending_ReturnRecord>
      _instance;
} _proc_load_config_friending_ReturnRecord_default_instance_;
class proc_load_config_friendingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_config_friending>
      _instance;
} _proc_load_config_friending_default_instance_;
class proc_load_config_game_invite_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_config_game_invite_Parameter>
      _instance;
} _proc_load_config_game_invite_Parameter_default_instance_;
class proc_load_config_game_invite_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_config_game_invite_ReturnRecord>
      _instance;
} _proc_load_config_game_invite_ReturnRecord_default_instance_;
class proc_load_config_game_inviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_config_game_invite>
      _instance;
} _proc_load_config_game_invite_default_instance_;
class UserFriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserFriend>
      _instance;
} _UserFriend_default_instance_;
class UserFriendListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserFriendList>
      _instance;
} _UserFriendList_default_instance_;
class GameStatsUserFriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameStatsUserFriend>
      _instance;
} _GameStatsUserFriend_default_instance_;
class GameStatsUserFriendListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameStatsUserFriendList>
      _instance;
} _GameStatsUserFriendList_default_instance_;
class UserGameInviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserGameInvite>
      _instance;
} _UserGameInvite_default_instance_;
class UserGameInviteListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserGameInviteList>
      _instance;
} _UserGameInviteList_default_instance_;
class UserGameInviteRewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserGameInviteReward>
      _instance;
} _UserGameInviteReward_default_instance_;
class UserGameInviteRewardListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserGameInviteRewardList>
      _instance;
} _UserGameInviteRewardList_default_instance_;
class proc_i_load_user_friends_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_friends_Parameter>
      _instance;
} _proc_i_load_user_friends_Parameter_default_instance_;
class proc_i_load_user_friends_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_friends_ReturnRecord>
      _instance;
} _proc_i_load_user_friends_ReturnRecord_default_instance_;
class proc_i_load_user_friendsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_friends>
      _instance;
} _proc_i_load_user_friends_default_instance_;
class proc_i_save_user_friend_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_friend_Parameter>
      _instance;
} _proc_i_save_user_friend_Parameter_default_instance_;
class proc_i_save_user_friendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_friend>
      _instance;
} _proc_i_save_user_friend_default_instance_;
class proc_i_load_user_game_invites_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_game_invites_Parameter>
      _instance;
} _proc_i_load_user_game_invites_Parameter_default_instance_;
class proc_i_load_user_game_invites_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_game_invites_ReturnRecord>
      _instance;
} _proc_i_load_user_game_invites_ReturnRecord_default_instance_;
class proc_i_load_user_game_invitesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_game_invites>
      _instance;
} _proc_i_load_user_game_invites_default_instance_;
class proc_i_load_user_game_invite_rewards_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_game_invite_rewards_Parameter>
      _instance;
} _proc_i_load_user_game_invite_rewards_Parameter_default_instance_;
class proc_i_load_user_game_invite_rewards_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_game_invite_rewards_ReturnRecord>
      _instance;
} _proc_i_load_user_game_invite_rewards_ReturnRecord_default_instance_;
class proc_i_load_user_game_invite_rewardsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_user_game_invite_rewards>
      _instance;
} _proc_i_load_user_game_invite_rewards_default_instance_;
class proc_i_save_user_game_invite_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_game_invite_Parameter>
      _instance;
} _proc_i_save_user_game_invite_Parameter_default_instance_;
class proc_i_save_user_game_inviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_game_invite>
      _instance;
} _proc_i_save_user_game_invite_default_instance_;
class proc_i_save_user_game_invite_reward_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_game_invite_reward_Parameter>
      _instance;
} _proc_i_save_user_game_invite_reward_Parameter_default_instance_;
class proc_i_save_user_game_invite_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_user_game_invite_reward>
      _instance;
} _proc_i_save_user_game_invite_reward_default_instance_;
}  // namespace db
namespace protobuf_StoredProcFriend_2eproto {
static void InitDefaultsTopNRole() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_TopNRole_default_instance_;
    new (ptr) ::db::TopNRole();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::TopNRole::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopNRole =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopNRole}, {}};

static void InitDefaultsTopNRoleList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_TopNRoleList_default_instance_;
    new (ptr) ::db::TopNRoleList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::TopNRoleList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TopNRoleList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTopNRoleList}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_TopNRole.base,}};

static void InitDefaultsproc_i_load_top_n_roles_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_top_n_roles_Parameter_default_instance_;
    new (ptr) ::db::proc_i_load_top_n_roles_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_top_n_roles_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_top_n_roles_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_i_load_top_n_roles_Parameter}, {}};

static void InitDefaultsproc_i_load_top_n_roles_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_top_n_roles_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_i_load_top_n_roles_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_top_n_roles_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_top_n_roles_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_load_top_n_roles_ReturnRecord}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_TopNRole.base,}};

static void InitDefaultsproc_i_load_top_n_roles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_top_n_roles_default_instance_;
    new (ptr) ::db::proc_i_load_top_n_roles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_top_n_roles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_i_load_top_n_roles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_i_load_top_n_roles}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles_Parameter.base,
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles_ReturnRecord.base,}};

static void InitDefaultsTopNRoleTeamMember() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_TopNRoleTeamMember_default_instance_;
    new (ptr) ::db::TopNRoleTeamMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::TopNRoleTeamMember::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopNRoleTeamMember =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopNRoleTeamMember}, {}};

static void InitDefaultsTopNRoleTeamMemberList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_TopNRoleTeamMemberList_default_instance_;
    new (ptr) ::db::TopNRoleTeamMemberList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::TopNRoleTeamMemberList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TopNRoleTeamMemberList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTopNRoleTeamMemberList}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleTeamMember.base,}};

static void InitDefaultsConfigFriending() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigFriending_default_instance_;
    new (ptr) ::db::ConfigFriending();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigFriending::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigFriending =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigFriending}, {}};

static void InitDefaultsConfigFriendingList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigFriendingList_default_instance_;
    new (ptr) ::db::ConfigFriendingList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigFriendingList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigFriendingList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigFriendingList}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_ConfigFriending.base,}};

static void InitDefaultsConfigGameInvite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGameInvite_default_instance_;
    new (ptr) ::db::ConfigGameInvite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGameInvite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGameInvite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGameInvite}, {}};

static void InitDefaultsConfigGameInviteList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGameInviteList_default_instance_;
    new (ptr) ::db::ConfigGameInviteList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGameInviteList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGameInviteList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGameInviteList}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_ConfigGameInvite.base,}};

static void InitDefaultsproc_load_config_friending_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_config_friending_Parameter_default_instance_;
    new (ptr) ::db::proc_load_config_friending_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_config_friending_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_config_friending_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_load_config_friending_Parameter}, {}};

static void InitDefaultsproc_load_config_friending_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_config_friending_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_load_config_friending_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_config_friending_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_config_friending_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_load_config_friending_ReturnRecord}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_ConfigFriending.base,}};

static void InitDefaultsproc_load_config_friending() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_config_friending_default_instance_;
    new (ptr) ::db::proc_load_config_friending();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_config_friending::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_load_config_friending =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_load_config_friending}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending_Parameter.base,
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending_ReturnRecord.base,}};

static void InitDefaultsproc_load_config_game_invite_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_config_game_invite_Parameter_default_instance_;
    new (ptr) ::db::proc_load_config_game_invite_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_config_game_invite_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_config_game_invite_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_load_config_game_invite_Parameter}, {}};

static void InitDefaultsproc_load_config_game_invite_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_config_game_invite_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_load_config_game_invite_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_config_game_invite_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_config_game_invite_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_load_config_game_invite_ReturnRecord}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_ConfigGameInvite.base,}};

static void InitDefaultsproc_load_config_game_invite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_config_game_invite_default_instance_;
    new (ptr) ::db::proc_load_config_game_invite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_config_game_invite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_load_config_game_invite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_load_config_game_invite}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite_Parameter.base,
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite_ReturnRecord.base,}};

static void InitDefaultsUserFriend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserFriend_default_instance_;
    new (ptr) ::db::UserFriend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserFriend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserFriend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserFriend}, {}};

static void InitDefaultsUserFriendList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserFriendList_default_instance_;
    new (ptr) ::db::UserFriendList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserFriendList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserFriendList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserFriendList}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserFriend.base,}};

static void InitDefaultsGameStatsUserFriend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameStatsUserFriend_default_instance_;
    new (ptr) ::db::GameStatsUserFriend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameStatsUserFriend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameStatsUserFriend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameStatsUserFriend}, {}};

static void InitDefaultsGameStatsUserFriendList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameStatsUserFriendList_default_instance_;
    new (ptr) ::db::GameStatsUserFriendList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameStatsUserFriendList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GameStatsUserFriendList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGameStatsUserFriendList}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_GameStatsUserFriend.base,}};

static void InitDefaultsUserGameInvite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserGameInvite_default_instance_;
    new (ptr) ::db::UserGameInvite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserGameInvite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserGameInvite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserGameInvite}, {}};

static void InitDefaultsUserGameInviteList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserGameInviteList_default_instance_;
    new (ptr) ::db::UserGameInviteList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserGameInviteList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserGameInviteList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserGameInviteList}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInvite.base,}};

static void InitDefaultsUserGameInviteReward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserGameInviteReward_default_instance_;
    new (ptr) ::db::UserGameInviteReward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserGameInviteReward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserGameInviteReward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserGameInviteReward}, {}};

static void InitDefaultsUserGameInviteRewardList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserGameInviteRewardList_default_instance_;
    new (ptr) ::db::UserGameInviteRewardList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserGameInviteRewardList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserGameInviteRewardList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserGameInviteRewardList}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteReward.base,}};

static void InitDefaultsproc_i_load_user_friends_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_friends_Parameter_default_instance_;
    new (ptr) ::db::proc_i_load_user_friends_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_friends_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_friends_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_i_load_user_friends_Parameter}, {}};

static void InitDefaultsproc_i_load_user_friends_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_friends_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_i_load_user_friends_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_friends_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_friends_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_load_user_friends_ReturnRecord}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserFriend.base,}};

static void InitDefaultsproc_i_load_user_friends() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_friends_default_instance_;
    new (ptr) ::db::proc_i_load_user_friends();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_friends::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_i_load_user_friends =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_i_load_user_friends}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends_Parameter.base,
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends_ReturnRecord.base,}};

static void InitDefaultsproc_i_save_user_friend_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_friend_Parameter_default_instance_;
    new (ptr) ::db::proc_i_save_user_friend_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_friend_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_friend_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_friend_Parameter}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserFriend.base,}};

static void InitDefaultsproc_i_save_user_friend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_friend_default_instance_;
    new (ptr) ::db::proc_i_save_user_friend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_friend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_friend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_friend}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_friend_Parameter.base,}};

static void InitDefaultsproc_i_load_user_game_invites_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_game_invites_Parameter_default_instance_;
    new (ptr) ::db::proc_i_load_user_game_invites_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_game_invites_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_game_invites_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_i_load_user_game_invites_Parameter}, {}};

static void InitDefaultsproc_i_load_user_game_invites_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_game_invites_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_i_load_user_game_invites_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_game_invites_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_game_invites_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_load_user_game_invites_ReturnRecord}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInvite.base,}};

static void InitDefaultsproc_i_load_user_game_invites() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_game_invites_default_instance_;
    new (ptr) ::db::proc_i_load_user_game_invites();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_game_invites::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_i_load_user_game_invites =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_i_load_user_game_invites}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites_Parameter.base,
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites_ReturnRecord.base,}};

static void InitDefaultsproc_i_load_user_game_invite_rewards_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_game_invite_rewards_Parameter_default_instance_;
    new (ptr) ::db::proc_i_load_user_game_invite_rewards_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_game_invite_rewards_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_user_game_invite_rewards_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_i_load_user_game_invite_rewards_Parameter}, {}};

static void InitDefaultsproc_i_load_user_game_invite_rewards_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_game_invite_rewards_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_i_load_user_game_invite_rewards_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_game_invite_rewards_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_user_game_invite_rewards_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_load_user_game_invite_rewards_ReturnRecord}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteReward.base,}};

static void InitDefaultsproc_i_load_user_game_invite_rewards() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_user_game_invite_rewards_default_instance_;
    new (ptr) ::db::proc_i_load_user_game_invite_rewards();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_user_game_invite_rewards::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_i_load_user_game_invite_rewards =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_i_load_user_game_invite_rewards}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards_Parameter.base,
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards_ReturnRecord.base,}};

static void InitDefaultsproc_i_save_user_game_invite_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_game_invite_Parameter_default_instance_;
    new (ptr) ::db::proc_i_save_user_game_invite_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_game_invite_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_game_invite_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_game_invite_Parameter}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInvite.base,}};

static void InitDefaultsproc_i_save_user_game_invite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_game_invite_default_instance_;
    new (ptr) ::db::proc_i_save_user_game_invite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_game_invite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_game_invite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_game_invite}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_Parameter.base,}};

static void InitDefaultsproc_i_save_user_game_invite_reward_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_game_invite_reward_Parameter_default_instance_;
    new (ptr) ::db::proc_i_save_user_game_invite_reward_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_game_invite_reward_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_game_invite_reward_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_game_invite_reward_Parameter}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteReward.base,}};

static void InitDefaultsproc_i_save_user_game_invite_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_user_game_invite_reward_default_instance_;
    new (ptr) ::db::proc_i_save_user_game_invite_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_user_game_invite_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_user_game_invite_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_user_game_invite_reward}, {
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_reward_Parameter.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TopNRole.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopNRoleList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_top_n_roles_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_top_n_roles_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_top_n_roles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopNRoleTeamMember.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopNRoleTeamMemberList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigFriending.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigFriendingList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGameInvite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGameInviteList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_config_friending_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_config_friending_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_config_friending.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_config_game_invite_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_config_game_invite_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_config_game_invite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserFriend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserFriendList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameStatsUserFriend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameStatsUserFriendList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserGameInvite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserGameInviteList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserGameInviteReward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserGameInviteRewardList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_friends_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_friends_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_friends.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_friend_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_friend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_game_invites_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_game_invites_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_game_invites.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_game_invite_rewards_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_game_invite_rewards_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_user_game_invite_rewards.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_game_invite_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_game_invite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_game_invite_reward_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_user_game_invite_reward.base);
}

::google::protobuf::Metadata file_level_metadata[40];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_logintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_portrait_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_portrait_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_guild_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_guild_badge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRole, role_guild_title_),
  0,
  7,
  5,
  6,
  1,
  8,
  9,
  10,
  12,
  13,
  2,
  14,
  15,
  3,
  4,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles_ReturnRecord, item_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_top_n_roles, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMember, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMember, ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMember, posid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMember, memberid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMember, member_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMember, member_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMember, member_star_),
  0,
  1,
  3,
  2,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMemberList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMemberList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::TopNRoleTeamMemberList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriending, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriending, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriending, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriending, candidate_num_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriending, adding_num_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriending, confirming_num_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriending, ok_num_max_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriendingList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriendingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigFriendingList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameInvite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameInvite, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameInvite, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameInvite, cond_game_invite_ok_role_level_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameInviteList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameInviteList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGameInviteList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending_ReturnRecord, cfg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_friending, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite_ReturnRecord, cfg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_config_game_invite, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriend, owner_ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriend, friend_ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriend, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriend, optime_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriendList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriendList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserFriendList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, owner_ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, friend_ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, challenge_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, challenge_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, gift_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, gift_item_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, gift_item_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, gift_create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriend, gift_accept_time_),
  0,
  1,
  3,
  4,
  5,
  6,
  2,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriendList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriendList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsUserFriendList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInvite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInvite, owner_ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInvite, invitee_ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInvite, invitee_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInvite, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInvite, optime_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, owner_ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, slotid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, reward_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, reward_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, item_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, item_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteReward, item_num_),
  0,
  1,
  2,
  3,
  5,
  4,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteRewardList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteRewardList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserGameInviteRewardList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends_ReturnRecord, item_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_friends, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_friend_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_friend_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_friend_Parameter, p_friend_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_friend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_friend, param_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites_ReturnRecord, game_invite_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invites, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards_ReturnRecord, reward_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_user_game_invite_rewards, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_Parameter, p_invite_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite, param_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_reward_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_reward_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_reward_Parameter, p_reward_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_reward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_user_game_invite_reward, param_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 21, sizeof(::db::TopNRole)},
  { 37, 43, sizeof(::db::TopNRoleList)},
  { 44, 49, sizeof(::db::proc_i_load_top_n_roles_Parameter)},
  { 49, 55, sizeof(::db::proc_i_load_top_n_roles_ReturnRecord)},
  { 56, 63, sizeof(::db::proc_i_load_top_n_roles)},
  { 65, 76, sizeof(::db::TopNRoleTeamMember)},
  { 82, 88, sizeof(::db::TopNRoleTeamMemberList)},
  { 89, 99, sizeof(::db::ConfigFriending)},
  { 104, 110, sizeof(::db::ConfigFriendingList)},
  { 111, 119, sizeof(::db::ConfigGameInvite)},
  { 122, 128, sizeof(::db::ConfigGameInviteList)},
  { 129, 134, sizeof(::db::proc_load_config_friending_Parameter)},
  { 134, 140, sizeof(::db::proc_load_config_friending_ReturnRecord)},
  { 141, 148, sizeof(::db::proc_load_config_friending)},
  { 150, 155, sizeof(::db::proc_load_config_game_invite_Parameter)},
  { 155, 161, sizeof(::db::proc_load_config_game_invite_ReturnRecord)},
  { 162, 169, sizeof(::db::proc_load_config_game_invite)},
  { 171, 180, sizeof(::db::UserFriend)},
  { 184, 190, sizeof(::db::UserFriendList)},
  { 191, 205, sizeof(::db::GameStatsUserFriend)},
  { 214, 220, sizeof(::db::GameStatsUserFriendList)},
  { 221, 231, sizeof(::db::UserGameInvite)},
  { 236, 242, sizeof(::db::UserGameInviteList)},
  { 243, 255, sizeof(::db::UserGameInviteReward)},
  { 262, 268, sizeof(::db::UserGameInviteRewardList)},
  { 269, 274, sizeof(::db::proc_i_load_user_friends_Parameter)},
  { 274, 280, sizeof(::db::proc_i_load_user_friends_ReturnRecord)},
  { 281, 288, sizeof(::db::proc_i_load_user_friends)},
  { 290, 296, sizeof(::db::proc_i_save_user_friend_Parameter)},
  { 297, 303, sizeof(::db::proc_i_save_user_friend)},
  { 304, 309, sizeof(::db::proc_i_load_user_game_invites_Parameter)},
  { 309, 315, sizeof(::db::proc_i_load_user_game_invites_ReturnRecord)},
  { 316, 323, sizeof(::db::proc_i_load_user_game_invites)},
  { 325, 330, sizeof(::db::proc_i_load_user_game_invite_rewards_Parameter)},
  { 330, 336, sizeof(::db::proc_i_load_user_game_invite_rewards_ReturnRecord)},
  { 337, 344, sizeof(::db::proc_i_load_user_game_invite_rewards)},
  { 346, 352, sizeof(::db::proc_i_save_user_game_invite_Parameter)},
  { 353, 359, sizeof(::db::proc_i_save_user_game_invite)},
  { 360, 366, sizeof(::db::proc_i_save_user_game_invite_reward_Parameter)},
  { 367, 373, sizeof(::db::proc_i_save_user_game_invite_reward)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_TopNRole_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_TopNRoleList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_top_n_roles_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_top_n_roles_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_top_n_roles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_TopNRoleTeamMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_TopNRoleTeamMemberList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigFriending_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigFriendingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGameInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGameInviteList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_config_friending_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_config_friending_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_config_friending_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_config_game_invite_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_config_game_invite_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_config_game_invite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserFriendList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameStatsUserFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameStatsUserFriendList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserGameInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserGameInviteList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserGameInviteReward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserGameInviteRewardList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_friends_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_friends_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_friends_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_friend_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_friend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_game_invites_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_game_invites_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_game_invites_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_game_invite_rewards_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_game_invite_rewards_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_user_game_invite_rewards_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_game_invite_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_game_invite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_game_invite_reward_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_user_game_invite_reward_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "StoredProcFriend.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 40);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026StoredProcFriend.proto\022\002db\"\361\002\n\010TopNRol"
      "e\022\023\n\013role_userid\030\001 \002(\014\022\025\n\rrole_ticketid\030"
      "\002 \002(\005\022\022\n\nrole_state\030\003 \002(\003\022\026\n\016role_logint"
      "ime\030\004 \002(\020\022\021\n\trole_nick\030\013 \002(\014\022\022\n\nrole_lev"
      "el\030\014 \002(\005\022\020\n\010role_exp\030\r \002(\005\022\021\n\trole_rank\030"
      "\016 \002(\005\022\025\n\rrole_portrait\030\025 \002(\005\022\033\n\023role_por"
      "trait_frame\030\026 \002(\005\022\026\n\016role_signature\030\027 \002("
      "\014\022\022\n\nrole_force\030\030 \002(\005\022\024\n\014role_guildid\030\037 "
      "\002(\005\022\027\n\017role_guild_name\030  \002(\014\022\030\n\020role_gui"
      "ld_badge\030! \002(\014\022\030\n\020role_guild_title\030\" \002(\005"
      "\"*\n\014TopNRoleList\022\032\n\004list\030\001 \003(\0132\014.db.TopN"
      "Role\"\316\001\n\027proc_i_load_top_n_roles\0224\n\005para"
      "m\030\001 \001(\0132%.db.proc_i_load_top_n_roles.Par"
      "ameter\022D\n\022return_record_list\030\002 \003(\0132(.db."
      "proc_i_load_top_n_roles.ReturnRecord\032\013\n\t"
      "Parameter\032*\n\014ReturnRecord\022\032\n\004item\030\001 \002(\0132"
      "\014.db.TopNRole\"\211\001\n\022TopNRoleTeamMember\022\020\n\010"
      "ticketid\030\001 \002(\005\022\r\n\005posid\030\002 \002(\005\022\020\n\010memberi"
      "d\030\003 \002(\005\022\025\n\rmember_typeid\030\004 \002(\004\022\024\n\014member"
      "_level\030\005 \002(\005\022\023\n\013member_star\030\006 \002(\005\">\n\026Top"
      "NRoleTeamMemberList\022$\n\004list\030\001 \003(\0132\026.db.T"
      "opNRoleTeamMember\"\203\001\n\017ConfigFriending\022\r\n"
      "\005level\030\001 \002(\005\022\031\n\021candidate_num_max\030\002 \002(\005\022"
      "\026\n\016adding_num_max\030\003 \002(\005\022\032\n\022confirming_nu"
      "m_max\030\004 \002(\005\022\022\n\nok_num_max\030\005 \002(\005\"8\n\023Confi"
      "gFriendingList\022!\n\004list\030\001 \003(\0132\023.db.Config"
      "Friending\"V\n\020ConfigGameInvite\022\n\n\002id\030\001 \002("
      "\005\022\016\n\006reward\030\002 \002(\014\022&\n\036cond_game_invite_ok"
      "_role_level\030\013 \001(\005\":\n\024ConfigGameInviteLis"
      "t\022\"\n\004list\030\001 \003(\0132\024.db.ConfigGameInvite\"\335\001"
      "\n\032proc_load_config_friending\0227\n\005param\030\001 "
      "\001(\0132(.db.proc_load_config_friending.Para"
      "meter\022G\n\022return_record_list\030\002 \003(\0132+.db.p"
      "roc_load_config_friending.ReturnRecord\032\013"
      "\n\tParameter\0320\n\014ReturnRecord\022 \n\003cfg\030\001 \002(\013"
      "2\023.db.ConfigFriending\"\344\001\n\034proc_load_conf"
      "ig_game_invite\0229\n\005param\030\001 \001(\0132*.db.proc_"
      "load_config_game_invite.Parameter\022I\n\022ret"
      "urn_record_list\030\002 \003(\0132-.db.proc_load_con"
      "fig_game_invite.ReturnRecord\032\013\n\tParamete"
      "r\0321\n\014ReturnRecord\022!\n\003cfg\030\001 \002(\0132\024.db.Conf"
      "igGameInvite\"\\\n\nUserFriend\022\026\n\016owner_tick"
      "etid\030\001 \002(\005\022\027\n\017friend_ticketid\030\002 \002(\005\022\r\n\005s"
      "tate\030\003 \002(\005\022\016\n\006optime\030\004 \001(\020\".\n\016UserFriend"
      "List\022\034\n\004list\030\001 \003(\0132\016.db.UserFriend\"\360\001\n\023G"
      "ameStatsUserFriend\022\026\n\016owner_ticketid\030\001 \002"
      "(\005\022\027\n\017friend_ticketid\030\002 \002(\005\022\026\n\016challenge"
      "_time\030\013 \001(\020\022\027\n\017challenge_score\030\014 \001(\005\022\022\n\n"
      "gift_state\030\025 \001(\005\022\030\n\020gift_item_typeid\030\026 \001"
      "(\004\022\025\n\rgift_item_num\030\027 \001(\005\022\030\n\020gift_create"
      "_time\030\030 \001(\020\022\030\n\020gift_accept_time\030\031 \001(\020\"@\n"
      "\027GameStatsUserFriendList\022%\n\004list\030\001 \003(\0132\027"
      ".db.GameStatsUserFriend\"x\n\016UserGameInvit"
      "e\022\026\n\016owner_ticketid\030\001 \002(\005\022\030\n\020invitee_tic"
      "ketid\030\002 \002(\005\022\025\n\rinvitee_level\030\003 \002(\005\022\r\n\005st"
      "ate\030\004 \002(\005\022\016\n\006optime\030\005 \001(\020\"6\n\022UserGameInv"
      "iteList\022 \n\004list\030\001 \003(\0132\022.db.UserGameInvit"
      "e\"\245\001\n\024UserGameInviteReward\022\026\n\016owner_tick"
      "etid\030\001 \002(\005\022\016\n\006slotid\030\002 \002(\005\022\024\n\014reward_sta"
      "te\030\003 \002(\005\022\025\n\rreward_reason\030\004 \002(\005\022\021\n\titem_"
      "type\030\013 \002(\005\022\023\n\013item_typeid\030\014 \002(\004\022\020\n\010item_"
      "num\030\r \002(\005\"B\n\030UserGameInviteRewardList\022&\n"
      "\004list\030\001 \003(\0132\030.db.UserGameInviteReward\"\323\001"
      "\n\030proc_i_load_user_friends\0225\n\005param\030\001 \001("
      "\0132&.db.proc_i_load_user_friends.Paramete"
      "r\022E\n\022return_record_list\030\002 \003(\0132).db.proc_"
      "i_load_user_friends.ReturnRecord\032\013\n\tPara"
      "meter\032,\n\014ReturnRecord\022\034\n\004item\030\001 \002(\0132\016.db"
      ".UserFriend\"~\n\027proc_i_save_user_friend\0224"
      "\n\005param\030\001 \001(\0132%.db.proc_i_save_user_frie"
      "nd.Parameter\032-\n\tParameter\022 \n\010p_friend\030\001 "
      "\002(\0132\016.db.UserFriend\"\355\001\n\035proc_i_load_user"
      "_game_invites\022:\n\005param\030\001 \001(\0132+.db.proc_i"
      "_load_user_game_invites.Parameter\022J\n\022ret"
      "urn_record_list\030\002 \003(\0132..db.proc_i_load_u"
      "ser_game_invites.ReturnRecord\032\013\n\tParamet"
      "er\0327\n\014ReturnRecord\022\'\n\013game_invite\030\001 \002(\0132"
      "\022.db.UserGameInvite\"\203\002\n$proc_i_load_user"
      "_game_invite_rewards\022A\n\005param\030\001 \001(\01322.db"
      ".proc_i_load_user_game_invite_rewards.Pa"
      "rameter\022Q\n\022return_record_list\030\002 \003(\01325.db"
      ".proc_i_load_user_game_invite_rewards.Re"
      "turnRecord\032\013\n\tParameter\0328\n\014ReturnRecord\022"
      "(\n\006reward\030\001 \002(\0132\030.db.UserGameInviteRewar"
      "d\"\214\001\n\034proc_i_save_user_game_invite\0229\n\005pa"
      "ram\030\001 \001(\0132*.db.proc_i_save_user_game_inv"
      "ite.Parameter\0321\n\tParameter\022$\n\010p_invite\030\001"
      " \002(\0132\022.db.UserGameInvite\"\240\001\n#proc_i_save"
      "_user_game_invite_reward\022@\n\005param\030\001 \001(\0132"
      "1.db.proc_i_save_user_game_invite_reward"
      ".Parameter\0327\n\tParameter\022*\n\010p_reward\030\001 \002("
      "\0132\030.db.UserGameInviteRewardB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3672);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StoredProcFriend.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_StoredProcFriend_2eproto
namespace db {

// ===================================================================

void TopNRole::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopNRole::kRoleUseridFieldNumber;
const int TopNRole::kRoleTicketidFieldNumber;
const int TopNRole::kRoleStateFieldNumber;
const int TopNRole::kRoleLogintimeFieldNumber;
const int TopNRole::kRoleNickFieldNumber;
const int TopNRole::kRoleLevelFieldNumber;
const int TopNRole::kRoleExpFieldNumber;
const int TopNRole::kRoleRankFieldNumber;
const int TopNRole::kRolePortraitFieldNumber;
const int TopNRole::kRolePortraitFrameFieldNumber;
const int TopNRole::kRoleSignatureFieldNumber;
const int TopNRole::kRoleForceFieldNumber;
const int TopNRole::kRoleGuildidFieldNumber;
const int TopNRole::kRoleGuildNameFieldNumber;
const int TopNRole::kRoleGuildBadgeFieldNumber;
const int TopNRole::kRoleGuildTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopNRole::TopNRole()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_TopNRole.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.TopNRole)
}
TopNRole::TopNRole(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_TopNRole.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.TopNRole)
}
TopNRole::TopNRole(const TopNRole& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_role_userid()) {
    role_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_userid(),
      GetArenaNoVirtual());
  }
  role_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_role_nick()) {
    role_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_nick(),
      GetArenaNoVirtual());
  }
  role_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_role_signature()) {
    role_signature_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_signature(),
      GetArenaNoVirtual());
  }
  role_guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_role_guild_name()) {
    role_guild_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_guild_name(),
      GetArenaNoVirtual());
  }
  role_guild_badge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_role_guild_badge()) {
    role_guild_badge_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_guild_badge(),
      GetArenaNoVirtual());
  }
  ::memcpy(&role_state_, &from.role_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_guildid_) -
    reinterpret_cast<char*>(&role_state_)) + sizeof(role_guildid_));
  // @@protoc_insertion_point(copy_constructor:db.TopNRole)
}

void TopNRole::SharedCtor() {
  role_userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_guild_badge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&role_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_guildid_) -
      reinterpret_cast<char*>(&role_state_)) + sizeof(role_guildid_));
}

TopNRole::~TopNRole() {
  // @@protoc_insertion_point(destructor:db.TopNRole)
  SharedDtor();
}

void TopNRole::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  role_userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_guild_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_guild_badge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TopNRole::ArenaDtor(void* object) {
  TopNRole* _this = reinterpret_cast< TopNRole* >(object);
  (void)_this;
}
void TopNRole::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TopNRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopNRole::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopNRole& TopNRole::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_TopNRole.base);
  return *internal_default_instance();
}


void TopNRole::Clear() {
// @@protoc_insertion_point(message_clear_start:db.TopNRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      role_userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      role_nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      role_signature_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      role_guild_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      role_guild_badge_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&role_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_ticketid_) -
        reinterpret_cast<char*>(&role_state_)) + sizeof(role_ticketid_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&role_level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_guildid_) -
        reinterpret_cast<char*>(&role_level_)) + sizeof(role_guildid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopNRole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.TopNRole)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes role_userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_role_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_ticketid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_role_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 role_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_role_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 role_logintime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_role_logintime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &role_logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes role_nick = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_role_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_level = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_role_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_exp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_role_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_rank = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_role_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_portrait = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_role_portrait();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_portrait_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_portrait_frame = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_role_portrait_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_portrait_frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes role_signature = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_role_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_force = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_role_force();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_force_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_guildid = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_role_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes role_guild_name = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_role_guild_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes role_guild_badge = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_role_guild_badge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 role_guild_title = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          set_has_role_guild_title();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_guild_title_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.TopNRole)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.TopNRole)
  return false;
#undef DO_
}

void TopNRole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.TopNRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes role_userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->role_userid(), output);
  }

  // required int32 role_ticketid = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->role_ticketid(), output);
  }

  // required int64 role_state = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->role_state(), output);
  }

  // required sfixed64 role_logintime = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->role_logintime(), output);
  }

  // required bytes role_nick = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->role_nick(), output);
  }

  // required int32 role_level = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->role_level(), output);
  }

  // required int32 role_exp = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->role_exp(), output);
  }

  // required int32 role_rank = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->role_rank(), output);
  }

  // required int32 role_portrait = 21;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->role_portrait(), output);
  }

  // required int32 role_portrait_frame = 22;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->role_portrait_frame(), output);
  }

  // required bytes role_signature = 23;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->role_signature(), output);
  }

  // required int32 role_force = 24;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->role_force(), output);
  }

  // required int32 role_guildid = 31;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->role_guildid(), output);
  }

  // required bytes role_guild_name = 32;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      32, this->role_guild_name(), output);
  }

  // required bytes role_guild_badge = 33;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      33, this->role_guild_badge(), output);
  }

  // required int32 role_guild_title = 34;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->role_guild_title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.TopNRole)
}

::google::protobuf::uint8* TopNRole::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.TopNRole)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes role_userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->role_userid(), target);
  }

  // required int32 role_ticketid = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->role_ticketid(), target);
  }

  // required int64 role_state = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->role_state(), target);
  }

  // required sfixed64 role_logintime = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->role_logintime(), target);
  }

  // required bytes role_nick = 11;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->role_nick(), target);
  }

  // required int32 role_level = 12;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->role_level(), target);
  }

  // required int32 role_exp = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->role_exp(), target);
  }

  // required int32 role_rank = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->role_rank(), target);
  }

  // required int32 role_portrait = 21;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->role_portrait(), target);
  }

  // required int32 role_portrait_frame = 22;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->role_portrait_frame(), target);
  }

  // required bytes role_signature = 23;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->role_signature(), target);
  }

  // required int32 role_force = 24;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->role_force(), target);
  }

  // required int32 role_guildid = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->role_guildid(), target);
  }

  // required bytes role_guild_name = 32;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        32, this->role_guild_name(), target);
  }

  // required bytes role_guild_badge = 33;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        33, this->role_guild_badge(), target);
  }

  // required int32 role_guild_title = 34;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->role_guild_title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.TopNRole)
  return target;
}

size_t TopNRole::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.TopNRole)
  size_t total_size = 0;

  if (has_role_userid()) {
    // required bytes role_userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_userid());
  }

  if (has_role_nick()) {
    // required bytes role_nick = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_nick());
  }

  if (has_role_signature()) {
    // required bytes role_signature = 23;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_signature());
  }

  if (has_role_guild_name()) {
    // required bytes role_guild_name = 32;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_guild_name());
  }

  if (has_role_guild_badge()) {
    // required bytes role_guild_badge = 33;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_guild_badge());
  }

  if (has_role_state()) {
    // required int64 role_state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->role_state());
  }

  if (has_role_logintime()) {
    // required sfixed64 role_logintime = 4;
    total_size += 1 + 8;
  }

  if (has_role_ticketid()) {
    // required int32 role_ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_ticketid());
  }

  if (has_role_level()) {
    // required int32 role_level = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_level());
  }

  if (has_role_exp()) {
    // required int32 role_exp = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_exp());
  }

  if (has_role_rank()) {
    // required int32 role_rank = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_rank());
  }

  if (has_role_guild_title()) {
    // required int32 role_guild_title = 34;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_guild_title());
  }

  if (has_role_portrait()) {
    // required int32 role_portrait = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_portrait());
  }

  if (has_role_portrait_frame()) {
    // required int32 role_portrait_frame = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_portrait_frame());
  }

  if (has_role_force()) {
    // required int32 role_force = 24;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_force());
  }

  if (has_role_guildid()) {
    // required int32 role_guildid = 31;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_guildid());
  }

  return total_size;
}
size_t TopNRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.TopNRole)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000ffff) ^ 0x0000ffff) == 0) {  // All required fields are present.
    // required bytes role_userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_userid());

    // required bytes role_nick = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_nick());

    // required bytes role_signature = 23;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_signature());

    // required bytes role_guild_name = 32;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_guild_name());

    // required bytes role_guild_badge = 33;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role_guild_badge());

    // required int64 role_state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->role_state());

    // required sfixed64 role_logintime = 4;
    total_size += 1 + 8;

    // required int32 role_ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_ticketid());

    // required int32 role_level = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_level());

    // required int32 role_exp = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_exp());

    // required int32 role_rank = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_rank());

    // required int32 role_guild_title = 34;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_guild_title());

    // required int32 role_portrait = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_portrait());

    // required int32 role_portrait_frame = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_portrait_frame());

    // required int32 role_force = 24;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_force());

    // required int32 role_guildid = 31;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_guildid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopNRole::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.TopNRole)
  GOOGLE_DCHECK_NE(&from, this);
  const TopNRole* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopNRole>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.TopNRole)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.TopNRole)
    MergeFrom(*source);
  }
}

void TopNRole::MergeFrom(const TopNRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.TopNRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_role_userid(from.role_userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_role_nick(from.role_nick());
    }
    if (cached_has_bits & 0x00000004u) {
      set_role_signature(from.role_signature());
    }
    if (cached_has_bits & 0x00000008u) {
      set_role_guild_name(from.role_guild_name());
    }
    if (cached_has_bits & 0x00000010u) {
      set_role_guild_badge(from.role_guild_badge());
    }
    if (cached_has_bits & 0x00000020u) {
      role_state_ = from.role_state_;
    }
    if (cached_has_bits & 0x00000040u) {
      role_logintime_ = from.role_logintime_;
    }
    if (cached_has_bits & 0x00000080u) {
      role_ticketid_ = from.role_ticketid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      role_level_ = from.role_level_;
    }
    if (cached_has_bits & 0x00000200u) {
      role_exp_ = from.role_exp_;
    }
    if (cached_has_bits & 0x00000400u) {
      role_rank_ = from.role_rank_;
    }
    if (cached_has_bits & 0x00000800u) {
      role_guild_title_ = from.role_guild_title_;
    }
    if (cached_has_bits & 0x00001000u) {
      role_portrait_ = from.role_portrait_;
    }
    if (cached_has_bits & 0x00002000u) {
      role_portrait_frame_ = from.role_portrait_frame_;
    }
    if (cached_has_bits & 0x00004000u) {
      role_force_ = from.role_force_;
    }
    if (cached_has_bits & 0x00008000u) {
      role_guildid_ = from.role_guildid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TopNRole::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.TopNRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopNRole::CopyFrom(const TopNRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.TopNRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopNRole::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000ffff) != 0x0000ffff) return false;
  return true;
}

void TopNRole::Swap(TopNRole* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TopNRole* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TopNRole::UnsafeArenaSwap(TopNRole* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TopNRole::InternalSwap(TopNRole* other) {
  using std::swap;
  role_userid_.Swap(&other->role_userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  role_nick_.Swap(&other->role_nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  role_signature_.Swap(&other->role_signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  role_guild_name_.Swap(&other->role_guild_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  role_guild_badge_.Swap(&other->role_guild_badge_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(role_state_, other->role_state_);
  swap(role_logintime_, other->role_logintime_);
  swap(role_ticketid_, other->role_ticketid_);
  swap(role_level_, other->role_level_);
  swap(role_exp_, other->role_exp_);
  swap(role_rank_, other->role_rank_);
  swap(role_guild_title_, other->role_guild_title_);
  swap(role_portrait_, other->role_portrait_);
  swap(role_portrait_frame_, other->role_portrait_frame_);
  swap(role_force_, other->role_force_);
  swap(role_guildid_, other->role_guildid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopNRole::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopNRoleList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopNRoleList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopNRoleList::TopNRoleList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.TopNRoleList)
}
TopNRoleList::TopNRoleList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.TopNRoleList)
}
TopNRoleList::TopNRoleList(const TopNRoleList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.TopNRoleList)
}

void TopNRoleList::SharedCtor() {
}

TopNRoleList::~TopNRoleList() {
  // @@protoc_insertion_point(destructor:db.TopNRoleList)
  SharedDtor();
}

void TopNRoleList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TopNRoleList::ArenaDtor(void* object) {
  TopNRoleList* _this = reinterpret_cast< TopNRoleList* >(object);
  (void)_this;
}
void TopNRoleList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TopNRoleList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopNRoleList::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopNRoleList& TopNRoleList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleList.base);
  return *internal_default_instance();
}


void TopNRoleList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.TopNRoleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopNRoleList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.TopNRoleList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.TopNRole list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.TopNRoleList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.TopNRoleList)
  return false;
#undef DO_
}

void TopNRoleList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.TopNRoleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.TopNRole list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.TopNRoleList)
}

::google::protobuf::uint8* TopNRoleList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.TopNRoleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.TopNRole list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.TopNRoleList)
  return target;
}

size_t TopNRoleList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.TopNRoleList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.TopNRole list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopNRoleList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.TopNRoleList)
  GOOGLE_DCHECK_NE(&from, this);
  const TopNRoleList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopNRoleList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.TopNRoleList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.TopNRoleList)
    MergeFrom(*source);
  }
}

void TopNRoleList::MergeFrom(const TopNRoleList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.TopNRoleList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void TopNRoleList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.TopNRoleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopNRoleList::CopyFrom(const TopNRoleList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.TopNRoleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopNRoleList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void TopNRoleList::Swap(TopNRoleList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TopNRoleList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TopNRoleList::UnsafeArenaSwap(TopNRoleList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TopNRoleList::InternalSwap(TopNRoleList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopNRoleList::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_top_n_roles_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_top_n_roles_Parameter::proc_i_load_top_n_roles_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_top_n_roles.Parameter)
}
proc_i_load_top_n_roles_Parameter::proc_i_load_top_n_roles_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_top_n_roles.Parameter)
}
proc_i_load_top_n_roles_Parameter::proc_i_load_top_n_roles_Parameter(const proc_i_load_top_n_roles_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_top_n_roles.Parameter)
}

void proc_i_load_top_n_roles_Parameter::SharedCtor() {
}

proc_i_load_top_n_roles_Parameter::~proc_i_load_top_n_roles_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_top_n_roles.Parameter)
  SharedDtor();
}

void proc_i_load_top_n_roles_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_i_load_top_n_roles_Parameter::ArenaDtor(void* object) {
  proc_i_load_top_n_roles_Parameter* _this = reinterpret_cast< proc_i_load_top_n_roles_Parameter* >(object);
  (void)_this;
}
void proc_i_load_top_n_roles_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_top_n_roles_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_top_n_roles_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_top_n_roles_Parameter& proc_i_load_top_n_roles_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles_Parameter.base);
  return *internal_default_instance();
}


void proc_i_load_top_n_roles_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_top_n_roles.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_top_n_roles_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_top_n_roles.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_top_n_roles.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_top_n_roles.Parameter)
  return false;
#undef DO_
}

void proc_i_load_top_n_roles_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_top_n_roles.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_top_n_roles.Parameter)
}

::google::protobuf::uint8* proc_i_load_top_n_roles_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_top_n_roles.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_top_n_roles.Parameter)
  return target;
}

size_t proc_i_load_top_n_roles_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_top_n_roles.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_top_n_roles_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_top_n_roles.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_top_n_roles_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_top_n_roles_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_top_n_roles.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_top_n_roles.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_load_top_n_roles_Parameter::MergeFrom(const proc_i_load_top_n_roles_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_top_n_roles.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_i_load_top_n_roles_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_top_n_roles.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_top_n_roles_Parameter::CopyFrom(const proc_i_load_top_n_roles_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_top_n_roles.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_top_n_roles_Parameter::IsInitialized() const {
  return true;
}

void proc_i_load_top_n_roles_Parameter::Swap(proc_i_load_top_n_roles_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_top_n_roles_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_top_n_roles_Parameter::UnsafeArenaSwap(proc_i_load_top_n_roles_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_top_n_roles_Parameter::InternalSwap(proc_i_load_top_n_roles_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_top_n_roles_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_top_n_roles_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_i_load_top_n_roles_ReturnRecord_default_instance_._instance.get_mutable()->item_ = const_cast< ::db::TopNRole*>(
      ::db::TopNRole::internal_default_instance());
}
void proc_i_load_top_n_roles_ReturnRecord::unsafe_arena_set_allocated_item(
    ::db::TopNRole* item) {
  if (GetArenaNoVirtual() == NULL) {
    delete item_;
  }
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_top_n_roles.ReturnRecord.item)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_top_n_roles_ReturnRecord::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_top_n_roles_ReturnRecord::proc_i_load_top_n_roles_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_top_n_roles.ReturnRecord)
}
proc_i_load_top_n_roles_ReturnRecord::proc_i_load_top_n_roles_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_top_n_roles.ReturnRecord)
}
proc_i_load_top_n_roles_ReturnRecord::proc_i_load_top_n_roles_ReturnRecord(const proc_i_load_top_n_roles_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::db::TopNRole(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_top_n_roles.ReturnRecord)
}

void proc_i_load_top_n_roles_ReturnRecord::SharedCtor() {
  item_ = NULL;
}

proc_i_load_top_n_roles_ReturnRecord::~proc_i_load_top_n_roles_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_top_n_roles.ReturnRecord)
  SharedDtor();
}

void proc_i_load_top_n_roles_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete item_;
}

void proc_i_load_top_n_roles_ReturnRecord::ArenaDtor(void* object) {
  proc_i_load_top_n_roles_ReturnRecord* _this = reinterpret_cast< proc_i_load_top_n_roles_ReturnRecord* >(object);
  (void)_this;
}
void proc_i_load_top_n_roles_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_top_n_roles_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_top_n_roles_ReturnRecord::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_top_n_roles_ReturnRecord& proc_i_load_top_n_roles_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_i_load_top_n_roles_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_top_n_roles.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(item_ != NULL);
    item_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_top_n_roles_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_top_n_roles.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.TopNRole item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_top_n_roles.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_top_n_roles.ReturnRecord)
  return false;
#undef DO_
}

void proc_i_load_top_n_roles_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_top_n_roles.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.TopNRole item = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_item(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_top_n_roles.ReturnRecord)
}

::google::protobuf::uint8* proc_i_load_top_n_roles_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_top_n_roles.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.TopNRole item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_item(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_top_n_roles.ReturnRecord)
  return target;
}

size_t proc_i_load_top_n_roles_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_top_n_roles.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.TopNRole item = 1;
  if (has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_top_n_roles_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_top_n_roles.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_top_n_roles_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_top_n_roles_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_top_n_roles.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_top_n_roles.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_i_load_top_n_roles_ReturnRecord::MergeFrom(const proc_i_load_top_n_roles_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_top_n_roles.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::db::TopNRole::MergeFrom(from.item());
  }
}

void proc_i_load_top_n_roles_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_top_n_roles.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_top_n_roles_ReturnRecord::CopyFrom(const proc_i_load_top_n_roles_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_top_n_roles.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_top_n_roles_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_item()) {
    if (!this->item_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_load_top_n_roles_ReturnRecord::Swap(proc_i_load_top_n_roles_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_top_n_roles_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_top_n_roles_ReturnRecord::UnsafeArenaSwap(proc_i_load_top_n_roles_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_top_n_roles_ReturnRecord::InternalSwap(proc_i_load_top_n_roles_ReturnRecord* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_top_n_roles_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_top_n_roles::InitAsDefaultInstance() {
  ::db::_proc_i_load_top_n_roles_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_load_top_n_roles_Parameter*>(
      ::db::proc_i_load_top_n_roles_Parameter::internal_default_instance());
}
void proc_i_load_top_n_roles::unsafe_arena_set_allocated_param(
    ::db::proc_i_load_top_n_roles_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_top_n_roles.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_top_n_roles::kParamFieldNumber;
const int proc_i_load_top_n_roles::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_top_n_roles::proc_i_load_top_n_roles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_top_n_roles)
}
proc_i_load_top_n_roles::proc_i_load_top_n_roles(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_top_n_roles)
}
proc_i_load_top_n_roles::proc_i_load_top_n_roles(const proc_i_load_top_n_roles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_load_top_n_roles_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_top_n_roles)
}

void proc_i_load_top_n_roles::SharedCtor() {
  param_ = NULL;
}

proc_i_load_top_n_roles::~proc_i_load_top_n_roles() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_top_n_roles)
  SharedDtor();
}

void proc_i_load_top_n_roles::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_load_top_n_roles::ArenaDtor(void* object) {
  proc_i_load_top_n_roles* _this = reinterpret_cast< proc_i_load_top_n_roles* >(object);
  (void)_this;
}
void proc_i_load_top_n_roles::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_top_n_roles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_top_n_roles::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_top_n_roles& proc_i_load_top_n_roles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_top_n_roles.base);
  return *internal_default_instance();
}


void proc_i_load_top_n_roles::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_top_n_roles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_top_n_roles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_top_n_roles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_load_top_n_roles.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_i_load_top_n_roles.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_top_n_roles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_top_n_roles)
  return false;
#undef DO_
}

void proc_i_load_top_n_roles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_top_n_roles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_top_n_roles.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_i_load_top_n_roles.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_top_n_roles)
}

::google::protobuf::uint8* proc_i_load_top_n_roles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_top_n_roles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_top_n_roles.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_i_load_top_n_roles.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_top_n_roles)
  return target;
}

size_t proc_i_load_top_n_roles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_top_n_roles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_i_load_top_n_roles.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_i_load_top_n_roles.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_top_n_roles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_top_n_roles)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_top_n_roles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_top_n_roles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_top_n_roles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_top_n_roles)
    MergeFrom(*source);
  }
}

void proc_i_load_top_n_roles::MergeFrom(const proc_i_load_top_n_roles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_top_n_roles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_i_load_top_n_roles_Parameter::MergeFrom(from.param());
  }
}

void proc_i_load_top_n_roles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_top_n_roles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_top_n_roles::CopyFrom(const proc_i_load_top_n_roles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_top_n_roles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_top_n_roles::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_i_load_top_n_roles::Swap(proc_i_load_top_n_roles* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_top_n_roles* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_top_n_roles::UnsafeArenaSwap(proc_i_load_top_n_roles* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_top_n_roles::InternalSwap(proc_i_load_top_n_roles* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_top_n_roles::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopNRoleTeamMember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopNRoleTeamMember::kTicketidFieldNumber;
const int TopNRoleTeamMember::kPosidFieldNumber;
const int TopNRoleTeamMember::kMemberidFieldNumber;
const int TopNRoleTeamMember::kMemberTypeidFieldNumber;
const int TopNRoleTeamMember::kMemberLevelFieldNumber;
const int TopNRoleTeamMember::kMemberStarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopNRoleTeamMember::TopNRoleTeamMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleTeamMember.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.TopNRoleTeamMember)
}
TopNRoleTeamMember::TopNRoleTeamMember(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleTeamMember.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.TopNRoleTeamMember)
}
TopNRoleTeamMember::TopNRoleTeamMember(const TopNRoleTeamMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ticketid_, &from.ticketid_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_star_) -
    reinterpret_cast<char*>(&ticketid_)) + sizeof(member_star_));
  // @@protoc_insertion_point(copy_constructor:db.TopNRoleTeamMember)
}

void TopNRoleTeamMember::SharedCtor() {
  ::memset(&ticketid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_star_) -
      reinterpret_cast<char*>(&ticketid_)) + sizeof(member_star_));
}

TopNRoleTeamMember::~TopNRoleTeamMember() {
  // @@protoc_insertion_point(destructor:db.TopNRoleTeamMember)
  SharedDtor();
}

void TopNRoleTeamMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TopNRoleTeamMember::ArenaDtor(void* object) {
  TopNRoleTeamMember* _this = reinterpret_cast< TopNRoleTeamMember* >(object);
  (void)_this;
}
void TopNRoleTeamMember::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TopNRoleTeamMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopNRoleTeamMember::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopNRoleTeamMember& TopNRoleTeamMember::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleTeamMember.base);
  return *internal_default_instance();
}


void TopNRoleTeamMember::Clear() {
// @@protoc_insertion_point(message_clear_start:db.TopNRoleTeamMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&ticketid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&member_star_) -
        reinterpret_cast<char*>(&ticketid_)) + sizeof(member_star_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopNRoleTeamMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.TopNRoleTeamMember)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ticketid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 posid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_posid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 memberid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_memberid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memberid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 member_typeid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_member_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &member_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 member_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_member_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &member_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 member_star = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_member_star();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &member_star_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.TopNRoleTeamMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.TopNRoleTeamMember)
  return false;
#undef DO_
}

void TopNRoleTeamMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.TopNRoleTeamMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ticketid(), output);
  }

  // required int32 posid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->posid(), output);
  }

  // required int32 memberid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->memberid(), output);
  }

  // required uint64 member_typeid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->member_typeid(), output);
  }

  // required int32 member_level = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->member_level(), output);
  }

  // required int32 member_star = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->member_star(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.TopNRoleTeamMember)
}

::google::protobuf::uint8* TopNRoleTeamMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.TopNRoleTeamMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ticketid(), target);
  }

  // required int32 posid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->posid(), target);
  }

  // required int32 memberid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->memberid(), target);
  }

  // required uint64 member_typeid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->member_typeid(), target);
  }

  // required int32 member_level = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->member_level(), target);
  }

  // required int32 member_star = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->member_star(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.TopNRoleTeamMember)
  return target;
}

size_t TopNRoleTeamMember::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.TopNRoleTeamMember)
  size_t total_size = 0;

  if (has_ticketid()) {
    // required int32 ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());
  }

  if (has_posid()) {
    // required int32 posid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->posid());
  }

  if (has_member_typeid()) {
    // required uint64 member_typeid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->member_typeid());
  }

  if (has_memberid()) {
    // required int32 memberid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memberid());
  }

  if (has_member_level()) {
    // required int32 member_level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->member_level());
  }

  if (has_member_star()) {
    // required int32 member_star = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->member_star());
  }

  return total_size;
}
size_t TopNRoleTeamMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.TopNRoleTeamMember)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required int32 ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());

    // required int32 posid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->posid());

    // required uint64 member_typeid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->member_typeid());

    // required int32 memberid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memberid());

    // required int32 member_level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->member_level());

    // required int32 member_star = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->member_star());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopNRoleTeamMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.TopNRoleTeamMember)
  GOOGLE_DCHECK_NE(&from, this);
  const TopNRoleTeamMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopNRoleTeamMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.TopNRoleTeamMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.TopNRoleTeamMember)
    MergeFrom(*source);
  }
}

void TopNRoleTeamMember::MergeFrom(const TopNRoleTeamMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.TopNRoleTeamMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      ticketid_ = from.ticketid_;
    }
    if (cached_has_bits & 0x00000002u) {
      posid_ = from.posid_;
    }
    if (cached_has_bits & 0x00000004u) {
      member_typeid_ = from.member_typeid_;
    }
    if (cached_has_bits & 0x00000008u) {
      memberid_ = from.memberid_;
    }
    if (cached_has_bits & 0x00000010u) {
      member_level_ = from.member_level_;
    }
    if (cached_has_bits & 0x00000020u) {
      member_star_ = from.member_star_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TopNRoleTeamMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.TopNRoleTeamMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopNRoleTeamMember::CopyFrom(const TopNRoleTeamMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.TopNRoleTeamMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopNRoleTeamMember::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void TopNRoleTeamMember::Swap(TopNRoleTeamMember* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TopNRoleTeamMember* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TopNRoleTeamMember::UnsafeArenaSwap(TopNRoleTeamMember* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TopNRoleTeamMember::InternalSwap(TopNRoleTeamMember* other) {
  using std::swap;
  swap(ticketid_, other->ticketid_);
  swap(posid_, other->posid_);
  swap(member_typeid_, other->member_typeid_);
  swap(memberid_, other->memberid_);
  swap(member_level_, other->member_level_);
  swap(member_star_, other->member_star_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopNRoleTeamMember::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopNRoleTeamMemberList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopNRoleTeamMemberList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopNRoleTeamMemberList::TopNRoleTeamMemberList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleTeamMemberList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.TopNRoleTeamMemberList)
}
TopNRoleTeamMemberList::TopNRoleTeamMemberList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleTeamMemberList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.TopNRoleTeamMemberList)
}
TopNRoleTeamMemberList::TopNRoleTeamMemberList(const TopNRoleTeamMemberList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.TopNRoleTeamMemberList)
}

void TopNRoleTeamMemberList::SharedCtor() {
}

TopNRoleTeamMemberList::~TopNRoleTeamMemberList() {
  // @@protoc_insertion_point(destructor:db.TopNRoleTeamMemberList)
  SharedDtor();
}

void TopNRoleTeamMemberList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TopNRoleTeamMemberList::ArenaDtor(void* object) {
  TopNRoleTeamMemberList* _this = reinterpret_cast< TopNRoleTeamMemberList* >(object);
  (void)_this;
}
void TopNRoleTeamMemberList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TopNRoleTeamMemberList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopNRoleTeamMemberList::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopNRoleTeamMemberList& TopNRoleTeamMemberList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_TopNRoleTeamMemberList.base);
  return *internal_default_instance();
}


void TopNRoleTeamMemberList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.TopNRoleTeamMemberList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopNRoleTeamMemberList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.TopNRoleTeamMemberList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.TopNRoleTeamMember list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.TopNRoleTeamMemberList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.TopNRoleTeamMemberList)
  return false;
#undef DO_
}

void TopNRoleTeamMemberList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.TopNRoleTeamMemberList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.TopNRoleTeamMember list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.TopNRoleTeamMemberList)
}

::google::protobuf::uint8* TopNRoleTeamMemberList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.TopNRoleTeamMemberList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.TopNRoleTeamMember list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.TopNRoleTeamMemberList)
  return target;
}

size_t TopNRoleTeamMemberList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.TopNRoleTeamMemberList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.TopNRoleTeamMember list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopNRoleTeamMemberList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.TopNRoleTeamMemberList)
  GOOGLE_DCHECK_NE(&from, this);
  const TopNRoleTeamMemberList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopNRoleTeamMemberList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.TopNRoleTeamMemberList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.TopNRoleTeamMemberList)
    MergeFrom(*source);
  }
}

void TopNRoleTeamMemberList::MergeFrom(const TopNRoleTeamMemberList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.TopNRoleTeamMemberList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void TopNRoleTeamMemberList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.TopNRoleTeamMemberList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopNRoleTeamMemberList::CopyFrom(const TopNRoleTeamMemberList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.TopNRoleTeamMemberList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopNRoleTeamMemberList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void TopNRoleTeamMemberList::Swap(TopNRoleTeamMemberList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TopNRoleTeamMemberList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TopNRoleTeamMemberList::UnsafeArenaSwap(TopNRoleTeamMemberList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TopNRoleTeamMemberList::InternalSwap(TopNRoleTeamMemberList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopNRoleTeamMemberList::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigFriending::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigFriending::kLevelFieldNumber;
const int ConfigFriending::kCandidateNumMaxFieldNumber;
const int ConfigFriending::kAddingNumMaxFieldNumber;
const int ConfigFriending::kConfirmingNumMaxFieldNumber;
const int ConfigFriending::kOkNumMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigFriending::ConfigFriending()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_ConfigFriending.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigFriending)
}
ConfigFriending::ConfigFriending(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_ConfigFriending.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigFriending)
}
ConfigFriending::ConfigFriending(const ConfigFriending& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&ok_num_max_) -
    reinterpret_cast<char*>(&level_)) + sizeof(ok_num_max_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigFriending)
}

void ConfigFriending::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ok_num_max_) -
      reinterpret_cast<char*>(&level_)) + sizeof(ok_num_max_));
}

ConfigFriending::~ConfigFriending() {
  // @@protoc_insertion_point(destructor:db.ConfigFriending)
  SharedDtor();
}

void ConfigFriending::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigFriending::ArenaDtor(void* object) {
  ConfigFriending* _this = reinterpret_cast< ConfigFriending* >(object);
  (void)_this;
}
void ConfigFriending::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigFriending::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigFriending::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigFriending& ConfigFriending::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_ConfigFriending.base);
  return *internal_default_instance();
}


void ConfigFriending::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigFriending)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ok_num_max_) -
        reinterpret_cast<char*>(&level_)) + sizeof(ok_num_max_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigFriending::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigFriending)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 candidate_num_max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_candidate_num_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &candidate_num_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 adding_num_max = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_adding_num_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adding_num_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 confirming_num_max = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_confirming_num_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &confirming_num_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ok_num_max = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ok_num_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ok_num_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigFriending)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigFriending)
  return false;
#undef DO_
}

void ConfigFriending::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigFriending)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required int32 candidate_num_max = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->candidate_num_max(), output);
  }

  // required int32 adding_num_max = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->adding_num_max(), output);
  }

  // required int32 confirming_num_max = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->confirming_num_max(), output);
  }

  // required int32 ok_num_max = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ok_num_max(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigFriending)
}

::google::protobuf::uint8* ConfigFriending::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigFriending)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required int32 candidate_num_max = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->candidate_num_max(), target);
  }

  // required int32 adding_num_max = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->adding_num_max(), target);
  }

  // required int32 confirming_num_max = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->confirming_num_max(), target);
  }

  // required int32 ok_num_max = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ok_num_max(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigFriending)
  return target;
}

size_t ConfigFriending::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigFriending)
  size_t total_size = 0;

  if (has_level()) {
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_candidate_num_max()) {
    // required int32 candidate_num_max = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->candidate_num_max());
  }

  if (has_adding_num_max()) {
    // required int32 adding_num_max = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adding_num_max());
  }

  if (has_confirming_num_max()) {
    // required int32 confirming_num_max = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->confirming_num_max());
  }

  if (has_ok_num_max()) {
    // required int32 ok_num_max = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ok_num_max());
  }

  return total_size;
}
size_t ConfigFriending::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigFriending)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 candidate_num_max = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->candidate_num_max());

    // required int32 adding_num_max = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->adding_num_max());

    // required int32 confirming_num_max = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->confirming_num_max());

    // required int32 ok_num_max = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ok_num_max());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigFriending::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigFriending)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigFriending* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigFriending>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigFriending)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigFriending)
    MergeFrom(*source);
  }
}

void ConfigFriending::MergeFrom(const ConfigFriending& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigFriending)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000002u) {
      candidate_num_max_ = from.candidate_num_max_;
    }
    if (cached_has_bits & 0x00000004u) {
      adding_num_max_ = from.adding_num_max_;
    }
    if (cached_has_bits & 0x00000008u) {
      confirming_num_max_ = from.confirming_num_max_;
    }
    if (cached_has_bits & 0x00000010u) {
      ok_num_max_ = from.ok_num_max_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigFriending::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigFriending)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigFriending::CopyFrom(const ConfigFriending& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigFriending)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigFriending::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void ConfigFriending::Swap(ConfigFriending* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigFriending* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigFriending::UnsafeArenaSwap(ConfigFriending* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigFriending::InternalSwap(ConfigFriending* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(candidate_num_max_, other->candidate_num_max_);
  swap(adding_num_max_, other->adding_num_max_);
  swap(confirming_num_max_, other->confirming_num_max_);
  swap(ok_num_max_, other->ok_num_max_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigFriending::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigFriendingList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigFriendingList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigFriendingList::ConfigFriendingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_ConfigFriendingList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigFriendingList)
}
ConfigFriendingList::ConfigFriendingList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_ConfigFriendingList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigFriendingList)
}
ConfigFriendingList::ConfigFriendingList(const ConfigFriendingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigFriendingList)
}

void ConfigFriendingList::SharedCtor() {
}

ConfigFriendingList::~ConfigFriendingList() {
  // @@protoc_insertion_point(destructor:db.ConfigFriendingList)
  SharedDtor();
}

void ConfigFriendingList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigFriendingList::ArenaDtor(void* object) {
  ConfigFriendingList* _this = reinterpret_cast< ConfigFriendingList* >(object);
  (void)_this;
}
void ConfigFriendingList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigFriendingList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigFriendingList::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigFriendingList& ConfigFriendingList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_ConfigFriendingList.base);
  return *internal_default_instance();
}


void ConfigFriendingList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigFriendingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigFriendingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigFriendingList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigFriending list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigFriendingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigFriendingList)
  return false;
#undef DO_
}

void ConfigFriendingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigFriendingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigFriending list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigFriendingList)
}

::google::protobuf::uint8* ConfigFriendingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigFriendingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigFriending list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigFriendingList)
  return target;
}

size_t ConfigFriendingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigFriendingList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigFriending list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigFriendingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigFriendingList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigFriendingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigFriendingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigFriendingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigFriendingList)
    MergeFrom(*source);
  }
}

void ConfigFriendingList::MergeFrom(const ConfigFriendingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigFriendingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigFriendingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigFriendingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigFriendingList::CopyFrom(const ConfigFriendingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigFriendingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigFriendingList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigFriendingList::Swap(ConfigFriendingList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigFriendingList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigFriendingList::UnsafeArenaSwap(ConfigFriendingList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigFriendingList::InternalSwap(ConfigFriendingList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigFriendingList::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGameInvite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGameInvite::kIdFieldNumber;
const int ConfigGameInvite::kRewardFieldNumber;
const int ConfigGameInvite::kCondGameInviteOkRoleLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGameInvite::ConfigGameInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_ConfigGameInvite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGameInvite)
}
ConfigGameInvite::ConfigGameInvite(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_ConfigGameInvite.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGameInvite)
}
ConfigGameInvite::ConfigGameInvite(const ConfigGameInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cond_game_invite_ok_role_level_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cond_game_invite_ok_role_level_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGameInvite)
}

void ConfigGameInvite::SharedCtor() {
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_game_invite_ok_role_level_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cond_game_invite_ok_role_level_));
}

ConfigGameInvite::~ConfigGameInvite() {
  // @@protoc_insertion_point(destructor:db.ConfigGameInvite)
  SharedDtor();
}

void ConfigGameInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGameInvite::ArenaDtor(void* object) {
  ConfigGameInvite* _this = reinterpret_cast< ConfigGameInvite* >(object);
  (void)_this;
}
void ConfigGameInvite::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGameInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGameInvite::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGameInvite& ConfigGameInvite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_ConfigGameInvite.base);
  return *internal_default_instance();
}


void ConfigGameInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGameInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reward_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cond_game_invite_ok_role_level_) -
        reinterpret_cast<char*>(&id_)) + sizeof(cond_game_invite_ok_role_level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGameInvite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGameInvite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cond_game_invite_ok_role_level = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_cond_game_invite_ok_role_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cond_game_invite_ok_role_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGameInvite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGameInvite)
  return false;
#undef DO_
}

void ConfigGameInvite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGameInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bytes reward = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->reward(), output);
  }

  // optional int32 cond_game_invite_ok_role_level = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->cond_game_invite_ok_role_level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGameInvite)
}

::google::protobuf::uint8* ConfigGameInvite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGameInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bytes reward = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->reward(), target);
  }

  // optional int32 cond_game_invite_ok_role_level = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->cond_game_invite_ok_role_level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGameInvite)
  return target;
}

size_t ConfigGameInvite::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGameInvite)
  size_t total_size = 0;

  if (has_reward()) {
    // required bytes reward = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t ConfigGameInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGameInvite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes reward = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 cond_game_invite_ok_role_level = 11;
  if (has_cond_game_invite_ok_role_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cond_game_invite_ok_role_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGameInvite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGameInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGameInvite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGameInvite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGameInvite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGameInvite)
    MergeFrom(*source);
  }
}

void ConfigGameInvite::MergeFrom(const ConfigGameInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGameInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      cond_game_invite_ok_role_level_ = from.cond_game_invite_ok_role_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGameInvite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGameInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGameInvite::CopyFrom(const ConfigGameInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGameInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGameInvite::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ConfigGameInvite::Swap(ConfigGameInvite* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGameInvite* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGameInvite::UnsafeArenaSwap(ConfigGameInvite* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGameInvite::InternalSwap(ConfigGameInvite* other) {
  using std::swap;
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(cond_game_invite_ok_role_level_, other->cond_game_invite_ok_role_level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGameInvite::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGameInviteList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGameInviteList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGameInviteList::ConfigGameInviteList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_ConfigGameInviteList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGameInviteList)
}
ConfigGameInviteList::ConfigGameInviteList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_ConfigGameInviteList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGameInviteList)
}
ConfigGameInviteList::ConfigGameInviteList(const ConfigGameInviteList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGameInviteList)
}

void ConfigGameInviteList::SharedCtor() {
}

ConfigGameInviteList::~ConfigGameInviteList() {
  // @@protoc_insertion_point(destructor:db.ConfigGameInviteList)
  SharedDtor();
}

void ConfigGameInviteList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGameInviteList::ArenaDtor(void* object) {
  ConfigGameInviteList* _this = reinterpret_cast< ConfigGameInviteList* >(object);
  (void)_this;
}
void ConfigGameInviteList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGameInviteList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGameInviteList::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGameInviteList& ConfigGameInviteList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_ConfigGameInviteList.base);
  return *internal_default_instance();
}


void ConfigGameInviteList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGameInviteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGameInviteList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGameInviteList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGameInvite list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGameInviteList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGameInviteList)
  return false;
#undef DO_
}

void ConfigGameInviteList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGameInviteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGameInvite list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGameInviteList)
}

::google::protobuf::uint8* ConfigGameInviteList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGameInviteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGameInvite list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGameInviteList)
  return target;
}

size_t ConfigGameInviteList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGameInviteList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGameInvite list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGameInviteList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGameInviteList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGameInviteList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGameInviteList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGameInviteList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGameInviteList)
    MergeFrom(*source);
  }
}

void ConfigGameInviteList::MergeFrom(const ConfigGameInviteList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGameInviteList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGameInviteList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGameInviteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGameInviteList::CopyFrom(const ConfigGameInviteList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGameInviteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGameInviteList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGameInviteList::Swap(ConfigGameInviteList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGameInviteList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGameInviteList::UnsafeArenaSwap(ConfigGameInviteList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGameInviteList::InternalSwap(ConfigGameInviteList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGameInviteList::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_config_friending_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_config_friending_Parameter::proc_load_config_friending_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_config_friending.Parameter)
}
proc_load_config_friending_Parameter::proc_load_config_friending_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_config_friending.Parameter)
}
proc_load_config_friending_Parameter::proc_load_config_friending_Parameter(const proc_load_config_friending_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_load_config_friending.Parameter)
}

void proc_load_config_friending_Parameter::SharedCtor() {
}

proc_load_config_friending_Parameter::~proc_load_config_friending_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_load_config_friending.Parameter)
  SharedDtor();
}

void proc_load_config_friending_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_load_config_friending_Parameter::ArenaDtor(void* object) {
  proc_load_config_friending_Parameter* _this = reinterpret_cast< proc_load_config_friending_Parameter* >(object);
  (void)_this;
}
void proc_load_config_friending_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_config_friending_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_config_friending_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_config_friending_Parameter& proc_load_config_friending_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending_Parameter.base);
  return *internal_default_instance();
}


void proc_load_config_friending_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_config_friending.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_config_friending_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_config_friending.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_config_friending.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_config_friending.Parameter)
  return false;
#undef DO_
}

void proc_load_config_friending_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_config_friending.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_config_friending.Parameter)
}

::google::protobuf::uint8* proc_load_config_friending_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_config_friending.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_config_friending.Parameter)
  return target;
}

size_t proc_load_config_friending_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_config_friending.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_config_friending_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_config_friending.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_config_friending_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_config_friending_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_config_friending.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_config_friending.Parameter)
    MergeFrom(*source);
  }
}

void proc_load_config_friending_Parameter::MergeFrom(const proc_load_config_friending_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_config_friending.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_load_config_friending_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_config_friending.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_config_friending_Parameter::CopyFrom(const proc_load_config_friending_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_config_friending.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_config_friending_Parameter::IsInitialized() const {
  return true;
}

void proc_load_config_friending_Parameter::Swap(proc_load_config_friending_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_config_friending_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_config_friending_Parameter::UnsafeArenaSwap(proc_load_config_friending_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_config_friending_Parameter::InternalSwap(proc_load_config_friending_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_config_friending_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_config_friending_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_load_config_friending_ReturnRecord_default_instance_._instance.get_mutable()->cfg_ = const_cast< ::db::ConfigFriending*>(
      ::db::ConfigFriending::internal_default_instance());
}
void proc_load_config_friending_ReturnRecord::unsafe_arena_set_allocated_cfg(
    ::db::ConfigFriending* cfg) {
  if (GetArenaNoVirtual() == NULL) {
    delete cfg_;
  }
  cfg_ = cfg;
  if (cfg) {
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_config_friending.ReturnRecord.cfg)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_config_friending_ReturnRecord::kCfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_config_friending_ReturnRecord::proc_load_config_friending_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_config_friending.ReturnRecord)
}
proc_load_config_friending_ReturnRecord::proc_load_config_friending_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_config_friending.ReturnRecord)
}
proc_load_config_friending_ReturnRecord::proc_load_config_friending_ReturnRecord(const proc_load_config_friending_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cfg()) {
    cfg_ = new ::db::ConfigFriending(*from.cfg_);
  } else {
    cfg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_config_friending.ReturnRecord)
}

void proc_load_config_friending_ReturnRecord::SharedCtor() {
  cfg_ = NULL;
}

proc_load_config_friending_ReturnRecord::~proc_load_config_friending_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_load_config_friending.ReturnRecord)
  SharedDtor();
}

void proc_load_config_friending_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete cfg_;
}

void proc_load_config_friending_ReturnRecord::ArenaDtor(void* object) {
  proc_load_config_friending_ReturnRecord* _this = reinterpret_cast< proc_load_config_friending_ReturnRecord* >(object);
  (void)_this;
}
void proc_load_config_friending_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_config_friending_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_config_friending_ReturnRecord::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_config_friending_ReturnRecord& proc_load_config_friending_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_load_config_friending_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_config_friending.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(cfg_ != NULL);
    cfg_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_config_friending_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_config_friending.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.ConfigFriending cfg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_config_friending.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_config_friending.ReturnRecord)
  return false;
#undef DO_
}

void proc_load_config_friending_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_config_friending.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.ConfigFriending cfg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cfg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_config_friending.ReturnRecord)
}

::google::protobuf::uint8* proc_load_config_friending_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_config_friending.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.ConfigFriending cfg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cfg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_config_friending.ReturnRecord)
  return target;
}

size_t proc_load_config_friending_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_config_friending.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.ConfigFriending cfg = 1;
  if (has_cfg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cfg_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_config_friending_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_config_friending.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_config_friending_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_config_friending_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_config_friending.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_config_friending.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_load_config_friending_ReturnRecord::MergeFrom(const proc_load_config_friending_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_config_friending.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cfg()) {
    mutable_cfg()->::db::ConfigFriending::MergeFrom(from.cfg());
  }
}

void proc_load_config_friending_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_config_friending.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_config_friending_ReturnRecord::CopyFrom(const proc_load_config_friending_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_config_friending.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_config_friending_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_cfg()) {
    if (!this->cfg_->IsInitialized()) return false;
  }
  return true;
}

void proc_load_config_friending_ReturnRecord::Swap(proc_load_config_friending_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_config_friending_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_config_friending_ReturnRecord::UnsafeArenaSwap(proc_load_config_friending_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_config_friending_ReturnRecord::InternalSwap(proc_load_config_friending_ReturnRecord* other) {
  using std::swap;
  swap(cfg_, other->cfg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_config_friending_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_config_friending::InitAsDefaultInstance() {
  ::db::_proc_load_config_friending_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_load_config_friending_Parameter*>(
      ::db::proc_load_config_friending_Parameter::internal_default_instance());
}
void proc_load_config_friending::unsafe_arena_set_allocated_param(
    ::db::proc_load_config_friending_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_config_friending.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_config_friending::kParamFieldNumber;
const int proc_load_config_friending::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_config_friending::proc_load_config_friending()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_config_friending)
}
proc_load_config_friending::proc_load_config_friending(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_config_friending)
}
proc_load_config_friending::proc_load_config_friending(const proc_load_config_friending& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_load_config_friending_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_config_friending)
}

void proc_load_config_friending::SharedCtor() {
  param_ = NULL;
}

proc_load_config_friending::~proc_load_config_friending() {
  // @@protoc_insertion_point(destructor:db.proc_load_config_friending)
  SharedDtor();
}

void proc_load_config_friending::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_load_config_friending::ArenaDtor(void* object) {
  proc_load_config_friending* _this = reinterpret_cast< proc_load_config_friending* >(object);
  (void)_this;
}
void proc_load_config_friending::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_config_friending::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_config_friending::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_config_friending& proc_load_config_friending::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_friending.base);
  return *internal_default_instance();
}


void proc_load_config_friending::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_config_friending)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_config_friending::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_config_friending)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_load_config_friending.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_load_config_friending.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_config_friending)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_config_friending)
  return false;
#undef DO_
}

void proc_load_config_friending::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_config_friending)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_config_friending.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_load_config_friending.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_config_friending)
}

::google::protobuf::uint8* proc_load_config_friending::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_config_friending)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_config_friending.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_load_config_friending.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_config_friending)
  return target;
}

size_t proc_load_config_friending::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_config_friending)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_load_config_friending.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_load_config_friending.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_config_friending::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_config_friending)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_config_friending* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_config_friending>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_config_friending)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_config_friending)
    MergeFrom(*source);
  }
}

void proc_load_config_friending::MergeFrom(const proc_load_config_friending& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_config_friending)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_load_config_friending_Parameter::MergeFrom(from.param());
  }
}

void proc_load_config_friending::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_config_friending)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_config_friending::CopyFrom(const proc_load_config_friending& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_config_friending)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_config_friending::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_load_config_friending::Swap(proc_load_config_friending* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_config_friending* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_config_friending::UnsafeArenaSwap(proc_load_config_friending* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_config_friending::InternalSwap(proc_load_config_friending* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_config_friending::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_config_game_invite_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_config_game_invite_Parameter::proc_load_config_game_invite_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_config_game_invite.Parameter)
}
proc_load_config_game_invite_Parameter::proc_load_config_game_invite_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_config_game_invite.Parameter)
}
proc_load_config_game_invite_Parameter::proc_load_config_game_invite_Parameter(const proc_load_config_game_invite_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_load_config_game_invite.Parameter)
}

void proc_load_config_game_invite_Parameter::SharedCtor() {
}

proc_load_config_game_invite_Parameter::~proc_load_config_game_invite_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_load_config_game_invite.Parameter)
  SharedDtor();
}

void proc_load_config_game_invite_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_load_config_game_invite_Parameter::ArenaDtor(void* object) {
  proc_load_config_game_invite_Parameter* _this = reinterpret_cast< proc_load_config_game_invite_Parameter* >(object);
  (void)_this;
}
void proc_load_config_game_invite_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_config_game_invite_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_config_game_invite_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_config_game_invite_Parameter& proc_load_config_game_invite_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite_Parameter.base);
  return *internal_default_instance();
}


void proc_load_config_game_invite_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_config_game_invite.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_config_game_invite_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_config_game_invite.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_config_game_invite.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_config_game_invite.Parameter)
  return false;
#undef DO_
}

void proc_load_config_game_invite_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_config_game_invite.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_config_game_invite.Parameter)
}

::google::protobuf::uint8* proc_load_config_game_invite_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_config_game_invite.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_config_game_invite.Parameter)
  return target;
}

size_t proc_load_config_game_invite_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_config_game_invite.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_config_game_invite_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_config_game_invite.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_config_game_invite_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_config_game_invite_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_config_game_invite.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_config_game_invite.Parameter)
    MergeFrom(*source);
  }
}

void proc_load_config_game_invite_Parameter::MergeFrom(const proc_load_config_game_invite_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_config_game_invite.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_load_config_game_invite_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_config_game_invite.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_config_game_invite_Parameter::CopyFrom(const proc_load_config_game_invite_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_config_game_invite.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_config_game_invite_Parameter::IsInitialized() const {
  return true;
}

void proc_load_config_game_invite_Parameter::Swap(proc_load_config_game_invite_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_config_game_invite_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_config_game_invite_Parameter::UnsafeArenaSwap(proc_load_config_game_invite_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_config_game_invite_Parameter::InternalSwap(proc_load_config_game_invite_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_config_game_invite_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_config_game_invite_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_load_config_game_invite_ReturnRecord_default_instance_._instance.get_mutable()->cfg_ = const_cast< ::db::ConfigGameInvite*>(
      ::db::ConfigGameInvite::internal_default_instance());
}
void proc_load_config_game_invite_ReturnRecord::unsafe_arena_set_allocated_cfg(
    ::db::ConfigGameInvite* cfg) {
  if (GetArenaNoVirtual() == NULL) {
    delete cfg_;
  }
  cfg_ = cfg;
  if (cfg) {
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_config_game_invite.ReturnRecord.cfg)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_config_game_invite_ReturnRecord::kCfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_config_game_invite_ReturnRecord::proc_load_config_game_invite_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_config_game_invite.ReturnRecord)
}
proc_load_config_game_invite_ReturnRecord::proc_load_config_game_invite_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_config_game_invite.ReturnRecord)
}
proc_load_config_game_invite_ReturnRecord::proc_load_config_game_invite_ReturnRecord(const proc_load_config_game_invite_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cfg()) {
    cfg_ = new ::db::ConfigGameInvite(*from.cfg_);
  } else {
    cfg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_config_game_invite.ReturnRecord)
}

void proc_load_config_game_invite_ReturnRecord::SharedCtor() {
  cfg_ = NULL;
}

proc_load_config_game_invite_ReturnRecord::~proc_load_config_game_invite_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_load_config_game_invite.ReturnRecord)
  SharedDtor();
}

void proc_load_config_game_invite_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete cfg_;
}

void proc_load_config_game_invite_ReturnRecord::ArenaDtor(void* object) {
  proc_load_config_game_invite_ReturnRecord* _this = reinterpret_cast< proc_load_config_game_invite_ReturnRecord* >(object);
  (void)_this;
}
void proc_load_config_game_invite_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_config_game_invite_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_config_game_invite_ReturnRecord::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_config_game_invite_ReturnRecord& proc_load_config_game_invite_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_load_config_game_invite_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_config_game_invite.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(cfg_ != NULL);
    cfg_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_config_game_invite_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_config_game_invite.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.ConfigGameInvite cfg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_config_game_invite.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_config_game_invite.ReturnRecord)
  return false;
#undef DO_
}

void proc_load_config_game_invite_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_config_game_invite.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.ConfigGameInvite cfg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cfg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_config_game_invite.ReturnRecord)
}

::google::protobuf::uint8* proc_load_config_game_invite_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_config_game_invite.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.ConfigGameInvite cfg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cfg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_config_game_invite.ReturnRecord)
  return target;
}

size_t proc_load_config_game_invite_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_config_game_invite.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.ConfigGameInvite cfg = 1;
  if (has_cfg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cfg_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_config_game_invite_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_config_game_invite.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_config_game_invite_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_config_game_invite_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_config_game_invite.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_config_game_invite.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_load_config_game_invite_ReturnRecord::MergeFrom(const proc_load_config_game_invite_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_config_game_invite.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cfg()) {
    mutable_cfg()->::db::ConfigGameInvite::MergeFrom(from.cfg());
  }
}

void proc_load_config_game_invite_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_config_game_invite.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_config_game_invite_ReturnRecord::CopyFrom(const proc_load_config_game_invite_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_config_game_invite.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_config_game_invite_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_cfg()) {
    if (!this->cfg_->IsInitialized()) return false;
  }
  return true;
}

void proc_load_config_game_invite_ReturnRecord::Swap(proc_load_config_game_invite_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_config_game_invite_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_config_game_invite_ReturnRecord::UnsafeArenaSwap(proc_load_config_game_invite_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_config_game_invite_ReturnRecord::InternalSwap(proc_load_config_game_invite_ReturnRecord* other) {
  using std::swap;
  swap(cfg_, other->cfg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_config_game_invite_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_config_game_invite::InitAsDefaultInstance() {
  ::db::_proc_load_config_game_invite_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_load_config_game_invite_Parameter*>(
      ::db::proc_load_config_game_invite_Parameter::internal_default_instance());
}
void proc_load_config_game_invite::unsafe_arena_set_allocated_param(
    ::db::proc_load_config_game_invite_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_config_game_invite.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_config_game_invite::kParamFieldNumber;
const int proc_load_config_game_invite::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_config_game_invite::proc_load_config_game_invite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_config_game_invite)
}
proc_load_config_game_invite::proc_load_config_game_invite(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_config_game_invite)
}
proc_load_config_game_invite::proc_load_config_game_invite(const proc_load_config_game_invite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_load_config_game_invite_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_config_game_invite)
}

void proc_load_config_game_invite::SharedCtor() {
  param_ = NULL;
}

proc_load_config_game_invite::~proc_load_config_game_invite() {
  // @@protoc_insertion_point(destructor:db.proc_load_config_game_invite)
  SharedDtor();
}

void proc_load_config_game_invite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_load_config_game_invite::ArenaDtor(void* object) {
  proc_load_config_game_invite* _this = reinterpret_cast< proc_load_config_game_invite* >(object);
  (void)_this;
}
void proc_load_config_game_invite::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_config_game_invite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_config_game_invite::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_config_game_invite& proc_load_config_game_invite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_load_config_game_invite.base);
  return *internal_default_instance();
}


void proc_load_config_game_invite::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_config_game_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_config_game_invite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_config_game_invite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_load_config_game_invite.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_load_config_game_invite.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_config_game_invite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_config_game_invite)
  return false;
#undef DO_
}

void proc_load_config_game_invite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_config_game_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_config_game_invite.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_load_config_game_invite.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_config_game_invite)
}

::google::protobuf::uint8* proc_load_config_game_invite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_config_game_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_config_game_invite.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_load_config_game_invite.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_config_game_invite)
  return target;
}

size_t proc_load_config_game_invite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_config_game_invite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_load_config_game_invite.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_load_config_game_invite.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_config_game_invite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_config_game_invite)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_config_game_invite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_config_game_invite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_config_game_invite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_config_game_invite)
    MergeFrom(*source);
  }
}

void proc_load_config_game_invite::MergeFrom(const proc_load_config_game_invite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_config_game_invite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_load_config_game_invite_Parameter::MergeFrom(from.param());
  }
}

void proc_load_config_game_invite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_config_game_invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_config_game_invite::CopyFrom(const proc_load_config_game_invite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_config_game_invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_config_game_invite::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_load_config_game_invite::Swap(proc_load_config_game_invite* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_config_game_invite* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_config_game_invite::UnsafeArenaSwap(proc_load_config_game_invite* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_config_game_invite::InternalSwap(proc_load_config_game_invite* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_config_game_invite::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserFriend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserFriend::kOwnerTicketidFieldNumber;
const int UserFriend::kFriendTicketidFieldNumber;
const int UserFriend::kStateFieldNumber;
const int UserFriend::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserFriend::UserFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_UserFriend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserFriend)
}
UserFriend::UserFriend(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserFriend.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserFriend)
}
UserFriend::UserFriend(const UserFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_ticketid_, &from.owner_ticketid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:db.UserFriend)
}

void UserFriend::SharedCtor() {
  ::memset(&owner_ticketid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(state_));
}

UserFriend::~UserFriend() {
  // @@protoc_insertion_point(destructor:db.UserFriend)
  SharedDtor();
}

void UserFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserFriend::ArenaDtor(void* object) {
  UserFriend* _this = reinterpret_cast< UserFriend* >(object);
  (void)_this;
}
void UserFriend::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserFriend::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserFriend& UserFriend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserFriend.base);
  return *internal_default_instance();
}


void UserFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&owner_ticketid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserFriend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 owner_ticketid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_owner_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 friend_ticketid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_friend_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 optime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserFriend)
  return false;
#undef DO_
}

void UserFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 owner_ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->owner_ticketid(), output);
  }

  // required int32 friend_ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->friend_ticketid(), output);
  }

  // required int32 state = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // optional sfixed64 optime = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserFriend)
}

::google::protobuf::uint8* UserFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 owner_ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->owner_ticketid(), target);
  }

  // required int32 friend_ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->friend_ticketid(), target);
  }

  // required int32 state = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // optional sfixed64 optime = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserFriend)
  return target;
}

size_t UserFriend::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserFriend)
  size_t total_size = 0;

  if (has_owner_ticketid()) {
    // required int32 owner_ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_ticketid());
  }

  if (has_friend_ticketid()) {
    // required int32 friend_ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_ticketid());
  }

  if (has_state()) {
    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  return total_size;
}
size_t UserFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserFriend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required int32 owner_ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_ticketid());

    // required int32 friend_ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_ticketid());

    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional sfixed64 optime = 4;
  if (has_optime()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const UserFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserFriend)
    MergeFrom(*source);
  }
}

void UserFriend::MergeFrom(const UserFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      owner_ticketid_ = from.owner_ticketid_;
    }
    if (cached_has_bits & 0x00000002u) {
      friend_ticketid_ = from.friend_ticketid_;
    }
    if (cached_has_bits & 0x00000004u) {
      optime_ = from.optime_;
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserFriend::CopyFrom(const UserFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserFriend::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  return true;
}

void UserFriend::Swap(UserFriend* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserFriend* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserFriend::UnsafeArenaSwap(UserFriend* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserFriend::InternalSwap(UserFriend* other) {
  using std::swap;
  swap(owner_ticketid_, other->owner_ticketid_);
  swap(friend_ticketid_, other->friend_ticketid_);
  swap(optime_, other->optime_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserFriend::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserFriendList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserFriendList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserFriendList::UserFriendList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_UserFriendList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserFriendList)
}
UserFriendList::UserFriendList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserFriendList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserFriendList)
}
UserFriendList::UserFriendList(const UserFriendList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.UserFriendList)
}

void UserFriendList::SharedCtor() {
}

UserFriendList::~UserFriendList() {
  // @@protoc_insertion_point(destructor:db.UserFriendList)
  SharedDtor();
}

void UserFriendList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserFriendList::ArenaDtor(void* object) {
  UserFriendList* _this = reinterpret_cast< UserFriendList* >(object);
  (void)_this;
}
void UserFriendList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserFriendList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserFriendList::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserFriendList& UserFriendList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserFriendList.base);
  return *internal_default_instance();
}


void UserFriendList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserFriendList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserFriendList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.UserFriend list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserFriendList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserFriendList)
  return false;
#undef DO_
}

void UserFriendList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.UserFriend list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserFriendList)
}

::google::protobuf::uint8* UserFriendList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.UserFriend list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserFriendList)
  return target;
}

size_t UserFriendList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserFriendList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.UserFriend list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserFriendList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserFriendList)
  GOOGLE_DCHECK_NE(&from, this);
  const UserFriendList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserFriendList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserFriendList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserFriendList)
    MergeFrom(*source);
  }
}

void UserFriendList::MergeFrom(const UserFriendList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserFriendList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void UserFriendList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserFriendList::CopyFrom(const UserFriendList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserFriendList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void UserFriendList::Swap(UserFriendList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserFriendList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserFriendList::UnsafeArenaSwap(UserFriendList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserFriendList::InternalSwap(UserFriendList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserFriendList::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameStatsUserFriend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameStatsUserFriend::kOwnerTicketidFieldNumber;
const int GameStatsUserFriend::kFriendTicketidFieldNumber;
const int GameStatsUserFriend::kChallengeTimeFieldNumber;
const int GameStatsUserFriend::kChallengeScoreFieldNumber;
const int GameStatsUserFriend::kGiftStateFieldNumber;
const int GameStatsUserFriend::kGiftItemTypeidFieldNumber;
const int GameStatsUserFriend::kGiftItemNumFieldNumber;
const int GameStatsUserFriend::kGiftCreateTimeFieldNumber;
const int GameStatsUserFriend::kGiftAcceptTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStatsUserFriend::GameStatsUserFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_GameStatsUserFriend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameStatsUserFriend)
}
GameStatsUserFriend::GameStatsUserFriend(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_GameStatsUserFriend.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameStatsUserFriend)
}
GameStatsUserFriend::GameStatsUserFriend(const GameStatsUserFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_ticketid_, &from.owner_ticketid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gift_accept_time_) -
    reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(gift_accept_time_));
  // @@protoc_insertion_point(copy_constructor:db.GameStatsUserFriend)
}

void GameStatsUserFriend::SharedCtor() {
  ::memset(&owner_ticketid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gift_accept_time_) -
      reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(gift_accept_time_));
}

GameStatsUserFriend::~GameStatsUserFriend() {
  // @@protoc_insertion_point(destructor:db.GameStatsUserFriend)
  SharedDtor();
}

void GameStatsUserFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameStatsUserFriend::ArenaDtor(void* object) {
  GameStatsUserFriend* _this = reinterpret_cast< GameStatsUserFriend* >(object);
  (void)_this;
}
void GameStatsUserFriend::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameStatsUserFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameStatsUserFriend::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameStatsUserFriend& GameStatsUserFriend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_GameStatsUserFriend.base);
  return *internal_default_instance();
}


void GameStatsUserFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameStatsUserFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&owner_ticketid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gift_create_time_) -
        reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(gift_create_time_));
  }
  gift_accept_time_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameStatsUserFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameStatsUserFriend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 owner_ticketid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_owner_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 friend_ticketid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_friend_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 challenge_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_challenge_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &challenge_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 challenge_score = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_challenge_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &challenge_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gift_state = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_gift_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gift_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gift_item_typeid = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_gift_item_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gift_item_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gift_item_num = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_gift_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gift_item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 gift_create_time = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {
          set_has_gift_create_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &gift_create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 gift_accept_time = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {
          set_has_gift_accept_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &gift_accept_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameStatsUserFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameStatsUserFriend)
  return false;
#undef DO_
}

void GameStatsUserFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameStatsUserFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 owner_ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->owner_ticketid(), output);
  }

  // required int32 friend_ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->friend_ticketid(), output);
  }

  // optional sfixed64 challenge_time = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(11, this->challenge_time(), output);
  }

  // optional int32 challenge_score = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->challenge_score(), output);
  }

  // optional int32 gift_state = 21;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->gift_state(), output);
  }

  // optional uint64 gift_item_typeid = 22;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(22, this->gift_item_typeid(), output);
  }

  // optional int32 gift_item_num = 23;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->gift_item_num(), output);
  }

  // optional sfixed64 gift_create_time = 24;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(24, this->gift_create_time(), output);
  }

  // optional sfixed64 gift_accept_time = 25;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(25, this->gift_accept_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameStatsUserFriend)
}

::google::protobuf::uint8* GameStatsUserFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameStatsUserFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 owner_ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->owner_ticketid(), target);
  }

  // required int32 friend_ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->friend_ticketid(), target);
  }

  // optional sfixed64 challenge_time = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(11, this->challenge_time(), target);
  }

  // optional int32 challenge_score = 12;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->challenge_score(), target);
  }

  // optional int32 gift_state = 21;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->gift_state(), target);
  }

  // optional uint64 gift_item_typeid = 22;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(22, this->gift_item_typeid(), target);
  }

  // optional int32 gift_item_num = 23;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->gift_item_num(), target);
  }

  // optional sfixed64 gift_create_time = 24;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(24, this->gift_create_time(), target);
  }

  // optional sfixed64 gift_accept_time = 25;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(25, this->gift_accept_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameStatsUserFriend)
  return target;
}

size_t GameStatsUserFriend::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameStatsUserFriend)
  size_t total_size = 0;

  if (has_owner_ticketid()) {
    // required int32 owner_ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_ticketid());
  }

  if (has_friend_ticketid()) {
    // required int32 friend_ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_ticketid());
  }

  return total_size;
}
size_t GameStatsUserFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameStatsUserFriend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 owner_ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_ticketid());

    // required int32 friend_ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_ticketid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 252u) {
    // optional int32 gift_item_num = 23;
    if (has_gift_item_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gift_item_num());
    }

    // optional sfixed64 challenge_time = 11;
    if (has_challenge_time()) {
      total_size += 1 + 8;
    }

    // optional int32 challenge_score = 12;
    if (has_challenge_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->challenge_score());
    }

    // optional int32 gift_state = 21;
    if (has_gift_state()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gift_state());
    }

    // optional uint64 gift_item_typeid = 22;
    if (has_gift_item_typeid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gift_item_typeid());
    }

    // optional sfixed64 gift_create_time = 24;
    if (has_gift_create_time()) {
      total_size += 2 + 8;
    }

  }
  // optional sfixed64 gift_accept_time = 25;
  if (has_gift_accept_time()) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameStatsUserFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameStatsUserFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const GameStatsUserFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStatsUserFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameStatsUserFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameStatsUserFriend)
    MergeFrom(*source);
  }
}

void GameStatsUserFriend::MergeFrom(const GameStatsUserFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameStatsUserFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      owner_ticketid_ = from.owner_ticketid_;
    }
    if (cached_has_bits & 0x00000002u) {
      friend_ticketid_ = from.friend_ticketid_;
    }
    if (cached_has_bits & 0x00000004u) {
      gift_item_num_ = from.gift_item_num_;
    }
    if (cached_has_bits & 0x00000008u) {
      challenge_time_ = from.challenge_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      challenge_score_ = from.challenge_score_;
    }
    if (cached_has_bits & 0x00000020u) {
      gift_state_ = from.gift_state_;
    }
    if (cached_has_bits & 0x00000040u) {
      gift_item_typeid_ = from.gift_item_typeid_;
    }
    if (cached_has_bits & 0x00000080u) {
      gift_create_time_ = from.gift_create_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_gift_accept_time(from.gift_accept_time());
  }
}

void GameStatsUserFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameStatsUserFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStatsUserFriend::CopyFrom(const GameStatsUserFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameStatsUserFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameStatsUserFriend::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GameStatsUserFriend::Swap(GameStatsUserFriend* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameStatsUserFriend* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameStatsUserFriend::UnsafeArenaSwap(GameStatsUserFriend* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameStatsUserFriend::InternalSwap(GameStatsUserFriend* other) {
  using std::swap;
  swap(owner_ticketid_, other->owner_ticketid_);
  swap(friend_ticketid_, other->friend_ticketid_);
  swap(gift_item_num_, other->gift_item_num_);
  swap(challenge_time_, other->challenge_time_);
  swap(challenge_score_, other->challenge_score_);
  swap(gift_state_, other->gift_state_);
  swap(gift_item_typeid_, other->gift_item_typeid_);
  swap(gift_create_time_, other->gift_create_time_);
  swap(gift_accept_time_, other->gift_accept_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameStatsUserFriend::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameStatsUserFriendList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameStatsUserFriendList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStatsUserFriendList::GameStatsUserFriendList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_GameStatsUserFriendList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameStatsUserFriendList)
}
GameStatsUserFriendList::GameStatsUserFriendList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_GameStatsUserFriendList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameStatsUserFriendList)
}
GameStatsUserFriendList::GameStatsUserFriendList(const GameStatsUserFriendList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.GameStatsUserFriendList)
}

void GameStatsUserFriendList::SharedCtor() {
}

GameStatsUserFriendList::~GameStatsUserFriendList() {
  // @@protoc_insertion_point(destructor:db.GameStatsUserFriendList)
  SharedDtor();
}

void GameStatsUserFriendList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameStatsUserFriendList::ArenaDtor(void* object) {
  GameStatsUserFriendList* _this = reinterpret_cast< GameStatsUserFriendList* >(object);
  (void)_this;
}
void GameStatsUserFriendList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameStatsUserFriendList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameStatsUserFriendList::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameStatsUserFriendList& GameStatsUserFriendList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_GameStatsUserFriendList.base);
  return *internal_default_instance();
}


void GameStatsUserFriendList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameStatsUserFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameStatsUserFriendList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameStatsUserFriendList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.GameStatsUserFriend list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameStatsUserFriendList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameStatsUserFriendList)
  return false;
#undef DO_
}

void GameStatsUserFriendList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameStatsUserFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.GameStatsUserFriend list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameStatsUserFriendList)
}

::google::protobuf::uint8* GameStatsUserFriendList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameStatsUserFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.GameStatsUserFriend list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameStatsUserFriendList)
  return target;
}

size_t GameStatsUserFriendList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameStatsUserFriendList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.GameStatsUserFriend list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameStatsUserFriendList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameStatsUserFriendList)
  GOOGLE_DCHECK_NE(&from, this);
  const GameStatsUserFriendList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStatsUserFriendList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameStatsUserFriendList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameStatsUserFriendList)
    MergeFrom(*source);
  }
}

void GameStatsUserFriendList::MergeFrom(const GameStatsUserFriendList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameStatsUserFriendList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void GameStatsUserFriendList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameStatsUserFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStatsUserFriendList::CopyFrom(const GameStatsUserFriendList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameStatsUserFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameStatsUserFriendList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void GameStatsUserFriendList::Swap(GameStatsUserFriendList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameStatsUserFriendList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameStatsUserFriendList::UnsafeArenaSwap(GameStatsUserFriendList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameStatsUserFriendList::InternalSwap(GameStatsUserFriendList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameStatsUserFriendList::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserGameInvite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGameInvite::kOwnerTicketidFieldNumber;
const int UserGameInvite::kInviteeTicketidFieldNumber;
const int UserGameInvite::kInviteeLevelFieldNumber;
const int UserGameInvite::kStateFieldNumber;
const int UserGameInvite::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGameInvite::UserGameInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInvite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserGameInvite)
}
UserGameInvite::UserGameInvite(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserGameInvite.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserGameInvite)
}
UserGameInvite::UserGameInvite(const UserGameInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_ticketid_, &from.owner_ticketid_,
    static_cast<size_t>(reinterpret_cast<char*>(&optime_) -
    reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(optime_));
  // @@protoc_insertion_point(copy_constructor:db.UserGameInvite)
}

void UserGameInvite::SharedCtor() {
  ::memset(&owner_ticketid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optime_) -
      reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(optime_));
}

UserGameInvite::~UserGameInvite() {
  // @@protoc_insertion_point(destructor:db.UserGameInvite)
  SharedDtor();
}

void UserGameInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserGameInvite::ArenaDtor(void* object) {
  UserGameInvite* _this = reinterpret_cast< UserGameInvite* >(object);
  (void)_this;
}
void UserGameInvite::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserGameInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserGameInvite::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserGameInvite& UserGameInvite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserGameInvite.base);
  return *internal_default_instance();
}


void UserGameInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserGameInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&owner_ticketid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optime_) -
        reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(optime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserGameInvite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserGameInvite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 owner_ticketid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_owner_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 invitee_ticketid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_invitee_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invitee_ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 invitee_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_invitee_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invitee_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 optime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserGameInvite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserGameInvite)
  return false;
#undef DO_
}

void UserGameInvite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserGameInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 owner_ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->owner_ticketid(), output);
  }

  // required int32 invitee_ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->invitee_ticketid(), output);
  }

  // required int32 invitee_level = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->invitee_level(), output);
  }

  // required int32 state = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // optional sfixed64 optime = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(5, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserGameInvite)
}

::google::protobuf::uint8* UserGameInvite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserGameInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 owner_ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->owner_ticketid(), target);
  }

  // required int32 invitee_ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->invitee_ticketid(), target);
  }

  // required int32 invitee_level = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->invitee_level(), target);
  }

  // required int32 state = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // optional sfixed64 optime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(5, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserGameInvite)
  return target;
}

size_t UserGameInvite::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserGameInvite)
  size_t total_size = 0;

  if (has_owner_ticketid()) {
    // required int32 owner_ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_ticketid());
  }

  if (has_invitee_ticketid()) {
    // required int32 invitee_ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->invitee_ticketid());
  }

  if (has_invitee_level()) {
    // required int32 invitee_level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->invitee_level());
  }

  if (has_state()) {
    // required int32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  return total_size;
}
size_t UserGameInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserGameInvite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 owner_ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_ticketid());

    // required int32 invitee_ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->invitee_ticketid());

    // required int32 invitee_level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->invitee_level());

    // required int32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional sfixed64 optime = 5;
  if (has_optime()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserGameInvite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserGameInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const UserGameInvite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserGameInvite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserGameInvite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserGameInvite)
    MergeFrom(*source);
  }
}

void UserGameInvite::MergeFrom(const UserGameInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserGameInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      owner_ticketid_ = from.owner_ticketid_;
    }
    if (cached_has_bits & 0x00000002u) {
      invitee_ticketid_ = from.invitee_ticketid_;
    }
    if (cached_has_bits & 0x00000004u) {
      invitee_level_ = from.invitee_level_;
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000010u) {
      optime_ = from.optime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserGameInvite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserGameInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserGameInvite::CopyFrom(const UserGameInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserGameInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGameInvite::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void UserGameInvite::Swap(UserGameInvite* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserGameInvite* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserGameInvite::UnsafeArenaSwap(UserGameInvite* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserGameInvite::InternalSwap(UserGameInvite* other) {
  using std::swap;
  swap(owner_ticketid_, other->owner_ticketid_);
  swap(invitee_ticketid_, other->invitee_ticketid_);
  swap(invitee_level_, other->invitee_level_);
  swap(state_, other->state_);
  swap(optime_, other->optime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserGameInvite::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserGameInviteList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGameInviteList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGameInviteList::UserGameInviteList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserGameInviteList)
}
UserGameInviteList::UserGameInviteList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserGameInviteList)
}
UserGameInviteList::UserGameInviteList(const UserGameInviteList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.UserGameInviteList)
}

void UserGameInviteList::SharedCtor() {
}

UserGameInviteList::~UserGameInviteList() {
  // @@protoc_insertion_point(destructor:db.UserGameInviteList)
  SharedDtor();
}

void UserGameInviteList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserGameInviteList::ArenaDtor(void* object) {
  UserGameInviteList* _this = reinterpret_cast< UserGameInviteList* >(object);
  (void)_this;
}
void UserGameInviteList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserGameInviteList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserGameInviteList::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserGameInviteList& UserGameInviteList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteList.base);
  return *internal_default_instance();
}


void UserGameInviteList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserGameInviteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserGameInviteList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserGameInviteList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.UserGameInvite list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserGameInviteList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserGameInviteList)
  return false;
#undef DO_
}

void UserGameInviteList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserGameInviteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.UserGameInvite list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserGameInviteList)
}

::google::protobuf::uint8* UserGameInviteList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserGameInviteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.UserGameInvite list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserGameInviteList)
  return target;
}

size_t UserGameInviteList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserGameInviteList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.UserGameInvite list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserGameInviteList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserGameInviteList)
  GOOGLE_DCHECK_NE(&from, this);
  const UserGameInviteList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserGameInviteList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserGameInviteList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserGameInviteList)
    MergeFrom(*source);
  }
}

void UserGameInviteList::MergeFrom(const UserGameInviteList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserGameInviteList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void UserGameInviteList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserGameInviteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserGameInviteList::CopyFrom(const UserGameInviteList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserGameInviteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGameInviteList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void UserGameInviteList::Swap(UserGameInviteList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserGameInviteList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserGameInviteList::UnsafeArenaSwap(UserGameInviteList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserGameInviteList::InternalSwap(UserGameInviteList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserGameInviteList::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserGameInviteReward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGameInviteReward::kOwnerTicketidFieldNumber;
const int UserGameInviteReward::kSlotidFieldNumber;
const int UserGameInviteReward::kRewardStateFieldNumber;
const int UserGameInviteReward::kRewardReasonFieldNumber;
const int UserGameInviteReward::kItemTypeFieldNumber;
const int UserGameInviteReward::kItemTypeidFieldNumber;
const int UserGameInviteReward::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGameInviteReward::UserGameInviteReward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteReward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserGameInviteReward)
}
UserGameInviteReward::UserGameInviteReward(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteReward.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserGameInviteReward)
}
UserGameInviteReward::UserGameInviteReward(const UserGameInviteReward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_ticketid_, &from.owner_ticketid_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:db.UserGameInviteReward)
}

void UserGameInviteReward::SharedCtor() {
  ::memset(&owner_ticketid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(item_num_));
}

UserGameInviteReward::~UserGameInviteReward() {
  // @@protoc_insertion_point(destructor:db.UserGameInviteReward)
  SharedDtor();
}

void UserGameInviteReward::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserGameInviteReward::ArenaDtor(void* object) {
  UserGameInviteReward* _this = reinterpret_cast< UserGameInviteReward* >(object);
  (void)_this;
}
void UserGameInviteReward::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserGameInviteReward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserGameInviteReward::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserGameInviteReward& UserGameInviteReward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteReward.base);
  return *internal_default_instance();
}


void UserGameInviteReward::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserGameInviteReward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&owner_ticketid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_num_) -
        reinterpret_cast<char*>(&owner_ticketid_)) + sizeof(item_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserGameInviteReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserGameInviteReward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 owner_ticketid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_owner_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 slotid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_slotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 reward_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_reward_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 reward_reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_reward_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 item_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_item_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 item_typeid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_item_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 item_num = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserGameInviteReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserGameInviteReward)
  return false;
#undef DO_
}

void UserGameInviteReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserGameInviteReward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 owner_ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->owner_ticketid(), output);
  }

  // required int32 slotid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slotid(), output);
  }

  // required int32 reward_state = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->reward_state(), output);
  }

  // required int32 reward_reason = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reward_reason(), output);
  }

  // required int32 item_type = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->item_type(), output);
  }

  // required uint64 item_typeid = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->item_typeid(), output);
  }

  // required int32 item_num = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->item_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserGameInviteReward)
}

::google::protobuf::uint8* UserGameInviteReward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserGameInviteReward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 owner_ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->owner_ticketid(), target);
  }

  // required int32 slotid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slotid(), target);
  }

  // required int32 reward_state = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->reward_state(), target);
  }

  // required int32 reward_reason = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reward_reason(), target);
  }

  // required int32 item_type = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->item_type(), target);
  }

  // required uint64 item_typeid = 12;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->item_typeid(), target);
  }

  // required int32 item_num = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->item_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserGameInviteReward)
  return target;
}

size_t UserGameInviteReward::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserGameInviteReward)
  size_t total_size = 0;

  if (has_owner_ticketid()) {
    // required int32 owner_ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_ticketid());
  }

  if (has_slotid()) {
    // required int32 slotid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slotid());
  }

  if (has_reward_state()) {
    // required int32 reward_state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reward_state());
  }

  if (has_reward_reason()) {
    // required int32 reward_reason = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reward_reason());
  }

  if (has_item_typeid()) {
    // required uint64 item_typeid = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());
  }

  if (has_item_type()) {
    // required int32 item_type = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_type());
  }

  if (has_item_num()) {
    // required int32 item_num = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_num());
  }

  return total_size;
}
size_t UserGameInviteReward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserGameInviteReward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required int32 owner_ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_ticketid());

    // required int32 slotid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->slotid());

    // required int32 reward_state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reward_state());

    // required int32 reward_reason = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reward_reason());

    // required uint64 item_typeid = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());

    // required int32 item_type = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_type());

    // required int32 item_num = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserGameInviteReward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserGameInviteReward)
  GOOGLE_DCHECK_NE(&from, this);
  const UserGameInviteReward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserGameInviteReward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserGameInviteReward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserGameInviteReward)
    MergeFrom(*source);
  }
}

void UserGameInviteReward::MergeFrom(const UserGameInviteReward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserGameInviteReward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      owner_ticketid_ = from.owner_ticketid_;
    }
    if (cached_has_bits & 0x00000002u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000004u) {
      reward_state_ = from.reward_state_;
    }
    if (cached_has_bits & 0x00000008u) {
      reward_reason_ = from.reward_reason_;
    }
    if (cached_has_bits & 0x00000010u) {
      item_typeid_ = from.item_typeid_;
    }
    if (cached_has_bits & 0x00000020u) {
      item_type_ = from.item_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      item_num_ = from.item_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserGameInviteReward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserGameInviteReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserGameInviteReward::CopyFrom(const UserGameInviteReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserGameInviteReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGameInviteReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void UserGameInviteReward::Swap(UserGameInviteReward* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserGameInviteReward* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserGameInviteReward::UnsafeArenaSwap(UserGameInviteReward* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserGameInviteReward::InternalSwap(UserGameInviteReward* other) {
  using std::swap;
  swap(owner_ticketid_, other->owner_ticketid_);
  swap(slotid_, other->slotid_);
  swap(reward_state_, other->reward_state_);
  swap(reward_reason_, other->reward_reason_);
  swap(item_typeid_, other->item_typeid_);
  swap(item_type_, other->item_type_);
  swap(item_num_, other->item_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserGameInviteReward::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserGameInviteRewardList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGameInviteRewardList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGameInviteRewardList::UserGameInviteRewardList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteRewardList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserGameInviteRewardList)
}
UserGameInviteRewardList::UserGameInviteRewardList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteRewardList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserGameInviteRewardList)
}
UserGameInviteRewardList::UserGameInviteRewardList(const UserGameInviteRewardList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.UserGameInviteRewardList)
}

void UserGameInviteRewardList::SharedCtor() {
}

UserGameInviteRewardList::~UserGameInviteRewardList() {
  // @@protoc_insertion_point(destructor:db.UserGameInviteRewardList)
  SharedDtor();
}

void UserGameInviteRewardList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserGameInviteRewardList::ArenaDtor(void* object) {
  UserGameInviteRewardList* _this = reinterpret_cast< UserGameInviteRewardList* >(object);
  (void)_this;
}
void UserGameInviteRewardList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserGameInviteRewardList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserGameInviteRewardList::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserGameInviteRewardList& UserGameInviteRewardList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_UserGameInviteRewardList.base);
  return *internal_default_instance();
}


void UserGameInviteRewardList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserGameInviteRewardList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserGameInviteRewardList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserGameInviteRewardList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.UserGameInviteReward list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserGameInviteRewardList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserGameInviteRewardList)
  return false;
#undef DO_
}

void UserGameInviteRewardList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserGameInviteRewardList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.UserGameInviteReward list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserGameInviteRewardList)
}

::google::protobuf::uint8* UserGameInviteRewardList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserGameInviteRewardList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.UserGameInviteReward list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserGameInviteRewardList)
  return target;
}

size_t UserGameInviteRewardList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserGameInviteRewardList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.UserGameInviteReward list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserGameInviteRewardList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserGameInviteRewardList)
  GOOGLE_DCHECK_NE(&from, this);
  const UserGameInviteRewardList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserGameInviteRewardList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserGameInviteRewardList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserGameInviteRewardList)
    MergeFrom(*source);
  }
}

void UserGameInviteRewardList::MergeFrom(const UserGameInviteRewardList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserGameInviteRewardList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void UserGameInviteRewardList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserGameInviteRewardList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserGameInviteRewardList::CopyFrom(const UserGameInviteRewardList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserGameInviteRewardList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGameInviteRewardList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void UserGameInviteRewardList::Swap(UserGameInviteRewardList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserGameInviteRewardList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserGameInviteRewardList::UnsafeArenaSwap(UserGameInviteRewardList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserGameInviteRewardList::InternalSwap(UserGameInviteRewardList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserGameInviteRewardList::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_friends_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_friends_Parameter::proc_i_load_user_friends_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_friends.Parameter)
}
proc_i_load_user_friends_Parameter::proc_i_load_user_friends_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_friends.Parameter)
}
proc_i_load_user_friends_Parameter::proc_i_load_user_friends_Parameter(const proc_i_load_user_friends_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_friends.Parameter)
}

void proc_i_load_user_friends_Parameter::SharedCtor() {
}

proc_i_load_user_friends_Parameter::~proc_i_load_user_friends_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_friends.Parameter)
  SharedDtor();
}

void proc_i_load_user_friends_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_i_load_user_friends_Parameter::ArenaDtor(void* object) {
  proc_i_load_user_friends_Parameter* _this = reinterpret_cast< proc_i_load_user_friends_Parameter* >(object);
  (void)_this;
}
void proc_i_load_user_friends_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_friends_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_friends_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_friends_Parameter& proc_i_load_user_friends_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends_Parameter.base);
  return *internal_default_instance();
}


void proc_i_load_user_friends_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_friends.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_friends_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_friends.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_friends.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_friends.Parameter)
  return false;
#undef DO_
}

void proc_i_load_user_friends_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_friends.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_friends.Parameter)
}

::google::protobuf::uint8* proc_i_load_user_friends_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_friends.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_friends.Parameter)
  return target;
}

size_t proc_i_load_user_friends_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_friends.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_friends_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_friends.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_friends_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_friends_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_friends.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_friends.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_load_user_friends_Parameter::MergeFrom(const proc_i_load_user_friends_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_friends.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_i_load_user_friends_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_friends.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_friends_Parameter::CopyFrom(const proc_i_load_user_friends_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_friends.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_friends_Parameter::IsInitialized() const {
  return true;
}

void proc_i_load_user_friends_Parameter::Swap(proc_i_load_user_friends_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_friends_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_friends_Parameter::UnsafeArenaSwap(proc_i_load_user_friends_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_friends_Parameter::InternalSwap(proc_i_load_user_friends_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_friends_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_friends_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_friends_ReturnRecord_default_instance_._instance.get_mutable()->item_ = const_cast< ::db::UserFriend*>(
      ::db::UserFriend::internal_default_instance());
}
void proc_i_load_user_friends_ReturnRecord::unsafe_arena_set_allocated_item(
    ::db::UserFriend* item) {
  if (GetArenaNoVirtual() == NULL) {
    delete item_;
  }
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_friends.ReturnRecord.item)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_friends_ReturnRecord::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_friends_ReturnRecord::proc_i_load_user_friends_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_friends.ReturnRecord)
}
proc_i_load_user_friends_ReturnRecord::proc_i_load_user_friends_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_friends.ReturnRecord)
}
proc_i_load_user_friends_ReturnRecord::proc_i_load_user_friends_ReturnRecord(const proc_i_load_user_friends_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::db::UserFriend(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_friends.ReturnRecord)
}

void proc_i_load_user_friends_ReturnRecord::SharedCtor() {
  item_ = NULL;
}

proc_i_load_user_friends_ReturnRecord::~proc_i_load_user_friends_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_friends.ReturnRecord)
  SharedDtor();
}

void proc_i_load_user_friends_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete item_;
}

void proc_i_load_user_friends_ReturnRecord::ArenaDtor(void* object) {
  proc_i_load_user_friends_ReturnRecord* _this = reinterpret_cast< proc_i_load_user_friends_ReturnRecord* >(object);
  (void)_this;
}
void proc_i_load_user_friends_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_friends_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_friends_ReturnRecord::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_friends_ReturnRecord& proc_i_load_user_friends_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_i_load_user_friends_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_friends.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(item_ != NULL);
    item_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_friends_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_friends.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserFriend item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_friends.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_friends.ReturnRecord)
  return false;
#undef DO_
}

void proc_i_load_user_friends_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_friends.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserFriend item = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_item(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_friends.ReturnRecord)
}

::google::protobuf::uint8* proc_i_load_user_friends_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_friends.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserFriend item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_item(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_friends.ReturnRecord)
  return target;
}

size_t proc_i_load_user_friends_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_friends.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserFriend item = 1;
  if (has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_friends_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_friends.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_friends_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_friends_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_friends.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_friends.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_i_load_user_friends_ReturnRecord::MergeFrom(const proc_i_load_user_friends_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_friends.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::db::UserFriend::MergeFrom(from.item());
  }
}

void proc_i_load_user_friends_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_friends.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_friends_ReturnRecord::CopyFrom(const proc_i_load_user_friends_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_friends.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_friends_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_item()) {
    if (!this->item_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_load_user_friends_ReturnRecord::Swap(proc_i_load_user_friends_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_friends_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_friends_ReturnRecord::UnsafeArenaSwap(proc_i_load_user_friends_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_friends_ReturnRecord::InternalSwap(proc_i_load_user_friends_ReturnRecord* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_friends_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_friends::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_friends_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_load_user_friends_Parameter*>(
      ::db::proc_i_load_user_friends_Parameter::internal_default_instance());
}
void proc_i_load_user_friends::unsafe_arena_set_allocated_param(
    ::db::proc_i_load_user_friends_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_friends.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_friends::kParamFieldNumber;
const int proc_i_load_user_friends::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_friends::proc_i_load_user_friends()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_friends)
}
proc_i_load_user_friends::proc_i_load_user_friends(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_friends)
}
proc_i_load_user_friends::proc_i_load_user_friends(const proc_i_load_user_friends& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_load_user_friends_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_friends)
}

void proc_i_load_user_friends::SharedCtor() {
  param_ = NULL;
}

proc_i_load_user_friends::~proc_i_load_user_friends() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_friends)
  SharedDtor();
}

void proc_i_load_user_friends::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_load_user_friends::ArenaDtor(void* object) {
  proc_i_load_user_friends* _this = reinterpret_cast< proc_i_load_user_friends* >(object);
  (void)_this;
}
void proc_i_load_user_friends::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_friends::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_friends::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_friends& proc_i_load_user_friends::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_friends.base);
  return *internal_default_instance();
}


void proc_i_load_user_friends::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_friends)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_friends::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_friends)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_load_user_friends.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_i_load_user_friends.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_friends)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_friends)
  return false;
#undef DO_
}

void proc_i_load_user_friends::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_friends)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_friends.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_i_load_user_friends.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_friends)
}

::google::protobuf::uint8* proc_i_load_user_friends::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_friends)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_friends.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_i_load_user_friends.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_friends)
  return target;
}

size_t proc_i_load_user_friends::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_friends)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_i_load_user_friends.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_i_load_user_friends.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_friends::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_friends)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_friends* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_friends>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_friends)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_friends)
    MergeFrom(*source);
  }
}

void proc_i_load_user_friends::MergeFrom(const proc_i_load_user_friends& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_friends)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_i_load_user_friends_Parameter::MergeFrom(from.param());
  }
}

void proc_i_load_user_friends::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_friends)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_friends::CopyFrom(const proc_i_load_user_friends& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_friends)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_friends::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_i_load_user_friends::Swap(proc_i_load_user_friends* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_friends* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_friends::UnsafeArenaSwap(proc_i_load_user_friends* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_friends::InternalSwap(proc_i_load_user_friends* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_friends::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_friend_Parameter::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_friend_Parameter_default_instance_._instance.get_mutable()->p_friend_ = const_cast< ::db::UserFriend*>(
      ::db::UserFriend::internal_default_instance());
}
void proc_i_save_user_friend_Parameter::unsafe_arena_set_allocated_p_friend(
    ::db::UserFriend* p_friend) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_friend_;
  }
  p_friend_ = p_friend;
  if (p_friend) {
    set_has_p_friend();
  } else {
    clear_has_p_friend();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_friend.Parameter.p_friend)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_friend_Parameter::kPFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_friend_Parameter::proc_i_save_user_friend_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_friend_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_friend.Parameter)
}
proc_i_save_user_friend_Parameter::proc_i_save_user_friend_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_friend_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_friend.Parameter)
}
proc_i_save_user_friend_Parameter::proc_i_save_user_friend_Parameter(const proc_i_save_user_friend_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_friend()) {
    p_friend_ = new ::db::UserFriend(*from.p_friend_);
  } else {
    p_friend_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_friend.Parameter)
}

void proc_i_save_user_friend_Parameter::SharedCtor() {
  p_friend_ = NULL;
}

proc_i_save_user_friend_Parameter::~proc_i_save_user_friend_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_friend.Parameter)
  SharedDtor();
}

void proc_i_save_user_friend_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_friend_;
}

void proc_i_save_user_friend_Parameter::ArenaDtor(void* object) {
  proc_i_save_user_friend_Parameter* _this = reinterpret_cast< proc_i_save_user_friend_Parameter* >(object);
  (void)_this;
}
void proc_i_save_user_friend_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_friend_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_friend_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_friend_Parameter& proc_i_save_user_friend_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_friend_Parameter.base);
  return *internal_default_instance();
}


void proc_i_save_user_friend_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_friend.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_friend_ != NULL);
    p_friend_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_friend_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_friend.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserFriend p_friend = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_friend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_friend.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_friend.Parameter)
  return false;
#undef DO_
}

void proc_i_save_user_friend_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_friend.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserFriend p_friend = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_friend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_friend.Parameter)
}

::google::protobuf::uint8* proc_i_save_user_friend_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_friend.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserFriend p_friend = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_friend(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_friend.Parameter)
  return target;
}

size_t proc_i_save_user_friend_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_friend.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserFriend p_friend = 1;
  if (has_p_friend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_friend_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_friend_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_friend.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_friend_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_friend_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_friend.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_friend.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_save_user_friend_Parameter::MergeFrom(const proc_i_save_user_friend_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_friend.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_friend()) {
    mutable_p_friend()->::db::UserFriend::MergeFrom(from.p_friend());
  }
}

void proc_i_save_user_friend_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_friend.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_friend_Parameter::CopyFrom(const proc_i_save_user_friend_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_friend.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_friend_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_friend()) {
    if (!this->p_friend_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_friend_Parameter::Swap(proc_i_save_user_friend_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_friend_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_friend_Parameter::UnsafeArenaSwap(proc_i_save_user_friend_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_friend_Parameter::InternalSwap(proc_i_save_user_friend_Parameter* other) {
  using std::swap;
  swap(p_friend_, other->p_friend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_friend_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_friend::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_friend_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_save_user_friend_Parameter*>(
      ::db::proc_i_save_user_friend_Parameter::internal_default_instance());
}
void proc_i_save_user_friend::unsafe_arena_set_allocated_param(
    ::db::proc_i_save_user_friend_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_friend.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_friend::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_friend::proc_i_save_user_friend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_friend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_friend)
}
proc_i_save_user_friend::proc_i_save_user_friend(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_friend.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_friend)
}
proc_i_save_user_friend::proc_i_save_user_friend(const proc_i_save_user_friend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_save_user_friend_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_friend)
}

void proc_i_save_user_friend::SharedCtor() {
  param_ = NULL;
}

proc_i_save_user_friend::~proc_i_save_user_friend() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_friend)
  SharedDtor();
}

void proc_i_save_user_friend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_save_user_friend::ArenaDtor(void* object) {
  proc_i_save_user_friend* _this = reinterpret_cast< proc_i_save_user_friend* >(object);
  (void)_this;
}
void proc_i_save_user_friend::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_friend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_friend::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_friend& proc_i_save_user_friend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_friend.base);
  return *internal_default_instance();
}


void proc_i_save_user_friend::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_friend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_save_user_friend.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_friend)
  return false;
#undef DO_
}

void proc_i_save_user_friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_friend.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_friend)
}

::google::protobuf::uint8* proc_i_save_user_friend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_friend.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_friend)
  return target;
}

size_t proc_i_save_user_friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_friend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_i_save_user_friend.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_friend)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_friend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_friend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_friend)
    MergeFrom(*source);
  }
}

void proc_i_save_user_friend::MergeFrom(const proc_i_save_user_friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_friend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_i_save_user_friend_Parameter::MergeFrom(from.param());
  }
}

void proc_i_save_user_friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_friend::CopyFrom(const proc_i_save_user_friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_friend::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_friend::Swap(proc_i_save_user_friend* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_friend* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_friend::UnsafeArenaSwap(proc_i_save_user_friend* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_friend::InternalSwap(proc_i_save_user_friend* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_friend::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_game_invites_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_game_invites_Parameter::proc_i_load_user_game_invites_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_game_invites.Parameter)
}
proc_i_load_user_game_invites_Parameter::proc_i_load_user_game_invites_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_game_invites.Parameter)
}
proc_i_load_user_game_invites_Parameter::proc_i_load_user_game_invites_Parameter(const proc_i_load_user_game_invites_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_game_invites.Parameter)
}

void proc_i_load_user_game_invites_Parameter::SharedCtor() {
}

proc_i_load_user_game_invites_Parameter::~proc_i_load_user_game_invites_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_game_invites.Parameter)
  SharedDtor();
}

void proc_i_load_user_game_invites_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_i_load_user_game_invites_Parameter::ArenaDtor(void* object) {
  proc_i_load_user_game_invites_Parameter* _this = reinterpret_cast< proc_i_load_user_game_invites_Parameter* >(object);
  (void)_this;
}
void proc_i_load_user_game_invites_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_game_invites_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_game_invites_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_game_invites_Parameter& proc_i_load_user_game_invites_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites_Parameter.base);
  return *internal_default_instance();
}


void proc_i_load_user_game_invites_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_game_invites.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_game_invites_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_game_invites.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_game_invites.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_game_invites.Parameter)
  return false;
#undef DO_
}

void proc_i_load_user_game_invites_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_game_invites.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_game_invites.Parameter)
}

::google::protobuf::uint8* proc_i_load_user_game_invites_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_game_invites.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_game_invites.Parameter)
  return target;
}

size_t proc_i_load_user_game_invites_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_game_invites.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_game_invites_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_game_invites.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_game_invites_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_game_invites_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_game_invites.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_game_invites.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_load_user_game_invites_Parameter::MergeFrom(const proc_i_load_user_game_invites_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_game_invites.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_i_load_user_game_invites_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_game_invites.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_game_invites_Parameter::CopyFrom(const proc_i_load_user_game_invites_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_game_invites.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_game_invites_Parameter::IsInitialized() const {
  return true;
}

void proc_i_load_user_game_invites_Parameter::Swap(proc_i_load_user_game_invites_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_game_invites_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_game_invites_Parameter::UnsafeArenaSwap(proc_i_load_user_game_invites_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_game_invites_Parameter::InternalSwap(proc_i_load_user_game_invites_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_game_invites_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_game_invites_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_game_invites_ReturnRecord_default_instance_._instance.get_mutable()->game_invite_ = const_cast< ::db::UserGameInvite*>(
      ::db::UserGameInvite::internal_default_instance());
}
void proc_i_load_user_game_invites_ReturnRecord::unsafe_arena_set_allocated_game_invite(
    ::db::UserGameInvite* game_invite) {
  if (GetArenaNoVirtual() == NULL) {
    delete game_invite_;
  }
  game_invite_ = game_invite;
  if (game_invite) {
    set_has_game_invite();
  } else {
    clear_has_game_invite();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_game_invites.ReturnRecord.game_invite)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_game_invites_ReturnRecord::kGameInviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_game_invites_ReturnRecord::proc_i_load_user_game_invites_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_game_invites.ReturnRecord)
}
proc_i_load_user_game_invites_ReturnRecord::proc_i_load_user_game_invites_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_game_invites.ReturnRecord)
}
proc_i_load_user_game_invites_ReturnRecord::proc_i_load_user_game_invites_ReturnRecord(const proc_i_load_user_game_invites_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_game_invite()) {
    game_invite_ = new ::db::UserGameInvite(*from.game_invite_);
  } else {
    game_invite_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_game_invites.ReturnRecord)
}

void proc_i_load_user_game_invites_ReturnRecord::SharedCtor() {
  game_invite_ = NULL;
}

proc_i_load_user_game_invites_ReturnRecord::~proc_i_load_user_game_invites_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_game_invites.ReturnRecord)
  SharedDtor();
}

void proc_i_load_user_game_invites_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete game_invite_;
}

void proc_i_load_user_game_invites_ReturnRecord::ArenaDtor(void* object) {
  proc_i_load_user_game_invites_ReturnRecord* _this = reinterpret_cast< proc_i_load_user_game_invites_ReturnRecord* >(object);
  (void)_this;
}
void proc_i_load_user_game_invites_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_game_invites_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_game_invites_ReturnRecord::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_game_invites_ReturnRecord& proc_i_load_user_game_invites_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_i_load_user_game_invites_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_game_invites.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(game_invite_ != NULL);
    game_invite_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_game_invites_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_game_invites.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserGameInvite game_invite = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_game_invite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_game_invites.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_game_invites.ReturnRecord)
  return false;
#undef DO_
}

void proc_i_load_user_game_invites_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_game_invites.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserGameInvite game_invite = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_game_invite(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_game_invites.ReturnRecord)
}

::google::protobuf::uint8* proc_i_load_user_game_invites_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_game_invites.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserGameInvite game_invite = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_game_invite(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_game_invites.ReturnRecord)
  return target;
}

size_t proc_i_load_user_game_invites_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_game_invites.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserGameInvite game_invite = 1;
  if (has_game_invite()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *game_invite_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_game_invites_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_game_invites.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_game_invites_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_game_invites_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_game_invites.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_game_invites.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_i_load_user_game_invites_ReturnRecord::MergeFrom(const proc_i_load_user_game_invites_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_game_invites.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_game_invite()) {
    mutable_game_invite()->::db::UserGameInvite::MergeFrom(from.game_invite());
  }
}

void proc_i_load_user_game_invites_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_game_invites.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_game_invites_ReturnRecord::CopyFrom(const proc_i_load_user_game_invites_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_game_invites.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_game_invites_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_game_invite()) {
    if (!this->game_invite_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_load_user_game_invites_ReturnRecord::Swap(proc_i_load_user_game_invites_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_game_invites_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_game_invites_ReturnRecord::UnsafeArenaSwap(proc_i_load_user_game_invites_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_game_invites_ReturnRecord::InternalSwap(proc_i_load_user_game_invites_ReturnRecord* other) {
  using std::swap;
  swap(game_invite_, other->game_invite_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_game_invites_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_game_invites::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_game_invites_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_load_user_game_invites_Parameter*>(
      ::db::proc_i_load_user_game_invites_Parameter::internal_default_instance());
}
void proc_i_load_user_game_invites::unsafe_arena_set_allocated_param(
    ::db::proc_i_load_user_game_invites_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_game_invites.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_game_invites::kParamFieldNumber;
const int proc_i_load_user_game_invites::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_game_invites::proc_i_load_user_game_invites()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_game_invites)
}
proc_i_load_user_game_invites::proc_i_load_user_game_invites(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_game_invites)
}
proc_i_load_user_game_invites::proc_i_load_user_game_invites(const proc_i_load_user_game_invites& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_load_user_game_invites_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_game_invites)
}

void proc_i_load_user_game_invites::SharedCtor() {
  param_ = NULL;
}

proc_i_load_user_game_invites::~proc_i_load_user_game_invites() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_game_invites)
  SharedDtor();
}

void proc_i_load_user_game_invites::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_load_user_game_invites::ArenaDtor(void* object) {
  proc_i_load_user_game_invites* _this = reinterpret_cast< proc_i_load_user_game_invites* >(object);
  (void)_this;
}
void proc_i_load_user_game_invites::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_game_invites::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_game_invites::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_game_invites& proc_i_load_user_game_invites::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invites.base);
  return *internal_default_instance();
}


void proc_i_load_user_game_invites::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_game_invites)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_game_invites::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_game_invites)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_load_user_game_invites.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_i_load_user_game_invites.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_game_invites)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_game_invites)
  return false;
#undef DO_
}

void proc_i_load_user_game_invites::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_game_invites)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_game_invites.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_i_load_user_game_invites.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_game_invites)
}

::google::protobuf::uint8* proc_i_load_user_game_invites::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_game_invites)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_game_invites.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_i_load_user_game_invites.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_game_invites)
  return target;
}

size_t proc_i_load_user_game_invites::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_game_invites)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_i_load_user_game_invites.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_i_load_user_game_invites.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_game_invites::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_game_invites)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_game_invites* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_game_invites>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_game_invites)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_game_invites)
    MergeFrom(*source);
  }
}

void proc_i_load_user_game_invites::MergeFrom(const proc_i_load_user_game_invites& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_game_invites)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_i_load_user_game_invites_Parameter::MergeFrom(from.param());
  }
}

void proc_i_load_user_game_invites::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_game_invites)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_game_invites::CopyFrom(const proc_i_load_user_game_invites& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_game_invites)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_game_invites::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_i_load_user_game_invites::Swap(proc_i_load_user_game_invites* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_game_invites* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_game_invites::UnsafeArenaSwap(proc_i_load_user_game_invites* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_game_invites::InternalSwap(proc_i_load_user_game_invites* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_game_invites::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_game_invite_rewards_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_game_invite_rewards_Parameter::proc_i_load_user_game_invite_rewards_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_game_invite_rewards.Parameter)
}
proc_i_load_user_game_invite_rewards_Parameter::proc_i_load_user_game_invite_rewards_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_game_invite_rewards.Parameter)
}
proc_i_load_user_game_invite_rewards_Parameter::proc_i_load_user_game_invite_rewards_Parameter(const proc_i_load_user_game_invite_rewards_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_game_invite_rewards.Parameter)
}

void proc_i_load_user_game_invite_rewards_Parameter::SharedCtor() {
}

proc_i_load_user_game_invite_rewards_Parameter::~proc_i_load_user_game_invite_rewards_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_game_invite_rewards.Parameter)
  SharedDtor();
}

void proc_i_load_user_game_invite_rewards_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_i_load_user_game_invite_rewards_Parameter::ArenaDtor(void* object) {
  proc_i_load_user_game_invite_rewards_Parameter* _this = reinterpret_cast< proc_i_load_user_game_invite_rewards_Parameter* >(object);
  (void)_this;
}
void proc_i_load_user_game_invite_rewards_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_game_invite_rewards_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_game_invite_rewards_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_game_invite_rewards_Parameter& proc_i_load_user_game_invite_rewards_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards_Parameter.base);
  return *internal_default_instance();
}


void proc_i_load_user_game_invite_rewards_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_game_invite_rewards_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_game_invite_rewards.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_game_invite_rewards.Parameter)
  return false;
#undef DO_
}

void proc_i_load_user_game_invite_rewards_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_game_invite_rewards.Parameter)
}

::google::protobuf::uint8* proc_i_load_user_game_invite_rewards_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_game_invite_rewards.Parameter)
  return target;
}

size_t proc_i_load_user_game_invite_rewards_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_game_invite_rewards_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_game_invite_rewards_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_game_invite_rewards_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_game_invite_rewards.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_game_invite_rewards.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_load_user_game_invite_rewards_Parameter::MergeFrom(const proc_i_load_user_game_invite_rewards_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_i_load_user_game_invite_rewards_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_game_invite_rewards_Parameter::CopyFrom(const proc_i_load_user_game_invite_rewards_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_game_invite_rewards.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_game_invite_rewards_Parameter::IsInitialized() const {
  return true;
}

void proc_i_load_user_game_invite_rewards_Parameter::Swap(proc_i_load_user_game_invite_rewards_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_game_invite_rewards_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_game_invite_rewards_Parameter::UnsafeArenaSwap(proc_i_load_user_game_invite_rewards_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_game_invite_rewards_Parameter::InternalSwap(proc_i_load_user_game_invite_rewards_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_game_invite_rewards_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_game_invite_rewards_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_game_invite_rewards_ReturnRecord_default_instance_._instance.get_mutable()->reward_ = const_cast< ::db::UserGameInviteReward*>(
      ::db::UserGameInviteReward::internal_default_instance());
}
void proc_i_load_user_game_invite_rewards_ReturnRecord::unsafe_arena_set_allocated_reward(
    ::db::UserGameInviteReward* reward) {
  if (GetArenaNoVirtual() == NULL) {
    delete reward_;
  }
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_game_invite_rewards.ReturnRecord.reward)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_game_invite_rewards_ReturnRecord::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_game_invite_rewards_ReturnRecord::proc_i_load_user_game_invite_rewards_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
}
proc_i_load_user_game_invite_rewards_ReturnRecord::proc_i_load_user_game_invite_rewards_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
}
proc_i_load_user_game_invite_rewards_ReturnRecord::proc_i_load_user_game_invite_rewards_ReturnRecord(const proc_i_load_user_game_invite_rewards_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reward()) {
    reward_ = new ::db::UserGameInviteReward(*from.reward_);
  } else {
    reward_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::SharedCtor() {
  reward_ = NULL;
}

proc_i_load_user_game_invite_rewards_ReturnRecord::~proc_i_load_user_game_invite_rewards_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  SharedDtor();
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete reward_;
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::ArenaDtor(void* object) {
  proc_i_load_user_game_invite_rewards_ReturnRecord* _this = reinterpret_cast< proc_i_load_user_game_invite_rewards_ReturnRecord* >(object);
  (void)_this;
}
void proc_i_load_user_game_invite_rewards_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_game_invite_rewards_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_game_invite_rewards_ReturnRecord::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_game_invite_rewards_ReturnRecord& proc_i_load_user_game_invite_rewards_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_i_load_user_game_invite_rewards_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(reward_ != NULL);
    reward_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_game_invite_rewards_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserGameInviteReward reward = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  return false;
#undef DO_
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserGameInviteReward reward = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
}

::google::protobuf::uint8* proc_i_load_user_game_invite_rewards_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserGameInviteReward reward = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_reward(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  return target;
}

size_t proc_i_load_user_game_invite_rewards_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserGameInviteReward reward = 1;
  if (has_reward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reward_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_game_invite_rewards_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_game_invite_rewards_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::MergeFrom(const proc_i_load_user_game_invite_rewards_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reward()) {
    mutable_reward()->::db::UserGameInviteReward::MergeFrom(from.reward());
  }
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::CopyFrom(const proc_i_load_user_game_invite_rewards_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_game_invite_rewards.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_game_invite_rewards_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_reward()) {
    if (!this->reward_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_load_user_game_invite_rewards_ReturnRecord::Swap(proc_i_load_user_game_invite_rewards_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_game_invite_rewards_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_game_invite_rewards_ReturnRecord::UnsafeArenaSwap(proc_i_load_user_game_invite_rewards_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_game_invite_rewards_ReturnRecord::InternalSwap(proc_i_load_user_game_invite_rewards_ReturnRecord* other) {
  using std::swap;
  swap(reward_, other->reward_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_game_invite_rewards_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_user_game_invite_rewards::InitAsDefaultInstance() {
  ::db::_proc_i_load_user_game_invite_rewards_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_load_user_game_invite_rewards_Parameter*>(
      ::db::proc_i_load_user_game_invite_rewards_Parameter::internal_default_instance());
}
void proc_i_load_user_game_invite_rewards::unsafe_arena_set_allocated_param(
    ::db::proc_i_load_user_game_invite_rewards_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_game_invite_rewards.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_user_game_invite_rewards::kParamFieldNumber;
const int proc_i_load_user_game_invite_rewards::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_user_game_invite_rewards::proc_i_load_user_game_invite_rewards()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_user_game_invite_rewards)
}
proc_i_load_user_game_invite_rewards::proc_i_load_user_game_invite_rewards(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_user_game_invite_rewards)
}
proc_i_load_user_game_invite_rewards::proc_i_load_user_game_invite_rewards(const proc_i_load_user_game_invite_rewards& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_load_user_game_invite_rewards_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_user_game_invite_rewards)
}

void proc_i_load_user_game_invite_rewards::SharedCtor() {
  param_ = NULL;
}

proc_i_load_user_game_invite_rewards::~proc_i_load_user_game_invite_rewards() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_user_game_invite_rewards)
  SharedDtor();
}

void proc_i_load_user_game_invite_rewards::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_load_user_game_invite_rewards::ArenaDtor(void* object) {
  proc_i_load_user_game_invite_rewards* _this = reinterpret_cast< proc_i_load_user_game_invite_rewards* >(object);
  (void)_this;
}
void proc_i_load_user_game_invite_rewards::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_user_game_invite_rewards::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_user_game_invite_rewards::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_user_game_invite_rewards& proc_i_load_user_game_invite_rewards::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_load_user_game_invite_rewards.base);
  return *internal_default_instance();
}


void proc_i_load_user_game_invite_rewards::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_user_game_invite_rewards)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_user_game_invite_rewards::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_user_game_invite_rewards)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_load_user_game_invite_rewards.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_i_load_user_game_invite_rewards.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_user_game_invite_rewards)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_user_game_invite_rewards)
  return false;
#undef DO_
}

void proc_i_load_user_game_invite_rewards::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_user_game_invite_rewards)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_game_invite_rewards.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_i_load_user_game_invite_rewards.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_user_game_invite_rewards)
}

::google::protobuf::uint8* proc_i_load_user_game_invite_rewards::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_user_game_invite_rewards)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_user_game_invite_rewards.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_i_load_user_game_invite_rewards.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_user_game_invite_rewards)
  return target;
}

size_t proc_i_load_user_game_invite_rewards::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_user_game_invite_rewards)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_i_load_user_game_invite_rewards.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_i_load_user_game_invite_rewards.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_user_game_invite_rewards::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_user_game_invite_rewards)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_user_game_invite_rewards* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_user_game_invite_rewards>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_user_game_invite_rewards)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_user_game_invite_rewards)
    MergeFrom(*source);
  }
}

void proc_i_load_user_game_invite_rewards::MergeFrom(const proc_i_load_user_game_invite_rewards& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_user_game_invite_rewards)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_i_load_user_game_invite_rewards_Parameter::MergeFrom(from.param());
  }
}

void proc_i_load_user_game_invite_rewards::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_user_game_invite_rewards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_user_game_invite_rewards::CopyFrom(const proc_i_load_user_game_invite_rewards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_user_game_invite_rewards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_user_game_invite_rewards::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_i_load_user_game_invite_rewards::Swap(proc_i_load_user_game_invite_rewards* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_user_game_invite_rewards* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_user_game_invite_rewards::UnsafeArenaSwap(proc_i_load_user_game_invite_rewards* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_user_game_invite_rewards::InternalSwap(proc_i_load_user_game_invite_rewards* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_user_game_invite_rewards::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_game_invite_Parameter::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_game_invite_Parameter_default_instance_._instance.get_mutable()->p_invite_ = const_cast< ::db::UserGameInvite*>(
      ::db::UserGameInvite::internal_default_instance());
}
void proc_i_save_user_game_invite_Parameter::unsafe_arena_set_allocated_p_invite(
    ::db::UserGameInvite* p_invite) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_invite_;
  }
  p_invite_ = p_invite;
  if (p_invite) {
    set_has_p_invite();
  } else {
    clear_has_p_invite();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_game_invite.Parameter.p_invite)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_game_invite_Parameter::kPInviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_game_invite_Parameter::proc_i_save_user_game_invite_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_game_invite.Parameter)
}
proc_i_save_user_game_invite_Parameter::proc_i_save_user_game_invite_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_game_invite.Parameter)
}
proc_i_save_user_game_invite_Parameter::proc_i_save_user_game_invite_Parameter(const proc_i_save_user_game_invite_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_invite()) {
    p_invite_ = new ::db::UserGameInvite(*from.p_invite_);
  } else {
    p_invite_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_game_invite.Parameter)
}

void proc_i_save_user_game_invite_Parameter::SharedCtor() {
  p_invite_ = NULL;
}

proc_i_save_user_game_invite_Parameter::~proc_i_save_user_game_invite_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_game_invite.Parameter)
  SharedDtor();
}

void proc_i_save_user_game_invite_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_invite_;
}

void proc_i_save_user_game_invite_Parameter::ArenaDtor(void* object) {
  proc_i_save_user_game_invite_Parameter* _this = reinterpret_cast< proc_i_save_user_game_invite_Parameter* >(object);
  (void)_this;
}
void proc_i_save_user_game_invite_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_game_invite_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_game_invite_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_game_invite_Parameter& proc_i_save_user_game_invite_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_Parameter.base);
  return *internal_default_instance();
}


void proc_i_save_user_game_invite_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_game_invite.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_invite_ != NULL);
    p_invite_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_game_invite_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_game_invite.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserGameInvite p_invite = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_invite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_game_invite.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_game_invite.Parameter)
  return false;
#undef DO_
}

void proc_i_save_user_game_invite_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_game_invite.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserGameInvite p_invite = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_invite(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_game_invite.Parameter)
}

::google::protobuf::uint8* proc_i_save_user_game_invite_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_game_invite.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserGameInvite p_invite = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_invite(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_game_invite.Parameter)
  return target;
}

size_t proc_i_save_user_game_invite_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_game_invite.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserGameInvite p_invite = 1;
  if (has_p_invite()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_invite_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_game_invite_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_game_invite.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_game_invite_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_game_invite_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_game_invite.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_game_invite.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_save_user_game_invite_Parameter::MergeFrom(const proc_i_save_user_game_invite_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_game_invite.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_invite()) {
    mutable_p_invite()->::db::UserGameInvite::MergeFrom(from.p_invite());
  }
}

void proc_i_save_user_game_invite_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_game_invite.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_game_invite_Parameter::CopyFrom(const proc_i_save_user_game_invite_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_game_invite.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_game_invite_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_invite()) {
    if (!this->p_invite_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_game_invite_Parameter::Swap(proc_i_save_user_game_invite_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_game_invite_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_game_invite_Parameter::UnsafeArenaSwap(proc_i_save_user_game_invite_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_game_invite_Parameter::InternalSwap(proc_i_save_user_game_invite_Parameter* other) {
  using std::swap;
  swap(p_invite_, other->p_invite_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_game_invite_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_game_invite::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_game_invite_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_save_user_game_invite_Parameter*>(
      ::db::proc_i_save_user_game_invite_Parameter::internal_default_instance());
}
void proc_i_save_user_game_invite::unsafe_arena_set_allocated_param(
    ::db::proc_i_save_user_game_invite_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_game_invite.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_game_invite::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_game_invite::proc_i_save_user_game_invite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_game_invite)
}
proc_i_save_user_game_invite::proc_i_save_user_game_invite(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_game_invite)
}
proc_i_save_user_game_invite::proc_i_save_user_game_invite(const proc_i_save_user_game_invite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_save_user_game_invite_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_game_invite)
}

void proc_i_save_user_game_invite::SharedCtor() {
  param_ = NULL;
}

proc_i_save_user_game_invite::~proc_i_save_user_game_invite() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_game_invite)
  SharedDtor();
}

void proc_i_save_user_game_invite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_save_user_game_invite::ArenaDtor(void* object) {
  proc_i_save_user_game_invite* _this = reinterpret_cast< proc_i_save_user_game_invite* >(object);
  (void)_this;
}
void proc_i_save_user_game_invite::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_game_invite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_game_invite::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_game_invite& proc_i_save_user_game_invite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite.base);
  return *internal_default_instance();
}


void proc_i_save_user_game_invite::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_game_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_game_invite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_game_invite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_save_user_game_invite.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_game_invite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_game_invite)
  return false;
#undef DO_
}

void proc_i_save_user_game_invite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_game_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_game_invite.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_game_invite)
}

::google::protobuf::uint8* proc_i_save_user_game_invite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_game_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_game_invite.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_game_invite)
  return target;
}

size_t proc_i_save_user_game_invite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_game_invite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_i_save_user_game_invite.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_game_invite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_game_invite)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_game_invite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_game_invite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_game_invite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_game_invite)
    MergeFrom(*source);
  }
}

void proc_i_save_user_game_invite::MergeFrom(const proc_i_save_user_game_invite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_game_invite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_i_save_user_game_invite_Parameter::MergeFrom(from.param());
  }
}

void proc_i_save_user_game_invite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_game_invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_game_invite::CopyFrom(const proc_i_save_user_game_invite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_game_invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_game_invite::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_game_invite::Swap(proc_i_save_user_game_invite* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_game_invite* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_game_invite::UnsafeArenaSwap(proc_i_save_user_game_invite* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_game_invite::InternalSwap(proc_i_save_user_game_invite* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_game_invite::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_game_invite_reward_Parameter::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_game_invite_reward_Parameter_default_instance_._instance.get_mutable()->p_reward_ = const_cast< ::db::UserGameInviteReward*>(
      ::db::UserGameInviteReward::internal_default_instance());
}
void proc_i_save_user_game_invite_reward_Parameter::unsafe_arena_set_allocated_p_reward(
    ::db::UserGameInviteReward* p_reward) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_reward_;
  }
  p_reward_ = p_reward;
  if (p_reward) {
    set_has_p_reward();
  } else {
    clear_has_p_reward();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_game_invite_reward.Parameter.p_reward)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_game_invite_reward_Parameter::kPRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_game_invite_reward_Parameter::proc_i_save_user_game_invite_reward_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_reward_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_game_invite_reward.Parameter)
}
proc_i_save_user_game_invite_reward_Parameter::proc_i_save_user_game_invite_reward_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_reward_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_game_invite_reward.Parameter)
}
proc_i_save_user_game_invite_reward_Parameter::proc_i_save_user_game_invite_reward_Parameter(const proc_i_save_user_game_invite_reward_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_reward()) {
    p_reward_ = new ::db::UserGameInviteReward(*from.p_reward_);
  } else {
    p_reward_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_game_invite_reward.Parameter)
}

void proc_i_save_user_game_invite_reward_Parameter::SharedCtor() {
  p_reward_ = NULL;
}

proc_i_save_user_game_invite_reward_Parameter::~proc_i_save_user_game_invite_reward_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_game_invite_reward.Parameter)
  SharedDtor();
}

void proc_i_save_user_game_invite_reward_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_reward_;
}

void proc_i_save_user_game_invite_reward_Parameter::ArenaDtor(void* object) {
  proc_i_save_user_game_invite_reward_Parameter* _this = reinterpret_cast< proc_i_save_user_game_invite_reward_Parameter* >(object);
  (void)_this;
}
void proc_i_save_user_game_invite_reward_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_game_invite_reward_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_game_invite_reward_Parameter::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_game_invite_reward_Parameter& proc_i_save_user_game_invite_reward_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_reward_Parameter.base);
  return *internal_default_instance();
}


void proc_i_save_user_game_invite_reward_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_game_invite_reward.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_reward_ != NULL);
    p_reward_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_game_invite_reward_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_game_invite_reward.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.UserGameInviteReward p_reward = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_game_invite_reward.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_game_invite_reward.Parameter)
  return false;
#undef DO_
}

void proc_i_save_user_game_invite_reward_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_game_invite_reward.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserGameInviteReward p_reward = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_game_invite_reward.Parameter)
}

::google::protobuf::uint8* proc_i_save_user_game_invite_reward_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_game_invite_reward.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.UserGameInviteReward p_reward = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_reward(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_game_invite_reward.Parameter)
  return target;
}

size_t proc_i_save_user_game_invite_reward_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_game_invite_reward.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.UserGameInviteReward p_reward = 1;
  if (has_p_reward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_reward_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_game_invite_reward_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_game_invite_reward.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_game_invite_reward_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_game_invite_reward_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_game_invite_reward.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_game_invite_reward.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_save_user_game_invite_reward_Parameter::MergeFrom(const proc_i_save_user_game_invite_reward_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_game_invite_reward.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_reward()) {
    mutable_p_reward()->::db::UserGameInviteReward::MergeFrom(from.p_reward());
  }
}

void proc_i_save_user_game_invite_reward_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_game_invite_reward.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_game_invite_reward_Parameter::CopyFrom(const proc_i_save_user_game_invite_reward_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_game_invite_reward.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_game_invite_reward_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_reward()) {
    if (!this->p_reward_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_game_invite_reward_Parameter::Swap(proc_i_save_user_game_invite_reward_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_game_invite_reward_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_game_invite_reward_Parameter::UnsafeArenaSwap(proc_i_save_user_game_invite_reward_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_game_invite_reward_Parameter::InternalSwap(proc_i_save_user_game_invite_reward_Parameter* other) {
  using std::swap;
  swap(p_reward_, other->p_reward_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_game_invite_reward_Parameter::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_user_game_invite_reward::InitAsDefaultInstance() {
  ::db::_proc_i_save_user_game_invite_reward_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_save_user_game_invite_reward_Parameter*>(
      ::db::proc_i_save_user_game_invite_reward_Parameter::internal_default_instance());
}
void proc_i_save_user_game_invite_reward::unsafe_arena_set_allocated_param(
    ::db::proc_i_save_user_game_invite_reward_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_user_game_invite_reward.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_user_game_invite_reward::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_user_game_invite_reward::proc_i_save_user_game_invite_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_user_game_invite_reward)
}
proc_i_save_user_game_invite_reward::proc_i_save_user_game_invite_reward(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_reward.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_user_game_invite_reward)
}
proc_i_save_user_game_invite_reward::proc_i_save_user_game_invite_reward(const proc_i_save_user_game_invite_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_save_user_game_invite_reward_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_user_game_invite_reward)
}

void proc_i_save_user_game_invite_reward::SharedCtor() {
  param_ = NULL;
}

proc_i_save_user_game_invite_reward::~proc_i_save_user_game_invite_reward() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_user_game_invite_reward)
  SharedDtor();
}

void proc_i_save_user_game_invite_reward::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_save_user_game_invite_reward::ArenaDtor(void* object) {
  proc_i_save_user_game_invite_reward* _this = reinterpret_cast< proc_i_save_user_game_invite_reward* >(object);
  (void)_this;
}
void proc_i_save_user_game_invite_reward::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_user_game_invite_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_user_game_invite_reward::descriptor() {
  ::protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_user_game_invite_reward& proc_i_save_user_game_invite_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcFriend_2eproto::scc_info_proc_i_save_user_game_invite_reward.base);
  return *internal_default_instance();
}


void proc_i_save_user_game_invite_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_user_game_invite_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_user_game_invite_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_user_game_invite_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_save_user_game_invite_reward.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_user_game_invite_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_user_game_invite_reward)
  return false;
#undef DO_
}

void proc_i_save_user_game_invite_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_user_game_invite_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_game_invite_reward.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_user_game_invite_reward)
}

::google::protobuf::uint8* proc_i_save_user_game_invite_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_user_game_invite_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_user_game_invite_reward.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_user_game_invite_reward)
  return target;
}

size_t proc_i_save_user_game_invite_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_user_game_invite_reward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_i_save_user_game_invite_reward.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_user_game_invite_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_user_game_invite_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_user_game_invite_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_user_game_invite_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_user_game_invite_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_user_game_invite_reward)
    MergeFrom(*source);
  }
}

void proc_i_save_user_game_invite_reward::MergeFrom(const proc_i_save_user_game_invite_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_user_game_invite_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_i_save_user_game_invite_reward_Parameter::MergeFrom(from.param());
  }
}

void proc_i_save_user_game_invite_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_user_game_invite_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_user_game_invite_reward::CopyFrom(const proc_i_save_user_game_invite_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_user_game_invite_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_user_game_invite_reward::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_user_game_invite_reward::Swap(proc_i_save_user_game_invite_reward* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_user_game_invite_reward* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_user_game_invite_reward::UnsafeArenaSwap(proc_i_save_user_game_invite_reward* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_user_game_invite_reward::InternalSwap(proc_i_save_user_game_invite_reward* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_user_game_invite_reward::GetMetadata() const {
  protobuf_StoredProcFriend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcFriend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::TopNRole* Arena::CreateMaybeMessage< ::db::TopNRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::TopNRole >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::TopNRoleList* Arena::CreateMaybeMessage< ::db::TopNRoleList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::TopNRoleList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_top_n_roles_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_load_top_n_roles_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_top_n_roles_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_top_n_roles_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_i_load_top_n_roles_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_top_n_roles_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_top_n_roles* Arena::CreateMaybeMessage< ::db::proc_i_load_top_n_roles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_top_n_roles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::TopNRoleTeamMember* Arena::CreateMaybeMessage< ::db::TopNRoleTeamMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::TopNRoleTeamMember >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::TopNRoleTeamMemberList* Arena::CreateMaybeMessage< ::db::TopNRoleTeamMemberList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::TopNRoleTeamMemberList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigFriending* Arena::CreateMaybeMessage< ::db::ConfigFriending >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigFriending >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigFriendingList* Arena::CreateMaybeMessage< ::db::ConfigFriendingList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigFriendingList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGameInvite* Arena::CreateMaybeMessage< ::db::ConfigGameInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGameInvite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGameInviteList* Arena::CreateMaybeMessage< ::db::ConfigGameInviteList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGameInviteList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_config_friending_Parameter* Arena::CreateMaybeMessage< ::db::proc_load_config_friending_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_config_friending_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_config_friending_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_load_config_friending_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_config_friending_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_config_friending* Arena::CreateMaybeMessage< ::db::proc_load_config_friending >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_config_friending >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_config_game_invite_Parameter* Arena::CreateMaybeMessage< ::db::proc_load_config_game_invite_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_config_game_invite_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_config_game_invite_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_load_config_game_invite_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_config_game_invite_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_config_game_invite* Arena::CreateMaybeMessage< ::db::proc_load_config_game_invite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_config_game_invite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserFriend* Arena::CreateMaybeMessage< ::db::UserFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserFriend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserFriendList* Arena::CreateMaybeMessage< ::db::UserFriendList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserFriendList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameStatsUserFriend* Arena::CreateMaybeMessage< ::db::GameStatsUserFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameStatsUserFriend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameStatsUserFriendList* Arena::CreateMaybeMessage< ::db::GameStatsUserFriendList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameStatsUserFriendList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserGameInvite* Arena::CreateMaybeMessage< ::db::UserGameInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserGameInvite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserGameInviteList* Arena::CreateMaybeMessage< ::db::UserGameInviteList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserGameInviteList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserGameInviteReward* Arena::CreateMaybeMessage< ::db::UserGameInviteReward >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserGameInviteReward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserGameInviteRewardList* Arena::CreateMaybeMessage< ::db::UserGameInviteRewardList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserGameInviteRewardList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_friends_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_load_user_friends_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_friends_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_friends_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_i_load_user_friends_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_friends_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_friends* Arena::CreateMaybeMessage< ::db::proc_i_load_user_friends >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_friends >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_friend_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_save_user_friend_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_friend_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_friend* Arena::CreateMaybeMessage< ::db::proc_i_save_user_friend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_friend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_game_invites_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_load_user_game_invites_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_game_invites_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_game_invites_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_i_load_user_game_invites_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_game_invites_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_game_invites* Arena::CreateMaybeMessage< ::db::proc_i_load_user_game_invites >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_game_invites >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_game_invite_rewards_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_load_user_game_invite_rewards_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_game_invite_rewards_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_game_invite_rewards_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_i_load_user_game_invite_rewards_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_game_invite_rewards_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_user_game_invite_rewards* Arena::CreateMaybeMessage< ::db::proc_i_load_user_game_invite_rewards >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_user_game_invite_rewards >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_game_invite_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_save_user_game_invite_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_game_invite_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_game_invite* Arena::CreateMaybeMessage< ::db::proc_i_save_user_game_invite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_game_invite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_game_invite_reward_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_save_user_game_invite_reward_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_game_invite_reward_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_user_game_invite_reward* Arena::CreateMaybeMessage< ::db::proc_i_save_user_game_invite_reward >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_user_game_invite_reward >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
