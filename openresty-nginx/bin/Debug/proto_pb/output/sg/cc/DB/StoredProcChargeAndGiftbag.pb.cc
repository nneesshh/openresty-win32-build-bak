// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcChargeAndGiftbag.proto

#include "StoredProcChargeAndGiftbag.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_StoredProcChargeAndGiftbag_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigActivityTime;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagCharge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagFestival;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagFirstCharge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagFriend;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagMonthCard;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagRoleLevelup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagRoleLvShopping;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagRoleSignin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagSevenDay;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameCharge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserChargeAndGiftbagFirstCharge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_create_game_charge_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_game_charge_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_save_game_charge_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_game_charge_ReturnRecord;
}  // namespace protobuf_StoredProcChargeAndGiftbag_2eproto
namespace db {
class ConfigActivityTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigActivityTime>
      _instance;
} _ConfigActivityTime_default_instance_;
class ConfigActivityTimeListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigActivityTimeList>
      _instance;
} _ConfigActivityTimeList_default_instance_;
class ConfigGiftbagFirstChargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagFirstCharge>
      _instance;
} _ConfigGiftbagFirstCharge_default_instance_;
class ConfigGiftbagFirstChargeListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagFirstChargeList>
      _instance;
} _ConfigGiftbagFirstChargeList_default_instance_;
class ConfigGiftbagChargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagCharge>
      _instance;
} _ConfigGiftbagCharge_default_instance_;
class ConfigGiftbagChargeListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagChargeList>
      _instance;
} _ConfigGiftbagChargeList_default_instance_;
class ConfigGiftbagSevenDayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagSevenDay>
      _instance;
} _ConfigGiftbagSevenDay_default_instance_;
class ConfigGiftbagSevenDayListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagSevenDayList>
      _instance;
} _ConfigGiftbagSevenDayList_default_instance_;
class ConfigGiftbagFestivalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagFestival>
      _instance;
} _ConfigGiftbagFestival_default_instance_;
class ConfigGiftbagFestivalListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagFestivalList>
      _instance;
} _ConfigGiftbagFestivalList_default_instance_;
class ConfigGiftbagMonthCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagMonthCard>
      _instance;
} _ConfigGiftbagMonthCard_default_instance_;
class ConfigGiftbagMonthCardListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagMonthCardList>
      _instance;
} _ConfigGiftbagMonthCardList_default_instance_;
class ConfigGiftbagRoleSigninDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagRoleSignin>
      _instance;
} _ConfigGiftbagRoleSignin_default_instance_;
class ConfigGiftbagRoleSigninListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagRoleSigninList>
      _instance;
} _ConfigGiftbagRoleSigninList_default_instance_;
class ConfigGiftbagRoleLevelupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagRoleLevelup>
      _instance;
} _ConfigGiftbagRoleLevelup_default_instance_;
class ConfigGiftbagRoleLevelupListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagRoleLevelupList>
      _instance;
} _ConfigGiftbagRoleLevelupList_default_instance_;
class ConfigGiftbagRoleLvShoppingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagRoleLvShopping>
      _instance;
} _ConfigGiftbagRoleLvShopping_default_instance_;
class ConfigGiftbagRoleLvShoppingListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagRoleLvShoppingList>
      _instance;
} _ConfigGiftbagRoleLvShoppingList_default_instance_;
class ConfigGiftbagCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagCode>
      _instance;
} _ConfigGiftbagCode_default_instance_;
class ConfigGiftbagCodeListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagCodeList>
      _instance;
} _ConfigGiftbagCodeList_default_instance_;
class ConfigGiftbagFriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagFriend>
      _instance;
} _ConfigGiftbagFriend_default_instance_;
class ConfigGiftbagFriendListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGiftbagFriendList>
      _instance;
} _ConfigGiftbagFriendList_default_instance_;
class GameChargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameCharge>
      _instance;
} _GameCharge_default_instance_;
class GameChargeListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameChargeList>
      _instance;
} _GameChargeList_default_instance_;
class UserChargeAndGiftbagFirstChargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserChargeAndGiftbagFirstCharge>
      _instance;
} _UserChargeAndGiftbagFirstCharge_default_instance_;
class UserChargeAndGiftbagFirstChargeListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserChargeAndGiftbagFirstChargeList>
      _instance;
} _UserChargeAndGiftbagFirstChargeList_default_instance_;
class proc_load_game_charge_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_game_charge_Parameter>
      _instance;
} _proc_load_game_charge_Parameter_default_instance_;
class proc_load_game_charge_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_game_charge_ReturnRecord>
      _instance;
} _proc_load_game_charge_ReturnRecord_default_instance_;
class proc_load_game_chargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_game_charge>
      _instance;
} _proc_load_game_charge_default_instance_;
class proc_save_game_charge_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_save_game_charge_Parameter>
      _instance;
} _proc_save_game_charge_Parameter_default_instance_;
class proc_save_game_chargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_save_game_charge>
      _instance;
} _proc_save_game_charge_default_instance_;
class proc_create_game_charge_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_create_game_charge_Parameter>
      _instance;
} _proc_create_game_charge_Parameter_default_instance_;
class proc_create_game_chargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_create_game_charge>
      _instance;
} _proc_create_game_charge_default_instance_;
class UserMonthCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserMonthCard>
      _instance;
} _UserMonthCard_default_instance_;
class UserRoleLvShoppingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRoleLvShopping>
      _instance;
} _UserRoleLvShopping_default_instance_;
class UserStatsChargeAndGiftbagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserStatsChargeAndGiftbag>
      _instance;
} _UserStatsChargeAndGiftbag_default_instance_;
class UserActivityGiftbagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserActivityGiftbag>
      _instance;
} _UserActivityGiftbag_default_instance_;
class GameGiftbagCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameGiftbagCode>
      _instance;
} _GameGiftbagCode_default_instance_;
}  // namespace db
namespace protobuf_StoredProcChargeAndGiftbag_2eproto {
static void InitDefaultsConfigActivityTime() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigActivityTime_default_instance_;
    new (ptr) ::db::ConfigActivityTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigActivityTime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigActivityTime =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigActivityTime}, {}};

static void InitDefaultsConfigActivityTimeList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigActivityTimeList_default_instance_;
    new (ptr) ::db::ConfigActivityTimeList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigActivityTimeList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigActivityTimeList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigActivityTimeList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigActivityTime.base,}};

static void InitDefaultsConfigGiftbagFirstCharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagFirstCharge_default_instance_;
    new (ptr) ::db::ConfigGiftbagFirstCharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagFirstCharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagFirstCharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagFirstCharge}, {}};

static void InitDefaultsConfigGiftbagFirstChargeList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagFirstChargeList_default_instance_;
    new (ptr) ::db::ConfigGiftbagFirstChargeList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagFirstChargeList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagFirstChargeList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagFirstChargeList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFirstCharge.base,}};

static void InitDefaultsConfigGiftbagCharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagCharge_default_instance_;
    new (ptr) ::db::ConfigGiftbagCharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagCharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagCharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagCharge}, {}};

static void InitDefaultsConfigGiftbagChargeList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagChargeList_default_instance_;
    new (ptr) ::db::ConfigGiftbagChargeList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagChargeList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagChargeList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagChargeList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCharge.base,}};

static void InitDefaultsConfigGiftbagSevenDay() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagSevenDay_default_instance_;
    new (ptr) ::db::ConfigGiftbagSevenDay();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagSevenDay::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagSevenDay =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagSevenDay}, {}};

static void InitDefaultsConfigGiftbagSevenDayList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagSevenDayList_default_instance_;
    new (ptr) ::db::ConfigGiftbagSevenDayList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagSevenDayList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagSevenDayList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagSevenDayList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagSevenDay.base,}};

static void InitDefaultsConfigGiftbagFestival() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagFestival_default_instance_;
    new (ptr) ::db::ConfigGiftbagFestival();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagFestival::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagFestival =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagFestival}, {}};

static void InitDefaultsConfigGiftbagFestivalList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagFestivalList_default_instance_;
    new (ptr) ::db::ConfigGiftbagFestivalList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagFestivalList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagFestivalList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagFestivalList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFestival.base,}};

static void InitDefaultsConfigGiftbagMonthCard() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagMonthCard_default_instance_;
    new (ptr) ::db::ConfigGiftbagMonthCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagMonthCard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagMonthCard =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagMonthCard}, {}};

static void InitDefaultsConfigGiftbagMonthCardList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagMonthCardList_default_instance_;
    new (ptr) ::db::ConfigGiftbagMonthCardList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagMonthCardList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagMonthCardList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagMonthCardList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagMonthCard.base,}};

static void InitDefaultsConfigGiftbagRoleSignin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagRoleSignin_default_instance_;
    new (ptr) ::db::ConfigGiftbagRoleSignin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagRoleSignin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagRoleSignin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagRoleSignin}, {}};

static void InitDefaultsConfigGiftbagRoleSigninList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagRoleSigninList_default_instance_;
    new (ptr) ::db::ConfigGiftbagRoleSigninList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagRoleSigninList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagRoleSigninList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagRoleSigninList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleSignin.base,}};

static void InitDefaultsConfigGiftbagRoleLevelup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagRoleLevelup_default_instance_;
    new (ptr) ::db::ConfigGiftbagRoleLevelup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagRoleLevelup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagRoleLevelup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagRoleLevelup}, {}};

static void InitDefaultsConfigGiftbagRoleLevelupList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagRoleLevelupList_default_instance_;
    new (ptr) ::db::ConfigGiftbagRoleLevelupList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagRoleLevelupList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagRoleLevelupList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagRoleLevelupList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLevelup.base,}};

static void InitDefaultsConfigGiftbagRoleLvShopping() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagRoleLvShopping_default_instance_;
    new (ptr) ::db::ConfigGiftbagRoleLvShopping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagRoleLvShopping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagRoleLvShopping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagRoleLvShopping}, {}};

static void InitDefaultsConfigGiftbagRoleLvShoppingList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagRoleLvShoppingList_default_instance_;
    new (ptr) ::db::ConfigGiftbagRoleLvShoppingList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagRoleLvShoppingList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagRoleLvShoppingList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagRoleLvShoppingList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLvShopping.base,}};

static void InitDefaultsConfigGiftbagCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagCode_default_instance_;
    new (ptr) ::db::ConfigGiftbagCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagCode}, {}};

static void InitDefaultsConfigGiftbagCodeList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagCodeList_default_instance_;
    new (ptr) ::db::ConfigGiftbagCodeList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagCodeList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagCodeList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagCodeList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCode.base,}};

static void InitDefaultsConfigGiftbagFriend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagFriend_default_instance_;
    new (ptr) ::db::ConfigGiftbagFriend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagFriend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGiftbagFriend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGiftbagFriend}, {}};

static void InitDefaultsConfigGiftbagFriendList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGiftbagFriendList_default_instance_;
    new (ptr) ::db::ConfigGiftbagFriendList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGiftbagFriendList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGiftbagFriendList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGiftbagFriendList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFriend.base,}};

static void InitDefaultsGameCharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameCharge_default_instance_;
    new (ptr) ::db::GameCharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameCharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameCharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameCharge}, {}};

static void InitDefaultsGameChargeList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameChargeList_default_instance_;
    new (ptr) ::db::GameChargeList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameChargeList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GameChargeList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGameChargeList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameCharge.base,}};

static void InitDefaultsUserChargeAndGiftbagFirstCharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserChargeAndGiftbagFirstCharge_default_instance_;
    new (ptr) ::db::UserChargeAndGiftbagFirstCharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserChargeAndGiftbagFirstCharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserChargeAndGiftbagFirstCharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserChargeAndGiftbagFirstCharge}, {}};

static void InitDefaultsUserChargeAndGiftbagFirstChargeList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserChargeAndGiftbagFirstChargeList_default_instance_;
    new (ptr) ::db::UserChargeAndGiftbagFirstChargeList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserChargeAndGiftbagFirstChargeList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserChargeAndGiftbagFirstChargeList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserChargeAndGiftbagFirstChargeList}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserChargeAndGiftbagFirstCharge.base,}};

static void InitDefaultsproc_load_game_charge_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_game_charge_Parameter_default_instance_;
    new (ptr) ::db::proc_load_game_charge_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_game_charge_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_game_charge_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_load_game_charge_Parameter}, {}};

static void InitDefaultsproc_load_game_charge_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_game_charge_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_load_game_charge_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_game_charge_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_game_charge_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_load_game_charge_ReturnRecord}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameCharge.base,}};

static void InitDefaultsproc_load_game_charge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_game_charge_default_instance_;
    new (ptr) ::db::proc_load_game_charge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_game_charge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_load_game_charge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_load_game_charge}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge_Parameter.base,
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge_ReturnRecord.base,}};

static void InitDefaultsproc_save_game_charge_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_save_game_charge_Parameter_default_instance_;
    new (ptr) ::db::proc_save_game_charge_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_save_game_charge_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_save_game_charge_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_save_game_charge_Parameter}, {}};

static void InitDefaultsproc_save_game_charge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_save_game_charge_default_instance_;
    new (ptr) ::db::proc_save_game_charge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_save_game_charge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_save_game_charge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_save_game_charge}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_save_game_charge_Parameter.base,}};

static void InitDefaultsproc_create_game_charge_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_create_game_charge_Parameter_default_instance_;
    new (ptr) ::db::proc_create_game_charge_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_create_game_charge_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_create_game_charge_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_create_game_charge_Parameter}, {}};

static void InitDefaultsproc_create_game_charge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_create_game_charge_default_instance_;
    new (ptr) ::db::proc_create_game_charge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_create_game_charge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_create_game_charge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_create_game_charge}, {
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_create_game_charge_Parameter.base,}};

static void InitDefaultsUserMonthCard() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserMonthCard_default_instance_;
    new (ptr) ::db::UserMonthCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserMonthCard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserMonthCard =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserMonthCard}, {}};

static void InitDefaultsUserRoleLvShopping() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserRoleLvShopping_default_instance_;
    new (ptr) ::db::UserRoleLvShopping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserRoleLvShopping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserRoleLvShopping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserRoleLvShopping}, {}};

static void InitDefaultsUserStatsChargeAndGiftbag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserStatsChargeAndGiftbag_default_instance_;
    new (ptr) ::db::UserStatsChargeAndGiftbag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserStatsChargeAndGiftbag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserStatsChargeAndGiftbag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserStatsChargeAndGiftbag}, {}};

static void InitDefaultsUserActivityGiftbag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserActivityGiftbag_default_instance_;
    new (ptr) ::db::UserActivityGiftbag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserActivityGiftbag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserActivityGiftbag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserActivityGiftbag}, {}};

static void InitDefaultsGameGiftbagCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameGiftbagCode_default_instance_;
    new (ptr) ::db::GameGiftbagCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameGiftbagCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameGiftbagCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameGiftbagCode}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigActivityTime.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigActivityTimeList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagFirstCharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagFirstChargeList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagCharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagChargeList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagSevenDay.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagSevenDayList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagFestival.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagFestivalList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagMonthCard.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagMonthCardList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagRoleSignin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagRoleSigninList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagRoleLevelup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagRoleLevelupList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagRoleLvShopping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagRoleLvShoppingList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagCodeList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagFriend.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGiftbagFriendList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameCharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameChargeList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserChargeAndGiftbagFirstCharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserChargeAndGiftbagFirstChargeList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_game_charge_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_game_charge_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_game_charge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_save_game_charge_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_save_game_charge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_create_game_charge_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_create_game_charge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserMonthCard.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRoleLvShopping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserStatsChargeAndGiftbag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserActivityGiftbag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameGiftbagCode.base);
}

::google::protobuf::Metadata file_level_metadata[38];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, disable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTime, end_time_),
  2,
  3,
  0,
  1,
  6,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTimeList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTimeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigActivityTimeList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFirstCharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFirstCharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFirstCharge, charge_subtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFirstCharge, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFirstCharge, reward_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFirstChargeList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFirstChargeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFirstChargeList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCharge, chargeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCharge, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCharge, cash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCharge, reward_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagChargeList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagChargeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagChargeList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagSevenDay, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagSevenDay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagSevenDay, dayid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagSevenDay, reward_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagSevenDayList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagSevenDayList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagSevenDayList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFestival, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFestival, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFestival, activityid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFestival, dayid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFestival, reward_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFestivalList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFestivalList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFestivalList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, cardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, card_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, passenger_refresh_time_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, role_exp_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, sailor_exp_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, ghost_ship_reset_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, free_resurrection_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCard, pirate_ship_fight_num_),
  4,
  0,
  1,
  5,
  2,
  6,
  7,
  9,
  10,
  8,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCardList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCardList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagMonthCardList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSignin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSignin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSignin, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSignin, dayid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSignin, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSignin, extra_reward_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSigninList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSigninList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleSigninList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLevelup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLevelup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLevelup, levelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLevelup, reward_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLevelupList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLevelupList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLevelupList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShopping, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShopping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShopping, giftbagid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShopping, levelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShopping, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShopping, mail_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShopping, mail_text_),
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShoppingList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShoppingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagRoleLvShoppingList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCode, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCode, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCode, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCode, begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCode, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCode, reward_typeid_),
  0,
  4,
  1,
  2,
  3,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCodeList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCodeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagCodeList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriend, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriend, give_num_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriend, accept_num_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriend, item_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriend, item_num_),
  0,
  1,
  2,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriendList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriendList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGiftbagFriendList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, charge_cash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, charge_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, charge_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, platid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, ordernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, order_receipt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, order_createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, order_notifytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, goodsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameCharge, optime_),
  6,
  0,
  7,
  8,
  9,
  1,
  2,
  3,
  4,
  5,
  10,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameChargeList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameChargeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameChargeList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserChargeAndGiftbagFirstCharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserChargeAndGiftbagFirstCharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserChargeAndGiftbagFirstCharge, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserChargeAndGiftbagFirstCharge, charge_subtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserChargeAndGiftbagFirstCharge, charge_time_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserChargeAndGiftbagFirstChargeList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserChargeAndGiftbagFirstChargeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserChargeAndGiftbagFirstChargeList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge_Parameter, p_last_topid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge_ReturnRecord, item_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_game_charge, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge_Parameter, p_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge_Parameter, p_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge_Parameter, p_receipt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge_Parameter, p_optime_),
  1,
  3,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_game_charge, param_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_charge_cash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_charge_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_charge_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_platid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_ordernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_order_receipt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_order_createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_order_notifytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_goods_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge_Parameter, p_optime_),
  0,
  6,
  7,
  8,
  1,
  2,
  3,
  4,
  5,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_create_game_charge, param_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserMonthCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserMonthCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserMonthCard, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserMonthCard, cardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserMonthCard, buy_month_card_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserMonthCard, buy_month_card_burntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserMonthCard, month_card_awardtime_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRoleLvShopping, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRoleLvShopping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRoleLvShopping, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRoleLvShopping, giftbagid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRoleLvShopping, flag_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserRoleLvShopping, awardtime_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, charge_pool_topid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, charge_point_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, flag_role_signin_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, flag_role_signin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, role_signin_burntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, flag_role_levelup_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, flag_charge_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, seven_day_signin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, flag_seven_day_signin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, flag_seven_day_signin_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, friend_gift_give_num_refreshtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, friend_gift_give_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, friend_gift_give_num_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, friend_gift_accept_num_refreshtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, friend_gift_accept_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsChargeAndGiftbag, friend_gift_accept_num_total_),
  0,
  1,
  6,
  3,
  4,
  5,
  8,
  9,
  10,
  11,
  12,
  13,
  7,
  14,
  16,
  15,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserActivityGiftbag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserActivityGiftbag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserActivityGiftbag, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserActivityGiftbag, activityid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserActivityGiftbag, festival_signin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserActivityGiftbag, flag_festival_signin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserActivityGiftbag, flag_festival_signin_reward_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGiftbagCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGiftbagCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGiftbagCode, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGiftbagCode, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGiftbagCode, active_time_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::db::ConfigActivityTime)},
  { 19, 25, sizeof(::db::ConfigActivityTimeList)},
  { 26, 34, sizeof(::db::ConfigGiftbagFirstCharge)},
  { 37, 43, sizeof(::db::ConfigGiftbagFirstChargeList)},
  { 44, 53, sizeof(::db::ConfigGiftbagCharge)},
  { 57, 63, sizeof(::db::ConfigGiftbagChargeList)},
  { 64, 71, sizeof(::db::ConfigGiftbagSevenDay)},
  { 73, 79, sizeof(::db::ConfigGiftbagSevenDayList)},
  { 80, 88, sizeof(::db::ConfigGiftbagFestival)},
  { 91, 97, sizeof(::db::ConfigGiftbagFestivalList)},
  { 98, 114, sizeof(::db::ConfigGiftbagMonthCard)},
  { 125, 131, sizeof(::db::ConfigGiftbagMonthCardList)},
  { 132, 141, sizeof(::db::ConfigGiftbagRoleSignin)},
  { 145, 151, sizeof(::db::ConfigGiftbagRoleSigninList)},
  { 152, 159, sizeof(::db::ConfigGiftbagRoleLevelup)},
  { 161, 167, sizeof(::db::ConfigGiftbagRoleLevelupList)},
  { 168, 178, sizeof(::db::ConfigGiftbagRoleLvShopping)},
  { 183, 189, sizeof(::db::ConfigGiftbagRoleLvShoppingList)},
  { 190, 201, sizeof(::db::ConfigGiftbagCode)},
  { 207, 213, sizeof(::db::ConfigGiftbagCodeList)},
  { 214, 224, sizeof(::db::ConfigGiftbagFriend)},
  { 229, 235, sizeof(::db::ConfigGiftbagFriendList)},
  { 236, 254, sizeof(::db::GameCharge)},
  { 267, 273, sizeof(::db::GameChargeList)},
  { 274, 282, sizeof(::db::UserChargeAndGiftbagFirstCharge)},
  { 285, 291, sizeof(::db::UserChargeAndGiftbagFirstChargeList)},
  { 292, 298, sizeof(::db::proc_load_game_charge_Parameter)},
  { 299, 305, sizeof(::db::proc_load_game_charge_ReturnRecord)},
  { 306, 313, sizeof(::db::proc_load_game_charge)},
  { 315, 324, sizeof(::db::proc_save_game_charge_Parameter)},
  { 328, 334, sizeof(::db::proc_save_game_charge)},
  { 335, 351, sizeof(::db::proc_create_game_charge_Parameter)},
  { 362, 368, sizeof(::db::proc_create_game_charge)},
  { 369, 379, sizeof(::db::UserMonthCard)},
  { 384, 393, sizeof(::db::UserRoleLvShopping)},
  { 397, 419, sizeof(::db::UserStatsChargeAndGiftbag)},
  { 436, 446, sizeof(::db::UserActivityGiftbag)},
  { 451, 459, sizeof(::db::GameGiftbagCode)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigActivityTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigActivityTimeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagFirstCharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagFirstChargeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagCharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagChargeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagSevenDay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagSevenDayList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagFestival_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagFestivalList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagMonthCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagMonthCardList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagRoleSignin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagRoleSigninList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagRoleLevelup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagRoleLevelupList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagRoleLvShopping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagRoleLvShoppingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagCodeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGiftbagFriendList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameCharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameChargeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserChargeAndGiftbagFirstCharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserChargeAndGiftbagFirstChargeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_game_charge_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_game_charge_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_game_charge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_save_game_charge_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_save_game_charge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_create_game_charge_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_create_game_charge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserMonthCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserRoleLvShopping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserStatsChargeAndGiftbag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserActivityGiftbag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameGiftbagCode_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "StoredProcChargeAndGiftbag.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 38);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n StoredProcChargeAndGiftbag.proto\022\002db\"\201"
      "\001\n\022ConfigActivityTime\022\n\n\002id\030\001 \002(\005\022\014\n\004typ"
      "e\030\002 \002(\005\022\014\n\004name\030\003 \002(\014\022\014\n\004desc\030\004 \002(\014\022\017\n\007d"
      "isable\030\005 \002(\005\022\022\n\nbegin_time\030\006 \002(\020\022\020\n\010end_"
      "time\030\007 \002(\020\">\n\026ConfigActivityTimeList\022$\n\004"
      "list\030\001 \003(\0132\026.db.ConfigActivityTime\"P\n\030Co"
      "nfigGiftbagFirstCharge\022\026\n\016charge_subtype"
      "\030\001 \002(\005\022\014\n\004name\030\002 \002(\014\022\016\n\006reward\030\003 \002(\014\"J\n\034"
      "ConfigGiftbagFirstChargeList\022*\n\004list\030\001 \003"
      "(\0132\034.db.ConfigGiftbagFirstCharge\"S\n\023Conf"
      "igGiftbagCharge\022\020\n\010chargeid\030\001 \002(\005\022\014\n\004nam"
      "e\030\002 \002(\014\022\014\n\004cash\030\003 \002(\002\022\016\n\006reward\030\004 \002(\014\"@\n"
      "\027ConfigGiftbagChargeList\022%\n\004list\030\001 \003(\0132\027"
      ".db.ConfigGiftbagCharge\"6\n\025ConfigGiftbag"
      "SevenDay\022\r\n\005dayid\030\001 \002(\005\022\016\n\006reward\030\002 \002(\014\""
      "D\n\031ConfigGiftbagSevenDayList\022\'\n\004list\030\001 \003"
      "(\0132\031.db.ConfigGiftbagSevenDay\"J\n\025ConfigG"
      "iftbagFestival\022\022\n\nactivityid\030\001 \002(\005\022\r\n\005da"
      "yid\030\002 \002(\005\022\016\n\006reward\030\003 \002(\014\"D\n\031ConfigGiftb"
      "agFestivalList\022\'\n\004list\030\001 \003(\0132\031.db.Config"
      "GiftbagFestival\"\233\002\n\026ConfigGiftbagMonthCa"
      "rd\022\016\n\006cardid\030\001 \002(\005\022\014\n\004name\030\002 \002(\014\022\014\n\004desc"
      "\030\003 \002(\014\022\021\n\tcard_days\030\004 \002(\005\022\016\n\006reward\030\005 \002("
      "\014\022$\n\034passenger_refresh_time_ratio\030\013 \002(\002\022"
      "\026\n\016role_exp_ratio\030\014 \002(\002\022\030\n\020sailor_exp_ra"
      "tio\030\r \002(\002\022\034\n\024ghost_ship_reset_num\030\016 \002(\005\022"
      "\035\n\025free_resurrection_num\030\017 \002(\005\022\035\n\025pirate"
      "_ship_fight_num\030\020 \002(\014\"F\n\032ConfigGiftbagMo"
      "nthCardList\022(\n\004list\030\001 \003(\0132\032.db.ConfigGif"
      "tbagMonthCard\"Z\n\027ConfigGiftbagRoleSignin"
      "\022\n\n\002id\030\001 \002(\005\022\r\n\005dayid\030\002 \002(\005\022\016\n\006reward\030\003 "
      "\002(\014\022\024\n\014extra_reward\030\004 \002(\014\"H\n\033ConfigGiftb"
      "agRoleSigninList\022)\n\004list\030\001 \003(\0132\033.db.Conf"
      "igGiftbagRoleSignin\";\n\030ConfigGiftbagRole"
      "Levelup\022\017\n\007levelid\030\001 \002(\005\022\016\n\006reward\030\002 \002(\014"
      "\"J\n\034ConfigGiftbagRoleLevelupList\022*\n\004list"
      "\030\001 \003(\0132\034.db.ConfigGiftbagRoleLevelup\"x\n\033"
      "ConfigGiftbagRoleLvShopping\022\021\n\tgiftbagid"
      "\030\001 \002(\004\022\017\n\007levelid\030\002 \002(\005\022\016\n\006reward\030\003 \002(\014\022"
      "\022\n\nmail_title\030\004 \002(\014\022\021\n\tmail_text\030\005 \002(\014\"P"
      "\n\037ConfigGiftbagRoleLvShoppingList\022-\n\004lis"
      "t\030\001 \003(\0132\037.db.ConfigGiftbagRoleLvShopping"
      "\"z\n\021ConfigGiftbagCode\022\014\n\004code\030\001 \002(\014\022\014\n\004t"
      "ype\030\002 \002(\005\022\014\n\004desc\030\003 \002(\014\022\022\n\nbegin_time\030\004 "
      "\002(\020\022\020\n\010end_time\030\005 \002(\020\022\025\n\rreward_typeid\030\013"
      " \002(\004\"<\n\025ConfigGiftbagCodeList\022#\n\004list\030\001 "
      "\003(\0132\025.db.ConfigGiftbagCode\"y\n\023ConfigGift"
      "bagFriend\022\r\n\005level\030\001 \002(\005\022\024\n\014give_num_day"
      "\030\002 \002(\005\022\026\n\016accept_num_day\030\003 \002(\005\022\023\n\013item_t"
      "ypeid\030\013 \002(\004\022\020\n\010item_num\030\014 \002(\005\"@\n\027ConfigG"
      "iftbagFriendList\022%\n\004list\030\001 \003(\0132\027.db.Conf"
      "igGiftbagFriend\"\212\002\n\nGameCharge\022\n\n\002id\030\001 \002"
      "(\004\022\016\n\006userid\030\002 \002(\014\022\023\n\013charge_cash\030\003 \002(\002\022"
      "\023\n\013charge_type\030\004 \002(\005\022\024\n\014charge_state\030\005 \002"
      "(\005\022\016\n\006platid\030\013 \002(\014\022\020\n\010ordernum\030\014 \002(\014\022\025\n\r"
      "order_receipt\030\r \002(\014\022\030\n\020order_createtime\030"
      "\016 \002(\014\022\030\n\020order_notifytime\030\017 \002(\014\022\017\n\007goods"
      "id\030\020 \002(\005\022\022\n\ncreatetime\030\025 \002(\020\022\016\n\006optime\030\026"
      " \002(\020\".\n\016GameChargeList\022\034\n\004list\030\001 \003(\0132\016.d"
      "b.GameCharge\"^\n\037UserChargeAndGiftbagFirs"
      "tCharge\022\016\n\006userid\030\001 \002(\014\022\026\n\016charge_subtyp"
      "e\030\002 \002(\004\022\023\n\013charge_time\030\003 \002(\020\"X\n#UserChar"
      "geAndGiftbagFirstChargeList\0221\n\004list\030\001 \003("
      "\0132#.db.UserChargeAndGiftbagFirstCharge\"\340"
      "\001\n\025proc_load_game_charge\0222\n\005param\030\001 \001(\0132"
      "#.db.proc_load_game_charge.Parameter\022B\n\022"
      "return_record_list\030\002 \003(\0132&.db.proc_load_"
      "game_charge.ReturnRecord\032!\n\tParameter\022\024\n"
      "\014p_last_topid\030\001 \002(\004\032,\n\014ReturnRecord\022\034\n\004i"
      "tem\030\001 \002(\0132\016.db.GameCharge\"\234\001\n\025proc_save_"
      "game_charge\0222\n\005param\030\001 \001(\0132#.db.proc_sav"
      "e_game_charge.Parameter\032O\n\tParameter\022\014\n\004"
      "p_id\030\001 \002(\004\022\017\n\007p_state\030\002 \002(\005\022\021\n\tp_receipt"
      "\030\003 \002(\014\022\020\n\010p_optime\030\004 \002(\020\"\322\002\n\027proc_create"
      "_game_charge\0224\n\005param\030\001 \001(\0132%.db.proc_cr"
      "eate_game_charge.Parameter\032\200\002\n\tParameter"
      "\022\020\n\010p_userid\030\001 \002(\014\022\025\n\rp_charge_cash\030\002 \002("
      "\002\022\025\n\rp_charge_type\030\003 \002(\005\022\026\n\016p_charge_sta"
      "te\030\004 \002(\005\022\020\n\010p_platid\030\013 \002(\014\022\022\n\np_ordernum"
      "\030\014 \002(\014\022\027\n\017p_order_receipt\030\r \002(\014\022\032\n\022p_ord"
      "er_createtime\030\016 \002(\014\022\032\n\022p_order_notifytim"
      "e\030\017 \002(\014\022\022\n\np_goods_id\030\020 \002(\005\022\020\n\010p_optime\030"
      "\025 \002(\020\"\212\001\n\rUserMonthCard\022\016\n\006userid\030\001 \002(\014\022"
      "\016\n\006cardid\030\002 \002(\005\022\032\n\022buy_month_card_num\030\003 "
      "\002(\005\022\037\n\027buy_month_card_burntime\030\004 \002(\020\022\034\n\024"
      "month_card_awardtime\030\005 \002(\020\"_\n\022UserRoleLv"
      "Shopping\022\016\n\006userid\030\001 \002(\014\022\021\n\tgiftbagid\030\002 "
      "\002(\004\022\023\n\013flag_reward\030\003 \002(\004\022\021\n\tawardtime\030\004 "
      "\002(\020\"\271\004\n\031UserStatsChargeAndGiftbag\022\016\n\006use"
      "rid\030\001 \002(\014\022\031\n\021charge_pool_topid\030\002 \002(\004\022\030\n\020"
      "charge_point_num\030\003 \002(\005\022\037\n\027flag_role_sign"
      "in_reward\030\025 \002(\004\022\030\n\020flag_role_signin\030\026 \002("
      "\004\022\034\n\024role_signin_burntime\030\027 \002(\020\022 \n\030flag_"
      "role_levelup_reward\030\037 \002(\004\022\032\n\022flag_charge"
      "_reward\030  \002(\004\022\035\n\025seven_day_signin_time\030)"
      " \002(\020\022\035\n\025flag_seven_day_signin\030* \002(\004\022$\n\034f"
      "lag_seven_day_signin_reward\030+ \002(\004\022(\n fri"
      "end_gift_give_num_refreshtime\0303 \002(\020\022\034\n\024f"
      "riend_gift_give_num\0304 \002(\005\022\"\n\032friend_gift"
      "_give_num_total\0305 \002(\005\022*\n\"friend_gift_acc"
      "ept_num_refreshtime\030= \002(\020\022\036\n\026friend_gift"
      "_accept_num\030> \002(\005\022$\n\034friend_gift_accept_"
      "num_total\030\? \002(\005\"\232\001\n\023UserActivityGiftbag\022"
      "\016\n\006userid\030\001 \002(\014\022\022\n\nactivityid\030\002 \002(\005\022\034\n\024f"
      "estival_signin_time\030) \002(\020\022\034\n\024flag_festiv"
      "al_signin\030* \002(\004\022#\n\033flag_festival_signin_"
      "reward\030+ \002(\004\"D\n\017GameGiftbagCode\022\014\n\004code\030"
      "\001 \002(\014\022\016\n\006userid\030\002 \002(\014\022\023\n\013active_time\030\003 \001"
      "(\020*Q\n\020GAME_CHARGE_TYPE\022\034\n\030GAME_CHARGE_TY"
      "PE_DIAMOND\020\000\022\037\n\033GAME_CHARGE_TYPE_MONTH_C"
      "ARD\020\001*p\n\021GAME_CHARGE_STATE\022\035\n\031GAME_CHARG"
      "E_STATE_INVALID\020\000\022\036\n\032GAME_CHARGE_STATE_U"
      "NOPENED\020\001\022\034\n\030GAME_CHARGE_STATE_OPENED\020\002B"
      "\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4524);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StoredProcChargeAndGiftbag.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_StoredProcChargeAndGiftbag_2eproto
namespace db {
const ::google::protobuf::EnumDescriptor* GAME_CHARGE_TYPE_descriptor() {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_enum_descriptors[0];
}
bool GAME_CHARGE_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GAME_CHARGE_STATE_descriptor() {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_enum_descriptors[1];
}
bool GAME_CHARGE_STATE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ConfigActivityTime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigActivityTime::kIdFieldNumber;
const int ConfigActivityTime::kTypeFieldNumber;
const int ConfigActivityTime::kNameFieldNumber;
const int ConfigActivityTime::kDescFieldNumber;
const int ConfigActivityTime::kDisableFieldNumber;
const int ConfigActivityTime::kBeginTimeFieldNumber;
const int ConfigActivityTime::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigActivityTime::ConfigActivityTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigActivityTime.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigActivityTime)
}
ConfigActivityTime::ConfigActivityTime(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigActivityTime.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigActivityTime)
}
ConfigActivityTime::ConfigActivityTime(const ConfigActivityTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&disable_) -
    reinterpret_cast<char*>(&id_)) + sizeof(disable_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigActivityTime)
}

void ConfigActivityTime::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disable_) -
      reinterpret_cast<char*>(&id_)) + sizeof(disable_));
}

ConfigActivityTime::~ConfigActivityTime() {
  // @@protoc_insertion_point(destructor:db.ConfigActivityTime)
  SharedDtor();
}

void ConfigActivityTime::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigActivityTime::ArenaDtor(void* object) {
  ConfigActivityTime* _this = reinterpret_cast< ConfigActivityTime* >(object);
  (void)_this;
}
void ConfigActivityTime::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigActivityTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigActivityTime::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigActivityTime& ConfigActivityTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigActivityTime.base);
  return *internal_default_instance();
}


void ConfigActivityTime::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigActivityTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      desc_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&disable_) -
        reinterpret_cast<char*>(&id_)) + sizeof(disable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigActivityTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigActivityTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes desc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 disable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_disable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &disable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 begin_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_begin_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 end_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigActivityTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigActivityTime)
  return false;
#undef DO_
}

void ConfigActivityTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigActivityTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // required bytes desc = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->desc(), output);
  }

  // required int32 disable = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->disable(), output);
  }

  // required sfixed64 begin_time = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(6, this->begin_time(), output);
  }

  // required sfixed64 end_time = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(7, this->end_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigActivityTime)
}

::google::protobuf::uint8* ConfigActivityTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigActivityTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // required bytes desc = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->desc(), target);
  }

  // required int32 disable = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->disable(), target);
  }

  // required sfixed64 begin_time = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(6, this->begin_time(), target);
  }

  // required sfixed64 end_time = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(7, this->end_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigActivityTime)
  return target;
}

size_t ConfigActivityTime::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigActivityTime)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_desc()) {
    // required bytes desc = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_begin_time()) {
    // required sfixed64 begin_time = 6;
    total_size += 1 + 8;
  }

  if (has_end_time()) {
    // required sfixed64 end_time = 7;
    total_size += 1 + 8;
  }

  if (has_disable()) {
    // required int32 disable = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->disable());
  }

  return total_size;
}
size_t ConfigActivityTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigActivityTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required bytes name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes desc = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required sfixed64 begin_time = 6;
    total_size += 1 + 8;

    // required sfixed64 end_time = 7;
    total_size += 1 + 8;

    // required int32 disable = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->disable());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigActivityTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigActivityTime)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigActivityTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigActivityTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigActivityTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigActivityTime)
    MergeFrom(*source);
  }
}

void ConfigActivityTime::MergeFrom(const ConfigActivityTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigActivityTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000002u) {
      set_desc(from.desc());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      begin_time_ = from.begin_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000040u) {
      disable_ = from.disable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigActivityTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigActivityTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigActivityTime::CopyFrom(const ConfigActivityTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigActivityTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigActivityTime::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void ConfigActivityTime::Swap(ConfigActivityTime* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigActivityTime* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigActivityTime::UnsafeArenaSwap(ConfigActivityTime* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigActivityTime::InternalSwap(ConfigActivityTime* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(begin_time_, other->begin_time_);
  swap(end_time_, other->end_time_);
  swap(disable_, other->disable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigActivityTime::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigActivityTimeList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigActivityTimeList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigActivityTimeList::ConfigActivityTimeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigActivityTimeList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigActivityTimeList)
}
ConfigActivityTimeList::ConfigActivityTimeList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigActivityTimeList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigActivityTimeList)
}
ConfigActivityTimeList::ConfigActivityTimeList(const ConfigActivityTimeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigActivityTimeList)
}

void ConfigActivityTimeList::SharedCtor() {
}

ConfigActivityTimeList::~ConfigActivityTimeList() {
  // @@protoc_insertion_point(destructor:db.ConfigActivityTimeList)
  SharedDtor();
}

void ConfigActivityTimeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigActivityTimeList::ArenaDtor(void* object) {
  ConfigActivityTimeList* _this = reinterpret_cast< ConfigActivityTimeList* >(object);
  (void)_this;
}
void ConfigActivityTimeList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigActivityTimeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigActivityTimeList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigActivityTimeList& ConfigActivityTimeList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigActivityTimeList.base);
  return *internal_default_instance();
}


void ConfigActivityTimeList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigActivityTimeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigActivityTimeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigActivityTimeList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigActivityTime list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigActivityTimeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigActivityTimeList)
  return false;
#undef DO_
}

void ConfigActivityTimeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigActivityTimeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigActivityTime list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigActivityTimeList)
}

::google::protobuf::uint8* ConfigActivityTimeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigActivityTimeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigActivityTime list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigActivityTimeList)
  return target;
}

size_t ConfigActivityTimeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigActivityTimeList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigActivityTime list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigActivityTimeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigActivityTimeList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigActivityTimeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigActivityTimeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigActivityTimeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigActivityTimeList)
    MergeFrom(*source);
  }
}

void ConfigActivityTimeList::MergeFrom(const ConfigActivityTimeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigActivityTimeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigActivityTimeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigActivityTimeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigActivityTimeList::CopyFrom(const ConfigActivityTimeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigActivityTimeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigActivityTimeList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigActivityTimeList::Swap(ConfigActivityTimeList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigActivityTimeList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigActivityTimeList::UnsafeArenaSwap(ConfigActivityTimeList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigActivityTimeList::InternalSwap(ConfigActivityTimeList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigActivityTimeList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagFirstCharge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagFirstCharge::kChargeSubtypeFieldNumber;
const int ConfigGiftbagFirstCharge::kNameFieldNumber;
const int ConfigGiftbagFirstCharge::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagFirstCharge::ConfigGiftbagFirstCharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFirstCharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagFirstCharge)
}
ConfigGiftbagFirstCharge::ConfigGiftbagFirstCharge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFirstCharge.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagFirstCharge)
}
ConfigGiftbagFirstCharge::ConfigGiftbagFirstCharge(const ConfigGiftbagFirstCharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  charge_subtype_ = from.charge_subtype_;
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagFirstCharge)
}

void ConfigGiftbagFirstCharge::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charge_subtype_ = 0;
}

ConfigGiftbagFirstCharge::~ConfigGiftbagFirstCharge() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagFirstCharge)
  SharedDtor();
}

void ConfigGiftbagFirstCharge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagFirstCharge::ArenaDtor(void* object) {
  ConfigGiftbagFirstCharge* _this = reinterpret_cast< ConfigGiftbagFirstCharge* >(object);
  (void)_this;
}
void ConfigGiftbagFirstCharge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagFirstCharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagFirstCharge::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagFirstCharge& ConfigGiftbagFirstCharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFirstCharge.base);
  return *internal_default_instance();
}


void ConfigGiftbagFirstCharge::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagFirstCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      reward_.ClearNonDefaultToEmpty();
    }
  }
  charge_subtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagFirstCharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagFirstCharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 charge_subtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_charge_subtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charge_subtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagFirstCharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagFirstCharge)
  return false;
#undef DO_
}

void ConfigGiftbagFirstCharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagFirstCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 charge_subtype = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->charge_subtype(), output);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // required bytes reward = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagFirstCharge)
}

::google::protobuf::uint8* ConfigGiftbagFirstCharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagFirstCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 charge_subtype = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->charge_subtype(), target);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // required bytes reward = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagFirstCharge)
  return target;
}

size_t ConfigGiftbagFirstCharge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagFirstCharge)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_reward()) {
    // required bytes reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_charge_subtype()) {
    // required int32 charge_subtype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->charge_subtype());
  }

  return total_size;
}
size_t ConfigGiftbagFirstCharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagFirstCharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required int32 charge_subtype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->charge_subtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagFirstCharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagFirstCharge)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagFirstCharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagFirstCharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagFirstCharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagFirstCharge)
    MergeFrom(*source);
  }
}

void ConfigGiftbagFirstCharge::MergeFrom(const ConfigGiftbagFirstCharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagFirstCharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000002u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000004u) {
      charge_subtype_ = from.charge_subtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagFirstCharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagFirstCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagFirstCharge::CopyFrom(const ConfigGiftbagFirstCharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagFirstCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagFirstCharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ConfigGiftbagFirstCharge::Swap(ConfigGiftbagFirstCharge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagFirstCharge* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagFirstCharge::UnsafeArenaSwap(ConfigGiftbagFirstCharge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagFirstCharge::InternalSwap(ConfigGiftbagFirstCharge* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(charge_subtype_, other->charge_subtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagFirstCharge::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagFirstChargeList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagFirstChargeList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagFirstChargeList::ConfigGiftbagFirstChargeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFirstChargeList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagFirstChargeList)
}
ConfigGiftbagFirstChargeList::ConfigGiftbagFirstChargeList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFirstChargeList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagFirstChargeList)
}
ConfigGiftbagFirstChargeList::ConfigGiftbagFirstChargeList(const ConfigGiftbagFirstChargeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagFirstChargeList)
}

void ConfigGiftbagFirstChargeList::SharedCtor() {
}

ConfigGiftbagFirstChargeList::~ConfigGiftbagFirstChargeList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagFirstChargeList)
  SharedDtor();
}

void ConfigGiftbagFirstChargeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagFirstChargeList::ArenaDtor(void* object) {
  ConfigGiftbagFirstChargeList* _this = reinterpret_cast< ConfigGiftbagFirstChargeList* >(object);
  (void)_this;
}
void ConfigGiftbagFirstChargeList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagFirstChargeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagFirstChargeList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagFirstChargeList& ConfigGiftbagFirstChargeList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFirstChargeList.base);
  return *internal_default_instance();
}


void ConfigGiftbagFirstChargeList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagFirstChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagFirstChargeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagFirstChargeList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagFirstCharge list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagFirstChargeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagFirstChargeList)
  return false;
#undef DO_
}

void ConfigGiftbagFirstChargeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagFirstChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagFirstCharge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagFirstChargeList)
}

::google::protobuf::uint8* ConfigGiftbagFirstChargeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagFirstChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagFirstCharge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagFirstChargeList)
  return target;
}

size_t ConfigGiftbagFirstChargeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagFirstChargeList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagFirstCharge list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagFirstChargeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagFirstChargeList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagFirstChargeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagFirstChargeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagFirstChargeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagFirstChargeList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagFirstChargeList::MergeFrom(const ConfigGiftbagFirstChargeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagFirstChargeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagFirstChargeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagFirstChargeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagFirstChargeList::CopyFrom(const ConfigGiftbagFirstChargeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagFirstChargeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagFirstChargeList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagFirstChargeList::Swap(ConfigGiftbagFirstChargeList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagFirstChargeList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagFirstChargeList::UnsafeArenaSwap(ConfigGiftbagFirstChargeList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagFirstChargeList::InternalSwap(ConfigGiftbagFirstChargeList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagFirstChargeList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagCharge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagCharge::kChargeidFieldNumber;
const int ConfigGiftbagCharge::kNameFieldNumber;
const int ConfigGiftbagCharge::kCashFieldNumber;
const int ConfigGiftbagCharge::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagCharge::ConfigGiftbagCharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagCharge)
}
ConfigGiftbagCharge::ConfigGiftbagCharge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCharge.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagCharge)
}
ConfigGiftbagCharge::ConfigGiftbagCharge(const ConfigGiftbagCharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  ::memcpy(&chargeid_, &from.chargeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cash_) -
    reinterpret_cast<char*>(&chargeid_)) + sizeof(cash_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagCharge)
}

void ConfigGiftbagCharge::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chargeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cash_) -
      reinterpret_cast<char*>(&chargeid_)) + sizeof(cash_));
}

ConfigGiftbagCharge::~ConfigGiftbagCharge() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagCharge)
  SharedDtor();
}

void ConfigGiftbagCharge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagCharge::ArenaDtor(void* object) {
  ConfigGiftbagCharge* _this = reinterpret_cast< ConfigGiftbagCharge* >(object);
  (void)_this;
}
void ConfigGiftbagCharge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagCharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagCharge::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagCharge& ConfigGiftbagCharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCharge.base);
  return *internal_default_instance();
}


void ConfigGiftbagCharge::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      reward_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&chargeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cash_) -
        reinterpret_cast<char*>(&chargeid_)) + sizeof(cash_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagCharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagCharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 chargeid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_chargeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chargeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float cash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_cash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagCharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagCharge)
  return false;
#undef DO_
}

void ConfigGiftbagCharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 chargeid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chargeid(), output);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // required float cash = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cash(), output);
  }

  // required bytes reward = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagCharge)
}

::google::protobuf::uint8* ConfigGiftbagCharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 chargeid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chargeid(), target);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // required float cash = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cash(), target);
  }

  // required bytes reward = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagCharge)
  return target;
}

size_t ConfigGiftbagCharge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagCharge)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_reward()) {
    // required bytes reward = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_chargeid()) {
    // required int32 chargeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chargeid());
  }

  if (has_cash()) {
    // required float cash = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t ConfigGiftbagCharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagCharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes reward = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required int32 chargeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chargeid());

    // required float cash = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagCharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagCharge)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagCharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagCharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagCharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagCharge)
    MergeFrom(*source);
  }
}

void ConfigGiftbagCharge::MergeFrom(const ConfigGiftbagCharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagCharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000002u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000004u) {
      chargeid_ = from.chargeid_;
    }
    if (cached_has_bits & 0x00000008u) {
      cash_ = from.cash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagCharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagCharge::CopyFrom(const ConfigGiftbagCharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagCharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ConfigGiftbagCharge::Swap(ConfigGiftbagCharge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagCharge* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagCharge::UnsafeArenaSwap(ConfigGiftbagCharge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagCharge::InternalSwap(ConfigGiftbagCharge* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(chargeid_, other->chargeid_);
  swap(cash_, other->cash_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagCharge::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagChargeList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagChargeList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagChargeList::ConfigGiftbagChargeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagChargeList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagChargeList)
}
ConfigGiftbagChargeList::ConfigGiftbagChargeList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagChargeList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagChargeList)
}
ConfigGiftbagChargeList::ConfigGiftbagChargeList(const ConfigGiftbagChargeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagChargeList)
}

void ConfigGiftbagChargeList::SharedCtor() {
}

ConfigGiftbagChargeList::~ConfigGiftbagChargeList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagChargeList)
  SharedDtor();
}

void ConfigGiftbagChargeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagChargeList::ArenaDtor(void* object) {
  ConfigGiftbagChargeList* _this = reinterpret_cast< ConfigGiftbagChargeList* >(object);
  (void)_this;
}
void ConfigGiftbagChargeList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagChargeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagChargeList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagChargeList& ConfigGiftbagChargeList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagChargeList.base);
  return *internal_default_instance();
}


void ConfigGiftbagChargeList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagChargeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagChargeList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagCharge list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagChargeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagChargeList)
  return false;
#undef DO_
}

void ConfigGiftbagChargeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagCharge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagChargeList)
}

::google::protobuf::uint8* ConfigGiftbagChargeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagCharge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagChargeList)
  return target;
}

size_t ConfigGiftbagChargeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagChargeList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagCharge list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagChargeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagChargeList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagChargeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagChargeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagChargeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagChargeList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagChargeList::MergeFrom(const ConfigGiftbagChargeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagChargeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagChargeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagChargeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagChargeList::CopyFrom(const ConfigGiftbagChargeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagChargeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagChargeList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagChargeList::Swap(ConfigGiftbagChargeList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagChargeList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagChargeList::UnsafeArenaSwap(ConfigGiftbagChargeList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagChargeList::InternalSwap(ConfigGiftbagChargeList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagChargeList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagSevenDay::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagSevenDay::kDayidFieldNumber;
const int ConfigGiftbagSevenDay::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagSevenDay::ConfigGiftbagSevenDay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagSevenDay.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagSevenDay)
}
ConfigGiftbagSevenDay::ConfigGiftbagSevenDay(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagSevenDay.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagSevenDay)
}
ConfigGiftbagSevenDay::ConfigGiftbagSevenDay(const ConfigGiftbagSevenDay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  dayid_ = from.dayid_;
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagSevenDay)
}

void ConfigGiftbagSevenDay::SharedCtor() {
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dayid_ = 0;
}

ConfigGiftbagSevenDay::~ConfigGiftbagSevenDay() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagSevenDay)
  SharedDtor();
}

void ConfigGiftbagSevenDay::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagSevenDay::ArenaDtor(void* object) {
  ConfigGiftbagSevenDay* _this = reinterpret_cast< ConfigGiftbagSevenDay* >(object);
  (void)_this;
}
void ConfigGiftbagSevenDay::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagSevenDay::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagSevenDay::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagSevenDay& ConfigGiftbagSevenDay::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagSevenDay.base);
  return *internal_default_instance();
}


void ConfigGiftbagSevenDay::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagSevenDay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reward_.ClearNonDefaultToEmpty();
  }
  dayid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagSevenDay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagSevenDay)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 dayid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dayid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dayid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagSevenDay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagSevenDay)
  return false;
#undef DO_
}

void ConfigGiftbagSevenDay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagSevenDay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dayid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dayid(), output);
  }

  // required bytes reward = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagSevenDay)
}

::google::protobuf::uint8* ConfigGiftbagSevenDay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagSevenDay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 dayid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dayid(), target);
  }

  // required bytes reward = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagSevenDay)
  return target;
}

size_t ConfigGiftbagSevenDay::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagSevenDay)
  size_t total_size = 0;

  if (has_reward()) {
    // required bytes reward = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_dayid()) {
    // required int32 dayid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayid());
  }

  return total_size;
}
size_t ConfigGiftbagSevenDay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagSevenDay)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes reward = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required int32 dayid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagSevenDay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagSevenDay)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagSevenDay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagSevenDay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagSevenDay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagSevenDay)
    MergeFrom(*source);
  }
}

void ConfigGiftbagSevenDay::MergeFrom(const ConfigGiftbagSevenDay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagSevenDay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      dayid_ = from.dayid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagSevenDay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagSevenDay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagSevenDay::CopyFrom(const ConfigGiftbagSevenDay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagSevenDay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagSevenDay::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ConfigGiftbagSevenDay::Swap(ConfigGiftbagSevenDay* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagSevenDay* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagSevenDay::UnsafeArenaSwap(ConfigGiftbagSevenDay* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagSevenDay::InternalSwap(ConfigGiftbagSevenDay* other) {
  using std::swap;
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dayid_, other->dayid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagSevenDay::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagSevenDayList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagSevenDayList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagSevenDayList::ConfigGiftbagSevenDayList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagSevenDayList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagSevenDayList)
}
ConfigGiftbagSevenDayList::ConfigGiftbagSevenDayList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagSevenDayList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagSevenDayList)
}
ConfigGiftbagSevenDayList::ConfigGiftbagSevenDayList(const ConfigGiftbagSevenDayList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagSevenDayList)
}

void ConfigGiftbagSevenDayList::SharedCtor() {
}

ConfigGiftbagSevenDayList::~ConfigGiftbagSevenDayList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagSevenDayList)
  SharedDtor();
}

void ConfigGiftbagSevenDayList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagSevenDayList::ArenaDtor(void* object) {
  ConfigGiftbagSevenDayList* _this = reinterpret_cast< ConfigGiftbagSevenDayList* >(object);
  (void)_this;
}
void ConfigGiftbagSevenDayList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagSevenDayList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagSevenDayList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagSevenDayList& ConfigGiftbagSevenDayList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagSevenDayList.base);
  return *internal_default_instance();
}


void ConfigGiftbagSevenDayList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagSevenDayList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagSevenDayList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagSevenDayList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagSevenDay list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagSevenDayList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagSevenDayList)
  return false;
#undef DO_
}

void ConfigGiftbagSevenDayList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagSevenDayList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagSevenDay list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagSevenDayList)
}

::google::protobuf::uint8* ConfigGiftbagSevenDayList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagSevenDayList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagSevenDay list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagSevenDayList)
  return target;
}

size_t ConfigGiftbagSevenDayList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagSevenDayList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagSevenDay list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagSevenDayList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagSevenDayList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagSevenDayList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagSevenDayList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagSevenDayList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagSevenDayList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagSevenDayList::MergeFrom(const ConfigGiftbagSevenDayList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagSevenDayList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagSevenDayList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagSevenDayList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagSevenDayList::CopyFrom(const ConfigGiftbagSevenDayList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagSevenDayList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagSevenDayList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagSevenDayList::Swap(ConfigGiftbagSevenDayList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagSevenDayList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagSevenDayList::UnsafeArenaSwap(ConfigGiftbagSevenDayList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagSevenDayList::InternalSwap(ConfigGiftbagSevenDayList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagSevenDayList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagFestival::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagFestival::kActivityidFieldNumber;
const int ConfigGiftbagFestival::kDayidFieldNumber;
const int ConfigGiftbagFestival::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagFestival::ConfigGiftbagFestival()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFestival.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagFestival)
}
ConfigGiftbagFestival::ConfigGiftbagFestival(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFestival.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagFestival)
}
ConfigGiftbagFestival::ConfigGiftbagFestival(const ConfigGiftbagFestival& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  ::memcpy(&activityid_, &from.activityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&dayid_) -
    reinterpret_cast<char*>(&activityid_)) + sizeof(dayid_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagFestival)
}

void ConfigGiftbagFestival::SharedCtor() {
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&activityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dayid_) -
      reinterpret_cast<char*>(&activityid_)) + sizeof(dayid_));
}

ConfigGiftbagFestival::~ConfigGiftbagFestival() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagFestival)
  SharedDtor();
}

void ConfigGiftbagFestival::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagFestival::ArenaDtor(void* object) {
  ConfigGiftbagFestival* _this = reinterpret_cast< ConfigGiftbagFestival* >(object);
  (void)_this;
}
void ConfigGiftbagFestival::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagFestival::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagFestival::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagFestival& ConfigGiftbagFestival::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFestival.base);
  return *internal_default_instance();
}


void ConfigGiftbagFestival::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagFestival)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reward_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 6u) {
    ::memset(&activityid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dayid_) -
        reinterpret_cast<char*>(&activityid_)) + sizeof(dayid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagFestival::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagFestival)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 activityid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_activityid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dayid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dayid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dayid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagFestival)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagFestival)
  return false;
#undef DO_
}

void ConfigGiftbagFestival::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagFestival)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 activityid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activityid(), output);
  }

  // required int32 dayid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dayid(), output);
  }

  // required bytes reward = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagFestival)
}

::google::protobuf::uint8* ConfigGiftbagFestival::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagFestival)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 activityid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activityid(), target);
  }

  // required int32 dayid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dayid(), target);
  }

  // required bytes reward = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagFestival)
  return target;
}

size_t ConfigGiftbagFestival::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagFestival)
  size_t total_size = 0;

  if (has_reward()) {
    // required bytes reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_activityid()) {
    // required int32 activityid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activityid());
  }

  if (has_dayid()) {
    // required int32 dayid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayid());
  }

  return total_size;
}
size_t ConfigGiftbagFestival::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagFestival)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required int32 activityid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activityid());

    // required int32 dayid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagFestival::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagFestival)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagFestival* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagFestival>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagFestival)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagFestival)
    MergeFrom(*source);
  }
}

void ConfigGiftbagFestival::MergeFrom(const ConfigGiftbagFestival& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagFestival)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      activityid_ = from.activityid_;
    }
    if (cached_has_bits & 0x00000004u) {
      dayid_ = from.dayid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagFestival::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagFestival)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagFestival::CopyFrom(const ConfigGiftbagFestival& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagFestival)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagFestival::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ConfigGiftbagFestival::Swap(ConfigGiftbagFestival* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagFestival* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagFestival::UnsafeArenaSwap(ConfigGiftbagFestival* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagFestival::InternalSwap(ConfigGiftbagFestival* other) {
  using std::swap;
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(activityid_, other->activityid_);
  swap(dayid_, other->dayid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagFestival::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagFestivalList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagFestivalList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagFestivalList::ConfigGiftbagFestivalList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFestivalList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagFestivalList)
}
ConfigGiftbagFestivalList::ConfigGiftbagFestivalList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFestivalList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagFestivalList)
}
ConfigGiftbagFestivalList::ConfigGiftbagFestivalList(const ConfigGiftbagFestivalList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagFestivalList)
}

void ConfigGiftbagFestivalList::SharedCtor() {
}

ConfigGiftbagFestivalList::~ConfigGiftbagFestivalList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagFestivalList)
  SharedDtor();
}

void ConfigGiftbagFestivalList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagFestivalList::ArenaDtor(void* object) {
  ConfigGiftbagFestivalList* _this = reinterpret_cast< ConfigGiftbagFestivalList* >(object);
  (void)_this;
}
void ConfigGiftbagFestivalList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagFestivalList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagFestivalList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagFestivalList& ConfigGiftbagFestivalList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFestivalList.base);
  return *internal_default_instance();
}


void ConfigGiftbagFestivalList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagFestivalList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagFestivalList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagFestivalList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagFestival list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagFestivalList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagFestivalList)
  return false;
#undef DO_
}

void ConfigGiftbagFestivalList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagFestivalList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagFestival list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagFestivalList)
}

::google::protobuf::uint8* ConfigGiftbagFestivalList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagFestivalList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagFestival list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagFestivalList)
  return target;
}

size_t ConfigGiftbagFestivalList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagFestivalList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagFestival list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagFestivalList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagFestivalList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagFestivalList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagFestivalList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagFestivalList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagFestivalList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagFestivalList::MergeFrom(const ConfigGiftbagFestivalList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagFestivalList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagFestivalList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagFestivalList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagFestivalList::CopyFrom(const ConfigGiftbagFestivalList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagFestivalList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagFestivalList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagFestivalList::Swap(ConfigGiftbagFestivalList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagFestivalList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagFestivalList::UnsafeArenaSwap(ConfigGiftbagFestivalList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagFestivalList::InternalSwap(ConfigGiftbagFestivalList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagFestivalList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagMonthCard::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagMonthCard::kCardidFieldNumber;
const int ConfigGiftbagMonthCard::kNameFieldNumber;
const int ConfigGiftbagMonthCard::kDescFieldNumber;
const int ConfigGiftbagMonthCard::kCardDaysFieldNumber;
const int ConfigGiftbagMonthCard::kRewardFieldNumber;
const int ConfigGiftbagMonthCard::kPassengerRefreshTimeRatioFieldNumber;
const int ConfigGiftbagMonthCard::kRoleExpRatioFieldNumber;
const int ConfigGiftbagMonthCard::kSailorExpRatioFieldNumber;
const int ConfigGiftbagMonthCard::kGhostShipResetNumFieldNumber;
const int ConfigGiftbagMonthCard::kFreeResurrectionNumFieldNumber;
const int ConfigGiftbagMonthCard::kPirateShipFightNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagMonthCard::ConfigGiftbagMonthCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagMonthCard.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagMonthCard)
}
ConfigGiftbagMonthCard::ConfigGiftbagMonthCard(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagMonthCard.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagMonthCard)
}
ConfigGiftbagMonthCard::ConfigGiftbagMonthCard(const ConfigGiftbagMonthCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc(),
      GetArenaNoVirtual());
  }
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  pirate_ship_fight_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pirate_ship_fight_num()) {
    pirate_ship_fight_num_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pirate_ship_fight_num(),
      GetArenaNoVirtual());
  }
  ::memcpy(&cardid_, &from.cardid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ghost_ship_reset_num_) -
    reinterpret_cast<char*>(&cardid_)) + sizeof(ghost_ship_reset_num_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagMonthCard)
}

void ConfigGiftbagMonthCard::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pirate_ship_fight_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ghost_ship_reset_num_) -
      reinterpret_cast<char*>(&cardid_)) + sizeof(ghost_ship_reset_num_));
}

ConfigGiftbagMonthCard::~ConfigGiftbagMonthCard() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagMonthCard)
  SharedDtor();
}

void ConfigGiftbagMonthCard::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pirate_ship_fight_num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagMonthCard::ArenaDtor(void* object) {
  ConfigGiftbagMonthCard* _this = reinterpret_cast< ConfigGiftbagMonthCard* >(object);
  (void)_this;
}
void ConfigGiftbagMonthCard::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagMonthCard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagMonthCard::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagMonthCard& ConfigGiftbagMonthCard::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagMonthCard.base);
  return *internal_default_instance();
}


void ConfigGiftbagMonthCard::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagMonthCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      reward_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      pirate_ship_fight_num_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&cardid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_exp_ratio_) -
        reinterpret_cast<char*>(&cardid_)) + sizeof(role_exp_ratio_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&free_resurrection_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ghost_ship_reset_num_) -
        reinterpret_cast<char*>(&free_resurrection_num_)) + sizeof(ghost_ship_reset_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagMonthCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagMonthCard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cardid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_cardid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 card_days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_card_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &card_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float passenger_refresh_time_ratio = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_passenger_refresh_time_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &passenger_refresh_time_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float role_exp_ratio = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_role_exp_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &role_exp_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float sailor_exp_ratio = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {
          set_has_sailor_exp_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sailor_exp_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ghost_ship_reset_num = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_ghost_ship_reset_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ghost_ship_reset_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 free_resurrection_num = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_free_resurrection_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_resurrection_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pirate_ship_fight_num = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pirate_ship_fight_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagMonthCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagMonthCard)
  return false;
#undef DO_
}

void ConfigGiftbagMonthCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagMonthCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 cardid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cardid(), output);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // required bytes desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->desc(), output);
  }

  // required int32 card_days = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->card_days(), output);
  }

  // required bytes reward = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->reward(), output);
  }

  // required float passenger_refresh_time_ratio = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->passenger_refresh_time_ratio(), output);
  }

  // required float role_exp_ratio = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->role_exp_ratio(), output);
  }

  // required float sailor_exp_ratio = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->sailor_exp_ratio(), output);
  }

  // required int32 ghost_ship_reset_num = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->ghost_ship_reset_num(), output);
  }

  // required int32 free_resurrection_num = 15;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->free_resurrection_num(), output);
  }

  // required bytes pirate_ship_fight_num = 16;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->pirate_ship_fight_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagMonthCard)
}

::google::protobuf::uint8* ConfigGiftbagMonthCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagMonthCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 cardid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cardid(), target);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // required bytes desc = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->desc(), target);
  }

  // required int32 card_days = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->card_days(), target);
  }

  // required bytes reward = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->reward(), target);
  }

  // required float passenger_refresh_time_ratio = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->passenger_refresh_time_ratio(), target);
  }

  // required float role_exp_ratio = 12;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->role_exp_ratio(), target);
  }

  // required float sailor_exp_ratio = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->sailor_exp_ratio(), target);
  }

  // required int32 ghost_ship_reset_num = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->ghost_ship_reset_num(), target);
  }

  // required int32 free_resurrection_num = 15;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->free_resurrection_num(), target);
  }

  // required bytes pirate_ship_fight_num = 16;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->pirate_ship_fight_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagMonthCard)
  return target;
}

size_t ConfigGiftbagMonthCard::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagMonthCard)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_desc()) {
    // required bytes desc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  if (has_reward()) {
    // required bytes reward = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_pirate_ship_fight_num()) {
    // required bytes pirate_ship_fight_num = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pirate_ship_fight_num());
  }

  if (has_cardid()) {
    // required int32 cardid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cardid());
  }

  if (has_card_days()) {
    // required int32 card_days = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->card_days());
  }

  if (has_passenger_refresh_time_ratio()) {
    // required float passenger_refresh_time_ratio = 11;
    total_size += 1 + 4;
  }

  if (has_role_exp_ratio()) {
    // required float role_exp_ratio = 12;
    total_size += 1 + 4;
  }

  if (has_free_resurrection_num()) {
    // required int32 free_resurrection_num = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->free_resurrection_num());
  }

  if (has_sailor_exp_ratio()) {
    // required float sailor_exp_ratio = 13;
    total_size += 1 + 4;
  }

  if (has_ghost_ship_reset_num()) {
    // required int32 ghost_ship_reset_num = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ghost_ship_reset_num());
  }

  return total_size;
}
size_t ConfigGiftbagMonthCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagMonthCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes desc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());

    // required bytes reward = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required bytes pirate_ship_fight_num = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pirate_ship_fight_num());

    // required int32 cardid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cardid());

    // required int32 card_days = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->card_days());

    // required float passenger_refresh_time_ratio = 11;
    total_size += 1 + 4;

    // required float role_exp_ratio = 12;
    total_size += 1 + 4;

    // required int32 free_resurrection_num = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->free_resurrection_num());

    // required float sailor_exp_ratio = 13;
    total_size += 1 + 4;

    // required int32 ghost_ship_reset_num = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ghost_ship_reset_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagMonthCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagMonthCard)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagMonthCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagMonthCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagMonthCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagMonthCard)
    MergeFrom(*source);
  }
}

void ConfigGiftbagMonthCard::MergeFrom(const ConfigGiftbagMonthCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagMonthCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000002u) {
      set_desc(from.desc());
    }
    if (cached_has_bits & 0x00000004u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000008u) {
      set_pirate_ship_fight_num(from.pirate_ship_fight_num());
    }
    if (cached_has_bits & 0x00000010u) {
      cardid_ = from.cardid_;
    }
    if (cached_has_bits & 0x00000020u) {
      card_days_ = from.card_days_;
    }
    if (cached_has_bits & 0x00000040u) {
      passenger_refresh_time_ratio_ = from.passenger_refresh_time_ratio_;
    }
    if (cached_has_bits & 0x00000080u) {
      role_exp_ratio_ = from.role_exp_ratio_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      free_resurrection_num_ = from.free_resurrection_num_;
    }
    if (cached_has_bits & 0x00000200u) {
      sailor_exp_ratio_ = from.sailor_exp_ratio_;
    }
    if (cached_has_bits & 0x00000400u) {
      ghost_ship_reset_num_ = from.ghost_ship_reset_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagMonthCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagMonthCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagMonthCard::CopyFrom(const ConfigGiftbagMonthCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagMonthCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagMonthCard::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;
  return true;
}

void ConfigGiftbagMonthCard::Swap(ConfigGiftbagMonthCard* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagMonthCard* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagMonthCard::UnsafeArenaSwap(ConfigGiftbagMonthCard* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagMonthCard::InternalSwap(ConfigGiftbagMonthCard* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pirate_ship_fight_num_.Swap(&other->pirate_ship_fight_num_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cardid_, other->cardid_);
  swap(card_days_, other->card_days_);
  swap(passenger_refresh_time_ratio_, other->passenger_refresh_time_ratio_);
  swap(role_exp_ratio_, other->role_exp_ratio_);
  swap(free_resurrection_num_, other->free_resurrection_num_);
  swap(sailor_exp_ratio_, other->sailor_exp_ratio_);
  swap(ghost_ship_reset_num_, other->ghost_ship_reset_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagMonthCard::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagMonthCardList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagMonthCardList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagMonthCardList::ConfigGiftbagMonthCardList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagMonthCardList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagMonthCardList)
}
ConfigGiftbagMonthCardList::ConfigGiftbagMonthCardList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagMonthCardList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagMonthCardList)
}
ConfigGiftbagMonthCardList::ConfigGiftbagMonthCardList(const ConfigGiftbagMonthCardList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagMonthCardList)
}

void ConfigGiftbagMonthCardList::SharedCtor() {
}

ConfigGiftbagMonthCardList::~ConfigGiftbagMonthCardList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagMonthCardList)
  SharedDtor();
}

void ConfigGiftbagMonthCardList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagMonthCardList::ArenaDtor(void* object) {
  ConfigGiftbagMonthCardList* _this = reinterpret_cast< ConfigGiftbagMonthCardList* >(object);
  (void)_this;
}
void ConfigGiftbagMonthCardList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagMonthCardList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagMonthCardList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagMonthCardList& ConfigGiftbagMonthCardList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagMonthCardList.base);
  return *internal_default_instance();
}


void ConfigGiftbagMonthCardList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagMonthCardList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagMonthCardList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagMonthCardList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagMonthCard list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagMonthCardList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagMonthCardList)
  return false;
#undef DO_
}

void ConfigGiftbagMonthCardList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagMonthCardList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagMonthCard list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagMonthCardList)
}

::google::protobuf::uint8* ConfigGiftbagMonthCardList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagMonthCardList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagMonthCard list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagMonthCardList)
  return target;
}

size_t ConfigGiftbagMonthCardList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagMonthCardList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagMonthCard list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagMonthCardList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagMonthCardList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagMonthCardList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagMonthCardList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagMonthCardList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagMonthCardList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagMonthCardList::MergeFrom(const ConfigGiftbagMonthCardList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagMonthCardList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagMonthCardList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagMonthCardList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagMonthCardList::CopyFrom(const ConfigGiftbagMonthCardList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagMonthCardList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagMonthCardList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagMonthCardList::Swap(ConfigGiftbagMonthCardList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagMonthCardList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagMonthCardList::UnsafeArenaSwap(ConfigGiftbagMonthCardList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagMonthCardList::InternalSwap(ConfigGiftbagMonthCardList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagMonthCardList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagRoleSignin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagRoleSignin::kIdFieldNumber;
const int ConfigGiftbagRoleSignin::kDayidFieldNumber;
const int ConfigGiftbagRoleSignin::kRewardFieldNumber;
const int ConfigGiftbagRoleSignin::kExtraRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagRoleSignin::ConfigGiftbagRoleSignin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleSignin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagRoleSignin)
}
ConfigGiftbagRoleSignin::ConfigGiftbagRoleSignin(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleSignin.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagRoleSignin)
}
ConfigGiftbagRoleSignin::ConfigGiftbagRoleSignin(const ConfigGiftbagRoleSignin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  extra_reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extra_reward()) {
    extra_reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_reward(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dayid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(dayid_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagRoleSignin)
}

void ConfigGiftbagRoleSignin::SharedCtor() {
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dayid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(dayid_));
}

ConfigGiftbagRoleSignin::~ConfigGiftbagRoleSignin() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagRoleSignin)
  SharedDtor();
}

void ConfigGiftbagRoleSignin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagRoleSignin::ArenaDtor(void* object) {
  ConfigGiftbagRoleSignin* _this = reinterpret_cast< ConfigGiftbagRoleSignin* >(object);
  (void)_this;
}
void ConfigGiftbagRoleSignin::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagRoleSignin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagRoleSignin::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagRoleSignin& ConfigGiftbagRoleSignin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleSignin.base);
  return *internal_default_instance();
}


void ConfigGiftbagRoleSignin::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagRoleSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      reward_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      extra_reward_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dayid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(dayid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagRoleSignin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagRoleSignin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dayid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dayid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dayid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes extra_reward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagRoleSignin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagRoleSignin)
  return false;
#undef DO_
}

void ConfigGiftbagRoleSignin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagRoleSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 dayid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dayid(), output);
  }

  // required bytes reward = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->reward(), output);
  }

  // required bytes extra_reward = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->extra_reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagRoleSignin)
}

::google::protobuf::uint8* ConfigGiftbagRoleSignin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagRoleSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 dayid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dayid(), target);
  }

  // required bytes reward = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->reward(), target);
  }

  // required bytes extra_reward = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->extra_reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagRoleSignin)
  return target;
}

size_t ConfigGiftbagRoleSignin::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagRoleSignin)
  size_t total_size = 0;

  if (has_reward()) {
    // required bytes reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_extra_reward()) {
    // required bytes extra_reward = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra_reward());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_dayid()) {
    // required int32 dayid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayid());
  }

  return total_size;
}
size_t ConfigGiftbagRoleSignin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagRoleSignin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required bytes extra_reward = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra_reward());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 dayid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dayid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagRoleSignin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagRoleSignin)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagRoleSignin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagRoleSignin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagRoleSignin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagRoleSignin)
    MergeFrom(*source);
  }
}

void ConfigGiftbagRoleSignin::MergeFrom(const ConfigGiftbagRoleSignin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagRoleSignin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      set_extra_reward(from.extra_reward());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      dayid_ = from.dayid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagRoleSignin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagRoleSignin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagRoleSignin::CopyFrom(const ConfigGiftbagRoleSignin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagRoleSignin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagRoleSignin::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ConfigGiftbagRoleSignin::Swap(ConfigGiftbagRoleSignin* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagRoleSignin* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagRoleSignin::UnsafeArenaSwap(ConfigGiftbagRoleSignin* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagRoleSignin::InternalSwap(ConfigGiftbagRoleSignin* other) {
  using std::swap;
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extra_reward_.Swap(&other->extra_reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(dayid_, other->dayid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagRoleSignin::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagRoleSigninList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagRoleSigninList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagRoleSigninList::ConfigGiftbagRoleSigninList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleSigninList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagRoleSigninList)
}
ConfigGiftbagRoleSigninList::ConfigGiftbagRoleSigninList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleSigninList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagRoleSigninList)
}
ConfigGiftbagRoleSigninList::ConfigGiftbagRoleSigninList(const ConfigGiftbagRoleSigninList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagRoleSigninList)
}

void ConfigGiftbagRoleSigninList::SharedCtor() {
}

ConfigGiftbagRoleSigninList::~ConfigGiftbagRoleSigninList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagRoleSigninList)
  SharedDtor();
}

void ConfigGiftbagRoleSigninList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagRoleSigninList::ArenaDtor(void* object) {
  ConfigGiftbagRoleSigninList* _this = reinterpret_cast< ConfigGiftbagRoleSigninList* >(object);
  (void)_this;
}
void ConfigGiftbagRoleSigninList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagRoleSigninList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagRoleSigninList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagRoleSigninList& ConfigGiftbagRoleSigninList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleSigninList.base);
  return *internal_default_instance();
}


void ConfigGiftbagRoleSigninList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagRoleSigninList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagRoleSigninList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagRoleSigninList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagRoleSignin list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagRoleSigninList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagRoleSigninList)
  return false;
#undef DO_
}

void ConfigGiftbagRoleSigninList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagRoleSigninList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagRoleSignin list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagRoleSigninList)
}

::google::protobuf::uint8* ConfigGiftbagRoleSigninList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagRoleSigninList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagRoleSignin list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagRoleSigninList)
  return target;
}

size_t ConfigGiftbagRoleSigninList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagRoleSigninList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagRoleSignin list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagRoleSigninList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagRoleSigninList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagRoleSigninList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagRoleSigninList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagRoleSigninList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagRoleSigninList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagRoleSigninList::MergeFrom(const ConfigGiftbagRoleSigninList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagRoleSigninList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagRoleSigninList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagRoleSigninList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagRoleSigninList::CopyFrom(const ConfigGiftbagRoleSigninList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagRoleSigninList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagRoleSigninList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagRoleSigninList::Swap(ConfigGiftbagRoleSigninList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagRoleSigninList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagRoleSigninList::UnsafeArenaSwap(ConfigGiftbagRoleSigninList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagRoleSigninList::InternalSwap(ConfigGiftbagRoleSigninList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagRoleSigninList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagRoleLevelup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagRoleLevelup::kLevelidFieldNumber;
const int ConfigGiftbagRoleLevelup::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagRoleLevelup::ConfigGiftbagRoleLevelup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLevelup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagRoleLevelup)
}
ConfigGiftbagRoleLevelup::ConfigGiftbagRoleLevelup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLevelup.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagRoleLevelup)
}
ConfigGiftbagRoleLevelup::ConfigGiftbagRoleLevelup(const ConfigGiftbagRoleLevelup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  levelid_ = from.levelid_;
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagRoleLevelup)
}

void ConfigGiftbagRoleLevelup::SharedCtor() {
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  levelid_ = 0;
}

ConfigGiftbagRoleLevelup::~ConfigGiftbagRoleLevelup() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagRoleLevelup)
  SharedDtor();
}

void ConfigGiftbagRoleLevelup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagRoleLevelup::ArenaDtor(void* object) {
  ConfigGiftbagRoleLevelup* _this = reinterpret_cast< ConfigGiftbagRoleLevelup* >(object);
  (void)_this;
}
void ConfigGiftbagRoleLevelup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagRoleLevelup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagRoleLevelup::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagRoleLevelup& ConfigGiftbagRoleLevelup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLevelup.base);
  return *internal_default_instance();
}


void ConfigGiftbagRoleLevelup::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagRoleLevelup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reward_.ClearNonDefaultToEmpty();
  }
  levelid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagRoleLevelup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagRoleLevelup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 levelid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_levelid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagRoleLevelup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagRoleLevelup)
  return false;
#undef DO_
}

void ConfigGiftbagRoleLevelup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagRoleLevelup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 levelid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->levelid(), output);
  }

  // required bytes reward = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagRoleLevelup)
}

::google::protobuf::uint8* ConfigGiftbagRoleLevelup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagRoleLevelup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 levelid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->levelid(), target);
  }

  // required bytes reward = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagRoleLevelup)
  return target;
}

size_t ConfigGiftbagRoleLevelup::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagRoleLevelup)
  size_t total_size = 0;

  if (has_reward()) {
    // required bytes reward = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_levelid()) {
    // required int32 levelid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  return total_size;
}
size_t ConfigGiftbagRoleLevelup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagRoleLevelup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes reward = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required int32 levelid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagRoleLevelup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagRoleLevelup)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagRoleLevelup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagRoleLevelup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagRoleLevelup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagRoleLevelup)
    MergeFrom(*source);
  }
}

void ConfigGiftbagRoleLevelup::MergeFrom(const ConfigGiftbagRoleLevelup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagRoleLevelup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      levelid_ = from.levelid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagRoleLevelup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagRoleLevelup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagRoleLevelup::CopyFrom(const ConfigGiftbagRoleLevelup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagRoleLevelup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagRoleLevelup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ConfigGiftbagRoleLevelup::Swap(ConfigGiftbagRoleLevelup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagRoleLevelup* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagRoleLevelup::UnsafeArenaSwap(ConfigGiftbagRoleLevelup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagRoleLevelup::InternalSwap(ConfigGiftbagRoleLevelup* other) {
  using std::swap;
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(levelid_, other->levelid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagRoleLevelup::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagRoleLevelupList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagRoleLevelupList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagRoleLevelupList::ConfigGiftbagRoleLevelupList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLevelupList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagRoleLevelupList)
}
ConfigGiftbagRoleLevelupList::ConfigGiftbagRoleLevelupList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLevelupList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagRoleLevelupList)
}
ConfigGiftbagRoleLevelupList::ConfigGiftbagRoleLevelupList(const ConfigGiftbagRoleLevelupList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagRoleLevelupList)
}

void ConfigGiftbagRoleLevelupList::SharedCtor() {
}

ConfigGiftbagRoleLevelupList::~ConfigGiftbagRoleLevelupList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagRoleLevelupList)
  SharedDtor();
}

void ConfigGiftbagRoleLevelupList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagRoleLevelupList::ArenaDtor(void* object) {
  ConfigGiftbagRoleLevelupList* _this = reinterpret_cast< ConfigGiftbagRoleLevelupList* >(object);
  (void)_this;
}
void ConfigGiftbagRoleLevelupList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagRoleLevelupList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagRoleLevelupList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagRoleLevelupList& ConfigGiftbagRoleLevelupList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLevelupList.base);
  return *internal_default_instance();
}


void ConfigGiftbagRoleLevelupList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagRoleLevelupList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagRoleLevelupList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagRoleLevelupList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagRoleLevelup list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagRoleLevelupList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagRoleLevelupList)
  return false;
#undef DO_
}

void ConfigGiftbagRoleLevelupList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagRoleLevelupList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagRoleLevelup list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagRoleLevelupList)
}

::google::protobuf::uint8* ConfigGiftbagRoleLevelupList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagRoleLevelupList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagRoleLevelup list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagRoleLevelupList)
  return target;
}

size_t ConfigGiftbagRoleLevelupList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagRoleLevelupList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagRoleLevelup list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagRoleLevelupList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagRoleLevelupList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagRoleLevelupList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagRoleLevelupList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagRoleLevelupList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagRoleLevelupList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagRoleLevelupList::MergeFrom(const ConfigGiftbagRoleLevelupList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagRoleLevelupList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagRoleLevelupList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagRoleLevelupList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagRoleLevelupList::CopyFrom(const ConfigGiftbagRoleLevelupList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagRoleLevelupList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagRoleLevelupList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagRoleLevelupList::Swap(ConfigGiftbagRoleLevelupList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagRoleLevelupList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagRoleLevelupList::UnsafeArenaSwap(ConfigGiftbagRoleLevelupList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagRoleLevelupList::InternalSwap(ConfigGiftbagRoleLevelupList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagRoleLevelupList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagRoleLvShopping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagRoleLvShopping::kGiftbagidFieldNumber;
const int ConfigGiftbagRoleLvShopping::kLevelidFieldNumber;
const int ConfigGiftbagRoleLvShopping::kRewardFieldNumber;
const int ConfigGiftbagRoleLvShopping::kMailTitleFieldNumber;
const int ConfigGiftbagRoleLvShopping::kMailTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagRoleLvShopping::ConfigGiftbagRoleLvShopping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLvShopping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagRoleLvShopping)
}
ConfigGiftbagRoleLvShopping::ConfigGiftbagRoleLvShopping(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLvShopping.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagRoleLvShopping)
}
ConfigGiftbagRoleLvShopping::ConfigGiftbagRoleLvShopping(const ConfigGiftbagRoleLvShopping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward()) {
    reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward(),
      GetArenaNoVirtual());
  }
  mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_title()) {
    mail_title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_title(),
      GetArenaNoVirtual());
  }
  mail_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_text()) {
    mail_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_text(),
      GetArenaNoVirtual());
  }
  ::memcpy(&giftbagid_, &from.giftbagid_,
    static_cast<size_t>(reinterpret_cast<char*>(&levelid_) -
    reinterpret_cast<char*>(&giftbagid_)) + sizeof(levelid_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagRoleLvShopping)
}

void ConfigGiftbagRoleLvShopping::SharedCtor() {
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&giftbagid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&levelid_) -
      reinterpret_cast<char*>(&giftbagid_)) + sizeof(levelid_));
}

ConfigGiftbagRoleLvShopping::~ConfigGiftbagRoleLvShopping() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagRoleLvShopping)
  SharedDtor();
}

void ConfigGiftbagRoleLvShopping::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagRoleLvShopping::ArenaDtor(void* object) {
  ConfigGiftbagRoleLvShopping* _this = reinterpret_cast< ConfigGiftbagRoleLvShopping* >(object);
  (void)_this;
}
void ConfigGiftbagRoleLvShopping::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagRoleLvShopping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagRoleLvShopping::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagRoleLvShopping& ConfigGiftbagRoleLvShopping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLvShopping.base);
  return *internal_default_instance();
}


void ConfigGiftbagRoleLvShopping::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagRoleLvShopping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      reward_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      mail_title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      mail_text_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&giftbagid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&levelid_) -
        reinterpret_cast<char*>(&giftbagid_)) + sizeof(levelid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagRoleLvShopping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagRoleLvShopping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 giftbagid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_giftbagid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &giftbagid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 levelid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_levelid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes mail_title = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mail_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes mail_text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mail_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagRoleLvShopping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagRoleLvShopping)
  return false;
#undef DO_
}

void ConfigGiftbagRoleLvShopping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagRoleLvShopping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 giftbagid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->giftbagid(), output);
  }

  // required int32 levelid = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->levelid(), output);
  }

  // required bytes reward = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->reward(), output);
  }

  // required bytes mail_title = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->mail_title(), output);
  }

  // required bytes mail_text = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->mail_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagRoleLvShopping)
}

::google::protobuf::uint8* ConfigGiftbagRoleLvShopping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagRoleLvShopping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 giftbagid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->giftbagid(), target);
  }

  // required int32 levelid = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->levelid(), target);
  }

  // required bytes reward = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->reward(), target);
  }

  // required bytes mail_title = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->mail_title(), target);
  }

  // required bytes mail_text = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->mail_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagRoleLvShopping)
  return target;
}

size_t ConfigGiftbagRoleLvShopping::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagRoleLvShopping)
  size_t total_size = 0;

  if (has_reward()) {
    // required bytes reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  if (has_mail_title()) {
    // required bytes mail_title = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mail_title());
  }

  if (has_mail_text()) {
    // required bytes mail_text = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mail_text());
  }

  if (has_giftbagid()) {
    // required uint64 giftbagid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->giftbagid());
  }

  if (has_levelid()) {
    // required int32 levelid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());
  }

  return total_size;
}
size_t ConfigGiftbagRoleLvShopping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagRoleLvShopping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());

    // required bytes mail_title = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mail_title());

    // required bytes mail_text = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mail_text());

    // required uint64 giftbagid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->giftbagid());

    // required int32 levelid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->levelid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagRoleLvShopping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagRoleLvShopping)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagRoleLvShopping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagRoleLvShopping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagRoleLvShopping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagRoleLvShopping)
    MergeFrom(*source);
  }
}

void ConfigGiftbagRoleLvShopping::MergeFrom(const ConfigGiftbagRoleLvShopping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagRoleLvShopping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_reward(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      set_mail_title(from.mail_title());
    }
    if (cached_has_bits & 0x00000004u) {
      set_mail_text(from.mail_text());
    }
    if (cached_has_bits & 0x00000008u) {
      giftbagid_ = from.giftbagid_;
    }
    if (cached_has_bits & 0x00000010u) {
      levelid_ = from.levelid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagRoleLvShopping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagRoleLvShopping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagRoleLvShopping::CopyFrom(const ConfigGiftbagRoleLvShopping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagRoleLvShopping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagRoleLvShopping::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void ConfigGiftbagRoleLvShopping::Swap(ConfigGiftbagRoleLvShopping* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagRoleLvShopping* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagRoleLvShopping::UnsafeArenaSwap(ConfigGiftbagRoleLvShopping* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagRoleLvShopping::InternalSwap(ConfigGiftbagRoleLvShopping* other) {
  using std::swap;
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mail_title_.Swap(&other->mail_title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mail_text_.Swap(&other->mail_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(giftbagid_, other->giftbagid_);
  swap(levelid_, other->levelid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagRoleLvShopping::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagRoleLvShoppingList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagRoleLvShoppingList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagRoleLvShoppingList::ConfigGiftbagRoleLvShoppingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLvShoppingList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagRoleLvShoppingList)
}
ConfigGiftbagRoleLvShoppingList::ConfigGiftbagRoleLvShoppingList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLvShoppingList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagRoleLvShoppingList)
}
ConfigGiftbagRoleLvShoppingList::ConfigGiftbagRoleLvShoppingList(const ConfigGiftbagRoleLvShoppingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagRoleLvShoppingList)
}

void ConfigGiftbagRoleLvShoppingList::SharedCtor() {
}

ConfigGiftbagRoleLvShoppingList::~ConfigGiftbagRoleLvShoppingList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagRoleLvShoppingList)
  SharedDtor();
}

void ConfigGiftbagRoleLvShoppingList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagRoleLvShoppingList::ArenaDtor(void* object) {
  ConfigGiftbagRoleLvShoppingList* _this = reinterpret_cast< ConfigGiftbagRoleLvShoppingList* >(object);
  (void)_this;
}
void ConfigGiftbagRoleLvShoppingList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagRoleLvShoppingList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagRoleLvShoppingList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagRoleLvShoppingList& ConfigGiftbagRoleLvShoppingList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagRoleLvShoppingList.base);
  return *internal_default_instance();
}


void ConfigGiftbagRoleLvShoppingList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagRoleLvShoppingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagRoleLvShoppingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagRoleLvShoppingList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagRoleLvShopping list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagRoleLvShoppingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagRoleLvShoppingList)
  return false;
#undef DO_
}

void ConfigGiftbagRoleLvShoppingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagRoleLvShoppingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagRoleLvShopping list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagRoleLvShoppingList)
}

::google::protobuf::uint8* ConfigGiftbagRoleLvShoppingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagRoleLvShoppingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagRoleLvShopping list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagRoleLvShoppingList)
  return target;
}

size_t ConfigGiftbagRoleLvShoppingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagRoleLvShoppingList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagRoleLvShopping list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagRoleLvShoppingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagRoleLvShoppingList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagRoleLvShoppingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagRoleLvShoppingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagRoleLvShoppingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagRoleLvShoppingList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagRoleLvShoppingList::MergeFrom(const ConfigGiftbagRoleLvShoppingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagRoleLvShoppingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagRoleLvShoppingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagRoleLvShoppingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagRoleLvShoppingList::CopyFrom(const ConfigGiftbagRoleLvShoppingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagRoleLvShoppingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagRoleLvShoppingList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagRoleLvShoppingList::Swap(ConfigGiftbagRoleLvShoppingList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagRoleLvShoppingList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagRoleLvShoppingList::UnsafeArenaSwap(ConfigGiftbagRoleLvShoppingList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagRoleLvShoppingList::InternalSwap(ConfigGiftbagRoleLvShoppingList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagRoleLvShoppingList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagCode::kCodeFieldNumber;
const int ConfigGiftbagCode::kTypeFieldNumber;
const int ConfigGiftbagCode::kDescFieldNumber;
const int ConfigGiftbagCode::kBeginTimeFieldNumber;
const int ConfigGiftbagCode::kEndTimeFieldNumber;
const int ConfigGiftbagCode::kRewardTypeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagCode::ConfigGiftbagCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagCode)
}
ConfigGiftbagCode::ConfigGiftbagCode(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCode.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagCode)
}
ConfigGiftbagCode::ConfigGiftbagCode(const ConfigGiftbagCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code(),
      GetArenaNoVirtual());
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc(),
      GetArenaNoVirtual());
  }
  ::memcpy(&begin_time_, &from.begin_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&reward_typeid_) -
    reinterpret_cast<char*>(&begin_time_)) + sizeof(reward_typeid_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagCode)
}

void ConfigGiftbagCode::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_typeid_) -
      reinterpret_cast<char*>(&begin_time_)) + sizeof(reward_typeid_));
}

ConfigGiftbagCode::~ConfigGiftbagCode() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagCode)
  SharedDtor();
}

void ConfigGiftbagCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGiftbagCode::ArenaDtor(void* object) {
  ConfigGiftbagCode* _this = reinterpret_cast< ConfigGiftbagCode* >(object);
  (void)_this;
}
void ConfigGiftbagCode::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagCode::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagCode& ConfigGiftbagCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCode.base);
  return *internal_default_instance();
}


void ConfigGiftbagCode::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      code_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      desc_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&begin_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reward_typeid_) -
        reinterpret_cast<char*>(&begin_time_)) + sizeof(reward_typeid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 begin_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_begin_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 end_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 reward_typeid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_reward_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &reward_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagCode)
  return false;
#undef DO_
}

void ConfigGiftbagCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->code(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required bytes desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->desc(), output);
  }

  // required sfixed64 begin_time = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->begin_time(), output);
  }

  // required sfixed64 end_time = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(5, this->end_time(), output);
  }

  // required uint64 reward_typeid = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->reward_typeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagCode)
}

::google::protobuf::uint8* ConfigGiftbagCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes code = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->code(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required bytes desc = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->desc(), target);
  }

  // required sfixed64 begin_time = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->begin_time(), target);
  }

  // required sfixed64 end_time = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(5, this->end_time(), target);
  }

  // required uint64 reward_typeid = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->reward_typeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagCode)
  return target;
}

size_t ConfigGiftbagCode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagCode)
  size_t total_size = 0;

  if (has_code()) {
    // required bytes code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());
  }

  if (has_desc()) {
    // required bytes desc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  if (has_begin_time()) {
    // required sfixed64 begin_time = 4;
    total_size += 1 + 8;
  }

  if (has_end_time()) {
    // required sfixed64 end_time = 5;
    total_size += 1 + 8;
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_reward_typeid()) {
    // required uint64 reward_typeid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->reward_typeid());
  }

  return total_size;
}
size_t ConfigGiftbagCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required bytes code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());

    // required bytes desc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());

    // required sfixed64 begin_time = 4;
    total_size += 1 + 8;

    // required sfixed64 end_time = 5;
    total_size += 1 + 8;

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required uint64 reward_typeid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->reward_typeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagCode)
    MergeFrom(*source);
  }
}

void ConfigGiftbagCode::MergeFrom(const ConfigGiftbagCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_code(from.code());
    }
    if (cached_has_bits & 0x00000002u) {
      set_desc(from.desc());
    }
    if (cached_has_bits & 0x00000004u) {
      begin_time_ = from.begin_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      reward_typeid_ = from.reward_typeid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagCode::CopyFrom(const ConfigGiftbagCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void ConfigGiftbagCode::Swap(ConfigGiftbagCode* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagCode* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagCode::UnsafeArenaSwap(ConfigGiftbagCode* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagCode::InternalSwap(ConfigGiftbagCode* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(begin_time_, other->begin_time_);
  swap(end_time_, other->end_time_);
  swap(type_, other->type_);
  swap(reward_typeid_, other->reward_typeid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagCode::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagCodeList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagCodeList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagCodeList::ConfigGiftbagCodeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCodeList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagCodeList)
}
ConfigGiftbagCodeList::ConfigGiftbagCodeList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCodeList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagCodeList)
}
ConfigGiftbagCodeList::ConfigGiftbagCodeList(const ConfigGiftbagCodeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagCodeList)
}

void ConfigGiftbagCodeList::SharedCtor() {
}

ConfigGiftbagCodeList::~ConfigGiftbagCodeList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagCodeList)
  SharedDtor();
}

void ConfigGiftbagCodeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagCodeList::ArenaDtor(void* object) {
  ConfigGiftbagCodeList* _this = reinterpret_cast< ConfigGiftbagCodeList* >(object);
  (void)_this;
}
void ConfigGiftbagCodeList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagCodeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagCodeList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagCodeList& ConfigGiftbagCodeList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagCodeList.base);
  return *internal_default_instance();
}


void ConfigGiftbagCodeList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagCodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagCodeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagCodeList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagCode list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagCodeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagCodeList)
  return false;
#undef DO_
}

void ConfigGiftbagCodeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagCodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagCode list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagCodeList)
}

::google::protobuf::uint8* ConfigGiftbagCodeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagCodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagCode list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagCodeList)
  return target;
}

size_t ConfigGiftbagCodeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagCodeList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagCode list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagCodeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagCodeList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagCodeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagCodeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagCodeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagCodeList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagCodeList::MergeFrom(const ConfigGiftbagCodeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagCodeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagCodeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagCodeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagCodeList::CopyFrom(const ConfigGiftbagCodeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagCodeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagCodeList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagCodeList::Swap(ConfigGiftbagCodeList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagCodeList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagCodeList::UnsafeArenaSwap(ConfigGiftbagCodeList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagCodeList::InternalSwap(ConfigGiftbagCodeList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagCodeList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagFriend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagFriend::kLevelFieldNumber;
const int ConfigGiftbagFriend::kGiveNumDayFieldNumber;
const int ConfigGiftbagFriend::kAcceptNumDayFieldNumber;
const int ConfigGiftbagFriend::kItemTypeidFieldNumber;
const int ConfigGiftbagFriend::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagFriend::ConfigGiftbagFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFriend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagFriend)
}
ConfigGiftbagFriend::ConfigGiftbagFriend(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFriend.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagFriend)
}
ConfigGiftbagFriend::ConfigGiftbagFriend(const ConfigGiftbagFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_typeid_) -
    reinterpret_cast<char*>(&level_)) + sizeof(item_typeid_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagFriend)
}

void ConfigGiftbagFriend::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_typeid_) -
      reinterpret_cast<char*>(&level_)) + sizeof(item_typeid_));
}

ConfigGiftbagFriend::~ConfigGiftbagFriend() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagFriend)
  SharedDtor();
}

void ConfigGiftbagFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagFriend::ArenaDtor(void* object) {
  ConfigGiftbagFriend* _this = reinterpret_cast< ConfigGiftbagFriend* >(object);
  (void)_this;
}
void ConfigGiftbagFriend::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagFriend::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagFriend& ConfigGiftbagFriend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFriend.base);
  return *internal_default_instance();
}


void ConfigGiftbagFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_typeid_) -
        reinterpret_cast<char*>(&level_)) + sizeof(item_typeid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagFriend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 give_num_day = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_give_num_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &give_num_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 accept_num_day = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_accept_num_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accept_num_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 item_typeid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_item_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 item_num = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagFriend)
  return false;
#undef DO_
}

void ConfigGiftbagFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required int32 give_num_day = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->give_num_day(), output);
  }

  // required int32 accept_num_day = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->accept_num_day(), output);
  }

  // required uint64 item_typeid = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->item_typeid(), output);
  }

  // required int32 item_num = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->item_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagFriend)
}

::google::protobuf::uint8* ConfigGiftbagFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required int32 give_num_day = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->give_num_day(), target);
  }

  // required int32 accept_num_day = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->accept_num_day(), target);
  }

  // required uint64 item_typeid = 11;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->item_typeid(), target);
  }

  // required int32 item_num = 12;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->item_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagFriend)
  return target;
}

size_t ConfigGiftbagFriend::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGiftbagFriend)
  size_t total_size = 0;

  if (has_level()) {
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_give_num_day()) {
    // required int32 give_num_day = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->give_num_day());
  }

  if (has_accept_num_day()) {
    // required int32 accept_num_day = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accept_num_day());
  }

  if (has_item_num()) {
    // required int32 item_num = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_num());
  }

  if (has_item_typeid()) {
    // required uint64 item_typeid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());
  }

  return total_size;
}
size_t ConfigGiftbagFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagFriend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 give_num_day = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->give_num_day());

    // required int32 accept_num_day = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accept_num_day());

    // required int32 item_num = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_num());

    // required uint64 item_typeid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagFriend)
    MergeFrom(*source);
  }
}

void ConfigGiftbagFriend::MergeFrom(const ConfigGiftbagFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000002u) {
      give_num_day_ = from.give_num_day_;
    }
    if (cached_has_bits & 0x00000004u) {
      accept_num_day_ = from.accept_num_day_;
    }
    if (cached_has_bits & 0x00000008u) {
      item_num_ = from.item_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      item_typeid_ = from.item_typeid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGiftbagFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagFriend::CopyFrom(const ConfigGiftbagFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagFriend::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void ConfigGiftbagFriend::Swap(ConfigGiftbagFriend* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagFriend* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagFriend::UnsafeArenaSwap(ConfigGiftbagFriend* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagFriend::InternalSwap(ConfigGiftbagFriend* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(give_num_day_, other->give_num_day_);
  swap(accept_num_day_, other->accept_num_day_);
  swap(item_num_, other->item_num_);
  swap(item_typeid_, other->item_typeid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagFriend::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGiftbagFriendList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGiftbagFriendList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGiftbagFriendList::ConfigGiftbagFriendList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFriendList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGiftbagFriendList)
}
ConfigGiftbagFriendList::ConfigGiftbagFriendList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFriendList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGiftbagFriendList)
}
ConfigGiftbagFriendList::ConfigGiftbagFriendList(const ConfigGiftbagFriendList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGiftbagFriendList)
}

void ConfigGiftbagFriendList::SharedCtor() {
}

ConfigGiftbagFriendList::~ConfigGiftbagFriendList() {
  // @@protoc_insertion_point(destructor:db.ConfigGiftbagFriendList)
  SharedDtor();
}

void ConfigGiftbagFriendList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGiftbagFriendList::ArenaDtor(void* object) {
  ConfigGiftbagFriendList* _this = reinterpret_cast< ConfigGiftbagFriendList* >(object);
  (void)_this;
}
void ConfigGiftbagFriendList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGiftbagFriendList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGiftbagFriendList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGiftbagFriendList& ConfigGiftbagFriendList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_ConfigGiftbagFriendList.base);
  return *internal_default_instance();
}


void ConfigGiftbagFriendList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGiftbagFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGiftbagFriendList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGiftbagFriendList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGiftbagFriend list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGiftbagFriendList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGiftbagFriendList)
  return false;
#undef DO_
}

void ConfigGiftbagFriendList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGiftbagFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagFriend list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGiftbagFriendList)
}

::google::protobuf::uint8* ConfigGiftbagFriendList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGiftbagFriendList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGiftbagFriend list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGiftbagFriendList)
  return target;
}

size_t ConfigGiftbagFriendList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGiftbagFriendList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGiftbagFriend list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGiftbagFriendList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGiftbagFriendList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGiftbagFriendList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGiftbagFriendList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGiftbagFriendList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGiftbagFriendList)
    MergeFrom(*source);
  }
}

void ConfigGiftbagFriendList::MergeFrom(const ConfigGiftbagFriendList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGiftbagFriendList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGiftbagFriendList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGiftbagFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGiftbagFriendList::CopyFrom(const ConfigGiftbagFriendList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGiftbagFriendList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGiftbagFriendList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGiftbagFriendList::Swap(ConfigGiftbagFriendList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGiftbagFriendList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGiftbagFriendList::UnsafeArenaSwap(ConfigGiftbagFriendList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGiftbagFriendList::InternalSwap(ConfigGiftbagFriendList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGiftbagFriendList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameCharge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameCharge::kIdFieldNumber;
const int GameCharge::kUseridFieldNumber;
const int GameCharge::kChargeCashFieldNumber;
const int GameCharge::kChargeTypeFieldNumber;
const int GameCharge::kChargeStateFieldNumber;
const int GameCharge::kPlatidFieldNumber;
const int GameCharge::kOrdernumFieldNumber;
const int GameCharge::kOrderReceiptFieldNumber;
const int GameCharge::kOrderCreatetimeFieldNumber;
const int GameCharge::kOrderNotifytimeFieldNumber;
const int GameCharge::kGoodsidFieldNumber;
const int GameCharge::kCreatetimeFieldNumber;
const int GameCharge::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameCharge::GameCharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameCharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameCharge)
}
GameCharge::GameCharge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameCharge.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameCharge)
}
GameCharge::GameCharge(const GameCharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platid()) {
    platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platid(),
      GetArenaNoVirtual());
  }
  ordernum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ordernum()) {
    ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordernum(),
      GetArenaNoVirtual());
  }
  order_receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_order_receipt()) {
    order_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_receipt(),
      GetArenaNoVirtual());
  }
  order_createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_order_createtime()) {
    order_createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_createtime(),
      GetArenaNoVirtual());
  }
  order_notifytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_order_notifytime()) {
    order_notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_notifytime(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&optime_) -
    reinterpret_cast<char*>(&id_)) + sizeof(optime_));
  // @@protoc_insertion_point(copy_constructor:db.GameCharge)
}

void GameCharge::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordernum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_notifytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optime_) -
      reinterpret_cast<char*>(&id_)) + sizeof(optime_));
}

GameCharge::~GameCharge() {
  // @@protoc_insertion_point(destructor:db.GameCharge)
  SharedDtor();
}

void GameCharge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordernum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_notifytime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameCharge::ArenaDtor(void* object) {
  GameCharge* _this = reinterpret_cast< GameCharge* >(object);
  (void)_this;
}
void GameCharge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameCharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameCharge::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameCharge& GameCharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameCharge.base);
  return *internal_default_instance();
}


void GameCharge::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      platid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ordernum_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      order_receipt_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      order_createtime_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      order_notifytime_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&charge_cash_) -
        reinterpret_cast<char*>(&id_)) + sizeof(charge_cash_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&charge_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optime_) -
        reinterpret_cast<char*>(&charge_type_)) + sizeof(optime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameCharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameCharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float charge_cash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_charge_cash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &charge_cash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 charge_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_charge_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charge_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 charge_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_charge_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charge_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes platid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ordernum = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ordernum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes order_receipt = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_order_receipt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes order_createtime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_order_createtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes order_notifytime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_order_notifytime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 goodsid = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_goodsid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 createtime = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 optime = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameCharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameCharge)
  return false;
#undef DO_
}

void GameCharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 id = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required bytes userid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->userid(), output);
  }

  // required float charge_cash = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->charge_cash(), output);
  }

  // required int32 charge_type = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->charge_type(), output);
  }

  // required int32 charge_state = 5;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->charge_state(), output);
  }

  // required bytes platid = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->platid(), output);
  }

  // required bytes ordernum = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->ordernum(), output);
  }

  // required bytes order_receipt = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->order_receipt(), output);
  }

  // required bytes order_createtime = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->order_createtime(), output);
  }

  // required bytes order_notifytime = 15;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->order_notifytime(), output);
  }

  // required int32 goodsid = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->goodsid(), output);
  }

  // required sfixed64 createtime = 21;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(21, this->createtime(), output);
  }

  // required sfixed64 optime = 22;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(22, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameCharge)
}

::google::protobuf::uint8* GameCharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 id = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // required bytes userid = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->userid(), target);
  }

  // required float charge_cash = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->charge_cash(), target);
  }

  // required int32 charge_type = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->charge_type(), target);
  }

  // required int32 charge_state = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->charge_state(), target);
  }

  // required bytes platid = 11;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->platid(), target);
  }

  // required bytes ordernum = 12;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->ordernum(), target);
  }

  // required bytes order_receipt = 13;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->order_receipt(), target);
  }

  // required bytes order_createtime = 14;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->order_createtime(), target);
  }

  // required bytes order_notifytime = 15;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->order_notifytime(), target);
  }

  // required int32 goodsid = 16;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->goodsid(), target);
  }

  // required sfixed64 createtime = 21;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(21, this->createtime(), target);
  }

  // required sfixed64 optime = 22;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(22, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameCharge)
  return target;
}

size_t GameCharge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameCharge)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_platid()) {
    // required bytes platid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());
  }

  if (has_ordernum()) {
    // required bytes ordernum = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ordernum());
  }

  if (has_order_receipt()) {
    // required bytes order_receipt = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_receipt());
  }

  if (has_order_createtime()) {
    // required bytes order_createtime = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_createtime());
  }

  if (has_order_notifytime()) {
    // required bytes order_notifytime = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_notifytime());
  }

  if (has_id()) {
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (has_charge_cash()) {
    // required float charge_cash = 3;
    total_size += 1 + 4;
  }

  if (has_charge_type()) {
    // required int32 charge_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->charge_type());
  }

  if (has_charge_state()) {
    // required int32 charge_state = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->charge_state());
  }

  if (has_goodsid()) {
    // required int32 goodsid = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->goodsid());
  }

  if (has_createtime()) {
    // required sfixed64 createtime = 21;
    total_size += 2 + 8;
  }

  if (has_optime()) {
    // required sfixed64 optime = 22;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t GameCharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameCharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001fff) ^ 0x00001fff) == 0) {  // All required fields are present.
    // required bytes userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required bytes platid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());

    // required bytes ordernum = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ordernum());

    // required bytes order_receipt = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_receipt());

    // required bytes order_createtime = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_createtime());

    // required bytes order_notifytime = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_notifytime());

    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());

    // required float charge_cash = 3;
    total_size += 1 + 4;

    // required int32 charge_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->charge_type());

    // required int32 charge_state = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->charge_state());

    // required int32 goodsid = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->goodsid());

    // required sfixed64 createtime = 21;
    total_size += 2 + 8;

    // required sfixed64 optime = 22;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameCharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameCharge)
  GOOGLE_DCHECK_NE(&from, this);
  const GameCharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameCharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameCharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameCharge)
    MergeFrom(*source);
  }
}

void GameCharge::MergeFrom(const GameCharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameCharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_platid(from.platid());
    }
    if (cached_has_bits & 0x00000004u) {
      set_ordernum(from.ordernum());
    }
    if (cached_has_bits & 0x00000008u) {
      set_order_receipt(from.order_receipt());
    }
    if (cached_has_bits & 0x00000010u) {
      set_order_createtime(from.order_createtime());
    }
    if (cached_has_bits & 0x00000020u) {
      set_order_notifytime(from.order_notifytime());
    }
    if (cached_has_bits & 0x00000040u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000080u) {
      charge_cash_ = from.charge_cash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      charge_type_ = from.charge_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      charge_state_ = from.charge_state_;
    }
    if (cached_has_bits & 0x00000400u) {
      goodsid_ = from.goodsid_;
    }
    if (cached_has_bits & 0x00000800u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00001000u) {
      optime_ = from.optime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameCharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameCharge::CopyFrom(const GameCharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameCharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;
  return true;
}

void GameCharge::Swap(GameCharge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameCharge* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameCharge::UnsafeArenaSwap(GameCharge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameCharge::InternalSwap(GameCharge* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platid_.Swap(&other->platid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ordernum_.Swap(&other->ordernum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_receipt_.Swap(&other->order_receipt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_createtime_.Swap(&other->order_createtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_notifytime_.Swap(&other->order_notifytime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(charge_cash_, other->charge_cash_);
  swap(charge_type_, other->charge_type_);
  swap(charge_state_, other->charge_state_);
  swap(goodsid_, other->goodsid_);
  swap(createtime_, other->createtime_);
  swap(optime_, other->optime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameCharge::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameChargeList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameChargeList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameChargeList::GameChargeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameChargeList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameChargeList)
}
GameChargeList::GameChargeList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameChargeList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameChargeList)
}
GameChargeList::GameChargeList(const GameChargeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.GameChargeList)
}

void GameChargeList::SharedCtor() {
}

GameChargeList::~GameChargeList() {
  // @@protoc_insertion_point(destructor:db.GameChargeList)
  SharedDtor();
}

void GameChargeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameChargeList::ArenaDtor(void* object) {
  GameChargeList* _this = reinterpret_cast< GameChargeList* >(object);
  (void)_this;
}
void GameChargeList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameChargeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameChargeList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameChargeList& GameChargeList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameChargeList.base);
  return *internal_default_instance();
}


void GameChargeList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameChargeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameChargeList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.GameCharge list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameChargeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameChargeList)
  return false;
#undef DO_
}

void GameChargeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.GameCharge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameChargeList)
}

::google::protobuf::uint8* GameChargeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.GameCharge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameChargeList)
  return target;
}

size_t GameChargeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameChargeList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.GameCharge list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameChargeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameChargeList)
  GOOGLE_DCHECK_NE(&from, this);
  const GameChargeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameChargeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameChargeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameChargeList)
    MergeFrom(*source);
  }
}

void GameChargeList::MergeFrom(const GameChargeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameChargeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void GameChargeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameChargeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameChargeList::CopyFrom(const GameChargeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameChargeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameChargeList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void GameChargeList::Swap(GameChargeList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameChargeList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameChargeList::UnsafeArenaSwap(GameChargeList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameChargeList::InternalSwap(GameChargeList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameChargeList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserChargeAndGiftbagFirstCharge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserChargeAndGiftbagFirstCharge::kUseridFieldNumber;
const int UserChargeAndGiftbagFirstCharge::kChargeSubtypeFieldNumber;
const int UserChargeAndGiftbagFirstCharge::kChargeTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserChargeAndGiftbagFirstCharge::UserChargeAndGiftbagFirstCharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserChargeAndGiftbagFirstCharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserChargeAndGiftbagFirstCharge)
}
UserChargeAndGiftbagFirstCharge::UserChargeAndGiftbagFirstCharge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserChargeAndGiftbagFirstCharge.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserChargeAndGiftbagFirstCharge)
}
UserChargeAndGiftbagFirstCharge::UserChargeAndGiftbagFirstCharge(const UserChargeAndGiftbagFirstCharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  ::memcpy(&charge_subtype_, &from.charge_subtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&charge_time_) -
    reinterpret_cast<char*>(&charge_subtype_)) + sizeof(charge_time_));
  // @@protoc_insertion_point(copy_constructor:db.UserChargeAndGiftbagFirstCharge)
}

void UserChargeAndGiftbagFirstCharge::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&charge_subtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&charge_time_) -
      reinterpret_cast<char*>(&charge_subtype_)) + sizeof(charge_time_));
}

UserChargeAndGiftbagFirstCharge::~UserChargeAndGiftbagFirstCharge() {
  // @@protoc_insertion_point(destructor:db.UserChargeAndGiftbagFirstCharge)
  SharedDtor();
}

void UserChargeAndGiftbagFirstCharge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserChargeAndGiftbagFirstCharge::ArenaDtor(void* object) {
  UserChargeAndGiftbagFirstCharge* _this = reinterpret_cast< UserChargeAndGiftbagFirstCharge* >(object);
  (void)_this;
}
void UserChargeAndGiftbagFirstCharge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserChargeAndGiftbagFirstCharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserChargeAndGiftbagFirstCharge::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserChargeAndGiftbagFirstCharge& UserChargeAndGiftbagFirstCharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserChargeAndGiftbagFirstCharge.base);
  return *internal_default_instance();
}


void UserChargeAndGiftbagFirstCharge::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserChargeAndGiftbagFirstCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 6u) {
    ::memset(&charge_subtype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&charge_time_) -
        reinterpret_cast<char*>(&charge_subtype_)) + sizeof(charge_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserChargeAndGiftbagFirstCharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserChargeAndGiftbagFirstCharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 charge_subtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_charge_subtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &charge_subtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 charge_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_charge_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &charge_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserChargeAndGiftbagFirstCharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserChargeAndGiftbagFirstCharge)
  return false;
#undef DO_
}

void UserChargeAndGiftbagFirstCharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserChargeAndGiftbagFirstCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required uint64 charge_subtype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->charge_subtype(), output);
  }

  // required sfixed64 charge_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->charge_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserChargeAndGiftbagFirstCharge)
}

::google::protobuf::uint8* UserChargeAndGiftbagFirstCharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserChargeAndGiftbagFirstCharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required uint64 charge_subtype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->charge_subtype(), target);
  }

  // required sfixed64 charge_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(3, this->charge_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserChargeAndGiftbagFirstCharge)
  return target;
}

size_t UserChargeAndGiftbagFirstCharge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserChargeAndGiftbagFirstCharge)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_charge_subtype()) {
    // required uint64 charge_subtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->charge_subtype());
  }

  if (has_charge_time()) {
    // required sfixed64 charge_time = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t UserChargeAndGiftbagFirstCharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserChargeAndGiftbagFirstCharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required uint64 charge_subtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->charge_subtype());

    // required sfixed64 charge_time = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserChargeAndGiftbagFirstCharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserChargeAndGiftbagFirstCharge)
  GOOGLE_DCHECK_NE(&from, this);
  const UserChargeAndGiftbagFirstCharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserChargeAndGiftbagFirstCharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserChargeAndGiftbagFirstCharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserChargeAndGiftbagFirstCharge)
    MergeFrom(*source);
  }
}

void UserChargeAndGiftbagFirstCharge::MergeFrom(const UserChargeAndGiftbagFirstCharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserChargeAndGiftbagFirstCharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      charge_subtype_ = from.charge_subtype_;
    }
    if (cached_has_bits & 0x00000004u) {
      charge_time_ = from.charge_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserChargeAndGiftbagFirstCharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserChargeAndGiftbagFirstCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserChargeAndGiftbagFirstCharge::CopyFrom(const UserChargeAndGiftbagFirstCharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserChargeAndGiftbagFirstCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserChargeAndGiftbagFirstCharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UserChargeAndGiftbagFirstCharge::Swap(UserChargeAndGiftbagFirstCharge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserChargeAndGiftbagFirstCharge* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserChargeAndGiftbagFirstCharge::UnsafeArenaSwap(UserChargeAndGiftbagFirstCharge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserChargeAndGiftbagFirstCharge::InternalSwap(UserChargeAndGiftbagFirstCharge* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(charge_subtype_, other->charge_subtype_);
  swap(charge_time_, other->charge_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserChargeAndGiftbagFirstCharge::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserChargeAndGiftbagFirstChargeList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserChargeAndGiftbagFirstChargeList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserChargeAndGiftbagFirstChargeList::UserChargeAndGiftbagFirstChargeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserChargeAndGiftbagFirstChargeList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserChargeAndGiftbagFirstChargeList)
}
UserChargeAndGiftbagFirstChargeList::UserChargeAndGiftbagFirstChargeList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserChargeAndGiftbagFirstChargeList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserChargeAndGiftbagFirstChargeList)
}
UserChargeAndGiftbagFirstChargeList::UserChargeAndGiftbagFirstChargeList(const UserChargeAndGiftbagFirstChargeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.UserChargeAndGiftbagFirstChargeList)
}

void UserChargeAndGiftbagFirstChargeList::SharedCtor() {
}

UserChargeAndGiftbagFirstChargeList::~UserChargeAndGiftbagFirstChargeList() {
  // @@protoc_insertion_point(destructor:db.UserChargeAndGiftbagFirstChargeList)
  SharedDtor();
}

void UserChargeAndGiftbagFirstChargeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void UserChargeAndGiftbagFirstChargeList::ArenaDtor(void* object) {
  UserChargeAndGiftbagFirstChargeList* _this = reinterpret_cast< UserChargeAndGiftbagFirstChargeList* >(object);
  (void)_this;
}
void UserChargeAndGiftbagFirstChargeList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserChargeAndGiftbagFirstChargeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserChargeAndGiftbagFirstChargeList::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserChargeAndGiftbagFirstChargeList& UserChargeAndGiftbagFirstChargeList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserChargeAndGiftbagFirstChargeList.base);
  return *internal_default_instance();
}


void UserChargeAndGiftbagFirstChargeList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserChargeAndGiftbagFirstChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserChargeAndGiftbagFirstChargeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserChargeAndGiftbagFirstChargeList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.UserChargeAndGiftbagFirstCharge list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserChargeAndGiftbagFirstChargeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserChargeAndGiftbagFirstChargeList)
  return false;
#undef DO_
}

void UserChargeAndGiftbagFirstChargeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserChargeAndGiftbagFirstChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.UserChargeAndGiftbagFirstCharge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserChargeAndGiftbagFirstChargeList)
}

::google::protobuf::uint8* UserChargeAndGiftbagFirstChargeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserChargeAndGiftbagFirstChargeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.UserChargeAndGiftbagFirstCharge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserChargeAndGiftbagFirstChargeList)
  return target;
}

size_t UserChargeAndGiftbagFirstChargeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserChargeAndGiftbagFirstChargeList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.UserChargeAndGiftbagFirstCharge list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserChargeAndGiftbagFirstChargeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserChargeAndGiftbagFirstChargeList)
  GOOGLE_DCHECK_NE(&from, this);
  const UserChargeAndGiftbagFirstChargeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserChargeAndGiftbagFirstChargeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserChargeAndGiftbagFirstChargeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserChargeAndGiftbagFirstChargeList)
    MergeFrom(*source);
  }
}

void UserChargeAndGiftbagFirstChargeList::MergeFrom(const UserChargeAndGiftbagFirstChargeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserChargeAndGiftbagFirstChargeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void UserChargeAndGiftbagFirstChargeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserChargeAndGiftbagFirstChargeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserChargeAndGiftbagFirstChargeList::CopyFrom(const UserChargeAndGiftbagFirstChargeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserChargeAndGiftbagFirstChargeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserChargeAndGiftbagFirstChargeList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void UserChargeAndGiftbagFirstChargeList::Swap(UserChargeAndGiftbagFirstChargeList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserChargeAndGiftbagFirstChargeList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserChargeAndGiftbagFirstChargeList::UnsafeArenaSwap(UserChargeAndGiftbagFirstChargeList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserChargeAndGiftbagFirstChargeList::InternalSwap(UserChargeAndGiftbagFirstChargeList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserChargeAndGiftbagFirstChargeList::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_game_charge_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_game_charge_Parameter::kPLastTopidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_game_charge_Parameter::proc_load_game_charge_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_game_charge.Parameter)
}
proc_load_game_charge_Parameter::proc_load_game_charge_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_game_charge.Parameter)
}
proc_load_game_charge_Parameter::proc_load_game_charge_Parameter(const proc_load_game_charge_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p_last_topid_ = from.p_last_topid_;
  // @@protoc_insertion_point(copy_constructor:db.proc_load_game_charge.Parameter)
}

void proc_load_game_charge_Parameter::SharedCtor() {
  p_last_topid_ = GOOGLE_ULONGLONG(0);
}

proc_load_game_charge_Parameter::~proc_load_game_charge_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_load_game_charge.Parameter)
  SharedDtor();
}

void proc_load_game_charge_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_load_game_charge_Parameter::ArenaDtor(void* object) {
  proc_load_game_charge_Parameter* _this = reinterpret_cast< proc_load_game_charge_Parameter* >(object);
  (void)_this;
}
void proc_load_game_charge_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_game_charge_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_game_charge_Parameter::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_game_charge_Parameter& proc_load_game_charge_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge_Parameter.base);
  return *internal_default_instance();
}


void proc_load_game_charge_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  p_last_topid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_game_charge_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_game_charge.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 p_last_topid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_p_last_topid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &p_last_topid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_game_charge.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_game_charge.Parameter)
  return false;
#undef DO_
}

void proc_load_game_charge_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 p_last_topid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->p_last_topid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_game_charge.Parameter)
}

::google::protobuf::uint8* proc_load_game_charge_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 p_last_topid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->p_last_topid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_game_charge.Parameter)
  return target;
}

size_t proc_load_game_charge_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_game_charge.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 p_last_topid = 1;
  if (has_p_last_topid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->p_last_topid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_game_charge_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_game_charge.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_game_charge_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_game_charge_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_game_charge.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_game_charge.Parameter)
    MergeFrom(*source);
  }
}

void proc_load_game_charge_Parameter::MergeFrom(const proc_load_game_charge_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_game_charge.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_last_topid()) {
    set_p_last_topid(from.p_last_topid());
  }
}

void proc_load_game_charge_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_game_charge.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_game_charge_Parameter::CopyFrom(const proc_load_game_charge_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_game_charge.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_game_charge_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void proc_load_game_charge_Parameter::Swap(proc_load_game_charge_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_game_charge_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_game_charge_Parameter::UnsafeArenaSwap(proc_load_game_charge_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_game_charge_Parameter::InternalSwap(proc_load_game_charge_Parameter* other) {
  using std::swap;
  swap(p_last_topid_, other->p_last_topid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_game_charge_Parameter::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_game_charge_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_load_game_charge_ReturnRecord_default_instance_._instance.get_mutable()->item_ = const_cast< ::db::GameCharge*>(
      ::db::GameCharge::internal_default_instance());
}
void proc_load_game_charge_ReturnRecord::unsafe_arena_set_allocated_item(
    ::db::GameCharge* item) {
  if (GetArenaNoVirtual() == NULL) {
    delete item_;
  }
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_game_charge.ReturnRecord.item)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_game_charge_ReturnRecord::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_game_charge_ReturnRecord::proc_load_game_charge_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_game_charge.ReturnRecord)
}
proc_load_game_charge_ReturnRecord::proc_load_game_charge_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_game_charge.ReturnRecord)
}
proc_load_game_charge_ReturnRecord::proc_load_game_charge_ReturnRecord(const proc_load_game_charge_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::db::GameCharge(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_game_charge.ReturnRecord)
}

void proc_load_game_charge_ReturnRecord::SharedCtor() {
  item_ = NULL;
}

proc_load_game_charge_ReturnRecord::~proc_load_game_charge_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_load_game_charge.ReturnRecord)
  SharedDtor();
}

void proc_load_game_charge_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete item_;
}

void proc_load_game_charge_ReturnRecord::ArenaDtor(void* object) {
  proc_load_game_charge_ReturnRecord* _this = reinterpret_cast< proc_load_game_charge_ReturnRecord* >(object);
  (void)_this;
}
void proc_load_game_charge_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_game_charge_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_game_charge_ReturnRecord::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_game_charge_ReturnRecord& proc_load_game_charge_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_load_game_charge_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_game_charge.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(item_ != NULL);
    item_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_game_charge_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_game_charge.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.GameCharge item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_game_charge.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_game_charge.ReturnRecord)
  return false;
#undef DO_
}

void proc_load_game_charge_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_game_charge.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GameCharge item = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_item(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_game_charge.ReturnRecord)
}

::google::protobuf::uint8* proc_load_game_charge_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_game_charge.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GameCharge item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_item(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_game_charge.ReturnRecord)
  return target;
}

size_t proc_load_game_charge_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_game_charge.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.GameCharge item = 1;
  if (has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_game_charge_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_game_charge.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_game_charge_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_game_charge_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_game_charge.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_game_charge.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_load_game_charge_ReturnRecord::MergeFrom(const proc_load_game_charge_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_game_charge.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::db::GameCharge::MergeFrom(from.item());
  }
}

void proc_load_game_charge_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_game_charge.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_game_charge_ReturnRecord::CopyFrom(const proc_load_game_charge_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_game_charge.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_game_charge_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_item()) {
    if (!this->item_->IsInitialized()) return false;
  }
  return true;
}

void proc_load_game_charge_ReturnRecord::Swap(proc_load_game_charge_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_game_charge_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_game_charge_ReturnRecord::UnsafeArenaSwap(proc_load_game_charge_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_game_charge_ReturnRecord::InternalSwap(proc_load_game_charge_ReturnRecord* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_game_charge_ReturnRecord::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_game_charge::InitAsDefaultInstance() {
  ::db::_proc_load_game_charge_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_load_game_charge_Parameter*>(
      ::db::proc_load_game_charge_Parameter::internal_default_instance());
}
void proc_load_game_charge::unsafe_arena_set_allocated_param(
    ::db::proc_load_game_charge_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_game_charge.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_game_charge::kParamFieldNumber;
const int proc_load_game_charge::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_game_charge::proc_load_game_charge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_game_charge)
}
proc_load_game_charge::proc_load_game_charge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_game_charge)
}
proc_load_game_charge::proc_load_game_charge(const proc_load_game_charge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_load_game_charge_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_game_charge)
}

void proc_load_game_charge::SharedCtor() {
  param_ = NULL;
}

proc_load_game_charge::~proc_load_game_charge() {
  // @@protoc_insertion_point(destructor:db.proc_load_game_charge)
  SharedDtor();
}

void proc_load_game_charge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_load_game_charge::ArenaDtor(void* object) {
  proc_load_game_charge* _this = reinterpret_cast< proc_load_game_charge* >(object);
  (void)_this;
}
void proc_load_game_charge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_game_charge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_game_charge::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_game_charge& proc_load_game_charge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_load_game_charge.base);
  return *internal_default_instance();
}


void proc_load_game_charge::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_game_charge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_game_charge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_load_game_charge.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_load_game_charge.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_game_charge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_game_charge)
  return false;
#undef DO_
}

void proc_load_game_charge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_game_charge.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_load_game_charge.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_game_charge)
}

::google::protobuf::uint8* proc_load_game_charge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_game_charge.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_load_game_charge.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_game_charge)
  return target;
}

size_t proc_load_game_charge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_game_charge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_load_game_charge.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_load_game_charge.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_game_charge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_game_charge)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_game_charge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_game_charge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_game_charge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_game_charge)
    MergeFrom(*source);
  }
}

void proc_load_game_charge::MergeFrom(const proc_load_game_charge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_game_charge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_load_game_charge_Parameter::MergeFrom(from.param());
  }
}

void proc_load_game_charge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_game_charge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_game_charge::CopyFrom(const proc_load_game_charge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_game_charge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_game_charge::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_load_game_charge::Swap(proc_load_game_charge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_game_charge* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_game_charge::UnsafeArenaSwap(proc_load_game_charge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_game_charge::InternalSwap(proc_load_game_charge* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_game_charge::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_save_game_charge_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_save_game_charge_Parameter::kPIdFieldNumber;
const int proc_save_game_charge_Parameter::kPStateFieldNumber;
const int proc_save_game_charge_Parameter::kPReceiptFieldNumber;
const int proc_save_game_charge_Parameter::kPOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_save_game_charge_Parameter::proc_save_game_charge_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_save_game_charge_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_save_game_charge.Parameter)
}
proc_save_game_charge_Parameter::proc_save_game_charge_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_save_game_charge_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_save_game_charge.Parameter)
}
proc_save_game_charge_Parameter::proc_save_game_charge_Parameter(const proc_save_game_charge_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p_receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_receipt()) {
    p_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_receipt(),
      GetArenaNoVirtual());
  }
  ::memcpy(&p_id_, &from.p_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&p_state_) -
    reinterpret_cast<char*>(&p_id_)) + sizeof(p_state_));
  // @@protoc_insertion_point(copy_constructor:db.proc_save_game_charge.Parameter)
}

void proc_save_game_charge_Parameter::SharedCtor() {
  p_receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&p_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&p_state_) -
      reinterpret_cast<char*>(&p_id_)) + sizeof(p_state_));
}

proc_save_game_charge_Parameter::~proc_save_game_charge_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_save_game_charge.Parameter)
  SharedDtor();
}

void proc_save_game_charge_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  p_receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void proc_save_game_charge_Parameter::ArenaDtor(void* object) {
  proc_save_game_charge_Parameter* _this = reinterpret_cast< proc_save_game_charge_Parameter* >(object);
  (void)_this;
}
void proc_save_game_charge_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_save_game_charge_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_save_game_charge_Parameter::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_save_game_charge_Parameter& proc_save_game_charge_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_save_game_charge_Parameter.base);
  return *internal_default_instance();
}


void proc_save_game_charge_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_save_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    p_receipt_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 14u) {
    ::memset(&p_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&p_state_) -
        reinterpret_cast<char*>(&p_id_)) + sizeof(p_state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_save_game_charge_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_save_game_charge.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 p_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_p_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &p_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_p_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_receipt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_receipt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 p_optime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_p_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &p_optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_save_game_charge.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_save_game_charge.Parameter)
  return false;
#undef DO_
}

void proc_save_game_charge_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_save_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 p_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->p_id(), output);
  }

  // required int32 p_state = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->p_state(), output);
  }

  // required bytes p_receipt = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->p_receipt(), output);
  }

  // required sfixed64 p_optime = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->p_optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_save_game_charge.Parameter)
}

::google::protobuf::uint8* proc_save_game_charge_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_save_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 p_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->p_id(), target);
  }

  // required int32 p_state = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->p_state(), target);
  }

  // required bytes p_receipt = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->p_receipt(), target);
  }

  // required sfixed64 p_optime = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->p_optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_save_game_charge.Parameter)
  return target;
}

size_t proc_save_game_charge_Parameter::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.proc_save_game_charge.Parameter)
  size_t total_size = 0;

  if (has_p_receipt()) {
    // required bytes p_receipt = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_receipt());
  }

  if (has_p_id()) {
    // required uint64 p_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->p_id());
  }

  if (has_p_optime()) {
    // required sfixed64 p_optime = 4;
    total_size += 1 + 8;
  }

  if (has_p_state()) {
    // required int32 p_state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_state());
  }

  return total_size;
}
size_t proc_save_game_charge_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_save_game_charge.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes p_receipt = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_receipt());

    // required uint64 p_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->p_id());

    // required sfixed64 p_optime = 4;
    total_size += 1 + 8;

    // required int32 p_state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_save_game_charge_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_save_game_charge.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_save_game_charge_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_save_game_charge_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_save_game_charge.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_save_game_charge.Parameter)
    MergeFrom(*source);
  }
}

void proc_save_game_charge_Parameter::MergeFrom(const proc_save_game_charge_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_save_game_charge.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_p_receipt(from.p_receipt());
    }
    if (cached_has_bits & 0x00000002u) {
      p_id_ = from.p_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      p_optime_ = from.p_optime_;
    }
    if (cached_has_bits & 0x00000008u) {
      p_state_ = from.p_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void proc_save_game_charge_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_save_game_charge.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_save_game_charge_Parameter::CopyFrom(const proc_save_game_charge_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_save_game_charge.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_save_game_charge_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void proc_save_game_charge_Parameter::Swap(proc_save_game_charge_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_save_game_charge_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_save_game_charge_Parameter::UnsafeArenaSwap(proc_save_game_charge_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_save_game_charge_Parameter::InternalSwap(proc_save_game_charge_Parameter* other) {
  using std::swap;
  p_receipt_.Swap(&other->p_receipt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(p_id_, other->p_id_);
  swap(p_optime_, other->p_optime_);
  swap(p_state_, other->p_state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_save_game_charge_Parameter::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_save_game_charge::InitAsDefaultInstance() {
  ::db::_proc_save_game_charge_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_save_game_charge_Parameter*>(
      ::db::proc_save_game_charge_Parameter::internal_default_instance());
}
void proc_save_game_charge::unsafe_arena_set_allocated_param(
    ::db::proc_save_game_charge_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_save_game_charge.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_save_game_charge::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_save_game_charge::proc_save_game_charge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_save_game_charge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_save_game_charge)
}
proc_save_game_charge::proc_save_game_charge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_save_game_charge.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_save_game_charge)
}
proc_save_game_charge::proc_save_game_charge(const proc_save_game_charge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_save_game_charge_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_save_game_charge)
}

void proc_save_game_charge::SharedCtor() {
  param_ = NULL;
}

proc_save_game_charge::~proc_save_game_charge() {
  // @@protoc_insertion_point(destructor:db.proc_save_game_charge)
  SharedDtor();
}

void proc_save_game_charge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_save_game_charge::ArenaDtor(void* object) {
  proc_save_game_charge* _this = reinterpret_cast< proc_save_game_charge* >(object);
  (void)_this;
}
void proc_save_game_charge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_save_game_charge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_save_game_charge::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_save_game_charge& proc_save_game_charge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_save_game_charge.base);
  return *internal_default_instance();
}


void proc_save_game_charge::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_save_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_save_game_charge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_save_game_charge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_save_game_charge.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_save_game_charge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_save_game_charge)
  return false;
#undef DO_
}

void proc_save_game_charge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_save_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_save_game_charge.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_save_game_charge)
}

::google::protobuf::uint8* proc_save_game_charge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_save_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_save_game_charge.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_save_game_charge)
  return target;
}

size_t proc_save_game_charge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_save_game_charge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_save_game_charge.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_save_game_charge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_save_game_charge)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_save_game_charge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_save_game_charge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_save_game_charge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_save_game_charge)
    MergeFrom(*source);
  }
}

void proc_save_game_charge::MergeFrom(const proc_save_game_charge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_save_game_charge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_save_game_charge_Parameter::MergeFrom(from.param());
  }
}

void proc_save_game_charge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_save_game_charge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_save_game_charge::CopyFrom(const proc_save_game_charge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_save_game_charge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_save_game_charge::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_save_game_charge::Swap(proc_save_game_charge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_save_game_charge* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_save_game_charge::UnsafeArenaSwap(proc_save_game_charge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_save_game_charge::InternalSwap(proc_save_game_charge* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_save_game_charge::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_create_game_charge_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_create_game_charge_Parameter::kPUseridFieldNumber;
const int proc_create_game_charge_Parameter::kPChargeCashFieldNumber;
const int proc_create_game_charge_Parameter::kPChargeTypeFieldNumber;
const int proc_create_game_charge_Parameter::kPChargeStateFieldNumber;
const int proc_create_game_charge_Parameter::kPPlatidFieldNumber;
const int proc_create_game_charge_Parameter::kPOrdernumFieldNumber;
const int proc_create_game_charge_Parameter::kPOrderReceiptFieldNumber;
const int proc_create_game_charge_Parameter::kPOrderCreatetimeFieldNumber;
const int proc_create_game_charge_Parameter::kPOrderNotifytimeFieldNumber;
const int proc_create_game_charge_Parameter::kPGoodsIdFieldNumber;
const int proc_create_game_charge_Parameter::kPOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_create_game_charge_Parameter::proc_create_game_charge_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_create_game_charge_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_create_game_charge.Parameter)
}
proc_create_game_charge_Parameter::proc_create_game_charge_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_create_game_charge_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_create_game_charge.Parameter)
}
proc_create_game_charge_Parameter::proc_create_game_charge_Parameter(const proc_create_game_charge_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p_userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_userid()) {
    p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_userid(),
      GetArenaNoVirtual());
  }
  p_platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_platid()) {
    p_platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_platid(),
      GetArenaNoVirtual());
  }
  p_ordernum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_ordernum()) {
    p_ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_ordernum(),
      GetArenaNoVirtual());
  }
  p_order_receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_order_receipt()) {
    p_order_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_order_receipt(),
      GetArenaNoVirtual());
  }
  p_order_createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_order_createtime()) {
    p_order_createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_order_createtime(),
      GetArenaNoVirtual());
  }
  p_order_notifytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_order_notifytime()) {
    p_order_notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_order_notifytime(),
      GetArenaNoVirtual());
  }
  ::memcpy(&p_charge_cash_, &from.p_charge_cash_,
    static_cast<size_t>(reinterpret_cast<char*>(&p_optime_) -
    reinterpret_cast<char*>(&p_charge_cash_)) + sizeof(p_optime_));
  // @@protoc_insertion_point(copy_constructor:db.proc_create_game_charge.Parameter)
}

void proc_create_game_charge_Parameter::SharedCtor() {
  p_userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_ordernum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_order_receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_order_createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_order_notifytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&p_charge_cash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&p_optime_) -
      reinterpret_cast<char*>(&p_charge_cash_)) + sizeof(p_optime_));
}

proc_create_game_charge_Parameter::~proc_create_game_charge_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_create_game_charge.Parameter)
  SharedDtor();
}

void proc_create_game_charge_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  p_userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_platid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_ordernum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_order_receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_order_createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_order_notifytime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void proc_create_game_charge_Parameter::ArenaDtor(void* object) {
  proc_create_game_charge_Parameter* _this = reinterpret_cast< proc_create_game_charge_Parameter* >(object);
  (void)_this;
}
void proc_create_game_charge_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_create_game_charge_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_create_game_charge_Parameter::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_create_game_charge_Parameter& proc_create_game_charge_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_create_game_charge_Parameter.base);
  return *internal_default_instance();
}


void proc_create_game_charge_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_create_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      p_userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      p_platid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      p_ordernum_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      p_order_receipt_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      p_order_createtime_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      p_order_notifytime_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&p_charge_cash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&p_charge_type_) -
        reinterpret_cast<char*>(&p_charge_cash_)) + sizeof(p_charge_type_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&p_charge_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&p_optime_) -
        reinterpret_cast<char*>(&p_charge_state_)) + sizeof(p_optime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_create_game_charge_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_create_game_charge.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes p_userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float p_charge_cash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_p_charge_cash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &p_charge_cash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p_charge_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_p_charge_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_charge_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p_charge_state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_p_charge_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_charge_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_platid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_platid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_ordernum = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_ordernum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_order_receipt = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_order_receipt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_order_createtime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_order_createtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_order_notifytime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_order_notifytime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p_goods_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_p_goods_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_goods_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 p_optime = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {
          set_has_p_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &p_optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_create_game_charge.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_create_game_charge.Parameter)
  return false;
#undef DO_
}

void proc_create_game_charge_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_create_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes p_userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->p_userid(), output);
  }

  // required float p_charge_cash = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->p_charge_cash(), output);
  }

  // required int32 p_charge_type = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->p_charge_type(), output);
  }

  // required int32 p_charge_state = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->p_charge_state(), output);
  }

  // required bytes p_platid = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->p_platid(), output);
  }

  // required bytes p_ordernum = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->p_ordernum(), output);
  }

  // required bytes p_order_receipt = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->p_order_receipt(), output);
  }

  // required bytes p_order_createtime = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->p_order_createtime(), output);
  }

  // required bytes p_order_notifytime = 15;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->p_order_notifytime(), output);
  }

  // required int32 p_goods_id = 16;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->p_goods_id(), output);
  }

  // required sfixed64 p_optime = 21;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(21, this->p_optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_create_game_charge.Parameter)
}

::google::protobuf::uint8* proc_create_game_charge_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_create_game_charge.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes p_userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->p_userid(), target);
  }

  // required float p_charge_cash = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->p_charge_cash(), target);
  }

  // required int32 p_charge_type = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->p_charge_type(), target);
  }

  // required int32 p_charge_state = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->p_charge_state(), target);
  }

  // required bytes p_platid = 11;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->p_platid(), target);
  }

  // required bytes p_ordernum = 12;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->p_ordernum(), target);
  }

  // required bytes p_order_receipt = 13;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->p_order_receipt(), target);
  }

  // required bytes p_order_createtime = 14;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->p_order_createtime(), target);
  }

  // required bytes p_order_notifytime = 15;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->p_order_notifytime(), target);
  }

  // required int32 p_goods_id = 16;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->p_goods_id(), target);
  }

  // required sfixed64 p_optime = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(21, this->p_optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_create_game_charge.Parameter)
  return target;
}

size_t proc_create_game_charge_Parameter::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.proc_create_game_charge.Parameter)
  size_t total_size = 0;

  if (has_p_userid()) {
    // required bytes p_userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_userid());
  }

  if (has_p_platid()) {
    // required bytes p_platid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_platid());
  }

  if (has_p_ordernum()) {
    // required bytes p_ordernum = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_ordernum());
  }

  if (has_p_order_receipt()) {
    // required bytes p_order_receipt = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_order_receipt());
  }

  if (has_p_order_createtime()) {
    // required bytes p_order_createtime = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_order_createtime());
  }

  if (has_p_order_notifytime()) {
    // required bytes p_order_notifytime = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_order_notifytime());
  }

  if (has_p_charge_cash()) {
    // required float p_charge_cash = 2;
    total_size += 1 + 4;
  }

  if (has_p_charge_type()) {
    // required int32 p_charge_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_charge_type());
  }

  if (has_p_charge_state()) {
    // required int32 p_charge_state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_charge_state());
  }

  if (has_p_goods_id()) {
    // required int32 p_goods_id = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_goods_id());
  }

  if (has_p_optime()) {
    // required sfixed64 p_optime = 21;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t proc_create_game_charge_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_create_game_charge.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required bytes p_userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_userid());

    // required bytes p_platid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_platid());

    // required bytes p_ordernum = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_ordernum());

    // required bytes p_order_receipt = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_order_receipt());

    // required bytes p_order_createtime = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_order_createtime());

    // required bytes p_order_notifytime = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_order_notifytime());

    // required float p_charge_cash = 2;
    total_size += 1 + 4;

    // required int32 p_charge_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_charge_type());

    // required int32 p_charge_state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_charge_state());

    // required int32 p_goods_id = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_goods_id());

    // required sfixed64 p_optime = 21;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_create_game_charge_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_create_game_charge.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_create_game_charge_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_create_game_charge_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_create_game_charge.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_create_game_charge.Parameter)
    MergeFrom(*source);
  }
}

void proc_create_game_charge_Parameter::MergeFrom(const proc_create_game_charge_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_create_game_charge.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_p_userid(from.p_userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_p_platid(from.p_platid());
    }
    if (cached_has_bits & 0x00000004u) {
      set_p_ordernum(from.p_ordernum());
    }
    if (cached_has_bits & 0x00000008u) {
      set_p_order_receipt(from.p_order_receipt());
    }
    if (cached_has_bits & 0x00000010u) {
      set_p_order_createtime(from.p_order_createtime());
    }
    if (cached_has_bits & 0x00000020u) {
      set_p_order_notifytime(from.p_order_notifytime());
    }
    if (cached_has_bits & 0x00000040u) {
      p_charge_cash_ = from.p_charge_cash_;
    }
    if (cached_has_bits & 0x00000080u) {
      p_charge_type_ = from.p_charge_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      p_charge_state_ = from.p_charge_state_;
    }
    if (cached_has_bits & 0x00000200u) {
      p_goods_id_ = from.p_goods_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      p_optime_ = from.p_optime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void proc_create_game_charge_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_create_game_charge.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_create_game_charge_Parameter::CopyFrom(const proc_create_game_charge_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_create_game_charge.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_create_game_charge_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;
  return true;
}

void proc_create_game_charge_Parameter::Swap(proc_create_game_charge_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_create_game_charge_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_create_game_charge_Parameter::UnsafeArenaSwap(proc_create_game_charge_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_create_game_charge_Parameter::InternalSwap(proc_create_game_charge_Parameter* other) {
  using std::swap;
  p_userid_.Swap(&other->p_userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_platid_.Swap(&other->p_platid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_ordernum_.Swap(&other->p_ordernum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_order_receipt_.Swap(&other->p_order_receipt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_order_createtime_.Swap(&other->p_order_createtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_order_notifytime_.Swap(&other->p_order_notifytime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(p_charge_cash_, other->p_charge_cash_);
  swap(p_charge_type_, other->p_charge_type_);
  swap(p_charge_state_, other->p_charge_state_);
  swap(p_goods_id_, other->p_goods_id_);
  swap(p_optime_, other->p_optime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_create_game_charge_Parameter::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_create_game_charge::InitAsDefaultInstance() {
  ::db::_proc_create_game_charge_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_create_game_charge_Parameter*>(
      ::db::proc_create_game_charge_Parameter::internal_default_instance());
}
void proc_create_game_charge::unsafe_arena_set_allocated_param(
    ::db::proc_create_game_charge_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_create_game_charge.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_create_game_charge::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_create_game_charge::proc_create_game_charge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_create_game_charge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_create_game_charge)
}
proc_create_game_charge::proc_create_game_charge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_create_game_charge.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_create_game_charge)
}
proc_create_game_charge::proc_create_game_charge(const proc_create_game_charge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_create_game_charge_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_create_game_charge)
}

void proc_create_game_charge::SharedCtor() {
  param_ = NULL;
}

proc_create_game_charge::~proc_create_game_charge() {
  // @@protoc_insertion_point(destructor:db.proc_create_game_charge)
  SharedDtor();
}

void proc_create_game_charge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_create_game_charge::ArenaDtor(void* object) {
  proc_create_game_charge* _this = reinterpret_cast< proc_create_game_charge* >(object);
  (void)_this;
}
void proc_create_game_charge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_create_game_charge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_create_game_charge::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_create_game_charge& proc_create_game_charge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_proc_create_game_charge.base);
  return *internal_default_instance();
}


void proc_create_game_charge::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_create_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_create_game_charge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_create_game_charge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_create_game_charge.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_create_game_charge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_create_game_charge)
  return false;
#undef DO_
}

void proc_create_game_charge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_create_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_create_game_charge.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_create_game_charge)
}

::google::protobuf::uint8* proc_create_game_charge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_create_game_charge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_create_game_charge.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_create_game_charge)
  return target;
}

size_t proc_create_game_charge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_create_game_charge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_create_game_charge.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_create_game_charge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_create_game_charge)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_create_game_charge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_create_game_charge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_create_game_charge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_create_game_charge)
    MergeFrom(*source);
  }
}

void proc_create_game_charge::MergeFrom(const proc_create_game_charge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_create_game_charge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_create_game_charge_Parameter::MergeFrom(from.param());
  }
}

void proc_create_game_charge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_create_game_charge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_create_game_charge::CopyFrom(const proc_create_game_charge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_create_game_charge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_create_game_charge::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_create_game_charge::Swap(proc_create_game_charge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_create_game_charge* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_create_game_charge::UnsafeArenaSwap(proc_create_game_charge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_create_game_charge::InternalSwap(proc_create_game_charge* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_create_game_charge::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserMonthCard::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserMonthCard::kUseridFieldNumber;
const int UserMonthCard::kCardidFieldNumber;
const int UserMonthCard::kBuyMonthCardNumFieldNumber;
const int UserMonthCard::kBuyMonthCardBurntimeFieldNumber;
const int UserMonthCard::kMonthCardAwardtimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserMonthCard::UserMonthCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserMonthCard.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserMonthCard)
}
UserMonthCard::UserMonthCard(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserMonthCard.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserMonthCard)
}
UserMonthCard::UserMonthCard(const UserMonthCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  ::memcpy(&cardid_, &from.cardid_,
    static_cast<size_t>(reinterpret_cast<char*>(&month_card_awardtime_) -
    reinterpret_cast<char*>(&cardid_)) + sizeof(month_card_awardtime_));
  // @@protoc_insertion_point(copy_constructor:db.UserMonthCard)
}

void UserMonthCard::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&month_card_awardtime_) -
      reinterpret_cast<char*>(&cardid_)) + sizeof(month_card_awardtime_));
}

UserMonthCard::~UserMonthCard() {
  // @@protoc_insertion_point(destructor:db.UserMonthCard)
  SharedDtor();
}

void UserMonthCard::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserMonthCard::ArenaDtor(void* object) {
  UserMonthCard* _this = reinterpret_cast< UserMonthCard* >(object);
  (void)_this;
}
void UserMonthCard::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserMonthCard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserMonthCard::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserMonthCard& UserMonthCard::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserMonthCard.base);
  return *internal_default_instance();
}


void UserMonthCard::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserMonthCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 30u) {
    ::memset(&cardid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&month_card_awardtime_) -
        reinterpret_cast<char*>(&cardid_)) + sizeof(month_card_awardtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserMonthCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserMonthCard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cardid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cardid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 buy_month_card_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_buy_month_card_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_month_card_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 buy_month_card_burntime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_buy_month_card_burntime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &buy_month_card_burntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 month_card_awardtime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_month_card_awardtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &month_card_awardtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserMonthCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserMonthCard)
  return false;
#undef DO_
}

void UserMonthCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserMonthCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required int32 cardid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cardid(), output);
  }

  // required int32 buy_month_card_num = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buy_month_card_num(), output);
  }

  // required sfixed64 buy_month_card_burntime = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->buy_month_card_burntime(), output);
  }

  // required sfixed64 month_card_awardtime = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(5, this->month_card_awardtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserMonthCard)
}

::google::protobuf::uint8* UserMonthCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserMonthCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required int32 cardid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cardid(), target);
  }

  // required int32 buy_month_card_num = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buy_month_card_num(), target);
  }

  // required sfixed64 buy_month_card_burntime = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->buy_month_card_burntime(), target);
  }

  // required sfixed64 month_card_awardtime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(5, this->month_card_awardtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserMonthCard)
  return target;
}

size_t UserMonthCard::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserMonthCard)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_cardid()) {
    // required int32 cardid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cardid());
  }

  if (has_buy_month_card_num()) {
    // required int32 buy_month_card_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buy_month_card_num());
  }

  if (has_buy_month_card_burntime()) {
    // required sfixed64 buy_month_card_burntime = 4;
    total_size += 1 + 8;
  }

  if (has_month_card_awardtime()) {
    // required sfixed64 month_card_awardtime = 5;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t UserMonthCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserMonthCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required int32 cardid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cardid());

    // required int32 buy_month_card_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buy_month_card_num());

    // required sfixed64 buy_month_card_burntime = 4;
    total_size += 1 + 8;

    // required sfixed64 month_card_awardtime = 5;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserMonthCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserMonthCard)
  GOOGLE_DCHECK_NE(&from, this);
  const UserMonthCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserMonthCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserMonthCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserMonthCard)
    MergeFrom(*source);
  }
}

void UserMonthCard::MergeFrom(const UserMonthCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserMonthCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      cardid_ = from.cardid_;
    }
    if (cached_has_bits & 0x00000004u) {
      buy_month_card_num_ = from.buy_month_card_num_;
    }
    if (cached_has_bits & 0x00000008u) {
      buy_month_card_burntime_ = from.buy_month_card_burntime_;
    }
    if (cached_has_bits & 0x00000010u) {
      month_card_awardtime_ = from.month_card_awardtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserMonthCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserMonthCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMonthCard::CopyFrom(const UserMonthCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserMonthCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMonthCard::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void UserMonthCard::Swap(UserMonthCard* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserMonthCard* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserMonthCard::UnsafeArenaSwap(UserMonthCard* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserMonthCard::InternalSwap(UserMonthCard* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cardid_, other->cardid_);
  swap(buy_month_card_num_, other->buy_month_card_num_);
  swap(buy_month_card_burntime_, other->buy_month_card_burntime_);
  swap(month_card_awardtime_, other->month_card_awardtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserMonthCard::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRoleLvShopping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRoleLvShopping::kUseridFieldNumber;
const int UserRoleLvShopping::kGiftbagidFieldNumber;
const int UserRoleLvShopping::kFlagRewardFieldNumber;
const int UserRoleLvShopping::kAwardtimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRoleLvShopping::UserRoleLvShopping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserRoleLvShopping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserRoleLvShopping)
}
UserRoleLvShopping::UserRoleLvShopping(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserRoleLvShopping.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserRoleLvShopping)
}
UserRoleLvShopping::UserRoleLvShopping(const UserRoleLvShopping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  ::memcpy(&giftbagid_, &from.giftbagid_,
    static_cast<size_t>(reinterpret_cast<char*>(&awardtime_) -
    reinterpret_cast<char*>(&giftbagid_)) + sizeof(awardtime_));
  // @@protoc_insertion_point(copy_constructor:db.UserRoleLvShopping)
}

void UserRoleLvShopping::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&giftbagid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&awardtime_) -
      reinterpret_cast<char*>(&giftbagid_)) + sizeof(awardtime_));
}

UserRoleLvShopping::~UserRoleLvShopping() {
  // @@protoc_insertion_point(destructor:db.UserRoleLvShopping)
  SharedDtor();
}

void UserRoleLvShopping::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRoleLvShopping::ArenaDtor(void* object) {
  UserRoleLvShopping* _this = reinterpret_cast< UserRoleLvShopping* >(object);
  (void)_this;
}
void UserRoleLvShopping::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserRoleLvShopping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRoleLvShopping::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRoleLvShopping& UserRoleLvShopping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserRoleLvShopping.base);
  return *internal_default_instance();
}


void UserRoleLvShopping::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserRoleLvShopping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 14u) {
    ::memset(&giftbagid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&awardtime_) -
        reinterpret_cast<char*>(&giftbagid_)) + sizeof(awardtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRoleLvShopping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserRoleLvShopping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 giftbagid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_giftbagid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &giftbagid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flag_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 awardtime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_awardtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &awardtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserRoleLvShopping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserRoleLvShopping)
  return false;
#undef DO_
}

void UserRoleLvShopping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserRoleLvShopping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required uint64 giftbagid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->giftbagid(), output);
  }

  // required uint64 flag_reward = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->flag_reward(), output);
  }

  // required sfixed64 awardtime = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->awardtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserRoleLvShopping)
}

::google::protobuf::uint8* UserRoleLvShopping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserRoleLvShopping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required uint64 giftbagid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->giftbagid(), target);
  }

  // required uint64 flag_reward = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->flag_reward(), target);
  }

  // required sfixed64 awardtime = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->awardtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserRoleLvShopping)
  return target;
}

size_t UserRoleLvShopping::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserRoleLvShopping)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_giftbagid()) {
    // required uint64 giftbagid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->giftbagid());
  }

  if (has_flag_reward()) {
    // required uint64 flag_reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_reward());
  }

  if (has_awardtime()) {
    // required sfixed64 awardtime = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t UserRoleLvShopping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserRoleLvShopping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required uint64 giftbagid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->giftbagid());

    // required uint64 flag_reward = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_reward());

    // required sfixed64 awardtime = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRoleLvShopping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserRoleLvShopping)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRoleLvShopping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRoleLvShopping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserRoleLvShopping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserRoleLvShopping)
    MergeFrom(*source);
  }
}

void UserRoleLvShopping::MergeFrom(const UserRoleLvShopping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserRoleLvShopping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      giftbagid_ = from.giftbagid_;
    }
    if (cached_has_bits & 0x00000004u) {
      flag_reward_ = from.flag_reward_;
    }
    if (cached_has_bits & 0x00000008u) {
      awardtime_ = from.awardtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserRoleLvShopping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserRoleLvShopping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRoleLvShopping::CopyFrom(const UserRoleLvShopping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserRoleLvShopping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRoleLvShopping::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void UserRoleLvShopping::Swap(UserRoleLvShopping* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserRoleLvShopping* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserRoleLvShopping::UnsafeArenaSwap(UserRoleLvShopping* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserRoleLvShopping::InternalSwap(UserRoleLvShopping* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(giftbagid_, other->giftbagid_);
  swap(flag_reward_, other->flag_reward_);
  swap(awardtime_, other->awardtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRoleLvShopping::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserStatsChargeAndGiftbag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserStatsChargeAndGiftbag::kUseridFieldNumber;
const int UserStatsChargeAndGiftbag::kChargePoolTopidFieldNumber;
const int UserStatsChargeAndGiftbag::kChargePointNumFieldNumber;
const int UserStatsChargeAndGiftbag::kFlagRoleSigninRewardFieldNumber;
const int UserStatsChargeAndGiftbag::kFlagRoleSigninFieldNumber;
const int UserStatsChargeAndGiftbag::kRoleSigninBurntimeFieldNumber;
const int UserStatsChargeAndGiftbag::kFlagRoleLevelupRewardFieldNumber;
const int UserStatsChargeAndGiftbag::kFlagChargeRewardFieldNumber;
const int UserStatsChargeAndGiftbag::kSevenDaySigninTimeFieldNumber;
const int UserStatsChargeAndGiftbag::kFlagSevenDaySigninFieldNumber;
const int UserStatsChargeAndGiftbag::kFlagSevenDaySigninRewardFieldNumber;
const int UserStatsChargeAndGiftbag::kFriendGiftGiveNumRefreshtimeFieldNumber;
const int UserStatsChargeAndGiftbag::kFriendGiftGiveNumFieldNumber;
const int UserStatsChargeAndGiftbag::kFriendGiftGiveNumTotalFieldNumber;
const int UserStatsChargeAndGiftbag::kFriendGiftAcceptNumRefreshtimeFieldNumber;
const int UserStatsChargeAndGiftbag::kFriendGiftAcceptNumFieldNumber;
const int UserStatsChargeAndGiftbag::kFriendGiftAcceptNumTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserStatsChargeAndGiftbag::UserStatsChargeAndGiftbag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserStatsChargeAndGiftbag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserStatsChargeAndGiftbag)
}
UserStatsChargeAndGiftbag::UserStatsChargeAndGiftbag(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserStatsChargeAndGiftbag.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserStatsChargeAndGiftbag)
}
UserStatsChargeAndGiftbag::UserStatsChargeAndGiftbag(const UserStatsChargeAndGiftbag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  ::memcpy(&charge_pool_topid_, &from.charge_pool_topid_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_gift_accept_num_refreshtime_) -
    reinterpret_cast<char*>(&charge_pool_topid_)) + sizeof(friend_gift_accept_num_refreshtime_));
  // @@protoc_insertion_point(copy_constructor:db.UserStatsChargeAndGiftbag)
}

void UserStatsChargeAndGiftbag::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&charge_pool_topid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_gift_accept_num_refreshtime_) -
      reinterpret_cast<char*>(&charge_pool_topid_)) + sizeof(friend_gift_accept_num_refreshtime_));
}

UserStatsChargeAndGiftbag::~UserStatsChargeAndGiftbag() {
  // @@protoc_insertion_point(destructor:db.UserStatsChargeAndGiftbag)
  SharedDtor();
}

void UserStatsChargeAndGiftbag::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserStatsChargeAndGiftbag::ArenaDtor(void* object) {
  UserStatsChargeAndGiftbag* _this = reinterpret_cast< UserStatsChargeAndGiftbag* >(object);
  (void)_this;
}
void UserStatsChargeAndGiftbag::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserStatsChargeAndGiftbag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserStatsChargeAndGiftbag::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserStatsChargeAndGiftbag& UserStatsChargeAndGiftbag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserStatsChargeAndGiftbag.base);
  return *internal_default_instance();
}


void UserStatsChargeAndGiftbag::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserStatsChargeAndGiftbag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 254u) {
    ::memset(&charge_pool_topid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&friend_gift_give_num_) -
        reinterpret_cast<char*>(&charge_pool_topid_)) + sizeof(friend_gift_give_num_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&flag_role_levelup_reward_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&friend_gift_accept_num_) -
        reinterpret_cast<char*>(&flag_role_levelup_reward_)) + sizeof(friend_gift_accept_num_));
  }
  friend_gift_accept_num_refreshtime_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserStatsChargeAndGiftbag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserStatsChargeAndGiftbag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 charge_pool_topid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_charge_pool_topid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &charge_pool_topid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 charge_point_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_charge_point_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charge_point_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_role_signin_reward = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_flag_role_signin_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_role_signin_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_role_signin = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_flag_role_signin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_role_signin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 role_signin_burntime = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {
          set_has_role_signin_burntime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &role_signin_burntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_role_levelup_reward = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_flag_role_levelup_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_role_levelup_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_charge_reward = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_flag_charge_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_charge_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 seven_day_signin_time = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 329 & 0xFF */)) {
          set_has_seven_day_signin_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &seven_day_signin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_seven_day_signin = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_flag_seven_day_signin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_seven_day_signin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_seven_day_signin_reward = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          set_has_flag_seven_day_signin_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_seven_day_signin_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 friend_gift_give_num_refreshtime = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 409 & 0xFF */)) {
          set_has_friend_gift_give_num_refreshtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &friend_gift_give_num_refreshtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 friend_gift_give_num = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {
          set_has_friend_gift_give_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_gift_give_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 friend_gift_give_num_total = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 424 & 0xFF */)) {
          set_has_friend_gift_give_num_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_gift_give_num_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 friend_gift_accept_num_refreshtime = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(233u /* 489 & 0xFF */)) {
          set_has_friend_gift_accept_num_refreshtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &friend_gift_accept_num_refreshtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 friend_gift_accept_num = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 496 & 0xFF */)) {
          set_has_friend_gift_accept_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_gift_accept_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 friend_gift_accept_num_total = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 504 & 0xFF */)) {
          set_has_friend_gift_accept_num_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &friend_gift_accept_num_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserStatsChargeAndGiftbag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserStatsChargeAndGiftbag)
  return false;
#undef DO_
}

void UserStatsChargeAndGiftbag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserStatsChargeAndGiftbag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required uint64 charge_pool_topid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->charge_pool_topid(), output);
  }

  // required int32 charge_point_num = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->charge_point_num(), output);
  }

  // required uint64 flag_role_signin_reward = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->flag_role_signin_reward(), output);
  }

  // required uint64 flag_role_signin = 22;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(22, this->flag_role_signin(), output);
  }

  // required sfixed64 role_signin_burntime = 23;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(23, this->role_signin_burntime(), output);
  }

  // required uint64 flag_role_levelup_reward = 31;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->flag_role_levelup_reward(), output);
  }

  // required uint64 flag_charge_reward = 32;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->flag_charge_reward(), output);
  }

  // required sfixed64 seven_day_signin_time = 41;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(41, this->seven_day_signin_time(), output);
  }

  // required uint64 flag_seven_day_signin = 42;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(42, this->flag_seven_day_signin(), output);
  }

  // required uint64 flag_seven_day_signin_reward = 43;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(43, this->flag_seven_day_signin_reward(), output);
  }

  // required sfixed64 friend_gift_give_num_refreshtime = 51;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(51, this->friend_gift_give_num_refreshtime(), output);
  }

  // required int32 friend_gift_give_num = 52;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(52, this->friend_gift_give_num(), output);
  }

  // required int32 friend_gift_give_num_total = 53;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(53, this->friend_gift_give_num_total(), output);
  }

  // required sfixed64 friend_gift_accept_num_refreshtime = 61;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(61, this->friend_gift_accept_num_refreshtime(), output);
  }

  // required int32 friend_gift_accept_num = 62;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(62, this->friend_gift_accept_num(), output);
  }

  // required int32 friend_gift_accept_num_total = 63;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(63, this->friend_gift_accept_num_total(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserStatsChargeAndGiftbag)
}

::google::protobuf::uint8* UserStatsChargeAndGiftbag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserStatsChargeAndGiftbag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required uint64 charge_pool_topid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->charge_pool_topid(), target);
  }

  // required int32 charge_point_num = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->charge_point_num(), target);
  }

  // required uint64 flag_role_signin_reward = 21;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->flag_role_signin_reward(), target);
  }

  // required uint64 flag_role_signin = 22;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(22, this->flag_role_signin(), target);
  }

  // required sfixed64 role_signin_burntime = 23;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(23, this->role_signin_burntime(), target);
  }

  // required uint64 flag_role_levelup_reward = 31;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->flag_role_levelup_reward(), target);
  }

  // required uint64 flag_charge_reward = 32;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->flag_charge_reward(), target);
  }

  // required sfixed64 seven_day_signin_time = 41;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(41, this->seven_day_signin_time(), target);
  }

  // required uint64 flag_seven_day_signin = 42;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(42, this->flag_seven_day_signin(), target);
  }

  // required uint64 flag_seven_day_signin_reward = 43;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(43, this->flag_seven_day_signin_reward(), target);
  }

  // required sfixed64 friend_gift_give_num_refreshtime = 51;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(51, this->friend_gift_give_num_refreshtime(), target);
  }

  // required int32 friend_gift_give_num = 52;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(52, this->friend_gift_give_num(), target);
  }

  // required int32 friend_gift_give_num_total = 53;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(53, this->friend_gift_give_num_total(), target);
  }

  // required sfixed64 friend_gift_accept_num_refreshtime = 61;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(61, this->friend_gift_accept_num_refreshtime(), target);
  }

  // required int32 friend_gift_accept_num = 62;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(62, this->friend_gift_accept_num(), target);
  }

  // required int32 friend_gift_accept_num_total = 63;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(63, this->friend_gift_accept_num_total(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserStatsChargeAndGiftbag)
  return target;
}

size_t UserStatsChargeAndGiftbag::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserStatsChargeAndGiftbag)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_charge_pool_topid()) {
    // required uint64 charge_pool_topid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->charge_pool_topid());
  }

  if (has_friend_gift_accept_num_total()) {
    // required int32 friend_gift_accept_num_total = 63;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_gift_accept_num_total());
  }

  if (has_flag_role_signin_reward()) {
    // required uint64 flag_role_signin_reward = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_role_signin_reward());
  }

  if (has_flag_role_signin()) {
    // required uint64 flag_role_signin = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_role_signin());
  }

  if (has_role_signin_burntime()) {
    // required sfixed64 role_signin_burntime = 23;
    total_size += 2 + 8;
  }

  if (has_charge_point_num()) {
    // required int32 charge_point_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->charge_point_num());
  }

  if (has_friend_gift_give_num()) {
    // required int32 friend_gift_give_num = 52;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_gift_give_num());
  }

  if (has_flag_role_levelup_reward()) {
    // required uint64 flag_role_levelup_reward = 31;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_role_levelup_reward());
  }

  if (has_flag_charge_reward()) {
    // required uint64 flag_charge_reward = 32;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_charge_reward());
  }

  if (has_seven_day_signin_time()) {
    // required sfixed64 seven_day_signin_time = 41;
    total_size += 2 + 8;
  }

  if (has_flag_seven_day_signin()) {
    // required uint64 flag_seven_day_signin = 42;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_seven_day_signin());
  }

  if (has_flag_seven_day_signin_reward()) {
    // required uint64 flag_seven_day_signin_reward = 43;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_seven_day_signin_reward());
  }

  if (has_friend_gift_give_num_refreshtime()) {
    // required sfixed64 friend_gift_give_num_refreshtime = 51;
    total_size += 2 + 8;
  }

  if (has_friend_gift_give_num_total()) {
    // required int32 friend_gift_give_num_total = 53;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_gift_give_num_total());
  }

  if (has_friend_gift_accept_num()) {
    // required int32 friend_gift_accept_num = 62;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_gift_accept_num());
  }

  if (has_friend_gift_accept_num_refreshtime()) {
    // required sfixed64 friend_gift_accept_num_refreshtime = 61;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t UserStatsChargeAndGiftbag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserStatsChargeAndGiftbag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0001ffff) ^ 0x0001ffff) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required uint64 charge_pool_topid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->charge_pool_topid());

    // required int32 friend_gift_accept_num_total = 63;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_gift_accept_num_total());

    // required uint64 flag_role_signin_reward = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_role_signin_reward());

    // required uint64 flag_role_signin = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_role_signin());

    // required sfixed64 role_signin_burntime = 23;
    total_size += 2 + 8;

    // required int32 charge_point_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->charge_point_num());

    // required int32 friend_gift_give_num = 52;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_gift_give_num());

    // required uint64 flag_role_levelup_reward = 31;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_role_levelup_reward());

    // required uint64 flag_charge_reward = 32;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_charge_reward());

    // required sfixed64 seven_day_signin_time = 41;
    total_size += 2 + 8;

    // required uint64 flag_seven_day_signin = 42;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_seven_day_signin());

    // required uint64 flag_seven_day_signin_reward = 43;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_seven_day_signin_reward());

    // required sfixed64 friend_gift_give_num_refreshtime = 51;
    total_size += 2 + 8;

    // required int32 friend_gift_give_num_total = 53;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_gift_give_num_total());

    // required int32 friend_gift_accept_num = 62;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->friend_gift_accept_num());

    // required sfixed64 friend_gift_accept_num_refreshtime = 61;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserStatsChargeAndGiftbag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserStatsChargeAndGiftbag)
  GOOGLE_DCHECK_NE(&from, this);
  const UserStatsChargeAndGiftbag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserStatsChargeAndGiftbag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserStatsChargeAndGiftbag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserStatsChargeAndGiftbag)
    MergeFrom(*source);
  }
}

void UserStatsChargeAndGiftbag::MergeFrom(const UserStatsChargeAndGiftbag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserStatsChargeAndGiftbag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      charge_pool_topid_ = from.charge_pool_topid_;
    }
    if (cached_has_bits & 0x00000004u) {
      friend_gift_accept_num_total_ = from.friend_gift_accept_num_total_;
    }
    if (cached_has_bits & 0x00000008u) {
      flag_role_signin_reward_ = from.flag_role_signin_reward_;
    }
    if (cached_has_bits & 0x00000010u) {
      flag_role_signin_ = from.flag_role_signin_;
    }
    if (cached_has_bits & 0x00000020u) {
      role_signin_burntime_ = from.role_signin_burntime_;
    }
    if (cached_has_bits & 0x00000040u) {
      charge_point_num_ = from.charge_point_num_;
    }
    if (cached_has_bits & 0x00000080u) {
      friend_gift_give_num_ = from.friend_gift_give_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      flag_role_levelup_reward_ = from.flag_role_levelup_reward_;
    }
    if (cached_has_bits & 0x00000200u) {
      flag_charge_reward_ = from.flag_charge_reward_;
    }
    if (cached_has_bits & 0x00000400u) {
      seven_day_signin_time_ = from.seven_day_signin_time_;
    }
    if (cached_has_bits & 0x00000800u) {
      flag_seven_day_signin_ = from.flag_seven_day_signin_;
    }
    if (cached_has_bits & 0x00001000u) {
      flag_seven_day_signin_reward_ = from.flag_seven_day_signin_reward_;
    }
    if (cached_has_bits & 0x00002000u) {
      friend_gift_give_num_refreshtime_ = from.friend_gift_give_num_refreshtime_;
    }
    if (cached_has_bits & 0x00004000u) {
      friend_gift_give_num_total_ = from.friend_gift_give_num_total_;
    }
    if (cached_has_bits & 0x00008000u) {
      friend_gift_accept_num_ = from.friend_gift_accept_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_friend_gift_accept_num_refreshtime(from.friend_gift_accept_num_refreshtime());
  }
}

void UserStatsChargeAndGiftbag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserStatsChargeAndGiftbag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserStatsChargeAndGiftbag::CopyFrom(const UserStatsChargeAndGiftbag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserStatsChargeAndGiftbag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserStatsChargeAndGiftbag::IsInitialized() const {
  if ((_has_bits_[0] & 0x0001ffff) != 0x0001ffff) return false;
  return true;
}

void UserStatsChargeAndGiftbag::Swap(UserStatsChargeAndGiftbag* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserStatsChargeAndGiftbag* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserStatsChargeAndGiftbag::UnsafeArenaSwap(UserStatsChargeAndGiftbag* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserStatsChargeAndGiftbag::InternalSwap(UserStatsChargeAndGiftbag* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(charge_pool_topid_, other->charge_pool_topid_);
  swap(friend_gift_accept_num_total_, other->friend_gift_accept_num_total_);
  swap(flag_role_signin_reward_, other->flag_role_signin_reward_);
  swap(flag_role_signin_, other->flag_role_signin_);
  swap(role_signin_burntime_, other->role_signin_burntime_);
  swap(charge_point_num_, other->charge_point_num_);
  swap(friend_gift_give_num_, other->friend_gift_give_num_);
  swap(flag_role_levelup_reward_, other->flag_role_levelup_reward_);
  swap(flag_charge_reward_, other->flag_charge_reward_);
  swap(seven_day_signin_time_, other->seven_day_signin_time_);
  swap(flag_seven_day_signin_, other->flag_seven_day_signin_);
  swap(flag_seven_day_signin_reward_, other->flag_seven_day_signin_reward_);
  swap(friend_gift_give_num_refreshtime_, other->friend_gift_give_num_refreshtime_);
  swap(friend_gift_give_num_total_, other->friend_gift_give_num_total_);
  swap(friend_gift_accept_num_, other->friend_gift_accept_num_);
  swap(friend_gift_accept_num_refreshtime_, other->friend_gift_accept_num_refreshtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserStatsChargeAndGiftbag::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserActivityGiftbag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserActivityGiftbag::kUseridFieldNumber;
const int UserActivityGiftbag::kActivityidFieldNumber;
const int UserActivityGiftbag::kFestivalSigninTimeFieldNumber;
const int UserActivityGiftbag::kFlagFestivalSigninFieldNumber;
const int UserActivityGiftbag::kFlagFestivalSigninRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserActivityGiftbag::UserActivityGiftbag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserActivityGiftbag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserActivityGiftbag)
}
UserActivityGiftbag::UserActivityGiftbag(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserActivityGiftbag.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserActivityGiftbag)
}
UserActivityGiftbag::UserActivityGiftbag(const UserActivityGiftbag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  ::memcpy(&activityid_, &from.activityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_festival_signin_reward_) -
    reinterpret_cast<char*>(&activityid_)) + sizeof(flag_festival_signin_reward_));
  // @@protoc_insertion_point(copy_constructor:db.UserActivityGiftbag)
}

void UserActivityGiftbag::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&activityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_festival_signin_reward_) -
      reinterpret_cast<char*>(&activityid_)) + sizeof(flag_festival_signin_reward_));
}

UserActivityGiftbag::~UserActivityGiftbag() {
  // @@protoc_insertion_point(destructor:db.UserActivityGiftbag)
  SharedDtor();
}

void UserActivityGiftbag::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserActivityGiftbag::ArenaDtor(void* object) {
  UserActivityGiftbag* _this = reinterpret_cast< UserActivityGiftbag* >(object);
  (void)_this;
}
void UserActivityGiftbag::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserActivityGiftbag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserActivityGiftbag::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserActivityGiftbag& UserActivityGiftbag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_UserActivityGiftbag.base);
  return *internal_default_instance();
}


void UserActivityGiftbag::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserActivityGiftbag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 30u) {
    ::memset(&activityid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flag_festival_signin_reward_) -
        reinterpret_cast<char*>(&activityid_)) + sizeof(flag_festival_signin_reward_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserActivityGiftbag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserActivityGiftbag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 activityid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_activityid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activityid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 festival_signin_time = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 329 & 0xFF */)) {
          set_has_festival_signin_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &festival_signin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_festival_signin = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_flag_festival_signin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_festival_signin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 flag_festival_signin_reward = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          set_has_flag_festival_signin_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flag_festival_signin_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserActivityGiftbag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserActivityGiftbag)
  return false;
#undef DO_
}

void UserActivityGiftbag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserActivityGiftbag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required int32 activityid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activityid(), output);
  }

  // required sfixed64 festival_signin_time = 41;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(41, this->festival_signin_time(), output);
  }

  // required uint64 flag_festival_signin = 42;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(42, this->flag_festival_signin(), output);
  }

  // required uint64 flag_festival_signin_reward = 43;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(43, this->flag_festival_signin_reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserActivityGiftbag)
}

::google::protobuf::uint8* UserActivityGiftbag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserActivityGiftbag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required int32 activityid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activityid(), target);
  }

  // required sfixed64 festival_signin_time = 41;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(41, this->festival_signin_time(), target);
  }

  // required uint64 flag_festival_signin = 42;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(42, this->flag_festival_signin(), target);
  }

  // required uint64 flag_festival_signin_reward = 43;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(43, this->flag_festival_signin_reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserActivityGiftbag)
  return target;
}

size_t UserActivityGiftbag::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserActivityGiftbag)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_activityid()) {
    // required int32 activityid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activityid());
  }

  if (has_festival_signin_time()) {
    // required sfixed64 festival_signin_time = 41;
    total_size += 2 + 8;
  }

  if (has_flag_festival_signin()) {
    // required uint64 flag_festival_signin = 42;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_festival_signin());
  }

  if (has_flag_festival_signin_reward()) {
    // required uint64 flag_festival_signin_reward = 43;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_festival_signin_reward());
  }

  return total_size;
}
size_t UserActivityGiftbag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserActivityGiftbag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required int32 activityid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activityid());

    // required sfixed64 festival_signin_time = 41;
    total_size += 2 + 8;

    // required uint64 flag_festival_signin = 42;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_festival_signin());

    // required uint64 flag_festival_signin_reward = 43;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flag_festival_signin_reward());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserActivityGiftbag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserActivityGiftbag)
  GOOGLE_DCHECK_NE(&from, this);
  const UserActivityGiftbag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserActivityGiftbag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserActivityGiftbag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserActivityGiftbag)
    MergeFrom(*source);
  }
}

void UserActivityGiftbag::MergeFrom(const UserActivityGiftbag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserActivityGiftbag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      activityid_ = from.activityid_;
    }
    if (cached_has_bits & 0x00000004u) {
      festival_signin_time_ = from.festival_signin_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      flag_festival_signin_ = from.flag_festival_signin_;
    }
    if (cached_has_bits & 0x00000010u) {
      flag_festival_signin_reward_ = from.flag_festival_signin_reward_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserActivityGiftbag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserActivityGiftbag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserActivityGiftbag::CopyFrom(const UserActivityGiftbag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserActivityGiftbag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserActivityGiftbag::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void UserActivityGiftbag::Swap(UserActivityGiftbag* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserActivityGiftbag* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserActivityGiftbag::UnsafeArenaSwap(UserActivityGiftbag* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserActivityGiftbag::InternalSwap(UserActivityGiftbag* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(activityid_, other->activityid_);
  swap(festival_signin_time_, other->festival_signin_time_);
  swap(flag_festival_signin_, other->flag_festival_signin_);
  swap(flag_festival_signin_reward_, other->flag_festival_signin_reward_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserActivityGiftbag::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameGiftbagCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameGiftbagCode::kCodeFieldNumber;
const int GameGiftbagCode::kUseridFieldNumber;
const int GameGiftbagCode::kActiveTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameGiftbagCode::GameGiftbagCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameGiftbagCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameGiftbagCode)
}
GameGiftbagCode::GameGiftbagCode(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameGiftbagCode.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameGiftbagCode)
}
GameGiftbagCode::GameGiftbagCode(const GameGiftbagCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code(),
      GetArenaNoVirtual());
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  active_time_ = from.active_time_;
  // @@protoc_insertion_point(copy_constructor:db.GameGiftbagCode)
}

void GameGiftbagCode::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_time_ = GOOGLE_LONGLONG(0);
}

GameGiftbagCode::~GameGiftbagCode() {
  // @@protoc_insertion_point(destructor:db.GameGiftbagCode)
  SharedDtor();
}

void GameGiftbagCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameGiftbagCode::ArenaDtor(void* object) {
  GameGiftbagCode* _this = reinterpret_cast< GameGiftbagCode* >(object);
  (void)_this;
}
void GameGiftbagCode::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameGiftbagCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameGiftbagCode::descriptor() {
  ::protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameGiftbagCode& GameGiftbagCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_StoredProcChargeAndGiftbag_2eproto::scc_info_GameGiftbagCode.base);
  return *internal_default_instance();
}


void GameGiftbagCode::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameGiftbagCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      code_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      userid_.ClearNonDefaultToEmpty();
    }
  }
  active_time_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameGiftbagCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameGiftbagCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 active_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_active_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &active_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameGiftbagCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameGiftbagCode)
  return false;
#undef DO_
}

void GameGiftbagCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameGiftbagCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->code(), output);
  }

  // required bytes userid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->userid(), output);
  }

  // optional sfixed64 active_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->active_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameGiftbagCode)
}

::google::protobuf::uint8* GameGiftbagCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameGiftbagCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes code = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->code(), target);
  }

  // required bytes userid = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->userid(), target);
  }

  // optional sfixed64 active_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(3, this->active_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameGiftbagCode)
  return target;
}

size_t GameGiftbagCode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameGiftbagCode)
  size_t total_size = 0;

  if (has_code()) {
    // required bytes code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());
  }

  if (has_userid()) {
    // required bytes userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  return total_size;
}
size_t GameGiftbagCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameGiftbagCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());

    // required bytes userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional sfixed64 active_time = 3;
  if (has_active_time()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameGiftbagCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameGiftbagCode)
  GOOGLE_DCHECK_NE(&from, this);
  const GameGiftbagCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameGiftbagCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameGiftbagCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameGiftbagCode)
    MergeFrom(*source);
  }
}

void GameGiftbagCode::MergeFrom(const GameGiftbagCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameGiftbagCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_code(from.code());
    }
    if (cached_has_bits & 0x00000002u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000004u) {
      active_time_ = from.active_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameGiftbagCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameGiftbagCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameGiftbagCode::CopyFrom(const GameGiftbagCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameGiftbagCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameGiftbagCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GameGiftbagCode::Swap(GameGiftbagCode* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameGiftbagCode* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameGiftbagCode::UnsafeArenaSwap(GameGiftbagCode* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameGiftbagCode::InternalSwap(GameGiftbagCode* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(active_time_, other->active_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameGiftbagCode::GetMetadata() const {
  protobuf_StoredProcChargeAndGiftbag_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StoredProcChargeAndGiftbag_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigActivityTime* Arena::CreateMaybeMessage< ::db::ConfigActivityTime >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigActivityTime >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigActivityTimeList* Arena::CreateMaybeMessage< ::db::ConfigActivityTimeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigActivityTimeList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagFirstCharge* Arena::CreateMaybeMessage< ::db::ConfigGiftbagFirstCharge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagFirstCharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagFirstChargeList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagFirstChargeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagFirstChargeList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagCharge* Arena::CreateMaybeMessage< ::db::ConfigGiftbagCharge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagCharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagChargeList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagChargeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagChargeList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagSevenDay* Arena::CreateMaybeMessage< ::db::ConfigGiftbagSevenDay >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagSevenDay >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagSevenDayList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagSevenDayList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagSevenDayList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagFestival* Arena::CreateMaybeMessage< ::db::ConfigGiftbagFestival >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagFestival >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagFestivalList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagFestivalList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagFestivalList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagMonthCard* Arena::CreateMaybeMessage< ::db::ConfigGiftbagMonthCard >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagMonthCard >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagMonthCardList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagMonthCardList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagMonthCardList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagRoleSignin* Arena::CreateMaybeMessage< ::db::ConfigGiftbagRoleSignin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagRoleSignin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagRoleSigninList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagRoleSigninList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagRoleSigninList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagRoleLevelup* Arena::CreateMaybeMessage< ::db::ConfigGiftbagRoleLevelup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagRoleLevelup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagRoleLevelupList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagRoleLevelupList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagRoleLevelupList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagRoleLvShopping* Arena::CreateMaybeMessage< ::db::ConfigGiftbagRoleLvShopping >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagRoleLvShopping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagRoleLvShoppingList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagRoleLvShoppingList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagRoleLvShoppingList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagCode* Arena::CreateMaybeMessage< ::db::ConfigGiftbagCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagCodeList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagCodeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagCodeList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagFriend* Arena::CreateMaybeMessage< ::db::ConfigGiftbagFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagFriend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGiftbagFriendList* Arena::CreateMaybeMessage< ::db::ConfigGiftbagFriendList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGiftbagFriendList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameCharge* Arena::CreateMaybeMessage< ::db::GameCharge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameCharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameChargeList* Arena::CreateMaybeMessage< ::db::GameChargeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameChargeList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserChargeAndGiftbagFirstCharge* Arena::CreateMaybeMessage< ::db::UserChargeAndGiftbagFirstCharge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserChargeAndGiftbagFirstCharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserChargeAndGiftbagFirstChargeList* Arena::CreateMaybeMessage< ::db::UserChargeAndGiftbagFirstChargeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserChargeAndGiftbagFirstChargeList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_game_charge_Parameter* Arena::CreateMaybeMessage< ::db::proc_load_game_charge_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_game_charge_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_game_charge_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_load_game_charge_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_game_charge_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_game_charge* Arena::CreateMaybeMessage< ::db::proc_load_game_charge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_game_charge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_save_game_charge_Parameter* Arena::CreateMaybeMessage< ::db::proc_save_game_charge_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_save_game_charge_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_save_game_charge* Arena::CreateMaybeMessage< ::db::proc_save_game_charge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_save_game_charge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_create_game_charge_Parameter* Arena::CreateMaybeMessage< ::db::proc_create_game_charge_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_create_game_charge_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_create_game_charge* Arena::CreateMaybeMessage< ::db::proc_create_game_charge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_create_game_charge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserMonthCard* Arena::CreateMaybeMessage< ::db::UserMonthCard >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserMonthCard >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserRoleLvShopping* Arena::CreateMaybeMessage< ::db::UserRoleLvShopping >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserRoleLvShopping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserStatsChargeAndGiftbag* Arena::CreateMaybeMessage< ::db::UserStatsChargeAndGiftbag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserStatsChargeAndGiftbag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserActivityGiftbag* Arena::CreateMaybeMessage< ::db::UserActivityGiftbag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserActivityGiftbag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameGiftbagCode* Arena::CreateMaybeMessage< ::db::GameGiftbagCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameGiftbagCode >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
