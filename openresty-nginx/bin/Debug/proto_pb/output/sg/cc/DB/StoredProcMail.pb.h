// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcMail.proto

#ifndef PROTOBUF_INCLUDED_StoredProcMail_2eproto
#define PROTOBUF_INCLUDED_StoredProcMail_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcMail_2eproto 

namespace protobuf_StoredProcMail_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[27];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_StoredProcMail_2eproto
namespace db {
class ConfigMailbox;
class ConfigMailboxDefaultTypeInternal;
extern ConfigMailboxDefaultTypeInternal _ConfigMailbox_default_instance_;
class ConfigMailboxList;
class ConfigMailboxListDefaultTypeInternal;
extern ConfigMailboxListDefaultTypeInternal _ConfigMailboxList_default_instance_;
class GameMail;
class GameMailDefaultTypeInternal;
extern GameMailDefaultTypeInternal _GameMail_default_instance_;
class GameMailList;
class GameMailListDefaultTypeInternal;
extern GameMailListDefaultTypeInternal _GameMailList_default_instance_;
class UserMail;
class UserMailDefaultTypeInternal;
extern UserMailDefaultTypeInternal _UserMail_default_instance_;
class UserMailList;
class UserMailListDefaultTypeInternal;
extern UserMailListDefaultTypeInternal _UserMailList_default_instance_;
class UserStatsMail;
class UserStatsMailDefaultTypeInternal;
extern UserStatsMailDefaultTypeInternal _UserStatsMail_default_instance_;
class proc_i_create_game_mail;
class proc_i_create_game_mailDefaultTypeInternal;
extern proc_i_create_game_mailDefaultTypeInternal _proc_i_create_game_mail_default_instance_;
class proc_i_create_game_mail_Parameter;
class proc_i_create_game_mail_ParameterDefaultTypeInternal;
extern proc_i_create_game_mail_ParameterDefaultTypeInternal _proc_i_create_game_mail_Parameter_default_instance_;
class proc_i_create_game_mail_private;
class proc_i_create_game_mail_privateDefaultTypeInternal;
extern proc_i_create_game_mail_privateDefaultTypeInternal _proc_i_create_game_mail_private_default_instance_;
class proc_i_create_game_mail_private_Parameter;
class proc_i_create_game_mail_private_ParameterDefaultTypeInternal;
extern proc_i_create_game_mail_private_ParameterDefaultTypeInternal _proc_i_create_game_mail_private_Parameter_default_instance_;
class proc_i_load_game_mailbox;
class proc_i_load_game_mailboxDefaultTypeInternal;
extern proc_i_load_game_mailboxDefaultTypeInternal _proc_i_load_game_mailbox_default_instance_;
class proc_i_load_game_mailbox_Parameter;
class proc_i_load_game_mailbox_ParameterDefaultTypeInternal;
extern proc_i_load_game_mailbox_ParameterDefaultTypeInternal _proc_i_load_game_mailbox_Parameter_default_instance_;
class proc_i_load_game_mailbox_ReturnRecord;
class proc_i_load_game_mailbox_ReturnRecordDefaultTypeInternal;
extern proc_i_load_game_mailbox_ReturnRecordDefaultTypeInternal _proc_i_load_game_mailbox_ReturnRecord_default_instance_;
class proc_i_load_user_mails;
class proc_i_load_user_mailsDefaultTypeInternal;
extern proc_i_load_user_mailsDefaultTypeInternal _proc_i_load_user_mails_default_instance_;
class proc_i_load_user_mails_Parameter;
class proc_i_load_user_mails_ParameterDefaultTypeInternal;
extern proc_i_load_user_mails_ParameterDefaultTypeInternal _proc_i_load_user_mails_Parameter_default_instance_;
class proc_i_load_user_mails_ReturnRecord;
class proc_i_load_user_mails_ReturnRecordDefaultTypeInternal;
extern proc_i_load_user_mails_ReturnRecordDefaultTypeInternal _proc_i_load_user_mails_ReturnRecord_default_instance_;
class proc_i_load_user_stats_mail;
class proc_i_load_user_stats_mailDefaultTypeInternal;
extern proc_i_load_user_stats_mailDefaultTypeInternal _proc_i_load_user_stats_mail_default_instance_;
class proc_i_load_user_stats_mail_Parameter;
class proc_i_load_user_stats_mail_ParameterDefaultTypeInternal;
extern proc_i_load_user_stats_mail_ParameterDefaultTypeInternal _proc_i_load_user_stats_mail_Parameter_default_instance_;
class proc_i_load_user_stats_mail_ReturnRecord;
class proc_i_load_user_stats_mail_ReturnRecordDefaultTypeInternal;
extern proc_i_load_user_stats_mail_ReturnRecordDefaultTypeInternal _proc_i_load_user_stats_mail_ReturnRecord_default_instance_;
class proc_i_save_user_mail;
class proc_i_save_user_mailDefaultTypeInternal;
extern proc_i_save_user_mailDefaultTypeInternal _proc_i_save_user_mail_default_instance_;
class proc_i_save_user_mail_Parameter;
class proc_i_save_user_mail_ParameterDefaultTypeInternal;
extern proc_i_save_user_mail_ParameterDefaultTypeInternal _proc_i_save_user_mail_Parameter_default_instance_;
class proc_i_save_user_stats_mail;
class proc_i_save_user_stats_mailDefaultTypeInternal;
extern proc_i_save_user_stats_mailDefaultTypeInternal _proc_i_save_user_stats_mail_default_instance_;
class proc_i_save_user_stats_mail_Parameter;
class proc_i_save_user_stats_mail_ParameterDefaultTypeInternal;
extern proc_i_save_user_stats_mail_ParameterDefaultTypeInternal _proc_i_save_user_stats_mail_Parameter_default_instance_;
class proc_load_config_mailbox;
class proc_load_config_mailboxDefaultTypeInternal;
extern proc_load_config_mailboxDefaultTypeInternal _proc_load_config_mailbox_default_instance_;
class proc_load_config_mailbox_Parameter;
class proc_load_config_mailbox_ParameterDefaultTypeInternal;
extern proc_load_config_mailbox_ParameterDefaultTypeInternal _proc_load_config_mailbox_Parameter_default_instance_;
class proc_load_config_mailbox_ReturnRecord;
class proc_load_config_mailbox_ReturnRecordDefaultTypeInternal;
extern proc_load_config_mailbox_ReturnRecordDefaultTypeInternal _proc_load_config_mailbox_ReturnRecord_default_instance_;
}  // namespace db
namespace google {
namespace protobuf {
template<> ::db::ConfigMailbox* Arena::CreateMaybeMessage<::db::ConfigMailbox>(Arena*);
template<> ::db::ConfigMailboxList* Arena::CreateMaybeMessage<::db::ConfigMailboxList>(Arena*);
template<> ::db::GameMail* Arena::CreateMaybeMessage<::db::GameMail>(Arena*);
template<> ::db::GameMailList* Arena::CreateMaybeMessage<::db::GameMailList>(Arena*);
template<> ::db::UserMail* Arena::CreateMaybeMessage<::db::UserMail>(Arena*);
template<> ::db::UserMailList* Arena::CreateMaybeMessage<::db::UserMailList>(Arena*);
template<> ::db::UserStatsMail* Arena::CreateMaybeMessage<::db::UserStatsMail>(Arena*);
template<> ::db::proc_i_create_game_mail* Arena::CreateMaybeMessage<::db::proc_i_create_game_mail>(Arena*);
template<> ::db::proc_i_create_game_mail_Parameter* Arena::CreateMaybeMessage<::db::proc_i_create_game_mail_Parameter>(Arena*);
template<> ::db::proc_i_create_game_mail_private* Arena::CreateMaybeMessage<::db::proc_i_create_game_mail_private>(Arena*);
template<> ::db::proc_i_create_game_mail_private_Parameter* Arena::CreateMaybeMessage<::db::proc_i_create_game_mail_private_Parameter>(Arena*);
template<> ::db::proc_i_load_game_mailbox* Arena::CreateMaybeMessage<::db::proc_i_load_game_mailbox>(Arena*);
template<> ::db::proc_i_load_game_mailbox_Parameter* Arena::CreateMaybeMessage<::db::proc_i_load_game_mailbox_Parameter>(Arena*);
template<> ::db::proc_i_load_game_mailbox_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_i_load_game_mailbox_ReturnRecord>(Arena*);
template<> ::db::proc_i_load_user_mails* Arena::CreateMaybeMessage<::db::proc_i_load_user_mails>(Arena*);
template<> ::db::proc_i_load_user_mails_Parameter* Arena::CreateMaybeMessage<::db::proc_i_load_user_mails_Parameter>(Arena*);
template<> ::db::proc_i_load_user_mails_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_i_load_user_mails_ReturnRecord>(Arena*);
template<> ::db::proc_i_load_user_stats_mail* Arena::CreateMaybeMessage<::db::proc_i_load_user_stats_mail>(Arena*);
template<> ::db::proc_i_load_user_stats_mail_Parameter* Arena::CreateMaybeMessage<::db::proc_i_load_user_stats_mail_Parameter>(Arena*);
template<> ::db::proc_i_load_user_stats_mail_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_i_load_user_stats_mail_ReturnRecord>(Arena*);
template<> ::db::proc_i_save_user_mail* Arena::CreateMaybeMessage<::db::proc_i_save_user_mail>(Arena*);
template<> ::db::proc_i_save_user_mail_Parameter* Arena::CreateMaybeMessage<::db::proc_i_save_user_mail_Parameter>(Arena*);
template<> ::db::proc_i_save_user_stats_mail* Arena::CreateMaybeMessage<::db::proc_i_save_user_stats_mail>(Arena*);
template<> ::db::proc_i_save_user_stats_mail_Parameter* Arena::CreateMaybeMessage<::db::proc_i_save_user_stats_mail_Parameter>(Arena*);
template<> ::db::proc_load_config_mailbox* Arena::CreateMaybeMessage<::db::proc_load_config_mailbox>(Arena*);
template<> ::db::proc_load_config_mailbox_Parameter* Arena::CreateMaybeMessage<::db::proc_load_config_mailbox_Parameter>(Arena*);
template<> ::db::proc_load_config_mailbox_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_load_config_mailbox_ReturnRecord>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace db {

enum GAME_MAIL_FROM_TYPE {
  GAME_MAIL_FROM_TYPE_SYSTEM = 0,
  GAME_MAIL_FROM_TYPE_PRIVATE = 1
};
bool GAME_MAIL_FROM_TYPE_IsValid(int value);
const GAME_MAIL_FROM_TYPE GAME_MAIL_FROM_TYPE_MIN = GAME_MAIL_FROM_TYPE_SYSTEM;
const GAME_MAIL_FROM_TYPE GAME_MAIL_FROM_TYPE_MAX = GAME_MAIL_FROM_TYPE_PRIVATE;
const int GAME_MAIL_FROM_TYPE_ARRAYSIZE = GAME_MAIL_FROM_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GAME_MAIL_FROM_TYPE_descriptor();
inline const ::std::string& GAME_MAIL_FROM_TYPE_Name(GAME_MAIL_FROM_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GAME_MAIL_FROM_TYPE_descriptor(), value);
}
inline bool GAME_MAIL_FROM_TYPE_Parse(
    const ::std::string& name, GAME_MAIL_FROM_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GAME_MAIL_FROM_TYPE>(
    GAME_MAIL_FROM_TYPE_descriptor(), name, value);
}
enum GAME_MAIL_TO_TYPE {
  GAME_MAIL_TO_TYPE_ALL = 0,
  GAME_MAIL_TO_TYPE_SINGLE = 1
};
bool GAME_MAIL_TO_TYPE_IsValid(int value);
const GAME_MAIL_TO_TYPE GAME_MAIL_TO_TYPE_MIN = GAME_MAIL_TO_TYPE_ALL;
const GAME_MAIL_TO_TYPE GAME_MAIL_TO_TYPE_MAX = GAME_MAIL_TO_TYPE_SINGLE;
const int GAME_MAIL_TO_TYPE_ARRAYSIZE = GAME_MAIL_TO_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GAME_MAIL_TO_TYPE_descriptor();
inline const ::std::string& GAME_MAIL_TO_TYPE_Name(GAME_MAIL_TO_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GAME_MAIL_TO_TYPE_descriptor(), value);
}
inline bool GAME_MAIL_TO_TYPE_Parse(
    const ::std::string& name, GAME_MAIL_TO_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GAME_MAIL_TO_TYPE>(
    GAME_MAIL_TO_TYPE_descriptor(), name, value);
}
// ===================================================================

class ConfigMailbox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigMailbox) */ {
 public:
  ConfigMailbox();
  virtual ~ConfigMailbox();

  ConfigMailbox(const ConfigMailbox& from);

  inline ConfigMailbox& operator=(const ConfigMailbox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigMailbox(ConfigMailbox&& from) noexcept
    : ConfigMailbox() {
    *this = ::std::move(from);
  }

  inline ConfigMailbox& operator=(ConfigMailbox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigMailbox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigMailbox* internal_default_instance() {
    return reinterpret_cast<const ConfigMailbox*>(
               &_ConfigMailbox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ConfigMailbox* other);
  void Swap(ConfigMailbox* other);
  friend void swap(ConfigMailbox& a, ConfigMailbox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigMailbox* New() const final {
    return CreateMaybeMessage<ConfigMailbox>(NULL);
  }

  ConfigMailbox* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigMailbox>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigMailbox& from);
  void MergeFrom(const ConfigMailbox& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigMailbox* other);
  protected:
  explicit ConfigMailbox(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 capacity = 2;
  bool has_capacity() const;
  void clear_capacity();
  static const int kCapacityFieldNumber = 2;
  ::google::protobuf::int32 capacity() const;
  void set_capacity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigMailbox)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_capacity();
  void clear_has_capacity();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 capacity_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigMailboxList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigMailboxList) */ {
 public:
  ConfigMailboxList();
  virtual ~ConfigMailboxList();

  ConfigMailboxList(const ConfigMailboxList& from);

  inline ConfigMailboxList& operator=(const ConfigMailboxList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigMailboxList(ConfigMailboxList&& from) noexcept
    : ConfigMailboxList() {
    *this = ::std::move(from);
  }

  inline ConfigMailboxList& operator=(ConfigMailboxList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigMailboxList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigMailboxList* internal_default_instance() {
    return reinterpret_cast<const ConfigMailboxList*>(
               &_ConfigMailboxList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ConfigMailboxList* other);
  void Swap(ConfigMailboxList* other);
  friend void swap(ConfigMailboxList& a, ConfigMailboxList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigMailboxList* New() const final {
    return CreateMaybeMessage<ConfigMailboxList>(NULL);
  }

  ConfigMailboxList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigMailboxList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigMailboxList& from);
  void MergeFrom(const ConfigMailboxList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigMailboxList* other);
  protected:
  explicit ConfigMailboxList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigMailbox list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigMailbox* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigMailbox >*
      mutable_list();
  const ::db::ConfigMailbox& list(int index) const;
  ::db::ConfigMailbox* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigMailbox >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigMailboxList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigMailbox > list_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_mailbox_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_mailbox.Parameter) */ {
 public:
  proc_load_config_mailbox_Parameter();
  virtual ~proc_load_config_mailbox_Parameter();

  proc_load_config_mailbox_Parameter(const proc_load_config_mailbox_Parameter& from);

  inline proc_load_config_mailbox_Parameter& operator=(const proc_load_config_mailbox_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_mailbox_Parameter(proc_load_config_mailbox_Parameter&& from) noexcept
    : proc_load_config_mailbox_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_load_config_mailbox_Parameter& operator=(proc_load_config_mailbox_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_mailbox_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_mailbox_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_mailbox_Parameter*>(
               &_proc_load_config_mailbox_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(proc_load_config_mailbox_Parameter* other);
  void Swap(proc_load_config_mailbox_Parameter* other);
  friend void swap(proc_load_config_mailbox_Parameter& a, proc_load_config_mailbox_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_mailbox_Parameter* New() const final {
    return CreateMaybeMessage<proc_load_config_mailbox_Parameter>(NULL);
  }

  proc_load_config_mailbox_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_mailbox_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_mailbox_Parameter& from);
  void MergeFrom(const proc_load_config_mailbox_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_mailbox_Parameter* other);
  protected:
  explicit proc_load_config_mailbox_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_load_config_mailbox.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_mailbox_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_mailbox.ReturnRecord) */ {
 public:
  proc_load_config_mailbox_ReturnRecord();
  virtual ~proc_load_config_mailbox_ReturnRecord();

  proc_load_config_mailbox_ReturnRecord(const proc_load_config_mailbox_ReturnRecord& from);

  inline proc_load_config_mailbox_ReturnRecord& operator=(const proc_load_config_mailbox_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_mailbox_ReturnRecord(proc_load_config_mailbox_ReturnRecord&& from) noexcept
    : proc_load_config_mailbox_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_load_config_mailbox_ReturnRecord& operator=(proc_load_config_mailbox_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_mailbox_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_mailbox_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_mailbox_ReturnRecord*>(
               &_proc_load_config_mailbox_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(proc_load_config_mailbox_ReturnRecord* other);
  void Swap(proc_load_config_mailbox_ReturnRecord* other);
  friend void swap(proc_load_config_mailbox_ReturnRecord& a, proc_load_config_mailbox_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_mailbox_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_load_config_mailbox_ReturnRecord>(NULL);
  }

  proc_load_config_mailbox_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_mailbox_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_mailbox_ReturnRecord& from);
  void MergeFrom(const proc_load_config_mailbox_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_mailbox_ReturnRecord* other);
  protected:
  explicit proc_load_config_mailbox_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.ConfigMailbox cfg = 1;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 1;
  private:
  const ::db::ConfigMailbox& _internal_cfg() const;
  public:
  const ::db::ConfigMailbox& cfg() const;
  ::db::ConfigMailbox* release_cfg();
  ::db::ConfigMailbox* mutable_cfg();
  void set_allocated_cfg(::db::ConfigMailbox* cfg);
  void unsafe_arena_set_allocated_cfg(
      ::db::ConfigMailbox* cfg);
  ::db::ConfigMailbox* unsafe_arena_release_cfg();

  // @@protoc_insertion_point(class_scope:db.proc_load_config_mailbox.ReturnRecord)
 private:
  void set_has_cfg();
  void clear_has_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::ConfigMailbox* cfg_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_config_mailbox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_config_mailbox) */ {
 public:
  proc_load_config_mailbox();
  virtual ~proc_load_config_mailbox();

  proc_load_config_mailbox(const proc_load_config_mailbox& from);

  inline proc_load_config_mailbox& operator=(const proc_load_config_mailbox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_config_mailbox(proc_load_config_mailbox&& from) noexcept
    : proc_load_config_mailbox() {
    *this = ::std::move(from);
  }

  inline proc_load_config_mailbox& operator=(proc_load_config_mailbox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_config_mailbox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_config_mailbox* internal_default_instance() {
    return reinterpret_cast<const proc_load_config_mailbox*>(
               &_proc_load_config_mailbox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(proc_load_config_mailbox* other);
  void Swap(proc_load_config_mailbox* other);
  friend void swap(proc_load_config_mailbox& a, proc_load_config_mailbox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_config_mailbox* New() const final {
    return CreateMaybeMessage<proc_load_config_mailbox>(NULL);
  }

  proc_load_config_mailbox* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_config_mailbox>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_config_mailbox& from);
  void MergeFrom(const proc_load_config_mailbox& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_config_mailbox* other);
  protected:
  explicit proc_load_config_mailbox(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_load_config_mailbox_Parameter Parameter;
  typedef proc_load_config_mailbox_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_load_config_mailbox.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_load_config_mailbox_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_mailbox_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_load_config_mailbox_ReturnRecord& return_record_list(int index) const;
  ::db::proc_load_config_mailbox_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_mailbox_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_load_config_mailbox.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_load_config_mailbox_Parameter& _internal_param() const;
  public:
  const ::db::proc_load_config_mailbox_Parameter& param() const;
  ::db::proc_load_config_mailbox_Parameter* release_param();
  ::db::proc_load_config_mailbox_Parameter* mutable_param();
  void set_allocated_param(::db::proc_load_config_mailbox_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_load_config_mailbox_Parameter* param);
  ::db::proc_load_config_mailbox_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_load_config_mailbox)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_mailbox_ReturnRecord > return_record_list_;
  ::db::proc_load_config_mailbox_Parameter* param_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserStatsMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserStatsMail) */ {
 public:
  UserStatsMail();
  virtual ~UserStatsMail();

  UserStatsMail(const UserStatsMail& from);

  inline UserStatsMail& operator=(const UserStatsMail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserStatsMail(UserStatsMail&& from) noexcept
    : UserStatsMail() {
    *this = ::std::move(from);
  }

  inline UserStatsMail& operator=(UserStatsMail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStatsMail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserStatsMail* internal_default_instance() {
    return reinterpret_cast<const UserStatsMail*>(
               &_UserStatsMail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(UserStatsMail* other);
  void Swap(UserStatsMail* other);
  friend void swap(UserStatsMail& a, UserStatsMail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserStatsMail* New() const final {
    return CreateMaybeMessage<UserStatsMail>(NULL);
  }

  UserStatsMail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserStatsMail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserStatsMail& from);
  void MergeFrom(const UserStatsMail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserStatsMail* other);
  protected:
  explicit UserStatsMail(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required int64 topid = 2;
  bool has_topid() const;
  void clear_topid();
  static const int kTopidFieldNumber = 2;
  ::google::protobuf::int64 topid() const;
  void set_topid(::google::protobuf::int64 value);

  // required sfixed64 month_card_award_time = 4;
  bool has_month_card_award_time() const;
  void clear_month_card_award_time();
  static const int kMonthCardAwardTimeFieldNumber = 4;
  ::google::protobuf::int64 month_card_award_time() const;
  void set_month_card_award_time(::google::protobuf::int64 value);

  // required int32 receive_num = 3;
  bool has_receive_num() const;
  void clear_receive_num();
  static const int kReceiveNumFieldNumber = 3;
  ::google::protobuf::int32 receive_num() const;
  void set_receive_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.UserStatsMail)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_topid();
  void clear_has_topid();
  void set_has_receive_num();
  void clear_has_receive_num();
  void set_has_month_card_award_time();
  void clear_has_month_card_award_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int64 topid_;
  ::google::protobuf::int64 month_card_award_time_;
  ::google::protobuf::int32 receive_num_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserMail) */ {
 public:
  UserMail();
  virtual ~UserMail();

  UserMail(const UserMail& from);

  inline UserMail& operator=(const UserMail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserMail(UserMail&& from) noexcept
    : UserMail() {
    *this = ::std::move(from);
  }

  inline UserMail& operator=(UserMail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserMail* internal_default_instance() {
    return reinterpret_cast<const UserMail*>(
               &_UserMail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(UserMail* other);
  void Swap(UserMail* other);
  friend void swap(UserMail& a, UserMail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserMail* New() const final {
    return CreateMaybeMessage<UserMail>(NULL);
  }

  UserMail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserMail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserMail& from);
  void MergeFrom(const UserMail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserMail* other);
  protected:
  explicit UserMail(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required bytes subject = 11;
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 11;
  const ::std::string& subject() const;
  void set_subject(const ::std::string& value);
  #if LANG_CXX11
  void set_subject(::std::string&& value);
  #endif
  void set_subject(const char* value);
  void set_subject(const void* value, size_t size);
  ::std::string* mutable_subject();
  ::std::string* release_subject();
  void set_allocated_subject(::std::string* subject);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_subject();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_subject(
      ::std::string* subject);

  // required bytes content = 12;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 12;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content(
      ::std::string* content);

  // required bytes attachment = 13;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 13;
  const ::std::string& attachment() const;
  void set_attachment(const ::std::string& value);
  #if LANG_CXX11
  void set_attachment(::std::string&& value);
  #endif
  void set_attachment(const char* value);
  void set_attachment(const void* value, size_t size);
  ::std::string* mutable_attachment();
  ::std::string* release_attachment();
  void set_allocated_attachment(::std::string* attachment);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_attachment();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_attachment(
      ::std::string* attachment);

  // required int64 mailid = 2;
  bool has_mailid() const;
  void clear_mailid();
  static const int kMailidFieldNumber = 2;
  ::google::protobuf::int64 mailid() const;
  void set_mailid(::google::protobuf::int64 value);

  // required int32 mailtype = 3;
  bool has_mailtype() const;
  void clear_mailtype();
  static const int kMailtypeFieldNumber = 3;
  ::google::protobuf::int32 mailtype() const;
  void set_mailtype(::google::protobuf::int32 value);

  // required int32 mailstate = 4;
  bool has_mailstate() const;
  void clear_mailstate();
  static const int kMailstateFieldNumber = 4;
  ::google::protobuf::int32 mailstate() const;
  void set_mailstate(::google::protobuf::int32 value);

  // required sfixed64 createtime = 21;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreatetimeFieldNumber = 21;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // required sfixed64 burntime = 22;
  bool has_burntime() const;
  void clear_burntime();
  static const int kBurntimeFieldNumber = 22;
  ::google::protobuf::int64 burntime() const;
  void set_burntime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserMail)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_mailid();
  void clear_has_mailid();
  void set_has_mailtype();
  void clear_has_mailtype();
  void set_has_mailstate();
  void clear_has_mailstate();
  void set_has_subject();
  void clear_has_subject();
  void set_has_content();
  void clear_has_content();
  void set_has_attachment();
  void clear_has_attachment();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_burntime();
  void clear_has_burntime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr subject_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr attachment_;
  ::google::protobuf::int64 mailid_;
  ::google::protobuf::int32 mailtype_;
  ::google::protobuf::int32 mailstate_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int64 burntime_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserMailList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserMailList) */ {
 public:
  UserMailList();
  virtual ~UserMailList();

  UserMailList(const UserMailList& from);

  inline UserMailList& operator=(const UserMailList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserMailList(UserMailList&& from) noexcept
    : UserMailList() {
    *this = ::std::move(from);
  }

  inline UserMailList& operator=(UserMailList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMailList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserMailList* internal_default_instance() {
    return reinterpret_cast<const UserMailList*>(
               &_UserMailList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(UserMailList* other);
  void Swap(UserMailList* other);
  friend void swap(UserMailList& a, UserMailList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserMailList* New() const final {
    return CreateMaybeMessage<UserMailList>(NULL);
  }

  UserMailList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserMailList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserMailList& from);
  void MergeFrom(const UserMailList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserMailList* other);
  protected:
  explicit UserMailList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.UserMail list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::UserMail* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::UserMail >*
      mutable_list();
  const ::db::UserMail& list(int index) const;
  ::db::UserMail* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::UserMail >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.UserMailList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::UserMail > list_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_stats_mail_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_stats_mail.Parameter) */ {
 public:
  proc_i_load_user_stats_mail_Parameter();
  virtual ~proc_i_load_user_stats_mail_Parameter();

  proc_i_load_user_stats_mail_Parameter(const proc_i_load_user_stats_mail_Parameter& from);

  inline proc_i_load_user_stats_mail_Parameter& operator=(const proc_i_load_user_stats_mail_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_stats_mail_Parameter(proc_i_load_user_stats_mail_Parameter&& from) noexcept
    : proc_i_load_user_stats_mail_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_stats_mail_Parameter& operator=(proc_i_load_user_stats_mail_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_stats_mail_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_stats_mail_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_stats_mail_Parameter*>(
               &_proc_i_load_user_stats_mail_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(proc_i_load_user_stats_mail_Parameter* other);
  void Swap(proc_i_load_user_stats_mail_Parameter* other);
  friend void swap(proc_i_load_user_stats_mail_Parameter& a, proc_i_load_user_stats_mail_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_stats_mail_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_load_user_stats_mail_Parameter>(NULL);
  }

  proc_i_load_user_stats_mail_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_stats_mail_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_stats_mail_Parameter& from);
  void MergeFrom(const proc_i_load_user_stats_mail_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_stats_mail_Parameter* other);
  protected:
  explicit proc_i_load_user_stats_mail_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_stats_mail.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_stats_mail_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_stats_mail.ReturnRecord) */ {
 public:
  proc_i_load_user_stats_mail_ReturnRecord();
  virtual ~proc_i_load_user_stats_mail_ReturnRecord();

  proc_i_load_user_stats_mail_ReturnRecord(const proc_i_load_user_stats_mail_ReturnRecord& from);

  inline proc_i_load_user_stats_mail_ReturnRecord& operator=(const proc_i_load_user_stats_mail_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_stats_mail_ReturnRecord(proc_i_load_user_stats_mail_ReturnRecord&& from) noexcept
    : proc_i_load_user_stats_mail_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_stats_mail_ReturnRecord& operator=(proc_i_load_user_stats_mail_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_stats_mail_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_stats_mail_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_stats_mail_ReturnRecord*>(
               &_proc_i_load_user_stats_mail_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(proc_i_load_user_stats_mail_ReturnRecord* other);
  void Swap(proc_i_load_user_stats_mail_ReturnRecord* other);
  friend void swap(proc_i_load_user_stats_mail_ReturnRecord& a, proc_i_load_user_stats_mail_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_stats_mail_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_i_load_user_stats_mail_ReturnRecord>(NULL);
  }

  proc_i_load_user_stats_mail_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_stats_mail_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_stats_mail_ReturnRecord& from);
  void MergeFrom(const proc_i_load_user_stats_mail_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_stats_mail_ReturnRecord* other);
  protected:
  explicit proc_i_load_user_stats_mail_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserStatsMail item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  private:
  const ::db::UserStatsMail& _internal_item() const;
  public:
  const ::db::UserStatsMail& item() const;
  ::db::UserStatsMail* release_item();
  ::db::UserStatsMail* mutable_item();
  void set_allocated_item(::db::UserStatsMail* item);
  void unsafe_arena_set_allocated_item(
      ::db::UserStatsMail* item);
  ::db::UserStatsMail* unsafe_arena_release_item();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_stats_mail.ReturnRecord)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserStatsMail* item_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_stats_mail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_stats_mail) */ {
 public:
  proc_i_load_user_stats_mail();
  virtual ~proc_i_load_user_stats_mail();

  proc_i_load_user_stats_mail(const proc_i_load_user_stats_mail& from);

  inline proc_i_load_user_stats_mail& operator=(const proc_i_load_user_stats_mail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_stats_mail(proc_i_load_user_stats_mail&& from) noexcept
    : proc_i_load_user_stats_mail() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_stats_mail& operator=(proc_i_load_user_stats_mail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_stats_mail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_stats_mail* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_stats_mail*>(
               &_proc_i_load_user_stats_mail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(proc_i_load_user_stats_mail* other);
  void Swap(proc_i_load_user_stats_mail* other);
  friend void swap(proc_i_load_user_stats_mail& a, proc_i_load_user_stats_mail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_stats_mail* New() const final {
    return CreateMaybeMessage<proc_i_load_user_stats_mail>(NULL);
  }

  proc_i_load_user_stats_mail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_stats_mail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_stats_mail& from);
  void MergeFrom(const proc_i_load_user_stats_mail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_stats_mail* other);
  protected:
  explicit proc_i_load_user_stats_mail(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_load_user_stats_mail_Parameter Parameter;
  typedef proc_i_load_user_stats_mail_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_i_load_user_stats_mail.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_i_load_user_stats_mail_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_stats_mail_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_i_load_user_stats_mail_ReturnRecord& return_record_list(int index) const;
  ::db::proc_i_load_user_stats_mail_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_stats_mail_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_i_load_user_stats_mail.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_load_user_stats_mail_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_load_user_stats_mail_Parameter& param() const;
  ::db::proc_i_load_user_stats_mail_Parameter* release_param();
  ::db::proc_i_load_user_stats_mail_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_load_user_stats_mail_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_load_user_stats_mail_Parameter* param);
  ::db::proc_i_load_user_stats_mail_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_stats_mail)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_stats_mail_ReturnRecord > return_record_list_;
  ::db::proc_i_load_user_stats_mail_Parameter* param_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_mails_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_mails.Parameter) */ {
 public:
  proc_i_load_user_mails_Parameter();
  virtual ~proc_i_load_user_mails_Parameter();

  proc_i_load_user_mails_Parameter(const proc_i_load_user_mails_Parameter& from);

  inline proc_i_load_user_mails_Parameter& operator=(const proc_i_load_user_mails_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_mails_Parameter(proc_i_load_user_mails_Parameter&& from) noexcept
    : proc_i_load_user_mails_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_mails_Parameter& operator=(proc_i_load_user_mails_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_mails_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_mails_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_mails_Parameter*>(
               &_proc_i_load_user_mails_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(proc_i_load_user_mails_Parameter* other);
  void Swap(proc_i_load_user_mails_Parameter* other);
  friend void swap(proc_i_load_user_mails_Parameter& a, proc_i_load_user_mails_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_mails_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_load_user_mails_Parameter>(NULL);
  }

  proc_i_load_user_mails_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_mails_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_mails_Parameter& from);
  void MergeFrom(const proc_i_load_user_mails_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_mails_Parameter* other);
  protected:
  explicit proc_i_load_user_mails_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes p_userid = 1;
  bool has_p_userid() const;
  void clear_p_userid();
  static const int kPUseridFieldNumber = 1;
  const ::std::string& p_userid() const;
  void set_p_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_p_userid(::std::string&& value);
  #endif
  void set_p_userid(const char* value);
  void set_p_userid(const void* value, size_t size);
  ::std::string* mutable_p_userid();
  ::std::string* release_p_userid();
  void set_allocated_p_userid(::std::string* p_userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_userid(
      ::std::string* p_userid);

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_mails.Parameter)
 private:
  void set_has_p_userid();
  void clear_has_p_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr p_userid_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_mails_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_mails.ReturnRecord) */ {
 public:
  proc_i_load_user_mails_ReturnRecord();
  virtual ~proc_i_load_user_mails_ReturnRecord();

  proc_i_load_user_mails_ReturnRecord(const proc_i_load_user_mails_ReturnRecord& from);

  inline proc_i_load_user_mails_ReturnRecord& operator=(const proc_i_load_user_mails_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_mails_ReturnRecord(proc_i_load_user_mails_ReturnRecord&& from) noexcept
    : proc_i_load_user_mails_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_mails_ReturnRecord& operator=(proc_i_load_user_mails_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_mails_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_mails_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_mails_ReturnRecord*>(
               &_proc_i_load_user_mails_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(proc_i_load_user_mails_ReturnRecord* other);
  void Swap(proc_i_load_user_mails_ReturnRecord* other);
  friend void swap(proc_i_load_user_mails_ReturnRecord& a, proc_i_load_user_mails_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_mails_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_i_load_user_mails_ReturnRecord>(NULL);
  }

  proc_i_load_user_mails_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_mails_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_mails_ReturnRecord& from);
  void MergeFrom(const proc_i_load_user_mails_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_mails_ReturnRecord* other);
  protected:
  explicit proc_i_load_user_mails_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserMail item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  private:
  const ::db::UserMail& _internal_item() const;
  public:
  const ::db::UserMail& item() const;
  ::db::UserMail* release_item();
  ::db::UserMail* mutable_item();
  void set_allocated_item(::db::UserMail* item);
  void unsafe_arena_set_allocated_item(
      ::db::UserMail* item);
  ::db::UserMail* unsafe_arena_release_item();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_mails.ReturnRecord)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserMail* item_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_user_mails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_user_mails) */ {
 public:
  proc_i_load_user_mails();
  virtual ~proc_i_load_user_mails();

  proc_i_load_user_mails(const proc_i_load_user_mails& from);

  inline proc_i_load_user_mails& operator=(const proc_i_load_user_mails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_user_mails(proc_i_load_user_mails&& from) noexcept
    : proc_i_load_user_mails() {
    *this = ::std::move(from);
  }

  inline proc_i_load_user_mails& operator=(proc_i_load_user_mails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_user_mails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_user_mails* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_user_mails*>(
               &_proc_i_load_user_mails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(proc_i_load_user_mails* other);
  void Swap(proc_i_load_user_mails* other);
  friend void swap(proc_i_load_user_mails& a, proc_i_load_user_mails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_user_mails* New() const final {
    return CreateMaybeMessage<proc_i_load_user_mails>(NULL);
  }

  proc_i_load_user_mails* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_user_mails>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_user_mails& from);
  void MergeFrom(const proc_i_load_user_mails& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_user_mails* other);
  protected:
  explicit proc_i_load_user_mails(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_load_user_mails_Parameter Parameter;
  typedef proc_i_load_user_mails_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_i_load_user_mails.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_i_load_user_mails_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_mails_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_i_load_user_mails_ReturnRecord& return_record_list(int index) const;
  ::db::proc_i_load_user_mails_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_mails_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_i_load_user_mails.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_load_user_mails_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_load_user_mails_Parameter& param() const;
  ::db::proc_i_load_user_mails_Parameter* release_param();
  ::db::proc_i_load_user_mails_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_load_user_mails_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_load_user_mails_Parameter* param);
  ::db::proc_i_load_user_mails_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_user_mails)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_mails_ReturnRecord > return_record_list_;
  ::db::proc_i_load_user_mails_Parameter* param_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_stats_mail_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_stats_mail.Parameter) */ {
 public:
  proc_i_save_user_stats_mail_Parameter();
  virtual ~proc_i_save_user_stats_mail_Parameter();

  proc_i_save_user_stats_mail_Parameter(const proc_i_save_user_stats_mail_Parameter& from);

  inline proc_i_save_user_stats_mail_Parameter& operator=(const proc_i_save_user_stats_mail_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_stats_mail_Parameter(proc_i_save_user_stats_mail_Parameter&& from) noexcept
    : proc_i_save_user_stats_mail_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_stats_mail_Parameter& operator=(proc_i_save_user_stats_mail_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_stats_mail_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_stats_mail_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_stats_mail_Parameter*>(
               &_proc_i_save_user_stats_mail_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(proc_i_save_user_stats_mail_Parameter* other);
  void Swap(proc_i_save_user_stats_mail_Parameter* other);
  friend void swap(proc_i_save_user_stats_mail_Parameter& a, proc_i_save_user_stats_mail_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_stats_mail_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_save_user_stats_mail_Parameter>(NULL);
  }

  proc_i_save_user_stats_mail_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_stats_mail_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_stats_mail_Parameter& from);
  void MergeFrom(const proc_i_save_user_stats_mail_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_stats_mail_Parameter* other);
  protected:
  explicit proc_i_save_user_stats_mail_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserStatsMail p_stats_mail = 1;
  bool has_p_stats_mail() const;
  void clear_p_stats_mail();
  static const int kPStatsMailFieldNumber = 1;
  private:
  const ::db::UserStatsMail& _internal_p_stats_mail() const;
  public:
  const ::db::UserStatsMail& p_stats_mail() const;
  ::db::UserStatsMail* release_p_stats_mail();
  ::db::UserStatsMail* mutable_p_stats_mail();
  void set_allocated_p_stats_mail(::db::UserStatsMail* p_stats_mail);
  void unsafe_arena_set_allocated_p_stats_mail(
      ::db::UserStatsMail* p_stats_mail);
  ::db::UserStatsMail* unsafe_arena_release_p_stats_mail();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_stats_mail.Parameter)
 private:
  void set_has_p_stats_mail();
  void clear_has_p_stats_mail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserStatsMail* p_stats_mail_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_stats_mail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_stats_mail) */ {
 public:
  proc_i_save_user_stats_mail();
  virtual ~proc_i_save_user_stats_mail();

  proc_i_save_user_stats_mail(const proc_i_save_user_stats_mail& from);

  inline proc_i_save_user_stats_mail& operator=(const proc_i_save_user_stats_mail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_stats_mail(proc_i_save_user_stats_mail&& from) noexcept
    : proc_i_save_user_stats_mail() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_stats_mail& operator=(proc_i_save_user_stats_mail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_stats_mail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_stats_mail* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_stats_mail*>(
               &_proc_i_save_user_stats_mail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(proc_i_save_user_stats_mail* other);
  void Swap(proc_i_save_user_stats_mail* other);
  friend void swap(proc_i_save_user_stats_mail& a, proc_i_save_user_stats_mail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_stats_mail* New() const final {
    return CreateMaybeMessage<proc_i_save_user_stats_mail>(NULL);
  }

  proc_i_save_user_stats_mail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_stats_mail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_stats_mail& from);
  void MergeFrom(const proc_i_save_user_stats_mail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_stats_mail* other);
  protected:
  explicit proc_i_save_user_stats_mail(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_save_user_stats_mail_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_save_user_stats_mail.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_save_user_stats_mail_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_save_user_stats_mail_Parameter& param() const;
  ::db::proc_i_save_user_stats_mail_Parameter* release_param();
  ::db::proc_i_save_user_stats_mail_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_save_user_stats_mail_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_save_user_stats_mail_Parameter* param);
  ::db::proc_i_save_user_stats_mail_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_stats_mail)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_save_user_stats_mail_Parameter* param_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_mail_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_mail.Parameter) */ {
 public:
  proc_i_save_user_mail_Parameter();
  virtual ~proc_i_save_user_mail_Parameter();

  proc_i_save_user_mail_Parameter(const proc_i_save_user_mail_Parameter& from);

  inline proc_i_save_user_mail_Parameter& operator=(const proc_i_save_user_mail_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_mail_Parameter(proc_i_save_user_mail_Parameter&& from) noexcept
    : proc_i_save_user_mail_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_mail_Parameter& operator=(proc_i_save_user_mail_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_mail_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_mail_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_mail_Parameter*>(
               &_proc_i_save_user_mail_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(proc_i_save_user_mail_Parameter* other);
  void Swap(proc_i_save_user_mail_Parameter* other);
  friend void swap(proc_i_save_user_mail_Parameter& a, proc_i_save_user_mail_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_mail_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_save_user_mail_Parameter>(NULL);
  }

  proc_i_save_user_mail_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_mail_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_mail_Parameter& from);
  void MergeFrom(const proc_i_save_user_mail_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_mail_Parameter* other);
  protected:
  explicit proc_i_save_user_mail_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.UserMail p_mail = 1;
  bool has_p_mail() const;
  void clear_p_mail();
  static const int kPMailFieldNumber = 1;
  private:
  const ::db::UserMail& _internal_p_mail() const;
  public:
  const ::db::UserMail& p_mail() const;
  ::db::UserMail* release_p_mail();
  ::db::UserMail* mutable_p_mail();
  void set_allocated_p_mail(::db::UserMail* p_mail);
  void unsafe_arena_set_allocated_p_mail(
      ::db::UserMail* p_mail);
  ::db::UserMail* unsafe_arena_release_p_mail();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_mail.Parameter)
 private:
  void set_has_p_mail();
  void clear_has_p_mail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::UserMail* p_mail_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_save_user_mail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_save_user_mail) */ {
 public:
  proc_i_save_user_mail();
  virtual ~proc_i_save_user_mail();

  proc_i_save_user_mail(const proc_i_save_user_mail& from);

  inline proc_i_save_user_mail& operator=(const proc_i_save_user_mail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_save_user_mail(proc_i_save_user_mail&& from) noexcept
    : proc_i_save_user_mail() {
    *this = ::std::move(from);
  }

  inline proc_i_save_user_mail& operator=(proc_i_save_user_mail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_save_user_mail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_save_user_mail* internal_default_instance() {
    return reinterpret_cast<const proc_i_save_user_mail*>(
               &_proc_i_save_user_mail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(proc_i_save_user_mail* other);
  void Swap(proc_i_save_user_mail* other);
  friend void swap(proc_i_save_user_mail& a, proc_i_save_user_mail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_save_user_mail* New() const final {
    return CreateMaybeMessage<proc_i_save_user_mail>(NULL);
  }

  proc_i_save_user_mail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_save_user_mail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_save_user_mail& from);
  void MergeFrom(const proc_i_save_user_mail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_save_user_mail* other);
  protected:
  explicit proc_i_save_user_mail(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_save_user_mail_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_save_user_mail.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_save_user_mail_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_save_user_mail_Parameter& param() const;
  ::db::proc_i_save_user_mail_Parameter* release_param();
  ::db::proc_i_save_user_mail_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_save_user_mail_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_save_user_mail_Parameter* param);
  ::db::proc_i_save_user_mail_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_save_user_mail)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_save_user_mail_Parameter* param_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameMail) */ {
 public:
  GameMail();
  virtual ~GameMail();

  GameMail(const GameMail& from);

  inline GameMail& operator=(const GameMail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameMail(GameMail&& from) noexcept
    : GameMail() {
    *this = ::std::move(from);
  }

  inline GameMail& operator=(GameMail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameMail* internal_default_instance() {
    return reinterpret_cast<const GameMail*>(
               &_GameMail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(GameMail* other);
  void Swap(GameMail* other);
  friend void swap(GameMail& a, GameMail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameMail* New() const final {
    return CreateMaybeMessage<GameMail>(NULL);
  }

  GameMail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameMail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameMail& from);
  void MergeFrom(const GameMail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameMail* other);
  protected:
  explicit GameMail(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes sender_userid = 4;
  bool has_sender_userid() const;
  void clear_sender_userid();
  static const int kSenderUseridFieldNumber = 4;
  const ::std::string& sender_userid() const;
  void set_sender_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_sender_userid(::std::string&& value);
  #endif
  void set_sender_userid(const char* value);
  void set_sender_userid(const void* value, size_t size);
  ::std::string* mutable_sender_userid();
  ::std::string* release_sender_userid();
  void set_allocated_sender_userid(::std::string* sender_userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_sender_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_sender_userid(
      ::std::string* sender_userid);

  // required bytes sender_role_nick = 5;
  bool has_sender_role_nick() const;
  void clear_sender_role_nick();
  static const int kSenderRoleNickFieldNumber = 5;
  const ::std::string& sender_role_nick() const;
  void set_sender_role_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_sender_role_nick(::std::string&& value);
  #endif
  void set_sender_role_nick(const char* value);
  void set_sender_role_nick(const void* value, size_t size);
  ::std::string* mutable_sender_role_nick();
  ::std::string* release_sender_role_nick();
  void set_allocated_sender_role_nick(::std::string* sender_role_nick);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_sender_role_nick();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_sender_role_nick(
      ::std::string* sender_role_nick);

  // required bytes mailto_userid = 7;
  bool has_mailto_userid() const;
  void clear_mailto_userid();
  static const int kMailtoUseridFieldNumber = 7;
  const ::std::string& mailto_userid() const;
  void set_mailto_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_mailto_userid(::std::string&& value);
  #endif
  void set_mailto_userid(const char* value);
  void set_mailto_userid(const void* value, size_t size);
  ::std::string* mutable_mailto_userid();
  ::std::string* release_mailto_userid();
  void set_allocated_mailto_userid(::std::string* mailto_userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_mailto_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_mailto_userid(
      ::std::string* mailto_userid);

  // required bytes subject = 11;
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 11;
  const ::std::string& subject() const;
  void set_subject(const ::std::string& value);
  #if LANG_CXX11
  void set_subject(::std::string&& value);
  #endif
  void set_subject(const char* value);
  void set_subject(const void* value, size_t size);
  ::std::string* mutable_subject();
  ::std::string* release_subject();
  void set_allocated_subject(::std::string* subject);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_subject();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_subject(
      ::std::string* subject);

  // required bytes content = 12;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 12;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_content(
      ::std::string* content);

  // required bytes attachment = 13;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 13;
  const ::std::string& attachment() const;
  void set_attachment(const ::std::string& value);
  #if LANG_CXX11
  void set_attachment(::std::string&& value);
  #endif
  void set_attachment(const char* value);
  void set_attachment(const void* value, size_t size);
  ::std::string* mutable_attachment();
  ::std::string* release_attachment();
  void set_allocated_attachment(::std::string* attachment);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_attachment();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_attachment(
      ::std::string* attachment);

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required int32 mailtype = 2;
  bool has_mailtype() const;
  void clear_mailtype();
  static const int kMailtypeFieldNumber = 2;
  ::google::protobuf::int32 mailtype() const;
  void set_mailtype(::google::protobuf::int32 value);

  // required int32 sender_type = 3;
  bool has_sender_type() const;
  void clear_sender_type();
  static const int kSenderTypeFieldNumber = 3;
  ::google::protobuf::int32 sender_type() const;
  void set_sender_type(::google::protobuf::int32 value);

  // required int32 mailto_type = 6;
  bool has_mailto_type() const;
  void clear_mailto_type();
  static const int kMailtoTypeFieldNumber = 6;
  ::google::protobuf::int32 mailto_type() const;
  void set_mailto_type(::google::protobuf::int32 value);

  // required int32 mailto_level = 8;
  bool has_mailto_level() const;
  void clear_mailto_level();
  static const int kMailtoLevelFieldNumber = 8;
  ::google::protobuf::int32 mailto_level() const;
  void set_mailto_level(::google::protobuf::int32 value);

  // required int32 ignore_rule = 9;
  bool has_ignore_rule() const;
  void clear_ignore_rule();
  static const int kIgnoreRuleFieldNumber = 9;
  ::google::protobuf::int32 ignore_rule() const;
  void set_ignore_rule(::google::protobuf::int32 value);

  // required sfixed64 createtime = 21;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreatetimeFieldNumber = 21;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // required sfixed64 burntime = 22;
  bool has_burntime() const;
  void clear_burntime();
  static const int kBurntimeFieldNumber = 22;
  ::google::protobuf::int64 burntime() const;
  void set_burntime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameMail)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_mailtype();
  void clear_has_mailtype();
  void set_has_sender_type();
  void clear_has_sender_type();
  void set_has_sender_userid();
  void clear_has_sender_userid();
  void set_has_sender_role_nick();
  void clear_has_sender_role_nick();
  void set_has_mailto_type();
  void clear_has_mailto_type();
  void set_has_mailto_userid();
  void clear_has_mailto_userid();
  void set_has_mailto_level();
  void clear_has_mailto_level();
  void set_has_ignore_rule();
  void clear_has_ignore_rule();
  void set_has_subject();
  void clear_has_subject();
  void set_has_content();
  void clear_has_content();
  void set_has_attachment();
  void clear_has_attachment();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_burntime();
  void clear_has_burntime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sender_userid_;
  ::google::protobuf::internal::ArenaStringPtr sender_role_nick_;
  ::google::protobuf::internal::ArenaStringPtr mailto_userid_;
  ::google::protobuf::internal::ArenaStringPtr subject_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr attachment_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 mailtype_;
  ::google::protobuf::int32 sender_type_;
  ::google::protobuf::int32 mailto_type_;
  ::google::protobuf::int32 mailto_level_;
  ::google::protobuf::int32 ignore_rule_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int64 burntime_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameMailList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameMailList) */ {
 public:
  GameMailList();
  virtual ~GameMailList();

  GameMailList(const GameMailList& from);

  inline GameMailList& operator=(const GameMailList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameMailList(GameMailList&& from) noexcept
    : GameMailList() {
    *this = ::std::move(from);
  }

  inline GameMailList& operator=(GameMailList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMailList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameMailList* internal_default_instance() {
    return reinterpret_cast<const GameMailList*>(
               &_GameMailList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(GameMailList* other);
  void Swap(GameMailList* other);
  friend void swap(GameMailList& a, GameMailList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameMailList* New() const final {
    return CreateMaybeMessage<GameMailList>(NULL);
  }

  GameMailList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameMailList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameMailList& from);
  void MergeFrom(const GameMailList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameMailList* other);
  protected:
  explicit GameMailList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.GameMail list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::GameMail* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::GameMail >*
      mutable_list();
  const ::db::GameMail& list(int index) const;
  ::db::GameMail* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::GameMail >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.GameMailList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::GameMail > list_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_game_mailbox_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_game_mailbox.Parameter) */ {
 public:
  proc_i_load_game_mailbox_Parameter();
  virtual ~proc_i_load_game_mailbox_Parameter();

  proc_i_load_game_mailbox_Parameter(const proc_i_load_game_mailbox_Parameter& from);

  inline proc_i_load_game_mailbox_Parameter& operator=(const proc_i_load_game_mailbox_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_game_mailbox_Parameter(proc_i_load_game_mailbox_Parameter&& from) noexcept
    : proc_i_load_game_mailbox_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_load_game_mailbox_Parameter& operator=(proc_i_load_game_mailbox_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_game_mailbox_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_game_mailbox_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_game_mailbox_Parameter*>(
               &_proc_i_load_game_mailbox_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(proc_i_load_game_mailbox_Parameter* other);
  void Swap(proc_i_load_game_mailbox_Parameter* other);
  friend void swap(proc_i_load_game_mailbox_Parameter& a, proc_i_load_game_mailbox_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_game_mailbox_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_load_game_mailbox_Parameter>(NULL);
  }

  proc_i_load_game_mailbox_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_game_mailbox_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_game_mailbox_Parameter& from);
  void MergeFrom(const proc_i_load_game_mailbox_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_game_mailbox_Parameter* other);
  protected:
  explicit proc_i_load_game_mailbox_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 p_last_topid = 1;
  bool has_p_last_topid() const;
  void clear_p_last_topid();
  static const int kPLastTopidFieldNumber = 1;
  ::google::protobuf::uint64 p_last_topid() const;
  void set_p_last_topid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:db.proc_i_load_game_mailbox.Parameter)
 private:
  void set_has_p_last_topid();
  void clear_has_p_last_topid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 p_last_topid_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_game_mailbox_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_game_mailbox.ReturnRecord) */ {
 public:
  proc_i_load_game_mailbox_ReturnRecord();
  virtual ~proc_i_load_game_mailbox_ReturnRecord();

  proc_i_load_game_mailbox_ReturnRecord(const proc_i_load_game_mailbox_ReturnRecord& from);

  inline proc_i_load_game_mailbox_ReturnRecord& operator=(const proc_i_load_game_mailbox_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_game_mailbox_ReturnRecord(proc_i_load_game_mailbox_ReturnRecord&& from) noexcept
    : proc_i_load_game_mailbox_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_i_load_game_mailbox_ReturnRecord& operator=(proc_i_load_game_mailbox_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_game_mailbox_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_game_mailbox_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_game_mailbox_ReturnRecord*>(
               &_proc_i_load_game_mailbox_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void UnsafeArenaSwap(proc_i_load_game_mailbox_ReturnRecord* other);
  void Swap(proc_i_load_game_mailbox_ReturnRecord* other);
  friend void swap(proc_i_load_game_mailbox_ReturnRecord& a, proc_i_load_game_mailbox_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_game_mailbox_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_i_load_game_mailbox_ReturnRecord>(NULL);
  }

  proc_i_load_game_mailbox_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_game_mailbox_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_game_mailbox_ReturnRecord& from);
  void MergeFrom(const proc_i_load_game_mailbox_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_game_mailbox_ReturnRecord* other);
  protected:
  explicit proc_i_load_game_mailbox_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.GameMail item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  private:
  const ::db::GameMail& _internal_item() const;
  public:
  const ::db::GameMail& item() const;
  ::db::GameMail* release_item();
  ::db::GameMail* mutable_item();
  void set_allocated_item(::db::GameMail* item);
  void unsafe_arena_set_allocated_item(
      ::db::GameMail* item);
  ::db::GameMail* unsafe_arena_release_item();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_game_mailbox.ReturnRecord)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::GameMail* item_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_load_game_mailbox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_load_game_mailbox) */ {
 public:
  proc_i_load_game_mailbox();
  virtual ~proc_i_load_game_mailbox();

  proc_i_load_game_mailbox(const proc_i_load_game_mailbox& from);

  inline proc_i_load_game_mailbox& operator=(const proc_i_load_game_mailbox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_load_game_mailbox(proc_i_load_game_mailbox&& from) noexcept
    : proc_i_load_game_mailbox() {
    *this = ::std::move(from);
  }

  inline proc_i_load_game_mailbox& operator=(proc_i_load_game_mailbox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_load_game_mailbox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_load_game_mailbox* internal_default_instance() {
    return reinterpret_cast<const proc_i_load_game_mailbox*>(
               &_proc_i_load_game_mailbox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void UnsafeArenaSwap(proc_i_load_game_mailbox* other);
  void Swap(proc_i_load_game_mailbox* other);
  friend void swap(proc_i_load_game_mailbox& a, proc_i_load_game_mailbox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_load_game_mailbox* New() const final {
    return CreateMaybeMessage<proc_i_load_game_mailbox>(NULL);
  }

  proc_i_load_game_mailbox* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_load_game_mailbox>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_load_game_mailbox& from);
  void MergeFrom(const proc_i_load_game_mailbox& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_load_game_mailbox* other);
  protected:
  explicit proc_i_load_game_mailbox(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_load_game_mailbox_Parameter Parameter;
  typedef proc_i_load_game_mailbox_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_i_load_game_mailbox.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_i_load_game_mailbox_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_mailbox_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_i_load_game_mailbox_ReturnRecord& return_record_list(int index) const;
  ::db::proc_i_load_game_mailbox_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_mailbox_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_i_load_game_mailbox.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_load_game_mailbox_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_load_game_mailbox_Parameter& param() const;
  ::db::proc_i_load_game_mailbox_Parameter* release_param();
  ::db::proc_i_load_game_mailbox_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_load_game_mailbox_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_load_game_mailbox_Parameter* param);
  ::db::proc_i_load_game_mailbox_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_load_game_mailbox)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_mailbox_ReturnRecord > return_record_list_;
  ::db::proc_i_load_game_mailbox_Parameter* param_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_create_game_mail_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_create_game_mail.Parameter) */ {
 public:
  proc_i_create_game_mail_Parameter();
  virtual ~proc_i_create_game_mail_Parameter();

  proc_i_create_game_mail_Parameter(const proc_i_create_game_mail_Parameter& from);

  inline proc_i_create_game_mail_Parameter& operator=(const proc_i_create_game_mail_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_create_game_mail_Parameter(proc_i_create_game_mail_Parameter&& from) noexcept
    : proc_i_create_game_mail_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_create_game_mail_Parameter& operator=(proc_i_create_game_mail_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_create_game_mail_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_create_game_mail_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_create_game_mail_Parameter*>(
               &_proc_i_create_game_mail_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void UnsafeArenaSwap(proc_i_create_game_mail_Parameter* other);
  void Swap(proc_i_create_game_mail_Parameter* other);
  friend void swap(proc_i_create_game_mail_Parameter& a, proc_i_create_game_mail_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_create_game_mail_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_create_game_mail_Parameter>(NULL);
  }

  proc_i_create_game_mail_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_create_game_mail_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_create_game_mail_Parameter& from);
  void MergeFrom(const proc_i_create_game_mail_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_create_game_mail_Parameter* other);
  protected:
  explicit proc_i_create_game_mail_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes p_subject = 3;
  bool has_p_subject() const;
  void clear_p_subject();
  static const int kPSubjectFieldNumber = 3;
  const ::std::string& p_subject() const;
  void set_p_subject(const ::std::string& value);
  #if LANG_CXX11
  void set_p_subject(::std::string&& value);
  #endif
  void set_p_subject(const char* value);
  void set_p_subject(const void* value, size_t size);
  ::std::string* mutable_p_subject();
  ::std::string* release_p_subject();
  void set_allocated_p_subject(::std::string* p_subject);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_subject();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_subject(
      ::std::string* p_subject);

  // required bytes p_attachment = 4;
  bool has_p_attachment() const;
  void clear_p_attachment();
  static const int kPAttachmentFieldNumber = 4;
  const ::std::string& p_attachment() const;
  void set_p_attachment(const ::std::string& value);
  #if LANG_CXX11
  void set_p_attachment(::std::string&& value);
  #endif
  void set_p_attachment(const char* value);
  void set_p_attachment(const void* value, size_t size);
  ::std::string* mutable_p_attachment();
  ::std::string* release_p_attachment();
  void set_allocated_p_attachment(::std::string* p_attachment);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_attachment();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_attachment(
      ::std::string* p_attachment);

  // required int32 p_subid = 1;
  bool has_p_subid() const;
  void clear_p_subid();
  static const int kPSubidFieldNumber = 1;
  ::google::protobuf::int32 p_subid() const;
  void set_p_subid(::google::protobuf::int32 value);

  // required int32 p_mailtype = 2;
  bool has_p_mailtype() const;
  void clear_p_mailtype();
  static const int kPMailtypeFieldNumber = 2;
  ::google::protobuf::int32 p_mailtype() const;
  void set_p_mailtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.proc_i_create_game_mail.Parameter)
 private:
  void set_has_p_subid();
  void clear_has_p_subid();
  void set_has_p_mailtype();
  void clear_has_p_mailtype();
  void set_has_p_subject();
  void clear_has_p_subject();
  void set_has_p_attachment();
  void clear_has_p_attachment();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr p_subject_;
  ::google::protobuf::internal::ArenaStringPtr p_attachment_;
  ::google::protobuf::int32 p_subid_;
  ::google::protobuf::int32 p_mailtype_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_create_game_mail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_create_game_mail) */ {
 public:
  proc_i_create_game_mail();
  virtual ~proc_i_create_game_mail();

  proc_i_create_game_mail(const proc_i_create_game_mail& from);

  inline proc_i_create_game_mail& operator=(const proc_i_create_game_mail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_create_game_mail(proc_i_create_game_mail&& from) noexcept
    : proc_i_create_game_mail() {
    *this = ::std::move(from);
  }

  inline proc_i_create_game_mail& operator=(proc_i_create_game_mail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_create_game_mail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_create_game_mail* internal_default_instance() {
    return reinterpret_cast<const proc_i_create_game_mail*>(
               &_proc_i_create_game_mail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void UnsafeArenaSwap(proc_i_create_game_mail* other);
  void Swap(proc_i_create_game_mail* other);
  friend void swap(proc_i_create_game_mail& a, proc_i_create_game_mail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_create_game_mail* New() const final {
    return CreateMaybeMessage<proc_i_create_game_mail>(NULL);
  }

  proc_i_create_game_mail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_create_game_mail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_create_game_mail& from);
  void MergeFrom(const proc_i_create_game_mail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_create_game_mail* other);
  protected:
  explicit proc_i_create_game_mail(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_create_game_mail_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_create_game_mail.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_create_game_mail_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_create_game_mail_Parameter& param() const;
  ::db::proc_i_create_game_mail_Parameter* release_param();
  ::db::proc_i_create_game_mail_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_create_game_mail_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_create_game_mail_Parameter* param);
  ::db::proc_i_create_game_mail_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_create_game_mail)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_create_game_mail_Parameter* param_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_create_game_mail_private_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_create_game_mail_private.Parameter) */ {
 public:
  proc_i_create_game_mail_private_Parameter();
  virtual ~proc_i_create_game_mail_private_Parameter();

  proc_i_create_game_mail_private_Parameter(const proc_i_create_game_mail_private_Parameter& from);

  inline proc_i_create_game_mail_private_Parameter& operator=(const proc_i_create_game_mail_private_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_create_game_mail_private_Parameter(proc_i_create_game_mail_private_Parameter&& from) noexcept
    : proc_i_create_game_mail_private_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_i_create_game_mail_private_Parameter& operator=(proc_i_create_game_mail_private_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_create_game_mail_private_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_create_game_mail_private_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_i_create_game_mail_private_Parameter*>(
               &_proc_i_create_game_mail_private_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void UnsafeArenaSwap(proc_i_create_game_mail_private_Parameter* other);
  void Swap(proc_i_create_game_mail_private_Parameter* other);
  friend void swap(proc_i_create_game_mail_private_Parameter& a, proc_i_create_game_mail_private_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_create_game_mail_private_Parameter* New() const final {
    return CreateMaybeMessage<proc_i_create_game_mail_private_Parameter>(NULL);
  }

  proc_i_create_game_mail_private_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_create_game_mail_private_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_create_game_mail_private_Parameter& from);
  void MergeFrom(const proc_i_create_game_mail_private_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_create_game_mail_private_Parameter* other);
  protected:
  explicit proc_i_create_game_mail_private_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes p_userid = 3;
  bool has_p_userid() const;
  void clear_p_userid();
  static const int kPUseridFieldNumber = 3;
  const ::std::string& p_userid() const;
  void set_p_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_p_userid(::std::string&& value);
  #endif
  void set_p_userid(const char* value);
  void set_p_userid(const void* value, size_t size);
  ::std::string* mutable_p_userid();
  ::std::string* release_p_userid();
  void set_allocated_p_userid(::std::string* p_userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_userid(
      ::std::string* p_userid);

  // required bytes p_subject = 4;
  bool has_p_subject() const;
  void clear_p_subject();
  static const int kPSubjectFieldNumber = 4;
  const ::std::string& p_subject() const;
  void set_p_subject(const ::std::string& value);
  #if LANG_CXX11
  void set_p_subject(::std::string&& value);
  #endif
  void set_p_subject(const char* value);
  void set_p_subject(const void* value, size_t size);
  ::std::string* mutable_p_subject();
  ::std::string* release_p_subject();
  void set_allocated_p_subject(::std::string* p_subject);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_subject();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_subject(
      ::std::string* p_subject);

  // required bytes p_content = 5;
  bool has_p_content() const;
  void clear_p_content();
  static const int kPContentFieldNumber = 5;
  const ::std::string& p_content() const;
  void set_p_content(const ::std::string& value);
  #if LANG_CXX11
  void set_p_content(::std::string&& value);
  #endif
  void set_p_content(const char* value);
  void set_p_content(const void* value, size_t size);
  ::std::string* mutable_p_content();
  ::std::string* release_p_content();
  void set_allocated_p_content(::std::string* p_content);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_content();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_content(
      ::std::string* p_content);

  // required bytes p_attachment = 6;
  bool has_p_attachment() const;
  void clear_p_attachment();
  static const int kPAttachmentFieldNumber = 6;
  const ::std::string& p_attachment() const;
  void set_p_attachment(const ::std::string& value);
  #if LANG_CXX11
  void set_p_attachment(::std::string&& value);
  #endif
  void set_p_attachment(const char* value);
  void set_p_attachment(const void* value, size_t size);
  ::std::string* mutable_p_attachment();
  ::std::string* release_p_attachment();
  void set_allocated_p_attachment(::std::string* p_attachment);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_attachment();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_attachment(
      ::std::string* p_attachment);

  // required int32 p_subid = 1;
  bool has_p_subid() const;
  void clear_p_subid();
  static const int kPSubidFieldNumber = 1;
  ::google::protobuf::int32 p_subid() const;
  void set_p_subid(::google::protobuf::int32 value);

  // required int32 p_mailtype = 2;
  bool has_p_mailtype() const;
  void clear_p_mailtype();
  static const int kPMailtypeFieldNumber = 2;
  ::google::protobuf::int32 p_mailtype() const;
  void set_p_mailtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.proc_i_create_game_mail_private.Parameter)
 private:
  void set_has_p_subid();
  void clear_has_p_subid();
  void set_has_p_mailtype();
  void clear_has_p_mailtype();
  void set_has_p_userid();
  void clear_has_p_userid();
  void set_has_p_subject();
  void clear_has_p_subject();
  void set_has_p_content();
  void clear_has_p_content();
  void set_has_p_attachment();
  void clear_has_p_attachment();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr p_userid_;
  ::google::protobuf::internal::ArenaStringPtr p_subject_;
  ::google::protobuf::internal::ArenaStringPtr p_content_;
  ::google::protobuf::internal::ArenaStringPtr p_attachment_;
  ::google::protobuf::int32 p_subid_;
  ::google::protobuf::int32 p_mailtype_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_i_create_game_mail_private : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_i_create_game_mail_private) */ {
 public:
  proc_i_create_game_mail_private();
  virtual ~proc_i_create_game_mail_private();

  proc_i_create_game_mail_private(const proc_i_create_game_mail_private& from);

  inline proc_i_create_game_mail_private& operator=(const proc_i_create_game_mail_private& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_i_create_game_mail_private(proc_i_create_game_mail_private&& from) noexcept
    : proc_i_create_game_mail_private() {
    *this = ::std::move(from);
  }

  inline proc_i_create_game_mail_private& operator=(proc_i_create_game_mail_private&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_i_create_game_mail_private& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_i_create_game_mail_private* internal_default_instance() {
    return reinterpret_cast<const proc_i_create_game_mail_private*>(
               &_proc_i_create_game_mail_private_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void UnsafeArenaSwap(proc_i_create_game_mail_private* other);
  void Swap(proc_i_create_game_mail_private* other);
  friend void swap(proc_i_create_game_mail_private& a, proc_i_create_game_mail_private& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_i_create_game_mail_private* New() const final {
    return CreateMaybeMessage<proc_i_create_game_mail_private>(NULL);
  }

  proc_i_create_game_mail_private* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_i_create_game_mail_private>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_i_create_game_mail_private& from);
  void MergeFrom(const proc_i_create_game_mail_private& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_i_create_game_mail_private* other);
  protected:
  explicit proc_i_create_game_mail_private(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_i_create_game_mail_private_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_i_create_game_mail_private.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_i_create_game_mail_private_Parameter& _internal_param() const;
  public:
  const ::db::proc_i_create_game_mail_private_Parameter& param() const;
  ::db::proc_i_create_game_mail_private_Parameter* release_param();
  ::db::proc_i_create_game_mail_private_Parameter* mutable_param();
  void set_allocated_param(::db::proc_i_create_game_mail_private_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_i_create_game_mail_private_Parameter* param);
  ::db::proc_i_create_game_mail_private_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_i_create_game_mail_private)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_i_create_game_mail_private_Parameter* param_;
  friend struct ::protobuf_StoredProcMail_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigMailbox

// required int32 level = 1;
inline bool ConfigMailbox::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigMailbox::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigMailbox::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigMailbox::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigMailbox::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigMailbox.level)
  return level_;
}
inline void ConfigMailbox::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigMailbox.level)
}

// required int32 capacity = 2;
inline bool ConfigMailbox::has_capacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigMailbox::set_has_capacity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigMailbox::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigMailbox::clear_capacity() {
  capacity_ = 0;
  clear_has_capacity();
}
inline ::google::protobuf::int32 ConfigMailbox::capacity() const {
  // @@protoc_insertion_point(field_get:db.ConfigMailbox.capacity)
  return capacity_;
}
inline void ConfigMailbox::set_capacity(::google::protobuf::int32 value) {
  set_has_capacity();
  capacity_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigMailbox.capacity)
}

// -------------------------------------------------------------------

// ConfigMailboxList

// repeated .db.ConfigMailbox list = 1;
inline int ConfigMailboxList::list_size() const {
  return list_.size();
}
inline void ConfigMailboxList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigMailbox* ConfigMailboxList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigMailboxList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigMailbox >*
ConfigMailboxList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigMailboxList.list)
  return &list_;
}
inline const ::db::ConfigMailbox& ConfigMailboxList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigMailboxList.list)
  return list_.Get(index);
}
inline ::db::ConfigMailbox* ConfigMailboxList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigMailboxList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigMailbox >&
ConfigMailboxList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigMailboxList.list)
  return list_;
}

// -------------------------------------------------------------------

// proc_load_config_mailbox_Parameter

// -------------------------------------------------------------------

// proc_load_config_mailbox_ReturnRecord

// required .db.ConfigMailbox cfg = 1;
inline bool proc_load_config_mailbox_ReturnRecord::has_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_config_mailbox_ReturnRecord::set_has_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_config_mailbox_ReturnRecord::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_config_mailbox_ReturnRecord::clear_cfg() {
  if (cfg_ != NULL) cfg_->Clear();
  clear_has_cfg();
}
inline const ::db::ConfigMailbox& proc_load_config_mailbox_ReturnRecord::_internal_cfg() const {
  return *cfg_;
}
inline const ::db::ConfigMailbox& proc_load_config_mailbox_ReturnRecord::cfg() const {
  const ::db::ConfigMailbox* p = cfg_;
  // @@protoc_insertion_point(field_get:db.proc_load_config_mailbox.ReturnRecord.cfg)
  return p != NULL ? *p : *reinterpret_cast<const ::db::ConfigMailbox*>(
      &::db::_ConfigMailbox_default_instance_);
}
inline ::db::ConfigMailbox* proc_load_config_mailbox_ReturnRecord::release_cfg() {
  // @@protoc_insertion_point(field_release:db.proc_load_config_mailbox.ReturnRecord.cfg)
  clear_has_cfg();
  ::db::ConfigMailbox* temp = cfg_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  cfg_ = NULL;
  return temp;
}
inline ::db::ConfigMailbox* proc_load_config_mailbox_ReturnRecord::unsafe_arena_release_cfg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_config_mailbox.ReturnRecord.cfg)
  clear_has_cfg();
  ::db::ConfigMailbox* temp = cfg_;
  cfg_ = NULL;
  return temp;
}
inline ::db::ConfigMailbox* proc_load_config_mailbox_ReturnRecord::mutable_cfg() {
  set_has_cfg();
  if (cfg_ == NULL) {
    auto* p = CreateMaybeMessage<::db::ConfigMailbox>(GetArenaNoVirtual());
    cfg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_mailbox.ReturnRecord.cfg)
  return cfg_;
}
inline void proc_load_config_mailbox_ReturnRecord::set_allocated_cfg(::db::ConfigMailbox* cfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cfg_;
  }
  if (cfg) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(cfg);
    if (message_arena != submessage_arena) {
      cfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cfg, submessage_arena);
    }
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  cfg_ = cfg;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_config_mailbox.ReturnRecord.cfg)
}

// -------------------------------------------------------------------

// proc_load_config_mailbox

// optional .db.proc_load_config_mailbox.Parameter param = 1;
inline bool proc_load_config_mailbox::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_config_mailbox::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_config_mailbox::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_config_mailbox::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_load_config_mailbox_Parameter& proc_load_config_mailbox::_internal_param() const {
  return *param_;
}
inline const ::db::proc_load_config_mailbox_Parameter& proc_load_config_mailbox::param() const {
  const ::db::proc_load_config_mailbox_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_load_config_mailbox.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_load_config_mailbox_Parameter*>(
      &::db::_proc_load_config_mailbox_Parameter_default_instance_);
}
inline ::db::proc_load_config_mailbox_Parameter* proc_load_config_mailbox::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_load_config_mailbox.param)
  clear_has_param();
  ::db::proc_load_config_mailbox_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_config_mailbox_Parameter* proc_load_config_mailbox::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_config_mailbox.param)
  clear_has_param();
  ::db::proc_load_config_mailbox_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_config_mailbox_Parameter* proc_load_config_mailbox::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_load_config_mailbox_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_mailbox.param)
  return param_;
}
inline void proc_load_config_mailbox::set_allocated_param(::db::proc_load_config_mailbox_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_config_mailbox.param)
}

// repeated .db.proc_load_config_mailbox.ReturnRecord return_record_list = 2;
inline int proc_load_config_mailbox::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_load_config_mailbox::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_load_config_mailbox_ReturnRecord* proc_load_config_mailbox::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_load_config_mailbox.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_mailbox_ReturnRecord >*
proc_load_config_mailbox::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_load_config_mailbox.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_load_config_mailbox_ReturnRecord& proc_load_config_mailbox::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_load_config_mailbox.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_load_config_mailbox_ReturnRecord* proc_load_config_mailbox::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_load_config_mailbox.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_load_config_mailbox_ReturnRecord >&
proc_load_config_mailbox::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_load_config_mailbox.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// UserStatsMail

// required bytes userid = 1;
inline bool UserStatsMail::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatsMail::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatsMail::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatsMail::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserStatsMail::userid() const {
  // @@protoc_insertion_point(field_get:db.UserStatsMail.userid)
  return userid_.Get();
}
inline void UserStatsMail::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserStatsMail.userid)
}
#if LANG_CXX11
inline void UserStatsMail::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserStatsMail.userid)
}
#endif
inline void UserStatsMail::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserStatsMail.userid)
}
inline void UserStatsMail::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserStatsMail.userid)
}
inline ::std::string* UserStatsMail::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserStatsMail.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserStatsMail::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserStatsMail.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserStatsMail::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserStatsMail.userid)
}
inline ::std::string* UserStatsMail::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserStatsMail.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserStatsMail::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserStatsMail.userid)
}

// required int64 topid = 2;
inline bool UserStatsMail::has_topid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserStatsMail::set_has_topid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserStatsMail::clear_has_topid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserStatsMail::clear_topid() {
  topid_ = GOOGLE_LONGLONG(0);
  clear_has_topid();
}
inline ::google::protobuf::int64 UserStatsMail::topid() const {
  // @@protoc_insertion_point(field_get:db.UserStatsMail.topid)
  return topid_;
}
inline void UserStatsMail::set_topid(::google::protobuf::int64 value) {
  set_has_topid();
  topid_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsMail.topid)
}

// required int32 receive_num = 3;
inline bool UserStatsMail::has_receive_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserStatsMail::set_has_receive_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserStatsMail::clear_has_receive_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserStatsMail::clear_receive_num() {
  receive_num_ = 0;
  clear_has_receive_num();
}
inline ::google::protobuf::int32 UserStatsMail::receive_num() const {
  // @@protoc_insertion_point(field_get:db.UserStatsMail.receive_num)
  return receive_num_;
}
inline void UserStatsMail::set_receive_num(::google::protobuf::int32 value) {
  set_has_receive_num();
  receive_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsMail.receive_num)
}

// required sfixed64 month_card_award_time = 4;
inline bool UserStatsMail::has_month_card_award_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserStatsMail::set_has_month_card_award_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserStatsMail::clear_has_month_card_award_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserStatsMail::clear_month_card_award_time() {
  month_card_award_time_ = GOOGLE_LONGLONG(0);
  clear_has_month_card_award_time();
}
inline ::google::protobuf::int64 UserStatsMail::month_card_award_time() const {
  // @@protoc_insertion_point(field_get:db.UserStatsMail.month_card_award_time)
  return month_card_award_time_;
}
inline void UserStatsMail::set_month_card_award_time(::google::protobuf::int64 value) {
  set_has_month_card_award_time();
  month_card_award_time_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsMail.month_card_award_time)
}

// -------------------------------------------------------------------

// UserMail

// required bytes userid = 1;
inline bool UserMail::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMail::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMail::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMail::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserMail::userid() const {
  // @@protoc_insertion_point(field_get:db.UserMail.userid)
  return userid_.Get();
}
inline void UserMail::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserMail.userid)
}
#if LANG_CXX11
inline void UserMail::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserMail.userid)
}
#endif
inline void UserMail::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserMail.userid)
}
inline void UserMail::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserMail.userid)
}
inline ::std::string* UserMail::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserMail.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserMail::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserMail.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserMail::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserMail.userid)
}
inline ::std::string* UserMail::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserMail.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserMail::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserMail.userid)
}

// required int64 mailid = 2;
inline bool UserMail::has_mailid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserMail::set_has_mailid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserMail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserMail::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 UserMail::mailid() const {
  // @@protoc_insertion_point(field_get:db.UserMail.mailid)
  return mailid_;
}
inline void UserMail::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:db.UserMail.mailid)
}

// required int32 mailtype = 3;
inline bool UserMail::has_mailtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserMail::set_has_mailtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserMail::clear_has_mailtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserMail::clear_mailtype() {
  mailtype_ = 0;
  clear_has_mailtype();
}
inline ::google::protobuf::int32 UserMail::mailtype() const {
  // @@protoc_insertion_point(field_get:db.UserMail.mailtype)
  return mailtype_;
}
inline void UserMail::set_mailtype(::google::protobuf::int32 value) {
  set_has_mailtype();
  mailtype_ = value;
  // @@protoc_insertion_point(field_set:db.UserMail.mailtype)
}

// required int32 mailstate = 4;
inline bool UserMail::has_mailstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserMail::set_has_mailstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserMail::clear_has_mailstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserMail::clear_mailstate() {
  mailstate_ = 0;
  clear_has_mailstate();
}
inline ::google::protobuf::int32 UserMail::mailstate() const {
  // @@protoc_insertion_point(field_get:db.UserMail.mailstate)
  return mailstate_;
}
inline void UserMail::set_mailstate(::google::protobuf::int32 value) {
  set_has_mailstate();
  mailstate_ = value;
  // @@protoc_insertion_point(field_set:db.UserMail.mailstate)
}

// required bytes subject = 11;
inline bool UserMail::has_subject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserMail::set_has_subject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserMail::clear_has_subject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserMail::clear_subject() {
  subject_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_subject();
}
inline const ::std::string& UserMail::subject() const {
  // @@protoc_insertion_point(field_get:db.UserMail.subject)
  return subject_.Get();
}
inline void UserMail::set_subject(const ::std::string& value) {
  set_has_subject();
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserMail.subject)
}
#if LANG_CXX11
inline void UserMail::set_subject(::std::string&& value) {
  set_has_subject();
  subject_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserMail.subject)
}
#endif
inline void UserMail::set_subject(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subject();
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserMail.subject)
}
inline void UserMail::set_subject(const void* value,
    size_t size) {
  set_has_subject();
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserMail.subject)
}
inline ::std::string* UserMail::mutable_subject() {
  set_has_subject();
  // @@protoc_insertion_point(field_mutable:db.UserMail.subject)
  return subject_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserMail::release_subject() {
  // @@protoc_insertion_point(field_release:db.UserMail.subject)
  if (!has_subject()) {
    return NULL;
  }
  clear_has_subject();
  return subject_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserMail::set_allocated_subject(::std::string* subject) {
  if (subject != NULL) {
    set_has_subject();
  } else {
    clear_has_subject();
  }
  subject_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subject,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserMail.subject)
}
inline ::std::string* UserMail::unsafe_arena_release_subject() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserMail.subject)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_subject();
  return subject_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserMail::unsafe_arena_set_allocated_subject(
    ::std::string* subject) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (subject != NULL) {
    set_has_subject();
  } else {
    clear_has_subject();
  }
  subject_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      subject, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserMail.subject)
}

// required bytes content = 12;
inline bool UserMail::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserMail::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserMail::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserMail::clear_content() {
  content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_content();
}
inline const ::std::string& UserMail::content() const {
  // @@protoc_insertion_point(field_get:db.UserMail.content)
  return content_.Get();
}
inline void UserMail::set_content(const ::std::string& value) {
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserMail.content)
}
#if LANG_CXX11
inline void UserMail::set_content(::std::string&& value) {
  set_has_content();
  content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserMail.content)
}
#endif
inline void UserMail::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserMail.content)
}
inline void UserMail::set_content(const void* value,
    size_t size) {
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserMail.content)
}
inline ::std::string* UserMail::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:db.UserMail.content)
  return content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserMail::release_content() {
  // @@protoc_insertion_point(field_release:db.UserMail.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserMail::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserMail.content)
}
inline ::std::string* UserMail::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserMail.content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_content();
  return content_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserMail::unsafe_arena_set_allocated_content(
    ::std::string* content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      content, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserMail.content)
}

// required bytes attachment = 13;
inline bool UserMail::has_attachment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserMail::set_has_attachment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserMail::clear_has_attachment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserMail::clear_attachment() {
  attachment_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_attachment();
}
inline const ::std::string& UserMail::attachment() const {
  // @@protoc_insertion_point(field_get:db.UserMail.attachment)
  return attachment_.Get();
}
inline void UserMail::set_attachment(const ::std::string& value) {
  set_has_attachment();
  attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserMail.attachment)
}
#if LANG_CXX11
inline void UserMail::set_attachment(::std::string&& value) {
  set_has_attachment();
  attachment_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserMail.attachment)
}
#endif
inline void UserMail::set_attachment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attachment();
  attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserMail.attachment)
}
inline void UserMail::set_attachment(const void* value,
    size_t size) {
  set_has_attachment();
  attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserMail.attachment)
}
inline ::std::string* UserMail::mutable_attachment() {
  set_has_attachment();
  // @@protoc_insertion_point(field_mutable:db.UserMail.attachment)
  return attachment_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserMail::release_attachment() {
  // @@protoc_insertion_point(field_release:db.UserMail.attachment)
  if (!has_attachment()) {
    return NULL;
  }
  clear_has_attachment();
  return attachment_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserMail::set_allocated_attachment(::std::string* attachment) {
  if (attachment != NULL) {
    set_has_attachment();
  } else {
    clear_has_attachment();
  }
  attachment_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attachment,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserMail.attachment)
}
inline ::std::string* UserMail::unsafe_arena_release_attachment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserMail.attachment)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_attachment();
  return attachment_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserMail::unsafe_arena_set_allocated_attachment(
    ::std::string* attachment) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (attachment != NULL) {
    set_has_attachment();
  } else {
    clear_has_attachment();
  }
  attachment_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      attachment, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserMail.attachment)
}

// required sfixed64 createtime = 21;
inline bool UserMail::has_createtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserMail::set_has_createtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserMail::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserMail::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::int64 UserMail::createtime() const {
  // @@protoc_insertion_point(field_get:db.UserMail.createtime)
  return createtime_;
}
inline void UserMail::set_createtime(::google::protobuf::int64 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:db.UserMail.createtime)
}

// required sfixed64 burntime = 22;
inline bool UserMail::has_burntime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserMail::set_has_burntime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserMail::clear_has_burntime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserMail::clear_burntime() {
  burntime_ = GOOGLE_LONGLONG(0);
  clear_has_burntime();
}
inline ::google::protobuf::int64 UserMail::burntime() const {
  // @@protoc_insertion_point(field_get:db.UserMail.burntime)
  return burntime_;
}
inline void UserMail::set_burntime(::google::protobuf::int64 value) {
  set_has_burntime();
  burntime_ = value;
  // @@protoc_insertion_point(field_set:db.UserMail.burntime)
}

// -------------------------------------------------------------------

// UserMailList

// repeated .db.UserMail list = 1;
inline int UserMailList::list_size() const {
  return list_.size();
}
inline void UserMailList::clear_list() {
  list_.Clear();
}
inline ::db::UserMail* UserMailList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.UserMailList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::UserMail >*
UserMailList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.UserMailList.list)
  return &list_;
}
inline const ::db::UserMail& UserMailList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.UserMailList.list)
  return list_.Get(index);
}
inline ::db::UserMail* UserMailList::add_list() {
  // @@protoc_insertion_point(field_add:db.UserMailList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::UserMail >&
UserMailList::list() const {
  // @@protoc_insertion_point(field_list:db.UserMailList.list)
  return list_;
}

// -------------------------------------------------------------------

// proc_i_load_user_stats_mail_Parameter

// -------------------------------------------------------------------

// proc_i_load_user_stats_mail_ReturnRecord

// required .db.UserStatsMail item = 1;
inline bool proc_i_load_user_stats_mail_ReturnRecord::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_stats_mail_ReturnRecord::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_stats_mail_ReturnRecord::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_stats_mail_ReturnRecord::clear_item() {
  if (item_ != NULL) item_->Clear();
  clear_has_item();
}
inline const ::db::UserStatsMail& proc_i_load_user_stats_mail_ReturnRecord::_internal_item() const {
  return *item_;
}
inline const ::db::UserStatsMail& proc_i_load_user_stats_mail_ReturnRecord::item() const {
  const ::db::UserStatsMail* p = item_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_stats_mail.ReturnRecord.item)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserStatsMail*>(
      &::db::_UserStatsMail_default_instance_);
}
inline ::db::UserStatsMail* proc_i_load_user_stats_mail_ReturnRecord::release_item() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_stats_mail.ReturnRecord.item)
  clear_has_item();
  ::db::UserStatsMail* temp = item_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  item_ = NULL;
  return temp;
}
inline ::db::UserStatsMail* proc_i_load_user_stats_mail_ReturnRecord::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_stats_mail.ReturnRecord.item)
  clear_has_item();
  ::db::UserStatsMail* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::db::UserStatsMail* proc_i_load_user_stats_mail_ReturnRecord::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserStatsMail>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_stats_mail.ReturnRecord.item)
  return item_;
}
inline void proc_i_load_user_stats_mail_ReturnRecord::set_allocated_item(::db::UserStatsMail* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(item);
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
  } else {
    clear_has_item();
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_stats_mail.ReturnRecord.item)
}

// -------------------------------------------------------------------

// proc_i_load_user_stats_mail

// optional .db.proc_i_load_user_stats_mail.Parameter param = 1;
inline bool proc_i_load_user_stats_mail::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_stats_mail::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_stats_mail::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_stats_mail::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_load_user_stats_mail_Parameter& proc_i_load_user_stats_mail::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_load_user_stats_mail_Parameter& proc_i_load_user_stats_mail::param() const {
  const ::db::proc_i_load_user_stats_mail_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_stats_mail.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_load_user_stats_mail_Parameter*>(
      &::db::_proc_i_load_user_stats_mail_Parameter_default_instance_);
}
inline ::db::proc_i_load_user_stats_mail_Parameter* proc_i_load_user_stats_mail::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_stats_mail.param)
  clear_has_param();
  ::db::proc_i_load_user_stats_mail_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_stats_mail_Parameter* proc_i_load_user_stats_mail::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_stats_mail.param)
  clear_has_param();
  ::db::proc_i_load_user_stats_mail_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_stats_mail_Parameter* proc_i_load_user_stats_mail::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_load_user_stats_mail_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_stats_mail.param)
  return param_;
}
inline void proc_i_load_user_stats_mail::set_allocated_param(::db::proc_i_load_user_stats_mail_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_stats_mail.param)
}

// repeated .db.proc_i_load_user_stats_mail.ReturnRecord return_record_list = 2;
inline int proc_i_load_user_stats_mail::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_i_load_user_stats_mail::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_i_load_user_stats_mail_ReturnRecord* proc_i_load_user_stats_mail::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_stats_mail.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_stats_mail_ReturnRecord >*
proc_i_load_user_stats_mail::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_i_load_user_stats_mail.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_i_load_user_stats_mail_ReturnRecord& proc_i_load_user_stats_mail::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_stats_mail.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_i_load_user_stats_mail_ReturnRecord* proc_i_load_user_stats_mail::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_i_load_user_stats_mail.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_stats_mail_ReturnRecord >&
proc_i_load_user_stats_mail::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_i_load_user_stats_mail.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_i_load_user_mails_Parameter

// required bytes p_userid = 1;
inline bool proc_i_load_user_mails_Parameter::has_p_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_mails_Parameter::set_has_p_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_mails_Parameter::clear_has_p_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_mails_Parameter::clear_p_userid() {
  p_userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_userid();
}
inline const ::std::string& proc_i_load_user_mails_Parameter::p_userid() const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_mails.Parameter.p_userid)
  return p_userid_.Get();
}
inline void proc_i_load_user_mails_Parameter::set_p_userid(const ::std::string& value) {
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_i_load_user_mails.Parameter.p_userid)
}
#if LANG_CXX11
inline void proc_i_load_user_mails_Parameter::set_p_userid(::std::string&& value) {
  set_has_p_userid();
  p_userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_i_load_user_mails.Parameter.p_userid)
}
#endif
inline void proc_i_load_user_mails_Parameter::set_p_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_i_load_user_mails.Parameter.p_userid)
}
inline void proc_i_load_user_mails_Parameter::set_p_userid(const void* value,
    size_t size) {
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_i_load_user_mails.Parameter.p_userid)
}
inline ::std::string* proc_i_load_user_mails_Parameter::mutable_p_userid() {
  set_has_p_userid();
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_mails.Parameter.p_userid)
  return p_userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_i_load_user_mails_Parameter::release_p_userid() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_mails.Parameter.p_userid)
  if (!has_p_userid()) {
    return NULL;
  }
  clear_has_p_userid();
  return p_userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_i_load_user_mails_Parameter::set_allocated_p_userid(::std::string* p_userid) {
  if (p_userid != NULL) {
    set_has_p_userid();
  } else {
    clear_has_p_userid();
  }
  p_userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_mails.Parameter.p_userid)
}
inline ::std::string* proc_i_load_user_mails_Parameter::unsafe_arena_release_p_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_mails.Parameter.p_userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_userid();
  return p_userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_i_load_user_mails_Parameter::unsafe_arena_set_allocated_p_userid(
    ::std::string* p_userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_userid != NULL) {
    set_has_p_userid();
  } else {
    clear_has_p_userid();
  }
  p_userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_user_mails.Parameter.p_userid)
}

// -------------------------------------------------------------------

// proc_i_load_user_mails_ReturnRecord

// required .db.UserMail item = 1;
inline bool proc_i_load_user_mails_ReturnRecord::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_mails_ReturnRecord::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_mails_ReturnRecord::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_mails_ReturnRecord::clear_item() {
  if (item_ != NULL) item_->Clear();
  clear_has_item();
}
inline const ::db::UserMail& proc_i_load_user_mails_ReturnRecord::_internal_item() const {
  return *item_;
}
inline const ::db::UserMail& proc_i_load_user_mails_ReturnRecord::item() const {
  const ::db::UserMail* p = item_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_mails.ReturnRecord.item)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserMail*>(
      &::db::_UserMail_default_instance_);
}
inline ::db::UserMail* proc_i_load_user_mails_ReturnRecord::release_item() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_mails.ReturnRecord.item)
  clear_has_item();
  ::db::UserMail* temp = item_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  item_ = NULL;
  return temp;
}
inline ::db::UserMail* proc_i_load_user_mails_ReturnRecord::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_mails.ReturnRecord.item)
  clear_has_item();
  ::db::UserMail* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::db::UserMail* proc_i_load_user_mails_ReturnRecord::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserMail>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_mails.ReturnRecord.item)
  return item_;
}
inline void proc_i_load_user_mails_ReturnRecord::set_allocated_item(::db::UserMail* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(item);
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
  } else {
    clear_has_item();
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_mails.ReturnRecord.item)
}

// -------------------------------------------------------------------

// proc_i_load_user_mails

// optional .db.proc_i_load_user_mails.Parameter param = 1;
inline bool proc_i_load_user_mails::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_user_mails::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_user_mails::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_user_mails::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_load_user_mails_Parameter& proc_i_load_user_mails::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_load_user_mails_Parameter& proc_i_load_user_mails::param() const {
  const ::db::proc_i_load_user_mails_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_mails.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_load_user_mails_Parameter*>(
      &::db::_proc_i_load_user_mails_Parameter_default_instance_);
}
inline ::db::proc_i_load_user_mails_Parameter* proc_i_load_user_mails::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_user_mails.param)
  clear_has_param();
  ::db::proc_i_load_user_mails_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_mails_Parameter* proc_i_load_user_mails::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_user_mails.param)
  clear_has_param();
  ::db::proc_i_load_user_mails_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_user_mails_Parameter* proc_i_load_user_mails::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_load_user_mails_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_mails.param)
  return param_;
}
inline void proc_i_load_user_mails::set_allocated_param(::db::proc_i_load_user_mails_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_user_mails.param)
}

// repeated .db.proc_i_load_user_mails.ReturnRecord return_record_list = 2;
inline int proc_i_load_user_mails::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_i_load_user_mails::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_i_load_user_mails_ReturnRecord* proc_i_load_user_mails::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_user_mails.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_mails_ReturnRecord >*
proc_i_load_user_mails::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_i_load_user_mails.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_i_load_user_mails_ReturnRecord& proc_i_load_user_mails::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_user_mails.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_i_load_user_mails_ReturnRecord* proc_i_load_user_mails::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_i_load_user_mails.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_user_mails_ReturnRecord >&
proc_i_load_user_mails::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_i_load_user_mails.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_i_save_user_stats_mail_Parameter

// required .db.UserStatsMail p_stats_mail = 1;
inline bool proc_i_save_user_stats_mail_Parameter::has_p_stats_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_stats_mail_Parameter::set_has_p_stats_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_stats_mail_Parameter::clear_has_p_stats_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_stats_mail_Parameter::clear_p_stats_mail() {
  if (p_stats_mail_ != NULL) p_stats_mail_->Clear();
  clear_has_p_stats_mail();
}
inline const ::db::UserStatsMail& proc_i_save_user_stats_mail_Parameter::_internal_p_stats_mail() const {
  return *p_stats_mail_;
}
inline const ::db::UserStatsMail& proc_i_save_user_stats_mail_Parameter::p_stats_mail() const {
  const ::db::UserStatsMail* p = p_stats_mail_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_stats_mail.Parameter.p_stats_mail)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserStatsMail*>(
      &::db::_UserStatsMail_default_instance_);
}
inline ::db::UserStatsMail* proc_i_save_user_stats_mail_Parameter::release_p_stats_mail() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_stats_mail.Parameter.p_stats_mail)
  clear_has_p_stats_mail();
  ::db::UserStatsMail* temp = p_stats_mail_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  p_stats_mail_ = NULL;
  return temp;
}
inline ::db::UserStatsMail* proc_i_save_user_stats_mail_Parameter::unsafe_arena_release_p_stats_mail() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_stats_mail.Parameter.p_stats_mail)
  clear_has_p_stats_mail();
  ::db::UserStatsMail* temp = p_stats_mail_;
  p_stats_mail_ = NULL;
  return temp;
}
inline ::db::UserStatsMail* proc_i_save_user_stats_mail_Parameter::mutable_p_stats_mail() {
  set_has_p_stats_mail();
  if (p_stats_mail_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserStatsMail>(GetArenaNoVirtual());
    p_stats_mail_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_stats_mail.Parameter.p_stats_mail)
  return p_stats_mail_;
}
inline void proc_i_save_user_stats_mail_Parameter::set_allocated_p_stats_mail(::db::UserStatsMail* p_stats_mail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete p_stats_mail_;
  }
  if (p_stats_mail) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(p_stats_mail);
    if (message_arena != submessage_arena) {
      p_stats_mail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, p_stats_mail, submessage_arena);
    }
    set_has_p_stats_mail();
  } else {
    clear_has_p_stats_mail();
  }
  p_stats_mail_ = p_stats_mail;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_stats_mail.Parameter.p_stats_mail)
}

// -------------------------------------------------------------------

// proc_i_save_user_stats_mail

// optional .db.proc_i_save_user_stats_mail.Parameter param = 1;
inline bool proc_i_save_user_stats_mail::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_stats_mail::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_stats_mail::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_stats_mail::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_save_user_stats_mail_Parameter& proc_i_save_user_stats_mail::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_save_user_stats_mail_Parameter& proc_i_save_user_stats_mail::param() const {
  const ::db::proc_i_save_user_stats_mail_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_stats_mail.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_save_user_stats_mail_Parameter*>(
      &::db::_proc_i_save_user_stats_mail_Parameter_default_instance_);
}
inline ::db::proc_i_save_user_stats_mail_Parameter* proc_i_save_user_stats_mail::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_stats_mail.param)
  clear_has_param();
  ::db::proc_i_save_user_stats_mail_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_stats_mail_Parameter* proc_i_save_user_stats_mail::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_stats_mail.param)
  clear_has_param();
  ::db::proc_i_save_user_stats_mail_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_stats_mail_Parameter* proc_i_save_user_stats_mail::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_save_user_stats_mail_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_stats_mail.param)
  return param_;
}
inline void proc_i_save_user_stats_mail::set_allocated_param(::db::proc_i_save_user_stats_mail_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_stats_mail.param)
}

// -------------------------------------------------------------------

// proc_i_save_user_mail_Parameter

// required .db.UserMail p_mail = 1;
inline bool proc_i_save_user_mail_Parameter::has_p_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_mail_Parameter::set_has_p_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_mail_Parameter::clear_has_p_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_mail_Parameter::clear_p_mail() {
  if (p_mail_ != NULL) p_mail_->Clear();
  clear_has_p_mail();
}
inline const ::db::UserMail& proc_i_save_user_mail_Parameter::_internal_p_mail() const {
  return *p_mail_;
}
inline const ::db::UserMail& proc_i_save_user_mail_Parameter::p_mail() const {
  const ::db::UserMail* p = p_mail_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_mail.Parameter.p_mail)
  return p != NULL ? *p : *reinterpret_cast<const ::db::UserMail*>(
      &::db::_UserMail_default_instance_);
}
inline ::db::UserMail* proc_i_save_user_mail_Parameter::release_p_mail() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_mail.Parameter.p_mail)
  clear_has_p_mail();
  ::db::UserMail* temp = p_mail_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  p_mail_ = NULL;
  return temp;
}
inline ::db::UserMail* proc_i_save_user_mail_Parameter::unsafe_arena_release_p_mail() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_mail.Parameter.p_mail)
  clear_has_p_mail();
  ::db::UserMail* temp = p_mail_;
  p_mail_ = NULL;
  return temp;
}
inline ::db::UserMail* proc_i_save_user_mail_Parameter::mutable_p_mail() {
  set_has_p_mail();
  if (p_mail_ == NULL) {
    auto* p = CreateMaybeMessage<::db::UserMail>(GetArenaNoVirtual());
    p_mail_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_mail.Parameter.p_mail)
  return p_mail_;
}
inline void proc_i_save_user_mail_Parameter::set_allocated_p_mail(::db::UserMail* p_mail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete p_mail_;
  }
  if (p_mail) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(p_mail);
    if (message_arena != submessage_arena) {
      p_mail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, p_mail, submessage_arena);
    }
    set_has_p_mail();
  } else {
    clear_has_p_mail();
  }
  p_mail_ = p_mail;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_mail.Parameter.p_mail)
}

// -------------------------------------------------------------------

// proc_i_save_user_mail

// optional .db.proc_i_save_user_mail.Parameter param = 1;
inline bool proc_i_save_user_mail::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_save_user_mail::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_save_user_mail::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_save_user_mail::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_save_user_mail_Parameter& proc_i_save_user_mail::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_save_user_mail_Parameter& proc_i_save_user_mail::param() const {
  const ::db::proc_i_save_user_mail_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_save_user_mail.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_save_user_mail_Parameter*>(
      &::db::_proc_i_save_user_mail_Parameter_default_instance_);
}
inline ::db::proc_i_save_user_mail_Parameter* proc_i_save_user_mail::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_save_user_mail.param)
  clear_has_param();
  ::db::proc_i_save_user_mail_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_mail_Parameter* proc_i_save_user_mail::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_save_user_mail.param)
  clear_has_param();
  ::db::proc_i_save_user_mail_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_save_user_mail_Parameter* proc_i_save_user_mail::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_save_user_mail_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_save_user_mail.param)
  return param_;
}
inline void proc_i_save_user_mail::set_allocated_param(::db::proc_i_save_user_mail_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_save_user_mail.param)
}

// -------------------------------------------------------------------

// GameMail

// required uint64 id = 1;
inline bool GameMail::has_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameMail::set_has_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameMail::clear_has_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameMail::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GameMail::id() const {
  // @@protoc_insertion_point(field_get:db.GameMail.id)
  return id_;
}
inline void GameMail::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.GameMail.id)
}

// required int32 mailtype = 2;
inline bool GameMail::has_mailtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameMail::set_has_mailtype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameMail::clear_has_mailtype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameMail::clear_mailtype() {
  mailtype_ = 0;
  clear_has_mailtype();
}
inline ::google::protobuf::int32 GameMail::mailtype() const {
  // @@protoc_insertion_point(field_get:db.GameMail.mailtype)
  return mailtype_;
}
inline void GameMail::set_mailtype(::google::protobuf::int32 value) {
  set_has_mailtype();
  mailtype_ = value;
  // @@protoc_insertion_point(field_set:db.GameMail.mailtype)
}

// required int32 sender_type = 3;
inline bool GameMail::has_sender_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameMail::set_has_sender_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameMail::clear_has_sender_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameMail::clear_sender_type() {
  sender_type_ = 0;
  clear_has_sender_type();
}
inline ::google::protobuf::int32 GameMail::sender_type() const {
  // @@protoc_insertion_point(field_get:db.GameMail.sender_type)
  return sender_type_;
}
inline void GameMail::set_sender_type(::google::protobuf::int32 value) {
  set_has_sender_type();
  sender_type_ = value;
  // @@protoc_insertion_point(field_set:db.GameMail.sender_type)
}

// required bytes sender_userid = 4;
inline bool GameMail::has_sender_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameMail::set_has_sender_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameMail::clear_has_sender_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameMail::clear_sender_userid() {
  sender_userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_sender_userid();
}
inline const ::std::string& GameMail::sender_userid() const {
  // @@protoc_insertion_point(field_get:db.GameMail.sender_userid)
  return sender_userid_.Get();
}
inline void GameMail::set_sender_userid(const ::std::string& value) {
  set_has_sender_userid();
  sender_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameMail.sender_userid)
}
#if LANG_CXX11
inline void GameMail::set_sender_userid(::std::string&& value) {
  set_has_sender_userid();
  sender_userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameMail.sender_userid)
}
#endif
inline void GameMail::set_sender_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sender_userid();
  sender_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameMail.sender_userid)
}
inline void GameMail::set_sender_userid(const void* value,
    size_t size) {
  set_has_sender_userid();
  sender_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameMail.sender_userid)
}
inline ::std::string* GameMail::mutable_sender_userid() {
  set_has_sender_userid();
  // @@protoc_insertion_point(field_mutable:db.GameMail.sender_userid)
  return sender_userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameMail::release_sender_userid() {
  // @@protoc_insertion_point(field_release:db.GameMail.sender_userid)
  if (!has_sender_userid()) {
    return NULL;
  }
  clear_has_sender_userid();
  return sender_userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameMail::set_allocated_sender_userid(::std::string* sender_userid) {
  if (sender_userid != NULL) {
    set_has_sender_userid();
  } else {
    clear_has_sender_userid();
  }
  sender_userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameMail.sender_userid)
}
inline ::std::string* GameMail::unsafe_arena_release_sender_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameMail.sender_userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_sender_userid();
  return sender_userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameMail::unsafe_arena_set_allocated_sender_userid(
    ::std::string* sender_userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sender_userid != NULL) {
    set_has_sender_userid();
  } else {
    clear_has_sender_userid();
  }
  sender_userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sender_userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameMail.sender_userid)
}

// required bytes sender_role_nick = 5;
inline bool GameMail::has_sender_role_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameMail::set_has_sender_role_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameMail::clear_has_sender_role_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameMail::clear_sender_role_nick() {
  sender_role_nick_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_sender_role_nick();
}
inline const ::std::string& GameMail::sender_role_nick() const {
  // @@protoc_insertion_point(field_get:db.GameMail.sender_role_nick)
  return sender_role_nick_.Get();
}
inline void GameMail::set_sender_role_nick(const ::std::string& value) {
  set_has_sender_role_nick();
  sender_role_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameMail.sender_role_nick)
}
#if LANG_CXX11
inline void GameMail::set_sender_role_nick(::std::string&& value) {
  set_has_sender_role_nick();
  sender_role_nick_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameMail.sender_role_nick)
}
#endif
inline void GameMail::set_sender_role_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sender_role_nick();
  sender_role_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameMail.sender_role_nick)
}
inline void GameMail::set_sender_role_nick(const void* value,
    size_t size) {
  set_has_sender_role_nick();
  sender_role_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameMail.sender_role_nick)
}
inline ::std::string* GameMail::mutable_sender_role_nick() {
  set_has_sender_role_nick();
  // @@protoc_insertion_point(field_mutable:db.GameMail.sender_role_nick)
  return sender_role_nick_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameMail::release_sender_role_nick() {
  // @@protoc_insertion_point(field_release:db.GameMail.sender_role_nick)
  if (!has_sender_role_nick()) {
    return NULL;
  }
  clear_has_sender_role_nick();
  return sender_role_nick_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameMail::set_allocated_sender_role_nick(::std::string* sender_role_nick) {
  if (sender_role_nick != NULL) {
    set_has_sender_role_nick();
  } else {
    clear_has_sender_role_nick();
  }
  sender_role_nick_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_role_nick,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameMail.sender_role_nick)
}
inline ::std::string* GameMail::unsafe_arena_release_sender_role_nick() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameMail.sender_role_nick)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_sender_role_nick();
  return sender_role_nick_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameMail::unsafe_arena_set_allocated_sender_role_nick(
    ::std::string* sender_role_nick) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sender_role_nick != NULL) {
    set_has_sender_role_nick();
  } else {
    clear_has_sender_role_nick();
  }
  sender_role_nick_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sender_role_nick, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameMail.sender_role_nick)
}

// required int32 mailto_type = 6;
inline bool GameMail::has_mailto_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GameMail::set_has_mailto_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GameMail::clear_has_mailto_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GameMail::clear_mailto_type() {
  mailto_type_ = 0;
  clear_has_mailto_type();
}
inline ::google::protobuf::int32 GameMail::mailto_type() const {
  // @@protoc_insertion_point(field_get:db.GameMail.mailto_type)
  return mailto_type_;
}
inline void GameMail::set_mailto_type(::google::protobuf::int32 value) {
  set_has_mailto_type();
  mailto_type_ = value;
  // @@protoc_insertion_point(field_set:db.GameMail.mailto_type)
}

// required bytes mailto_userid = 7;
inline bool GameMail::has_mailto_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameMail::set_has_mailto_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameMail::clear_has_mailto_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameMail::clear_mailto_userid() {
  mailto_userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_mailto_userid();
}
inline const ::std::string& GameMail::mailto_userid() const {
  // @@protoc_insertion_point(field_get:db.GameMail.mailto_userid)
  return mailto_userid_.Get();
}
inline void GameMail::set_mailto_userid(const ::std::string& value) {
  set_has_mailto_userid();
  mailto_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameMail.mailto_userid)
}
#if LANG_CXX11
inline void GameMail::set_mailto_userid(::std::string&& value) {
  set_has_mailto_userid();
  mailto_userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameMail.mailto_userid)
}
#endif
inline void GameMail::set_mailto_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mailto_userid();
  mailto_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameMail.mailto_userid)
}
inline void GameMail::set_mailto_userid(const void* value,
    size_t size) {
  set_has_mailto_userid();
  mailto_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameMail.mailto_userid)
}
inline ::std::string* GameMail::mutable_mailto_userid() {
  set_has_mailto_userid();
  // @@protoc_insertion_point(field_mutable:db.GameMail.mailto_userid)
  return mailto_userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameMail::release_mailto_userid() {
  // @@protoc_insertion_point(field_release:db.GameMail.mailto_userid)
  if (!has_mailto_userid()) {
    return NULL;
  }
  clear_has_mailto_userid();
  return mailto_userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameMail::set_allocated_mailto_userid(::std::string* mailto_userid) {
  if (mailto_userid != NULL) {
    set_has_mailto_userid();
  } else {
    clear_has_mailto_userid();
  }
  mailto_userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mailto_userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameMail.mailto_userid)
}
inline ::std::string* GameMail::unsafe_arena_release_mailto_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameMail.mailto_userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_mailto_userid();
  return mailto_userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameMail::unsafe_arena_set_allocated_mailto_userid(
    ::std::string* mailto_userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (mailto_userid != NULL) {
    set_has_mailto_userid();
  } else {
    clear_has_mailto_userid();
  }
  mailto_userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      mailto_userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameMail.mailto_userid)
}

// required int32 mailto_level = 8;
inline bool GameMail::has_mailto_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GameMail::set_has_mailto_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GameMail::clear_has_mailto_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GameMail::clear_mailto_level() {
  mailto_level_ = 0;
  clear_has_mailto_level();
}
inline ::google::protobuf::int32 GameMail::mailto_level() const {
  // @@protoc_insertion_point(field_get:db.GameMail.mailto_level)
  return mailto_level_;
}
inline void GameMail::set_mailto_level(::google::protobuf::int32 value) {
  set_has_mailto_level();
  mailto_level_ = value;
  // @@protoc_insertion_point(field_set:db.GameMail.mailto_level)
}

// required int32 ignore_rule = 9;
inline bool GameMail::has_ignore_rule() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GameMail::set_has_ignore_rule() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GameMail::clear_has_ignore_rule() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GameMail::clear_ignore_rule() {
  ignore_rule_ = 0;
  clear_has_ignore_rule();
}
inline ::google::protobuf::int32 GameMail::ignore_rule() const {
  // @@protoc_insertion_point(field_get:db.GameMail.ignore_rule)
  return ignore_rule_;
}
inline void GameMail::set_ignore_rule(::google::protobuf::int32 value) {
  set_has_ignore_rule();
  ignore_rule_ = value;
  // @@protoc_insertion_point(field_set:db.GameMail.ignore_rule)
}

// required bytes subject = 11;
inline bool GameMail::has_subject() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameMail::set_has_subject() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameMail::clear_has_subject() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameMail::clear_subject() {
  subject_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_subject();
}
inline const ::std::string& GameMail::subject() const {
  // @@protoc_insertion_point(field_get:db.GameMail.subject)
  return subject_.Get();
}
inline void GameMail::set_subject(const ::std::string& value) {
  set_has_subject();
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameMail.subject)
}
#if LANG_CXX11
inline void GameMail::set_subject(::std::string&& value) {
  set_has_subject();
  subject_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameMail.subject)
}
#endif
inline void GameMail::set_subject(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subject();
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameMail.subject)
}
inline void GameMail::set_subject(const void* value,
    size_t size) {
  set_has_subject();
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameMail.subject)
}
inline ::std::string* GameMail::mutable_subject() {
  set_has_subject();
  // @@protoc_insertion_point(field_mutable:db.GameMail.subject)
  return subject_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameMail::release_subject() {
  // @@protoc_insertion_point(field_release:db.GameMail.subject)
  if (!has_subject()) {
    return NULL;
  }
  clear_has_subject();
  return subject_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameMail::set_allocated_subject(::std::string* subject) {
  if (subject != NULL) {
    set_has_subject();
  } else {
    clear_has_subject();
  }
  subject_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subject,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameMail.subject)
}
inline ::std::string* GameMail::unsafe_arena_release_subject() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameMail.subject)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_subject();
  return subject_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameMail::unsafe_arena_set_allocated_subject(
    ::std::string* subject) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (subject != NULL) {
    set_has_subject();
  } else {
    clear_has_subject();
  }
  subject_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      subject, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameMail.subject)
}

// required bytes content = 12;
inline bool GameMail::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameMail::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameMail::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameMail::clear_content() {
  content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_content();
}
inline const ::std::string& GameMail::content() const {
  // @@protoc_insertion_point(field_get:db.GameMail.content)
  return content_.Get();
}
inline void GameMail::set_content(const ::std::string& value) {
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameMail.content)
}
#if LANG_CXX11
inline void GameMail::set_content(::std::string&& value) {
  set_has_content();
  content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameMail.content)
}
#endif
inline void GameMail::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameMail.content)
}
inline void GameMail::set_content(const void* value,
    size_t size) {
  set_has_content();
  content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameMail.content)
}
inline ::std::string* GameMail::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:db.GameMail.content)
  return content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameMail::release_content() {
  // @@protoc_insertion_point(field_release:db.GameMail.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameMail::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameMail.content)
}
inline ::std::string* GameMail::unsafe_arena_release_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameMail.content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_content();
  return content_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameMail::unsafe_arena_set_allocated_content(
    ::std::string* content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      content, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameMail.content)
}

// required bytes attachment = 13;
inline bool GameMail::has_attachment() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameMail::set_has_attachment() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameMail::clear_has_attachment() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameMail::clear_attachment() {
  attachment_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_attachment();
}
inline const ::std::string& GameMail::attachment() const {
  // @@protoc_insertion_point(field_get:db.GameMail.attachment)
  return attachment_.Get();
}
inline void GameMail::set_attachment(const ::std::string& value) {
  set_has_attachment();
  attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameMail.attachment)
}
#if LANG_CXX11
inline void GameMail::set_attachment(::std::string&& value) {
  set_has_attachment();
  attachment_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameMail.attachment)
}
#endif
inline void GameMail::set_attachment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attachment();
  attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameMail.attachment)
}
inline void GameMail::set_attachment(const void* value,
    size_t size) {
  set_has_attachment();
  attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameMail.attachment)
}
inline ::std::string* GameMail::mutable_attachment() {
  set_has_attachment();
  // @@protoc_insertion_point(field_mutable:db.GameMail.attachment)
  return attachment_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameMail::release_attachment() {
  // @@protoc_insertion_point(field_release:db.GameMail.attachment)
  if (!has_attachment()) {
    return NULL;
  }
  clear_has_attachment();
  return attachment_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameMail::set_allocated_attachment(::std::string* attachment) {
  if (attachment != NULL) {
    set_has_attachment();
  } else {
    clear_has_attachment();
  }
  attachment_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attachment,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameMail.attachment)
}
inline ::std::string* GameMail::unsafe_arena_release_attachment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameMail.attachment)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_attachment();
  return attachment_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameMail::unsafe_arena_set_allocated_attachment(
    ::std::string* attachment) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (attachment != NULL) {
    set_has_attachment();
  } else {
    clear_has_attachment();
  }
  attachment_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      attachment, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameMail.attachment)
}

// required sfixed64 createtime = 21;
inline bool GameMail::has_createtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GameMail::set_has_createtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GameMail::clear_has_createtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GameMail::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::int64 GameMail::createtime() const {
  // @@protoc_insertion_point(field_get:db.GameMail.createtime)
  return createtime_;
}
inline void GameMail::set_createtime(::google::protobuf::int64 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:db.GameMail.createtime)
}

// required sfixed64 burntime = 22;
inline bool GameMail::has_burntime() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GameMail::set_has_burntime() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GameMail::clear_has_burntime() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GameMail::clear_burntime() {
  burntime_ = GOOGLE_LONGLONG(0);
  clear_has_burntime();
}
inline ::google::protobuf::int64 GameMail::burntime() const {
  // @@protoc_insertion_point(field_get:db.GameMail.burntime)
  return burntime_;
}
inline void GameMail::set_burntime(::google::protobuf::int64 value) {
  set_has_burntime();
  burntime_ = value;
  // @@protoc_insertion_point(field_set:db.GameMail.burntime)
}

// -------------------------------------------------------------------

// GameMailList

// repeated .db.GameMail list = 1;
inline int GameMailList::list_size() const {
  return list_.size();
}
inline void GameMailList::clear_list() {
  list_.Clear();
}
inline ::db::GameMail* GameMailList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.GameMailList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::GameMail >*
GameMailList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.GameMailList.list)
  return &list_;
}
inline const ::db::GameMail& GameMailList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.GameMailList.list)
  return list_.Get(index);
}
inline ::db::GameMail* GameMailList::add_list() {
  // @@protoc_insertion_point(field_add:db.GameMailList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::GameMail >&
GameMailList::list() const {
  // @@protoc_insertion_point(field_list:db.GameMailList.list)
  return list_;
}

// -------------------------------------------------------------------

// proc_i_load_game_mailbox_Parameter

// required uint64 p_last_topid = 1;
inline bool proc_i_load_game_mailbox_Parameter::has_p_last_topid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_game_mailbox_Parameter::set_has_p_last_topid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_game_mailbox_Parameter::clear_has_p_last_topid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_game_mailbox_Parameter::clear_p_last_topid() {
  p_last_topid_ = GOOGLE_ULONGLONG(0);
  clear_has_p_last_topid();
}
inline ::google::protobuf::uint64 proc_i_load_game_mailbox_Parameter::p_last_topid() const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_game_mailbox.Parameter.p_last_topid)
  return p_last_topid_;
}
inline void proc_i_load_game_mailbox_Parameter::set_p_last_topid(::google::protobuf::uint64 value) {
  set_has_p_last_topid();
  p_last_topid_ = value;
  // @@protoc_insertion_point(field_set:db.proc_i_load_game_mailbox.Parameter.p_last_topid)
}

// -------------------------------------------------------------------

// proc_i_load_game_mailbox_ReturnRecord

// required .db.GameMail item = 1;
inline bool proc_i_load_game_mailbox_ReturnRecord::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_game_mailbox_ReturnRecord::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_game_mailbox_ReturnRecord::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_game_mailbox_ReturnRecord::clear_item() {
  if (item_ != NULL) item_->Clear();
  clear_has_item();
}
inline const ::db::GameMail& proc_i_load_game_mailbox_ReturnRecord::_internal_item() const {
  return *item_;
}
inline const ::db::GameMail& proc_i_load_game_mailbox_ReturnRecord::item() const {
  const ::db::GameMail* p = item_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_game_mailbox.ReturnRecord.item)
  return p != NULL ? *p : *reinterpret_cast<const ::db::GameMail*>(
      &::db::_GameMail_default_instance_);
}
inline ::db::GameMail* proc_i_load_game_mailbox_ReturnRecord::release_item() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_game_mailbox.ReturnRecord.item)
  clear_has_item();
  ::db::GameMail* temp = item_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  item_ = NULL;
  return temp;
}
inline ::db::GameMail* proc_i_load_game_mailbox_ReturnRecord::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_game_mailbox.ReturnRecord.item)
  clear_has_item();
  ::db::GameMail* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::db::GameMail* proc_i_load_game_mailbox_ReturnRecord::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::db::GameMail>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_game_mailbox.ReturnRecord.item)
  return item_;
}
inline void proc_i_load_game_mailbox_ReturnRecord::set_allocated_item(::db::GameMail* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(item);
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
  } else {
    clear_has_item();
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_game_mailbox.ReturnRecord.item)
}

// -------------------------------------------------------------------

// proc_i_load_game_mailbox

// optional .db.proc_i_load_game_mailbox.Parameter param = 1;
inline bool proc_i_load_game_mailbox::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_load_game_mailbox::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_load_game_mailbox::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_load_game_mailbox::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_load_game_mailbox_Parameter& proc_i_load_game_mailbox::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_load_game_mailbox_Parameter& proc_i_load_game_mailbox::param() const {
  const ::db::proc_i_load_game_mailbox_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_load_game_mailbox.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_load_game_mailbox_Parameter*>(
      &::db::_proc_i_load_game_mailbox_Parameter_default_instance_);
}
inline ::db::proc_i_load_game_mailbox_Parameter* proc_i_load_game_mailbox::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_load_game_mailbox.param)
  clear_has_param();
  ::db::proc_i_load_game_mailbox_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_game_mailbox_Parameter* proc_i_load_game_mailbox::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_load_game_mailbox.param)
  clear_has_param();
  ::db::proc_i_load_game_mailbox_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_load_game_mailbox_Parameter* proc_i_load_game_mailbox::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_load_game_mailbox_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_game_mailbox.param)
  return param_;
}
inline void proc_i_load_game_mailbox::set_allocated_param(::db::proc_i_load_game_mailbox_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_load_game_mailbox.param)
}

// repeated .db.proc_i_load_game_mailbox.ReturnRecord return_record_list = 2;
inline int proc_i_load_game_mailbox::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_i_load_game_mailbox::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_i_load_game_mailbox_ReturnRecord* proc_i_load_game_mailbox::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_i_load_game_mailbox.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_mailbox_ReturnRecord >*
proc_i_load_game_mailbox::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_i_load_game_mailbox.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_i_load_game_mailbox_ReturnRecord& proc_i_load_game_mailbox::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_i_load_game_mailbox.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_i_load_game_mailbox_ReturnRecord* proc_i_load_game_mailbox::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_i_load_game_mailbox.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_i_load_game_mailbox_ReturnRecord >&
proc_i_load_game_mailbox::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_i_load_game_mailbox.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_i_create_game_mail_Parameter

// required int32 p_subid = 1;
inline bool proc_i_create_game_mail_Parameter::has_p_subid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void proc_i_create_game_mail_Parameter::set_has_p_subid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void proc_i_create_game_mail_Parameter::clear_has_p_subid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void proc_i_create_game_mail_Parameter::clear_p_subid() {
  p_subid_ = 0;
  clear_has_p_subid();
}
inline ::google::protobuf::int32 proc_i_create_game_mail_Parameter::p_subid() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail.Parameter.p_subid)
  return p_subid_;
}
inline void proc_i_create_game_mail_Parameter::set_p_subid(::google::protobuf::int32 value) {
  set_has_p_subid();
  p_subid_ = value;
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail.Parameter.p_subid)
}

// required int32 p_mailtype = 2;
inline bool proc_i_create_game_mail_Parameter::has_p_mailtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void proc_i_create_game_mail_Parameter::set_has_p_mailtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void proc_i_create_game_mail_Parameter::clear_has_p_mailtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void proc_i_create_game_mail_Parameter::clear_p_mailtype() {
  p_mailtype_ = 0;
  clear_has_p_mailtype();
}
inline ::google::protobuf::int32 proc_i_create_game_mail_Parameter::p_mailtype() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail.Parameter.p_mailtype)
  return p_mailtype_;
}
inline void proc_i_create_game_mail_Parameter::set_p_mailtype(::google::protobuf::int32 value) {
  set_has_p_mailtype();
  p_mailtype_ = value;
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail.Parameter.p_mailtype)
}

// required bytes p_subject = 3;
inline bool proc_i_create_game_mail_Parameter::has_p_subject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_create_game_mail_Parameter::set_has_p_subject() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_create_game_mail_Parameter::clear_has_p_subject() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_create_game_mail_Parameter::clear_p_subject() {
  p_subject_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_subject();
}
inline const ::std::string& proc_i_create_game_mail_Parameter::p_subject() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail.Parameter.p_subject)
  return p_subject_.Get();
}
inline void proc_i_create_game_mail_Parameter::set_p_subject(const ::std::string& value) {
  set_has_p_subject();
  p_subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail.Parameter.p_subject)
}
#if LANG_CXX11
inline void proc_i_create_game_mail_Parameter::set_p_subject(::std::string&& value) {
  set_has_p_subject();
  p_subject_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_i_create_game_mail.Parameter.p_subject)
}
#endif
inline void proc_i_create_game_mail_Parameter::set_p_subject(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_subject();
  p_subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_i_create_game_mail.Parameter.p_subject)
}
inline void proc_i_create_game_mail_Parameter::set_p_subject(const void* value,
    size_t size) {
  set_has_p_subject();
  p_subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_i_create_game_mail.Parameter.p_subject)
}
inline ::std::string* proc_i_create_game_mail_Parameter::mutable_p_subject() {
  set_has_p_subject();
  // @@protoc_insertion_point(field_mutable:db.proc_i_create_game_mail.Parameter.p_subject)
  return p_subject_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_i_create_game_mail_Parameter::release_p_subject() {
  // @@protoc_insertion_point(field_release:db.proc_i_create_game_mail.Parameter.p_subject)
  if (!has_p_subject()) {
    return NULL;
  }
  clear_has_p_subject();
  return p_subject_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_Parameter::set_allocated_p_subject(::std::string* p_subject) {
  if (p_subject != NULL) {
    set_has_p_subject();
  } else {
    clear_has_p_subject();
  }
  p_subject_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_subject,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_create_game_mail.Parameter.p_subject)
}
inline ::std::string* proc_i_create_game_mail_Parameter::unsafe_arena_release_p_subject() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_create_game_mail.Parameter.p_subject)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_subject();
  return p_subject_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_Parameter::unsafe_arena_set_allocated_p_subject(
    ::std::string* p_subject) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_subject != NULL) {
    set_has_p_subject();
  } else {
    clear_has_p_subject();
  }
  p_subject_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_subject, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_create_game_mail.Parameter.p_subject)
}

// required bytes p_attachment = 4;
inline bool proc_i_create_game_mail_Parameter::has_p_attachment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void proc_i_create_game_mail_Parameter::set_has_p_attachment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void proc_i_create_game_mail_Parameter::clear_has_p_attachment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void proc_i_create_game_mail_Parameter::clear_p_attachment() {
  p_attachment_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_attachment();
}
inline const ::std::string& proc_i_create_game_mail_Parameter::p_attachment() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail.Parameter.p_attachment)
  return p_attachment_.Get();
}
inline void proc_i_create_game_mail_Parameter::set_p_attachment(const ::std::string& value) {
  set_has_p_attachment();
  p_attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail.Parameter.p_attachment)
}
#if LANG_CXX11
inline void proc_i_create_game_mail_Parameter::set_p_attachment(::std::string&& value) {
  set_has_p_attachment();
  p_attachment_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_i_create_game_mail.Parameter.p_attachment)
}
#endif
inline void proc_i_create_game_mail_Parameter::set_p_attachment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_attachment();
  p_attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_i_create_game_mail.Parameter.p_attachment)
}
inline void proc_i_create_game_mail_Parameter::set_p_attachment(const void* value,
    size_t size) {
  set_has_p_attachment();
  p_attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_i_create_game_mail.Parameter.p_attachment)
}
inline ::std::string* proc_i_create_game_mail_Parameter::mutable_p_attachment() {
  set_has_p_attachment();
  // @@protoc_insertion_point(field_mutable:db.proc_i_create_game_mail.Parameter.p_attachment)
  return p_attachment_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_i_create_game_mail_Parameter::release_p_attachment() {
  // @@protoc_insertion_point(field_release:db.proc_i_create_game_mail.Parameter.p_attachment)
  if (!has_p_attachment()) {
    return NULL;
  }
  clear_has_p_attachment();
  return p_attachment_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_Parameter::set_allocated_p_attachment(::std::string* p_attachment) {
  if (p_attachment != NULL) {
    set_has_p_attachment();
  } else {
    clear_has_p_attachment();
  }
  p_attachment_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_attachment,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_create_game_mail.Parameter.p_attachment)
}
inline ::std::string* proc_i_create_game_mail_Parameter::unsafe_arena_release_p_attachment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_create_game_mail.Parameter.p_attachment)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_attachment();
  return p_attachment_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_Parameter::unsafe_arena_set_allocated_p_attachment(
    ::std::string* p_attachment) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_attachment != NULL) {
    set_has_p_attachment();
  } else {
    clear_has_p_attachment();
  }
  p_attachment_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_attachment, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_create_game_mail.Parameter.p_attachment)
}

// -------------------------------------------------------------------

// proc_i_create_game_mail

// optional .db.proc_i_create_game_mail.Parameter param = 1;
inline bool proc_i_create_game_mail::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_create_game_mail::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_create_game_mail::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_create_game_mail::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_create_game_mail_Parameter& proc_i_create_game_mail::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_create_game_mail_Parameter& proc_i_create_game_mail::param() const {
  const ::db::proc_i_create_game_mail_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_create_game_mail_Parameter*>(
      &::db::_proc_i_create_game_mail_Parameter_default_instance_);
}
inline ::db::proc_i_create_game_mail_Parameter* proc_i_create_game_mail::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_create_game_mail.param)
  clear_has_param();
  ::db::proc_i_create_game_mail_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_create_game_mail_Parameter* proc_i_create_game_mail::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_create_game_mail.param)
  clear_has_param();
  ::db::proc_i_create_game_mail_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_create_game_mail_Parameter* proc_i_create_game_mail::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_create_game_mail_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_create_game_mail.param)
  return param_;
}
inline void proc_i_create_game_mail::set_allocated_param(::db::proc_i_create_game_mail_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_create_game_mail.param)
}

// -------------------------------------------------------------------

// proc_i_create_game_mail_private_Parameter

// required int32 p_subid = 1;
inline bool proc_i_create_game_mail_private_Parameter::has_p_subid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void proc_i_create_game_mail_private_Parameter::set_has_p_subid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_has_p_subid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_p_subid() {
  p_subid_ = 0;
  clear_has_p_subid();
}
inline ::google::protobuf::int32 proc_i_create_game_mail_private_Parameter::p_subid() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail_private.Parameter.p_subid)
  return p_subid_;
}
inline void proc_i_create_game_mail_private_Parameter::set_p_subid(::google::protobuf::int32 value) {
  set_has_p_subid();
  p_subid_ = value;
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail_private.Parameter.p_subid)
}

// required int32 p_mailtype = 2;
inline bool proc_i_create_game_mail_private_Parameter::has_p_mailtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void proc_i_create_game_mail_private_Parameter::set_has_p_mailtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_has_p_mailtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_p_mailtype() {
  p_mailtype_ = 0;
  clear_has_p_mailtype();
}
inline ::google::protobuf::int32 proc_i_create_game_mail_private_Parameter::p_mailtype() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail_private.Parameter.p_mailtype)
  return p_mailtype_;
}
inline void proc_i_create_game_mail_private_Parameter::set_p_mailtype(::google::protobuf::int32 value) {
  set_has_p_mailtype();
  p_mailtype_ = value;
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail_private.Parameter.p_mailtype)
}

// required bytes p_userid = 3;
inline bool proc_i_create_game_mail_private_Parameter::has_p_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_create_game_mail_private_Parameter::set_has_p_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_has_p_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_p_userid() {
  p_userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_userid();
}
inline const ::std::string& proc_i_create_game_mail_private_Parameter::p_userid() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail_private.Parameter.p_userid)
  return p_userid_.Get();
}
inline void proc_i_create_game_mail_private_Parameter::set_p_userid(const ::std::string& value) {
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail_private.Parameter.p_userid)
}
#if LANG_CXX11
inline void proc_i_create_game_mail_private_Parameter::set_p_userid(::std::string&& value) {
  set_has_p_userid();
  p_userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_i_create_game_mail_private.Parameter.p_userid)
}
#endif
inline void proc_i_create_game_mail_private_Parameter::set_p_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_i_create_game_mail_private.Parameter.p_userid)
}
inline void proc_i_create_game_mail_private_Parameter::set_p_userid(const void* value,
    size_t size) {
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_i_create_game_mail_private.Parameter.p_userid)
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::mutable_p_userid() {
  set_has_p_userid();
  // @@protoc_insertion_point(field_mutable:db.proc_i_create_game_mail_private.Parameter.p_userid)
  return p_userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::release_p_userid() {
  // @@protoc_insertion_point(field_release:db.proc_i_create_game_mail_private.Parameter.p_userid)
  if (!has_p_userid()) {
    return NULL;
  }
  clear_has_p_userid();
  return p_userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_private_Parameter::set_allocated_p_userid(::std::string* p_userid) {
  if (p_userid != NULL) {
    set_has_p_userid();
  } else {
    clear_has_p_userid();
  }
  p_userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_create_game_mail_private.Parameter.p_userid)
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::unsafe_arena_release_p_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_create_game_mail_private.Parameter.p_userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_userid();
  return p_userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_private_Parameter::unsafe_arena_set_allocated_p_userid(
    ::std::string* p_userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_userid != NULL) {
    set_has_p_userid();
  } else {
    clear_has_p_userid();
  }
  p_userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_create_game_mail_private.Parameter.p_userid)
}

// required bytes p_subject = 4;
inline bool proc_i_create_game_mail_private_Parameter::has_p_subject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void proc_i_create_game_mail_private_Parameter::set_has_p_subject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_has_p_subject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_p_subject() {
  p_subject_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_subject();
}
inline const ::std::string& proc_i_create_game_mail_private_Parameter::p_subject() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail_private.Parameter.p_subject)
  return p_subject_.Get();
}
inline void proc_i_create_game_mail_private_Parameter::set_p_subject(const ::std::string& value) {
  set_has_p_subject();
  p_subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail_private.Parameter.p_subject)
}
#if LANG_CXX11
inline void proc_i_create_game_mail_private_Parameter::set_p_subject(::std::string&& value) {
  set_has_p_subject();
  p_subject_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_i_create_game_mail_private.Parameter.p_subject)
}
#endif
inline void proc_i_create_game_mail_private_Parameter::set_p_subject(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_subject();
  p_subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_i_create_game_mail_private.Parameter.p_subject)
}
inline void proc_i_create_game_mail_private_Parameter::set_p_subject(const void* value,
    size_t size) {
  set_has_p_subject();
  p_subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_i_create_game_mail_private.Parameter.p_subject)
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::mutable_p_subject() {
  set_has_p_subject();
  // @@protoc_insertion_point(field_mutable:db.proc_i_create_game_mail_private.Parameter.p_subject)
  return p_subject_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::release_p_subject() {
  // @@protoc_insertion_point(field_release:db.proc_i_create_game_mail_private.Parameter.p_subject)
  if (!has_p_subject()) {
    return NULL;
  }
  clear_has_p_subject();
  return p_subject_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_private_Parameter::set_allocated_p_subject(::std::string* p_subject) {
  if (p_subject != NULL) {
    set_has_p_subject();
  } else {
    clear_has_p_subject();
  }
  p_subject_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_subject,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_create_game_mail_private.Parameter.p_subject)
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::unsafe_arena_release_p_subject() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_create_game_mail_private.Parameter.p_subject)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_subject();
  return p_subject_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_private_Parameter::unsafe_arena_set_allocated_p_subject(
    ::std::string* p_subject) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_subject != NULL) {
    set_has_p_subject();
  } else {
    clear_has_p_subject();
  }
  p_subject_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_subject, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_create_game_mail_private.Parameter.p_subject)
}

// required bytes p_content = 5;
inline bool proc_i_create_game_mail_private_Parameter::has_p_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void proc_i_create_game_mail_private_Parameter::set_has_p_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_has_p_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_p_content() {
  p_content_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_content();
}
inline const ::std::string& proc_i_create_game_mail_private_Parameter::p_content() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail_private.Parameter.p_content)
  return p_content_.Get();
}
inline void proc_i_create_game_mail_private_Parameter::set_p_content(const ::std::string& value) {
  set_has_p_content();
  p_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail_private.Parameter.p_content)
}
#if LANG_CXX11
inline void proc_i_create_game_mail_private_Parameter::set_p_content(::std::string&& value) {
  set_has_p_content();
  p_content_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_i_create_game_mail_private.Parameter.p_content)
}
#endif
inline void proc_i_create_game_mail_private_Parameter::set_p_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_content();
  p_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_i_create_game_mail_private.Parameter.p_content)
}
inline void proc_i_create_game_mail_private_Parameter::set_p_content(const void* value,
    size_t size) {
  set_has_p_content();
  p_content_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_i_create_game_mail_private.Parameter.p_content)
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::mutable_p_content() {
  set_has_p_content();
  // @@protoc_insertion_point(field_mutable:db.proc_i_create_game_mail_private.Parameter.p_content)
  return p_content_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::release_p_content() {
  // @@protoc_insertion_point(field_release:db.proc_i_create_game_mail_private.Parameter.p_content)
  if (!has_p_content()) {
    return NULL;
  }
  clear_has_p_content();
  return p_content_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_private_Parameter::set_allocated_p_content(::std::string* p_content) {
  if (p_content != NULL) {
    set_has_p_content();
  } else {
    clear_has_p_content();
  }
  p_content_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_content,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_create_game_mail_private.Parameter.p_content)
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::unsafe_arena_release_p_content() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_create_game_mail_private.Parameter.p_content)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_content();
  return p_content_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_private_Parameter::unsafe_arena_set_allocated_p_content(
    ::std::string* p_content) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_content != NULL) {
    set_has_p_content();
  } else {
    clear_has_p_content();
  }
  p_content_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_content, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_create_game_mail_private.Parameter.p_content)
}

// required bytes p_attachment = 6;
inline bool proc_i_create_game_mail_private_Parameter::has_p_attachment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void proc_i_create_game_mail_private_Parameter::set_has_p_attachment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_has_p_attachment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void proc_i_create_game_mail_private_Parameter::clear_p_attachment() {
  p_attachment_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_attachment();
}
inline const ::std::string& proc_i_create_game_mail_private_Parameter::p_attachment() const {
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail_private.Parameter.p_attachment)
  return p_attachment_.Get();
}
inline void proc_i_create_game_mail_private_Parameter::set_p_attachment(const ::std::string& value) {
  set_has_p_attachment();
  p_attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_i_create_game_mail_private.Parameter.p_attachment)
}
#if LANG_CXX11
inline void proc_i_create_game_mail_private_Parameter::set_p_attachment(::std::string&& value) {
  set_has_p_attachment();
  p_attachment_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_i_create_game_mail_private.Parameter.p_attachment)
}
#endif
inline void proc_i_create_game_mail_private_Parameter::set_p_attachment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_attachment();
  p_attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_i_create_game_mail_private.Parameter.p_attachment)
}
inline void proc_i_create_game_mail_private_Parameter::set_p_attachment(const void* value,
    size_t size) {
  set_has_p_attachment();
  p_attachment_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_i_create_game_mail_private.Parameter.p_attachment)
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::mutable_p_attachment() {
  set_has_p_attachment();
  // @@protoc_insertion_point(field_mutable:db.proc_i_create_game_mail_private.Parameter.p_attachment)
  return p_attachment_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::release_p_attachment() {
  // @@protoc_insertion_point(field_release:db.proc_i_create_game_mail_private.Parameter.p_attachment)
  if (!has_p_attachment()) {
    return NULL;
  }
  clear_has_p_attachment();
  return p_attachment_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_private_Parameter::set_allocated_p_attachment(::std::string* p_attachment) {
  if (p_attachment != NULL) {
    set_has_p_attachment();
  } else {
    clear_has_p_attachment();
  }
  p_attachment_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_attachment,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_create_game_mail_private.Parameter.p_attachment)
}
inline ::std::string* proc_i_create_game_mail_private_Parameter::unsafe_arena_release_p_attachment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_create_game_mail_private.Parameter.p_attachment)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_attachment();
  return p_attachment_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_i_create_game_mail_private_Parameter::unsafe_arena_set_allocated_p_attachment(
    ::std::string* p_attachment) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_attachment != NULL) {
    set_has_p_attachment();
  } else {
    clear_has_p_attachment();
  }
  p_attachment_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_attachment, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_create_game_mail_private.Parameter.p_attachment)
}

// -------------------------------------------------------------------

// proc_i_create_game_mail_private

// optional .db.proc_i_create_game_mail_private.Parameter param = 1;
inline bool proc_i_create_game_mail_private::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_i_create_game_mail_private::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_i_create_game_mail_private::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_i_create_game_mail_private::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_i_create_game_mail_private_Parameter& proc_i_create_game_mail_private::_internal_param() const {
  return *param_;
}
inline const ::db::proc_i_create_game_mail_private_Parameter& proc_i_create_game_mail_private::param() const {
  const ::db::proc_i_create_game_mail_private_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_i_create_game_mail_private.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_i_create_game_mail_private_Parameter*>(
      &::db::_proc_i_create_game_mail_private_Parameter_default_instance_);
}
inline ::db::proc_i_create_game_mail_private_Parameter* proc_i_create_game_mail_private::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_i_create_game_mail_private.param)
  clear_has_param();
  ::db::proc_i_create_game_mail_private_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_create_game_mail_private_Parameter* proc_i_create_game_mail_private::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_i_create_game_mail_private.param)
  clear_has_param();
  ::db::proc_i_create_game_mail_private_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_i_create_game_mail_private_Parameter* proc_i_create_game_mail_private::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_i_create_game_mail_private_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_i_create_game_mail_private.param)
  return param_;
}
inline void proc_i_create_game_mail_private::set_allocated_param(::db::proc_i_create_game_mail_private_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_i_create_game_mail_private.param)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::db::GAME_MAIL_FROM_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::db::GAME_MAIL_FROM_TYPE>() {
  return ::db::GAME_MAIL_FROM_TYPE_descriptor();
}
template <> struct is_proto_enum< ::db::GAME_MAIL_TO_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::db::GAME_MAIL_TO_TYPE>() {
  return ::db::GAME_MAIL_TO_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_StoredProcMail_2eproto
