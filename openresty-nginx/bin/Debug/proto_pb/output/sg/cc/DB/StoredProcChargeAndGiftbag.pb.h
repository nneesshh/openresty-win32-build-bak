// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcChargeAndGiftbag.proto

#ifndef PROTOBUF_INCLUDED_StoredProcChargeAndGiftbag_2eproto
#define PROTOBUF_INCLUDED_StoredProcChargeAndGiftbag_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcChargeAndGiftbag_2eproto 

namespace protobuf_StoredProcChargeAndGiftbag_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[38];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_StoredProcChargeAndGiftbag_2eproto
namespace db {
class ConfigActivityTime;
class ConfigActivityTimeDefaultTypeInternal;
extern ConfigActivityTimeDefaultTypeInternal _ConfigActivityTime_default_instance_;
class ConfigActivityTimeList;
class ConfigActivityTimeListDefaultTypeInternal;
extern ConfigActivityTimeListDefaultTypeInternal _ConfigActivityTimeList_default_instance_;
class ConfigGiftbagCharge;
class ConfigGiftbagChargeDefaultTypeInternal;
extern ConfigGiftbagChargeDefaultTypeInternal _ConfigGiftbagCharge_default_instance_;
class ConfigGiftbagChargeList;
class ConfigGiftbagChargeListDefaultTypeInternal;
extern ConfigGiftbagChargeListDefaultTypeInternal _ConfigGiftbagChargeList_default_instance_;
class ConfigGiftbagCode;
class ConfigGiftbagCodeDefaultTypeInternal;
extern ConfigGiftbagCodeDefaultTypeInternal _ConfigGiftbagCode_default_instance_;
class ConfigGiftbagCodeList;
class ConfigGiftbagCodeListDefaultTypeInternal;
extern ConfigGiftbagCodeListDefaultTypeInternal _ConfigGiftbagCodeList_default_instance_;
class ConfigGiftbagFestival;
class ConfigGiftbagFestivalDefaultTypeInternal;
extern ConfigGiftbagFestivalDefaultTypeInternal _ConfigGiftbagFestival_default_instance_;
class ConfigGiftbagFestivalList;
class ConfigGiftbagFestivalListDefaultTypeInternal;
extern ConfigGiftbagFestivalListDefaultTypeInternal _ConfigGiftbagFestivalList_default_instance_;
class ConfigGiftbagFirstCharge;
class ConfigGiftbagFirstChargeDefaultTypeInternal;
extern ConfigGiftbagFirstChargeDefaultTypeInternal _ConfigGiftbagFirstCharge_default_instance_;
class ConfigGiftbagFirstChargeList;
class ConfigGiftbagFirstChargeListDefaultTypeInternal;
extern ConfigGiftbagFirstChargeListDefaultTypeInternal _ConfigGiftbagFirstChargeList_default_instance_;
class ConfigGiftbagFriend;
class ConfigGiftbagFriendDefaultTypeInternal;
extern ConfigGiftbagFriendDefaultTypeInternal _ConfigGiftbagFriend_default_instance_;
class ConfigGiftbagFriendList;
class ConfigGiftbagFriendListDefaultTypeInternal;
extern ConfigGiftbagFriendListDefaultTypeInternal _ConfigGiftbagFriendList_default_instance_;
class ConfigGiftbagMonthCard;
class ConfigGiftbagMonthCardDefaultTypeInternal;
extern ConfigGiftbagMonthCardDefaultTypeInternal _ConfigGiftbagMonthCard_default_instance_;
class ConfigGiftbagMonthCardList;
class ConfigGiftbagMonthCardListDefaultTypeInternal;
extern ConfigGiftbagMonthCardListDefaultTypeInternal _ConfigGiftbagMonthCardList_default_instance_;
class ConfigGiftbagRoleLevelup;
class ConfigGiftbagRoleLevelupDefaultTypeInternal;
extern ConfigGiftbagRoleLevelupDefaultTypeInternal _ConfigGiftbagRoleLevelup_default_instance_;
class ConfigGiftbagRoleLevelupList;
class ConfigGiftbagRoleLevelupListDefaultTypeInternal;
extern ConfigGiftbagRoleLevelupListDefaultTypeInternal _ConfigGiftbagRoleLevelupList_default_instance_;
class ConfigGiftbagRoleLvShopping;
class ConfigGiftbagRoleLvShoppingDefaultTypeInternal;
extern ConfigGiftbagRoleLvShoppingDefaultTypeInternal _ConfigGiftbagRoleLvShopping_default_instance_;
class ConfigGiftbagRoleLvShoppingList;
class ConfigGiftbagRoleLvShoppingListDefaultTypeInternal;
extern ConfigGiftbagRoleLvShoppingListDefaultTypeInternal _ConfigGiftbagRoleLvShoppingList_default_instance_;
class ConfigGiftbagRoleSignin;
class ConfigGiftbagRoleSigninDefaultTypeInternal;
extern ConfigGiftbagRoleSigninDefaultTypeInternal _ConfigGiftbagRoleSignin_default_instance_;
class ConfigGiftbagRoleSigninList;
class ConfigGiftbagRoleSigninListDefaultTypeInternal;
extern ConfigGiftbagRoleSigninListDefaultTypeInternal _ConfigGiftbagRoleSigninList_default_instance_;
class ConfigGiftbagSevenDay;
class ConfigGiftbagSevenDayDefaultTypeInternal;
extern ConfigGiftbagSevenDayDefaultTypeInternal _ConfigGiftbagSevenDay_default_instance_;
class ConfigGiftbagSevenDayList;
class ConfigGiftbagSevenDayListDefaultTypeInternal;
extern ConfigGiftbagSevenDayListDefaultTypeInternal _ConfigGiftbagSevenDayList_default_instance_;
class GameCharge;
class GameChargeDefaultTypeInternal;
extern GameChargeDefaultTypeInternal _GameCharge_default_instance_;
class GameChargeList;
class GameChargeListDefaultTypeInternal;
extern GameChargeListDefaultTypeInternal _GameChargeList_default_instance_;
class GameGiftbagCode;
class GameGiftbagCodeDefaultTypeInternal;
extern GameGiftbagCodeDefaultTypeInternal _GameGiftbagCode_default_instance_;
class UserActivityGiftbag;
class UserActivityGiftbagDefaultTypeInternal;
extern UserActivityGiftbagDefaultTypeInternal _UserActivityGiftbag_default_instance_;
class UserChargeAndGiftbagFirstCharge;
class UserChargeAndGiftbagFirstChargeDefaultTypeInternal;
extern UserChargeAndGiftbagFirstChargeDefaultTypeInternal _UserChargeAndGiftbagFirstCharge_default_instance_;
class UserChargeAndGiftbagFirstChargeList;
class UserChargeAndGiftbagFirstChargeListDefaultTypeInternal;
extern UserChargeAndGiftbagFirstChargeListDefaultTypeInternal _UserChargeAndGiftbagFirstChargeList_default_instance_;
class UserMonthCard;
class UserMonthCardDefaultTypeInternal;
extern UserMonthCardDefaultTypeInternal _UserMonthCard_default_instance_;
class UserRoleLvShopping;
class UserRoleLvShoppingDefaultTypeInternal;
extern UserRoleLvShoppingDefaultTypeInternal _UserRoleLvShopping_default_instance_;
class UserStatsChargeAndGiftbag;
class UserStatsChargeAndGiftbagDefaultTypeInternal;
extern UserStatsChargeAndGiftbagDefaultTypeInternal _UserStatsChargeAndGiftbag_default_instance_;
class proc_create_game_charge;
class proc_create_game_chargeDefaultTypeInternal;
extern proc_create_game_chargeDefaultTypeInternal _proc_create_game_charge_default_instance_;
class proc_create_game_charge_Parameter;
class proc_create_game_charge_ParameterDefaultTypeInternal;
extern proc_create_game_charge_ParameterDefaultTypeInternal _proc_create_game_charge_Parameter_default_instance_;
class proc_load_game_charge;
class proc_load_game_chargeDefaultTypeInternal;
extern proc_load_game_chargeDefaultTypeInternal _proc_load_game_charge_default_instance_;
class proc_load_game_charge_Parameter;
class proc_load_game_charge_ParameterDefaultTypeInternal;
extern proc_load_game_charge_ParameterDefaultTypeInternal _proc_load_game_charge_Parameter_default_instance_;
class proc_load_game_charge_ReturnRecord;
class proc_load_game_charge_ReturnRecordDefaultTypeInternal;
extern proc_load_game_charge_ReturnRecordDefaultTypeInternal _proc_load_game_charge_ReturnRecord_default_instance_;
class proc_save_game_charge;
class proc_save_game_chargeDefaultTypeInternal;
extern proc_save_game_chargeDefaultTypeInternal _proc_save_game_charge_default_instance_;
class proc_save_game_charge_Parameter;
class proc_save_game_charge_ParameterDefaultTypeInternal;
extern proc_save_game_charge_ParameterDefaultTypeInternal _proc_save_game_charge_Parameter_default_instance_;
}  // namespace db
namespace google {
namespace protobuf {
template<> ::db::ConfigActivityTime* Arena::CreateMaybeMessage<::db::ConfigActivityTime>(Arena*);
template<> ::db::ConfigActivityTimeList* Arena::CreateMaybeMessage<::db::ConfigActivityTimeList>(Arena*);
template<> ::db::ConfigGiftbagCharge* Arena::CreateMaybeMessage<::db::ConfigGiftbagCharge>(Arena*);
template<> ::db::ConfigGiftbagChargeList* Arena::CreateMaybeMessage<::db::ConfigGiftbagChargeList>(Arena*);
template<> ::db::ConfigGiftbagCode* Arena::CreateMaybeMessage<::db::ConfigGiftbagCode>(Arena*);
template<> ::db::ConfigGiftbagCodeList* Arena::CreateMaybeMessage<::db::ConfigGiftbagCodeList>(Arena*);
template<> ::db::ConfigGiftbagFestival* Arena::CreateMaybeMessage<::db::ConfigGiftbagFestival>(Arena*);
template<> ::db::ConfigGiftbagFestivalList* Arena::CreateMaybeMessage<::db::ConfigGiftbagFestivalList>(Arena*);
template<> ::db::ConfigGiftbagFirstCharge* Arena::CreateMaybeMessage<::db::ConfigGiftbagFirstCharge>(Arena*);
template<> ::db::ConfigGiftbagFirstChargeList* Arena::CreateMaybeMessage<::db::ConfigGiftbagFirstChargeList>(Arena*);
template<> ::db::ConfigGiftbagFriend* Arena::CreateMaybeMessage<::db::ConfigGiftbagFriend>(Arena*);
template<> ::db::ConfigGiftbagFriendList* Arena::CreateMaybeMessage<::db::ConfigGiftbagFriendList>(Arena*);
template<> ::db::ConfigGiftbagMonthCard* Arena::CreateMaybeMessage<::db::ConfigGiftbagMonthCard>(Arena*);
template<> ::db::ConfigGiftbagMonthCardList* Arena::CreateMaybeMessage<::db::ConfigGiftbagMonthCardList>(Arena*);
template<> ::db::ConfigGiftbagRoleLevelup* Arena::CreateMaybeMessage<::db::ConfigGiftbagRoleLevelup>(Arena*);
template<> ::db::ConfigGiftbagRoleLevelupList* Arena::CreateMaybeMessage<::db::ConfigGiftbagRoleLevelupList>(Arena*);
template<> ::db::ConfigGiftbagRoleLvShopping* Arena::CreateMaybeMessage<::db::ConfigGiftbagRoleLvShopping>(Arena*);
template<> ::db::ConfigGiftbagRoleLvShoppingList* Arena::CreateMaybeMessage<::db::ConfigGiftbagRoleLvShoppingList>(Arena*);
template<> ::db::ConfigGiftbagRoleSignin* Arena::CreateMaybeMessage<::db::ConfigGiftbagRoleSignin>(Arena*);
template<> ::db::ConfigGiftbagRoleSigninList* Arena::CreateMaybeMessage<::db::ConfigGiftbagRoleSigninList>(Arena*);
template<> ::db::ConfigGiftbagSevenDay* Arena::CreateMaybeMessage<::db::ConfigGiftbagSevenDay>(Arena*);
template<> ::db::ConfigGiftbagSevenDayList* Arena::CreateMaybeMessage<::db::ConfigGiftbagSevenDayList>(Arena*);
template<> ::db::GameCharge* Arena::CreateMaybeMessage<::db::GameCharge>(Arena*);
template<> ::db::GameChargeList* Arena::CreateMaybeMessage<::db::GameChargeList>(Arena*);
template<> ::db::GameGiftbagCode* Arena::CreateMaybeMessage<::db::GameGiftbagCode>(Arena*);
template<> ::db::UserActivityGiftbag* Arena::CreateMaybeMessage<::db::UserActivityGiftbag>(Arena*);
template<> ::db::UserChargeAndGiftbagFirstCharge* Arena::CreateMaybeMessage<::db::UserChargeAndGiftbagFirstCharge>(Arena*);
template<> ::db::UserChargeAndGiftbagFirstChargeList* Arena::CreateMaybeMessage<::db::UserChargeAndGiftbagFirstChargeList>(Arena*);
template<> ::db::UserMonthCard* Arena::CreateMaybeMessage<::db::UserMonthCard>(Arena*);
template<> ::db::UserRoleLvShopping* Arena::CreateMaybeMessage<::db::UserRoleLvShopping>(Arena*);
template<> ::db::UserStatsChargeAndGiftbag* Arena::CreateMaybeMessage<::db::UserStatsChargeAndGiftbag>(Arena*);
template<> ::db::proc_create_game_charge* Arena::CreateMaybeMessage<::db::proc_create_game_charge>(Arena*);
template<> ::db::proc_create_game_charge_Parameter* Arena::CreateMaybeMessage<::db::proc_create_game_charge_Parameter>(Arena*);
template<> ::db::proc_load_game_charge* Arena::CreateMaybeMessage<::db::proc_load_game_charge>(Arena*);
template<> ::db::proc_load_game_charge_Parameter* Arena::CreateMaybeMessage<::db::proc_load_game_charge_Parameter>(Arena*);
template<> ::db::proc_load_game_charge_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_load_game_charge_ReturnRecord>(Arena*);
template<> ::db::proc_save_game_charge* Arena::CreateMaybeMessage<::db::proc_save_game_charge>(Arena*);
template<> ::db::proc_save_game_charge_Parameter* Arena::CreateMaybeMessage<::db::proc_save_game_charge_Parameter>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace db {

enum GAME_CHARGE_TYPE {
  GAME_CHARGE_TYPE_DIAMOND = 0,
  GAME_CHARGE_TYPE_MONTH_CARD = 1
};
bool GAME_CHARGE_TYPE_IsValid(int value);
const GAME_CHARGE_TYPE GAME_CHARGE_TYPE_MIN = GAME_CHARGE_TYPE_DIAMOND;
const GAME_CHARGE_TYPE GAME_CHARGE_TYPE_MAX = GAME_CHARGE_TYPE_MONTH_CARD;
const int GAME_CHARGE_TYPE_ARRAYSIZE = GAME_CHARGE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GAME_CHARGE_TYPE_descriptor();
inline const ::std::string& GAME_CHARGE_TYPE_Name(GAME_CHARGE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GAME_CHARGE_TYPE_descriptor(), value);
}
inline bool GAME_CHARGE_TYPE_Parse(
    const ::std::string& name, GAME_CHARGE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GAME_CHARGE_TYPE>(
    GAME_CHARGE_TYPE_descriptor(), name, value);
}
enum GAME_CHARGE_STATE {
  GAME_CHARGE_STATE_INVALID = 0,
  GAME_CHARGE_STATE_UNOPENED = 1,
  GAME_CHARGE_STATE_OPENED = 2
};
bool GAME_CHARGE_STATE_IsValid(int value);
const GAME_CHARGE_STATE GAME_CHARGE_STATE_MIN = GAME_CHARGE_STATE_INVALID;
const GAME_CHARGE_STATE GAME_CHARGE_STATE_MAX = GAME_CHARGE_STATE_OPENED;
const int GAME_CHARGE_STATE_ARRAYSIZE = GAME_CHARGE_STATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GAME_CHARGE_STATE_descriptor();
inline const ::std::string& GAME_CHARGE_STATE_Name(GAME_CHARGE_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GAME_CHARGE_STATE_descriptor(), value);
}
inline bool GAME_CHARGE_STATE_Parse(
    const ::std::string& name, GAME_CHARGE_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GAME_CHARGE_STATE>(
    GAME_CHARGE_STATE_descriptor(), name, value);
}
// ===================================================================

class ConfigActivityTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigActivityTime) */ {
 public:
  ConfigActivityTime();
  virtual ~ConfigActivityTime();

  ConfigActivityTime(const ConfigActivityTime& from);

  inline ConfigActivityTime& operator=(const ConfigActivityTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigActivityTime(ConfigActivityTime&& from) noexcept
    : ConfigActivityTime() {
    *this = ::std::move(from);
  }

  inline ConfigActivityTime& operator=(ConfigActivityTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigActivityTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigActivityTime* internal_default_instance() {
    return reinterpret_cast<const ConfigActivityTime*>(
               &_ConfigActivityTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ConfigActivityTime* other);
  void Swap(ConfigActivityTime* other);
  friend void swap(ConfigActivityTime& a, ConfigActivityTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigActivityTime* New() const final {
    return CreateMaybeMessage<ConfigActivityTime>(NULL);
  }

  ConfigActivityTime* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigActivityTime>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigActivityTime& from);
  void MergeFrom(const ConfigActivityTime& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigActivityTime* other);
  protected:
  explicit ConfigActivityTime(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes desc = 4;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 4;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_desc();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_desc(
      ::std::string* desc);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required sfixed64 begin_time = 6;
  bool has_begin_time() const;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 6;
  ::google::protobuf::int64 begin_time() const;
  void set_begin_time(::google::protobuf::int64 value);

  // required sfixed64 end_time = 7;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  ::google::protobuf::int64 end_time() const;
  void set_end_time(::google::protobuf::int64 value);

  // required int32 disable = 5;
  bool has_disable() const;
  void clear_disable();
  static const int kDisableFieldNumber = 5;
  ::google::protobuf::int32 disable() const;
  void set_disable(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigActivityTime)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_desc();
  void clear_has_desc();
  void set_has_disable();
  void clear_has_disable();
  void set_has_begin_time();
  void clear_has_begin_time();
  void set_has_end_time();
  void clear_has_end_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 begin_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 disable_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigActivityTimeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigActivityTimeList) */ {
 public:
  ConfigActivityTimeList();
  virtual ~ConfigActivityTimeList();

  ConfigActivityTimeList(const ConfigActivityTimeList& from);

  inline ConfigActivityTimeList& operator=(const ConfigActivityTimeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigActivityTimeList(ConfigActivityTimeList&& from) noexcept
    : ConfigActivityTimeList() {
    *this = ::std::move(from);
  }

  inline ConfigActivityTimeList& operator=(ConfigActivityTimeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigActivityTimeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigActivityTimeList* internal_default_instance() {
    return reinterpret_cast<const ConfigActivityTimeList*>(
               &_ConfigActivityTimeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ConfigActivityTimeList* other);
  void Swap(ConfigActivityTimeList* other);
  friend void swap(ConfigActivityTimeList& a, ConfigActivityTimeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigActivityTimeList* New() const final {
    return CreateMaybeMessage<ConfigActivityTimeList>(NULL);
  }

  ConfigActivityTimeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigActivityTimeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigActivityTimeList& from);
  void MergeFrom(const ConfigActivityTimeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigActivityTimeList* other);
  protected:
  explicit ConfigActivityTimeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigActivityTime list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigActivityTime* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigActivityTime >*
      mutable_list();
  const ::db::ConfigActivityTime& list(int index) const;
  ::db::ConfigActivityTime* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigActivityTime >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigActivityTimeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigActivityTime > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagFirstCharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagFirstCharge) */ {
 public:
  ConfigGiftbagFirstCharge();
  virtual ~ConfigGiftbagFirstCharge();

  ConfigGiftbagFirstCharge(const ConfigGiftbagFirstCharge& from);

  inline ConfigGiftbagFirstCharge& operator=(const ConfigGiftbagFirstCharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagFirstCharge(ConfigGiftbagFirstCharge&& from) noexcept
    : ConfigGiftbagFirstCharge() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagFirstCharge& operator=(ConfigGiftbagFirstCharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagFirstCharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagFirstCharge* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagFirstCharge*>(
               &_ConfigGiftbagFirstCharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ConfigGiftbagFirstCharge* other);
  void Swap(ConfigGiftbagFirstCharge* other);
  friend void swap(ConfigGiftbagFirstCharge& a, ConfigGiftbagFirstCharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagFirstCharge* New() const final {
    return CreateMaybeMessage<ConfigGiftbagFirstCharge>(NULL);
  }

  ConfigGiftbagFirstCharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagFirstCharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagFirstCharge& from);
  void MergeFrom(const ConfigGiftbagFirstCharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagFirstCharge* other);
  protected:
  explicit ConfigGiftbagFirstCharge(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes reward = 3;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required int32 charge_subtype = 1;
  bool has_charge_subtype() const;
  void clear_charge_subtype();
  static const int kChargeSubtypeFieldNumber = 1;
  ::google::protobuf::int32 charge_subtype() const;
  void set_charge_subtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagFirstCharge)
 private:
  void set_has_charge_subtype();
  void clear_has_charge_subtype();
  void set_has_name();
  void clear_has_name();
  void set_has_reward();
  void clear_has_reward();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::int32 charge_subtype_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagFirstChargeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagFirstChargeList) */ {
 public:
  ConfigGiftbagFirstChargeList();
  virtual ~ConfigGiftbagFirstChargeList();

  ConfigGiftbagFirstChargeList(const ConfigGiftbagFirstChargeList& from);

  inline ConfigGiftbagFirstChargeList& operator=(const ConfigGiftbagFirstChargeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagFirstChargeList(ConfigGiftbagFirstChargeList&& from) noexcept
    : ConfigGiftbagFirstChargeList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagFirstChargeList& operator=(ConfigGiftbagFirstChargeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagFirstChargeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagFirstChargeList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagFirstChargeList*>(
               &_ConfigGiftbagFirstChargeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ConfigGiftbagFirstChargeList* other);
  void Swap(ConfigGiftbagFirstChargeList* other);
  friend void swap(ConfigGiftbagFirstChargeList& a, ConfigGiftbagFirstChargeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagFirstChargeList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagFirstChargeList>(NULL);
  }

  ConfigGiftbagFirstChargeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagFirstChargeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagFirstChargeList& from);
  void MergeFrom(const ConfigGiftbagFirstChargeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagFirstChargeList* other);
  protected:
  explicit ConfigGiftbagFirstChargeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagFirstCharge list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagFirstCharge* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFirstCharge >*
      mutable_list();
  const ::db::ConfigGiftbagFirstCharge& list(int index) const;
  ::db::ConfigGiftbagFirstCharge* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFirstCharge >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagFirstChargeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFirstCharge > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagCharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagCharge) */ {
 public:
  ConfigGiftbagCharge();
  virtual ~ConfigGiftbagCharge();

  ConfigGiftbagCharge(const ConfigGiftbagCharge& from);

  inline ConfigGiftbagCharge& operator=(const ConfigGiftbagCharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagCharge(ConfigGiftbagCharge&& from) noexcept
    : ConfigGiftbagCharge() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagCharge& operator=(ConfigGiftbagCharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagCharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagCharge* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagCharge*>(
               &_ConfigGiftbagCharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ConfigGiftbagCharge* other);
  void Swap(ConfigGiftbagCharge* other);
  friend void swap(ConfigGiftbagCharge& a, ConfigGiftbagCharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagCharge* New() const final {
    return CreateMaybeMessage<ConfigGiftbagCharge>(NULL);
  }

  ConfigGiftbagCharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagCharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagCharge& from);
  void MergeFrom(const ConfigGiftbagCharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagCharge* other);
  protected:
  explicit ConfigGiftbagCharge(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes reward = 4;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 4;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required int32 chargeid = 1;
  bool has_chargeid() const;
  void clear_chargeid();
  static const int kChargeidFieldNumber = 1;
  ::google::protobuf::int32 chargeid() const;
  void set_chargeid(::google::protobuf::int32 value);

  // required float cash = 3;
  bool has_cash() const;
  void clear_cash();
  static const int kCashFieldNumber = 3;
  float cash() const;
  void set_cash(float value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagCharge)
 private:
  void set_has_chargeid();
  void clear_has_chargeid();
  void set_has_name();
  void clear_has_name();
  void set_has_cash();
  void clear_has_cash();
  void set_has_reward();
  void clear_has_reward();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::int32 chargeid_;
  float cash_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagChargeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagChargeList) */ {
 public:
  ConfigGiftbagChargeList();
  virtual ~ConfigGiftbagChargeList();

  ConfigGiftbagChargeList(const ConfigGiftbagChargeList& from);

  inline ConfigGiftbagChargeList& operator=(const ConfigGiftbagChargeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagChargeList(ConfigGiftbagChargeList&& from) noexcept
    : ConfigGiftbagChargeList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagChargeList& operator=(ConfigGiftbagChargeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagChargeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagChargeList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagChargeList*>(
               &_ConfigGiftbagChargeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ConfigGiftbagChargeList* other);
  void Swap(ConfigGiftbagChargeList* other);
  friend void swap(ConfigGiftbagChargeList& a, ConfigGiftbagChargeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagChargeList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagChargeList>(NULL);
  }

  ConfigGiftbagChargeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagChargeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagChargeList& from);
  void MergeFrom(const ConfigGiftbagChargeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagChargeList* other);
  protected:
  explicit ConfigGiftbagChargeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagCharge list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagCharge* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCharge >*
      mutable_list();
  const ::db::ConfigGiftbagCharge& list(int index) const;
  ::db::ConfigGiftbagCharge* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCharge >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagChargeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCharge > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagSevenDay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagSevenDay) */ {
 public:
  ConfigGiftbagSevenDay();
  virtual ~ConfigGiftbagSevenDay();

  ConfigGiftbagSevenDay(const ConfigGiftbagSevenDay& from);

  inline ConfigGiftbagSevenDay& operator=(const ConfigGiftbagSevenDay& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagSevenDay(ConfigGiftbagSevenDay&& from) noexcept
    : ConfigGiftbagSevenDay() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagSevenDay& operator=(ConfigGiftbagSevenDay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagSevenDay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagSevenDay* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagSevenDay*>(
               &_ConfigGiftbagSevenDay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ConfigGiftbagSevenDay* other);
  void Swap(ConfigGiftbagSevenDay* other);
  friend void swap(ConfigGiftbagSevenDay& a, ConfigGiftbagSevenDay& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagSevenDay* New() const final {
    return CreateMaybeMessage<ConfigGiftbagSevenDay>(NULL);
  }

  ConfigGiftbagSevenDay* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagSevenDay>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagSevenDay& from);
  void MergeFrom(const ConfigGiftbagSevenDay& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagSevenDay* other);
  protected:
  explicit ConfigGiftbagSevenDay(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes reward = 2;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required int32 dayid = 1;
  bool has_dayid() const;
  void clear_dayid();
  static const int kDayidFieldNumber = 1;
  ::google::protobuf::int32 dayid() const;
  void set_dayid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagSevenDay)
 private:
  void set_has_dayid();
  void clear_has_dayid();
  void set_has_reward();
  void clear_has_reward();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::int32 dayid_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagSevenDayList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagSevenDayList) */ {
 public:
  ConfigGiftbagSevenDayList();
  virtual ~ConfigGiftbagSevenDayList();

  ConfigGiftbagSevenDayList(const ConfigGiftbagSevenDayList& from);

  inline ConfigGiftbagSevenDayList& operator=(const ConfigGiftbagSevenDayList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagSevenDayList(ConfigGiftbagSevenDayList&& from) noexcept
    : ConfigGiftbagSevenDayList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagSevenDayList& operator=(ConfigGiftbagSevenDayList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagSevenDayList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagSevenDayList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagSevenDayList*>(
               &_ConfigGiftbagSevenDayList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ConfigGiftbagSevenDayList* other);
  void Swap(ConfigGiftbagSevenDayList* other);
  friend void swap(ConfigGiftbagSevenDayList& a, ConfigGiftbagSevenDayList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagSevenDayList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagSevenDayList>(NULL);
  }

  ConfigGiftbagSevenDayList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagSevenDayList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagSevenDayList& from);
  void MergeFrom(const ConfigGiftbagSevenDayList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagSevenDayList* other);
  protected:
  explicit ConfigGiftbagSevenDayList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagSevenDay list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagSevenDay* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagSevenDay >*
      mutable_list();
  const ::db::ConfigGiftbagSevenDay& list(int index) const;
  ::db::ConfigGiftbagSevenDay* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagSevenDay >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagSevenDayList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagSevenDay > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagFestival : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagFestival) */ {
 public:
  ConfigGiftbagFestival();
  virtual ~ConfigGiftbagFestival();

  ConfigGiftbagFestival(const ConfigGiftbagFestival& from);

  inline ConfigGiftbagFestival& operator=(const ConfigGiftbagFestival& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagFestival(ConfigGiftbagFestival&& from) noexcept
    : ConfigGiftbagFestival() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagFestival& operator=(ConfigGiftbagFestival&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagFestival& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagFestival* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagFestival*>(
               &_ConfigGiftbagFestival_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(ConfigGiftbagFestival* other);
  void Swap(ConfigGiftbagFestival* other);
  friend void swap(ConfigGiftbagFestival& a, ConfigGiftbagFestival& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagFestival* New() const final {
    return CreateMaybeMessage<ConfigGiftbagFestival>(NULL);
  }

  ConfigGiftbagFestival* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagFestival>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagFestival& from);
  void MergeFrom(const ConfigGiftbagFestival& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagFestival* other);
  protected:
  explicit ConfigGiftbagFestival(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes reward = 3;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required int32 activityid = 1;
  bool has_activityid() const;
  void clear_activityid();
  static const int kActivityidFieldNumber = 1;
  ::google::protobuf::int32 activityid() const;
  void set_activityid(::google::protobuf::int32 value);

  // required int32 dayid = 2;
  bool has_dayid() const;
  void clear_dayid();
  static const int kDayidFieldNumber = 2;
  ::google::protobuf::int32 dayid() const;
  void set_dayid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagFestival)
 private:
  void set_has_activityid();
  void clear_has_activityid();
  void set_has_dayid();
  void clear_has_dayid();
  void set_has_reward();
  void clear_has_reward();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int32 dayid_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagFestivalList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagFestivalList) */ {
 public:
  ConfigGiftbagFestivalList();
  virtual ~ConfigGiftbagFestivalList();

  ConfigGiftbagFestivalList(const ConfigGiftbagFestivalList& from);

  inline ConfigGiftbagFestivalList& operator=(const ConfigGiftbagFestivalList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagFestivalList(ConfigGiftbagFestivalList&& from) noexcept
    : ConfigGiftbagFestivalList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagFestivalList& operator=(ConfigGiftbagFestivalList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagFestivalList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagFestivalList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagFestivalList*>(
               &_ConfigGiftbagFestivalList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(ConfigGiftbagFestivalList* other);
  void Swap(ConfigGiftbagFestivalList* other);
  friend void swap(ConfigGiftbagFestivalList& a, ConfigGiftbagFestivalList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagFestivalList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagFestivalList>(NULL);
  }

  ConfigGiftbagFestivalList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagFestivalList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagFestivalList& from);
  void MergeFrom(const ConfigGiftbagFestivalList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagFestivalList* other);
  protected:
  explicit ConfigGiftbagFestivalList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagFestival list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagFestival* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFestival >*
      mutable_list();
  const ::db::ConfigGiftbagFestival& list(int index) const;
  ::db::ConfigGiftbagFestival* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFestival >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagFestivalList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFestival > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagMonthCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagMonthCard) */ {
 public:
  ConfigGiftbagMonthCard();
  virtual ~ConfigGiftbagMonthCard();

  ConfigGiftbagMonthCard(const ConfigGiftbagMonthCard& from);

  inline ConfigGiftbagMonthCard& operator=(const ConfigGiftbagMonthCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagMonthCard(ConfigGiftbagMonthCard&& from) noexcept
    : ConfigGiftbagMonthCard() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagMonthCard& operator=(ConfigGiftbagMonthCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagMonthCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagMonthCard* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagMonthCard*>(
               &_ConfigGiftbagMonthCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void UnsafeArenaSwap(ConfigGiftbagMonthCard* other);
  void Swap(ConfigGiftbagMonthCard* other);
  friend void swap(ConfigGiftbagMonthCard& a, ConfigGiftbagMonthCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagMonthCard* New() const final {
    return CreateMaybeMessage<ConfigGiftbagMonthCard>(NULL);
  }

  ConfigGiftbagMonthCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagMonthCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagMonthCard& from);
  void MergeFrom(const ConfigGiftbagMonthCard& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagMonthCard* other);
  protected:
  explicit ConfigGiftbagMonthCard(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes desc = 3;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_desc();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_desc(
      ::std::string* desc);

  // required bytes reward = 5;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 5;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required bytes pirate_ship_fight_num = 16;
  bool has_pirate_ship_fight_num() const;
  void clear_pirate_ship_fight_num();
  static const int kPirateShipFightNumFieldNumber = 16;
  const ::std::string& pirate_ship_fight_num() const;
  void set_pirate_ship_fight_num(const ::std::string& value);
  #if LANG_CXX11
  void set_pirate_ship_fight_num(::std::string&& value);
  #endif
  void set_pirate_ship_fight_num(const char* value);
  void set_pirate_ship_fight_num(const void* value, size_t size);
  ::std::string* mutable_pirate_ship_fight_num();
  ::std::string* release_pirate_ship_fight_num();
  void set_allocated_pirate_ship_fight_num(::std::string* pirate_ship_fight_num);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_pirate_ship_fight_num();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_pirate_ship_fight_num(
      ::std::string* pirate_ship_fight_num);

  // required int32 cardid = 1;
  bool has_cardid() const;
  void clear_cardid();
  static const int kCardidFieldNumber = 1;
  ::google::protobuf::int32 cardid() const;
  void set_cardid(::google::protobuf::int32 value);

  // required int32 card_days = 4;
  bool has_card_days() const;
  void clear_card_days();
  static const int kCardDaysFieldNumber = 4;
  ::google::protobuf::int32 card_days() const;
  void set_card_days(::google::protobuf::int32 value);

  // required float passenger_refresh_time_ratio = 11;
  bool has_passenger_refresh_time_ratio() const;
  void clear_passenger_refresh_time_ratio();
  static const int kPassengerRefreshTimeRatioFieldNumber = 11;
  float passenger_refresh_time_ratio() const;
  void set_passenger_refresh_time_ratio(float value);

  // required float role_exp_ratio = 12;
  bool has_role_exp_ratio() const;
  void clear_role_exp_ratio();
  static const int kRoleExpRatioFieldNumber = 12;
  float role_exp_ratio() const;
  void set_role_exp_ratio(float value);

  // required int32 free_resurrection_num = 15;
  bool has_free_resurrection_num() const;
  void clear_free_resurrection_num();
  static const int kFreeResurrectionNumFieldNumber = 15;
  ::google::protobuf::int32 free_resurrection_num() const;
  void set_free_resurrection_num(::google::protobuf::int32 value);

  // required float sailor_exp_ratio = 13;
  bool has_sailor_exp_ratio() const;
  void clear_sailor_exp_ratio();
  static const int kSailorExpRatioFieldNumber = 13;
  float sailor_exp_ratio() const;
  void set_sailor_exp_ratio(float value);

  // required int32 ghost_ship_reset_num = 14;
  bool has_ghost_ship_reset_num() const;
  void clear_ghost_ship_reset_num();
  static const int kGhostShipResetNumFieldNumber = 14;
  ::google::protobuf::int32 ghost_ship_reset_num() const;
  void set_ghost_ship_reset_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagMonthCard)
 private:
  void set_has_cardid();
  void clear_has_cardid();
  void set_has_name();
  void clear_has_name();
  void set_has_desc();
  void clear_has_desc();
  void set_has_card_days();
  void clear_has_card_days();
  void set_has_reward();
  void clear_has_reward();
  void set_has_passenger_refresh_time_ratio();
  void clear_has_passenger_refresh_time_ratio();
  void set_has_role_exp_ratio();
  void clear_has_role_exp_ratio();
  void set_has_sailor_exp_ratio();
  void clear_has_sailor_exp_ratio();
  void set_has_ghost_ship_reset_num();
  void clear_has_ghost_ship_reset_num();
  void set_has_free_resurrection_num();
  void clear_has_free_resurrection_num();
  void set_has_pirate_ship_fight_num();
  void clear_has_pirate_ship_fight_num();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::internal::ArenaStringPtr pirate_ship_fight_num_;
  ::google::protobuf::int32 cardid_;
  ::google::protobuf::int32 card_days_;
  float passenger_refresh_time_ratio_;
  float role_exp_ratio_;
  ::google::protobuf::int32 free_resurrection_num_;
  float sailor_exp_ratio_;
  ::google::protobuf::int32 ghost_ship_reset_num_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagMonthCardList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagMonthCardList) */ {
 public:
  ConfigGiftbagMonthCardList();
  virtual ~ConfigGiftbagMonthCardList();

  ConfigGiftbagMonthCardList(const ConfigGiftbagMonthCardList& from);

  inline ConfigGiftbagMonthCardList& operator=(const ConfigGiftbagMonthCardList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagMonthCardList(ConfigGiftbagMonthCardList&& from) noexcept
    : ConfigGiftbagMonthCardList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagMonthCardList& operator=(ConfigGiftbagMonthCardList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagMonthCardList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagMonthCardList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagMonthCardList*>(
               &_ConfigGiftbagMonthCardList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(ConfigGiftbagMonthCardList* other);
  void Swap(ConfigGiftbagMonthCardList* other);
  friend void swap(ConfigGiftbagMonthCardList& a, ConfigGiftbagMonthCardList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagMonthCardList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagMonthCardList>(NULL);
  }

  ConfigGiftbagMonthCardList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagMonthCardList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagMonthCardList& from);
  void MergeFrom(const ConfigGiftbagMonthCardList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagMonthCardList* other);
  protected:
  explicit ConfigGiftbagMonthCardList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagMonthCard list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagMonthCard* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagMonthCard >*
      mutable_list();
  const ::db::ConfigGiftbagMonthCard& list(int index) const;
  ::db::ConfigGiftbagMonthCard* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagMonthCard >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagMonthCardList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagMonthCard > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagRoleSignin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagRoleSignin) */ {
 public:
  ConfigGiftbagRoleSignin();
  virtual ~ConfigGiftbagRoleSignin();

  ConfigGiftbagRoleSignin(const ConfigGiftbagRoleSignin& from);

  inline ConfigGiftbagRoleSignin& operator=(const ConfigGiftbagRoleSignin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagRoleSignin(ConfigGiftbagRoleSignin&& from) noexcept
    : ConfigGiftbagRoleSignin() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagRoleSignin& operator=(ConfigGiftbagRoleSignin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagRoleSignin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagRoleSignin* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagRoleSignin*>(
               &_ConfigGiftbagRoleSignin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(ConfigGiftbagRoleSignin* other);
  void Swap(ConfigGiftbagRoleSignin* other);
  friend void swap(ConfigGiftbagRoleSignin& a, ConfigGiftbagRoleSignin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagRoleSignin* New() const final {
    return CreateMaybeMessage<ConfigGiftbagRoleSignin>(NULL);
  }

  ConfigGiftbagRoleSignin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagRoleSignin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagRoleSignin& from);
  void MergeFrom(const ConfigGiftbagRoleSignin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagRoleSignin* other);
  protected:
  explicit ConfigGiftbagRoleSignin(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes reward = 3;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required bytes extra_reward = 4;
  bool has_extra_reward() const;
  void clear_extra_reward();
  static const int kExtraRewardFieldNumber = 4;
  const ::std::string& extra_reward() const;
  void set_extra_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_extra_reward(::std::string&& value);
  #endif
  void set_extra_reward(const char* value);
  void set_extra_reward(const void* value, size_t size);
  ::std::string* mutable_extra_reward();
  ::std::string* release_extra_reward();
  void set_allocated_extra_reward(::std::string* extra_reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_extra_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_extra_reward(
      ::std::string* extra_reward);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 dayid = 2;
  bool has_dayid() const;
  void clear_dayid();
  static const int kDayidFieldNumber = 2;
  ::google::protobuf::int32 dayid() const;
  void set_dayid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagRoleSignin)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_dayid();
  void clear_has_dayid();
  void set_has_reward();
  void clear_has_reward();
  void set_has_extra_reward();
  void clear_has_extra_reward();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::internal::ArenaStringPtr extra_reward_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 dayid_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagRoleSigninList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagRoleSigninList) */ {
 public:
  ConfigGiftbagRoleSigninList();
  virtual ~ConfigGiftbagRoleSigninList();

  ConfigGiftbagRoleSigninList(const ConfigGiftbagRoleSigninList& from);

  inline ConfigGiftbagRoleSigninList& operator=(const ConfigGiftbagRoleSigninList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagRoleSigninList(ConfigGiftbagRoleSigninList&& from) noexcept
    : ConfigGiftbagRoleSigninList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagRoleSigninList& operator=(ConfigGiftbagRoleSigninList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagRoleSigninList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagRoleSigninList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagRoleSigninList*>(
               &_ConfigGiftbagRoleSigninList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(ConfigGiftbagRoleSigninList* other);
  void Swap(ConfigGiftbagRoleSigninList* other);
  friend void swap(ConfigGiftbagRoleSigninList& a, ConfigGiftbagRoleSigninList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagRoleSigninList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagRoleSigninList>(NULL);
  }

  ConfigGiftbagRoleSigninList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagRoleSigninList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagRoleSigninList& from);
  void MergeFrom(const ConfigGiftbagRoleSigninList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagRoleSigninList* other);
  protected:
  explicit ConfigGiftbagRoleSigninList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagRoleSignin list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagRoleSignin* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleSignin >*
      mutable_list();
  const ::db::ConfigGiftbagRoleSignin& list(int index) const;
  ::db::ConfigGiftbagRoleSignin* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleSignin >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagRoleSigninList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleSignin > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagRoleLevelup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagRoleLevelup) */ {
 public:
  ConfigGiftbagRoleLevelup();
  virtual ~ConfigGiftbagRoleLevelup();

  ConfigGiftbagRoleLevelup(const ConfigGiftbagRoleLevelup& from);

  inline ConfigGiftbagRoleLevelup& operator=(const ConfigGiftbagRoleLevelup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagRoleLevelup(ConfigGiftbagRoleLevelup&& from) noexcept
    : ConfigGiftbagRoleLevelup() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagRoleLevelup& operator=(ConfigGiftbagRoleLevelup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagRoleLevelup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagRoleLevelup* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagRoleLevelup*>(
               &_ConfigGiftbagRoleLevelup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(ConfigGiftbagRoleLevelup* other);
  void Swap(ConfigGiftbagRoleLevelup* other);
  friend void swap(ConfigGiftbagRoleLevelup& a, ConfigGiftbagRoleLevelup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagRoleLevelup* New() const final {
    return CreateMaybeMessage<ConfigGiftbagRoleLevelup>(NULL);
  }

  ConfigGiftbagRoleLevelup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagRoleLevelup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagRoleLevelup& from);
  void MergeFrom(const ConfigGiftbagRoleLevelup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagRoleLevelup* other);
  protected:
  explicit ConfigGiftbagRoleLevelup(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes reward = 2;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required int32 levelid = 1;
  bool has_levelid() const;
  void clear_levelid();
  static const int kLevelidFieldNumber = 1;
  ::google::protobuf::int32 levelid() const;
  void set_levelid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagRoleLevelup)
 private:
  void set_has_levelid();
  void clear_has_levelid();
  void set_has_reward();
  void clear_has_reward();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::int32 levelid_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagRoleLevelupList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagRoleLevelupList) */ {
 public:
  ConfigGiftbagRoleLevelupList();
  virtual ~ConfigGiftbagRoleLevelupList();

  ConfigGiftbagRoleLevelupList(const ConfigGiftbagRoleLevelupList& from);

  inline ConfigGiftbagRoleLevelupList& operator=(const ConfigGiftbagRoleLevelupList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagRoleLevelupList(ConfigGiftbagRoleLevelupList&& from) noexcept
    : ConfigGiftbagRoleLevelupList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagRoleLevelupList& operator=(ConfigGiftbagRoleLevelupList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagRoleLevelupList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagRoleLevelupList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagRoleLevelupList*>(
               &_ConfigGiftbagRoleLevelupList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(ConfigGiftbagRoleLevelupList* other);
  void Swap(ConfigGiftbagRoleLevelupList* other);
  friend void swap(ConfigGiftbagRoleLevelupList& a, ConfigGiftbagRoleLevelupList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagRoleLevelupList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagRoleLevelupList>(NULL);
  }

  ConfigGiftbagRoleLevelupList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagRoleLevelupList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagRoleLevelupList& from);
  void MergeFrom(const ConfigGiftbagRoleLevelupList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagRoleLevelupList* other);
  protected:
  explicit ConfigGiftbagRoleLevelupList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagRoleLevelup list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagRoleLevelup* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLevelup >*
      mutable_list();
  const ::db::ConfigGiftbagRoleLevelup& list(int index) const;
  ::db::ConfigGiftbagRoleLevelup* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLevelup >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagRoleLevelupList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLevelup > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagRoleLvShopping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagRoleLvShopping) */ {
 public:
  ConfigGiftbagRoleLvShopping();
  virtual ~ConfigGiftbagRoleLvShopping();

  ConfigGiftbagRoleLvShopping(const ConfigGiftbagRoleLvShopping& from);

  inline ConfigGiftbagRoleLvShopping& operator=(const ConfigGiftbagRoleLvShopping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagRoleLvShopping(ConfigGiftbagRoleLvShopping&& from) noexcept
    : ConfigGiftbagRoleLvShopping() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagRoleLvShopping& operator=(ConfigGiftbagRoleLvShopping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagRoleLvShopping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagRoleLvShopping* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagRoleLvShopping*>(
               &_ConfigGiftbagRoleLvShopping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(ConfigGiftbagRoleLvShopping* other);
  void Swap(ConfigGiftbagRoleLvShopping* other);
  friend void swap(ConfigGiftbagRoleLvShopping& a, ConfigGiftbagRoleLvShopping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagRoleLvShopping* New() const final {
    return CreateMaybeMessage<ConfigGiftbagRoleLvShopping>(NULL);
  }

  ConfigGiftbagRoleLvShopping* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagRoleLvShopping>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagRoleLvShopping& from);
  void MergeFrom(const ConfigGiftbagRoleLvShopping& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagRoleLvShopping* other);
  protected:
  explicit ConfigGiftbagRoleLvShopping(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes reward = 3;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward(
      ::std::string* reward);

  // required bytes mail_title = 4;
  bool has_mail_title() const;
  void clear_mail_title();
  static const int kMailTitleFieldNumber = 4;
  const ::std::string& mail_title() const;
  void set_mail_title(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_title(::std::string&& value);
  #endif
  void set_mail_title(const char* value);
  void set_mail_title(const void* value, size_t size);
  ::std::string* mutable_mail_title();
  ::std::string* release_mail_title();
  void set_allocated_mail_title(::std::string* mail_title);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_mail_title();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_mail_title(
      ::std::string* mail_title);

  // required bytes mail_text = 5;
  bool has_mail_text() const;
  void clear_mail_text();
  static const int kMailTextFieldNumber = 5;
  const ::std::string& mail_text() const;
  void set_mail_text(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_text(::std::string&& value);
  #endif
  void set_mail_text(const char* value);
  void set_mail_text(const void* value, size_t size);
  ::std::string* mutable_mail_text();
  ::std::string* release_mail_text();
  void set_allocated_mail_text(::std::string* mail_text);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_mail_text();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_mail_text(
      ::std::string* mail_text);

  // required uint64 giftbagid = 1;
  bool has_giftbagid() const;
  void clear_giftbagid();
  static const int kGiftbagidFieldNumber = 1;
  ::google::protobuf::uint64 giftbagid() const;
  void set_giftbagid(::google::protobuf::uint64 value);

  // required int32 levelid = 2;
  bool has_levelid() const;
  void clear_levelid();
  static const int kLevelidFieldNumber = 2;
  ::google::protobuf::int32 levelid() const;
  void set_levelid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagRoleLvShopping)
 private:
  void set_has_giftbagid();
  void clear_has_giftbagid();
  void set_has_levelid();
  void clear_has_levelid();
  void set_has_reward();
  void clear_has_reward();
  void set_has_mail_title();
  void clear_has_mail_title();
  void set_has_mail_text();
  void clear_has_mail_text();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::internal::ArenaStringPtr mail_title_;
  ::google::protobuf::internal::ArenaStringPtr mail_text_;
  ::google::protobuf::uint64 giftbagid_;
  ::google::protobuf::int32 levelid_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagRoleLvShoppingList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagRoleLvShoppingList) */ {
 public:
  ConfigGiftbagRoleLvShoppingList();
  virtual ~ConfigGiftbagRoleLvShoppingList();

  ConfigGiftbagRoleLvShoppingList(const ConfigGiftbagRoleLvShoppingList& from);

  inline ConfigGiftbagRoleLvShoppingList& operator=(const ConfigGiftbagRoleLvShoppingList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagRoleLvShoppingList(ConfigGiftbagRoleLvShoppingList&& from) noexcept
    : ConfigGiftbagRoleLvShoppingList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagRoleLvShoppingList& operator=(ConfigGiftbagRoleLvShoppingList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagRoleLvShoppingList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagRoleLvShoppingList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagRoleLvShoppingList*>(
               &_ConfigGiftbagRoleLvShoppingList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(ConfigGiftbagRoleLvShoppingList* other);
  void Swap(ConfigGiftbagRoleLvShoppingList* other);
  friend void swap(ConfigGiftbagRoleLvShoppingList& a, ConfigGiftbagRoleLvShoppingList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagRoleLvShoppingList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagRoleLvShoppingList>(NULL);
  }

  ConfigGiftbagRoleLvShoppingList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagRoleLvShoppingList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagRoleLvShoppingList& from);
  void MergeFrom(const ConfigGiftbagRoleLvShoppingList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagRoleLvShoppingList* other);
  protected:
  explicit ConfigGiftbagRoleLvShoppingList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagRoleLvShopping list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagRoleLvShopping* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLvShopping >*
      mutable_list();
  const ::db::ConfigGiftbagRoleLvShopping& list(int index) const;
  ::db::ConfigGiftbagRoleLvShopping* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLvShopping >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagRoleLvShoppingList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLvShopping > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagCode) */ {
 public:
  ConfigGiftbagCode();
  virtual ~ConfigGiftbagCode();

  ConfigGiftbagCode(const ConfigGiftbagCode& from);

  inline ConfigGiftbagCode& operator=(const ConfigGiftbagCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagCode(ConfigGiftbagCode&& from) noexcept
    : ConfigGiftbagCode() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagCode& operator=(ConfigGiftbagCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagCode* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagCode*>(
               &_ConfigGiftbagCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(ConfigGiftbagCode* other);
  void Swap(ConfigGiftbagCode* other);
  friend void swap(ConfigGiftbagCode& a, ConfigGiftbagCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagCode* New() const final {
    return CreateMaybeMessage<ConfigGiftbagCode>(NULL);
  }

  ConfigGiftbagCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagCode& from);
  void MergeFrom(const ConfigGiftbagCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagCode* other);
  protected:
  explicit ConfigGiftbagCode(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const void* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_code(
      ::std::string* code);

  // required bytes desc = 3;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_desc();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_desc(
      ::std::string* desc);

  // required sfixed64 begin_time = 4;
  bool has_begin_time() const;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 4;
  ::google::protobuf::int64 begin_time() const;
  void set_begin_time(::google::protobuf::int64 value);

  // required sfixed64 end_time = 5;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::int64 end_time() const;
  void set_end_time(::google::protobuf::int64 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required uint64 reward_typeid = 11;
  bool has_reward_typeid() const;
  void clear_reward_typeid();
  static const int kRewardTypeidFieldNumber = 11;
  ::google::protobuf::uint64 reward_typeid() const;
  void set_reward_typeid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagCode)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_type();
  void clear_has_type();
  void set_has_desc();
  void clear_has_desc();
  void set_has_begin_time();
  void clear_has_begin_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_reward_typeid();
  void clear_has_reward_typeid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int64 begin_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 reward_typeid_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagCodeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagCodeList) */ {
 public:
  ConfigGiftbagCodeList();
  virtual ~ConfigGiftbagCodeList();

  ConfigGiftbagCodeList(const ConfigGiftbagCodeList& from);

  inline ConfigGiftbagCodeList& operator=(const ConfigGiftbagCodeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagCodeList(ConfigGiftbagCodeList&& from) noexcept
    : ConfigGiftbagCodeList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagCodeList& operator=(ConfigGiftbagCodeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagCodeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagCodeList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagCodeList*>(
               &_ConfigGiftbagCodeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(ConfigGiftbagCodeList* other);
  void Swap(ConfigGiftbagCodeList* other);
  friend void swap(ConfigGiftbagCodeList& a, ConfigGiftbagCodeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagCodeList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagCodeList>(NULL);
  }

  ConfigGiftbagCodeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagCodeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagCodeList& from);
  void MergeFrom(const ConfigGiftbagCodeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagCodeList* other);
  protected:
  explicit ConfigGiftbagCodeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagCode list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagCode* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCode >*
      mutable_list();
  const ::db::ConfigGiftbagCode& list(int index) const;
  ::db::ConfigGiftbagCode* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCode >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagCodeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCode > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagFriend) */ {
 public:
  ConfigGiftbagFriend();
  virtual ~ConfigGiftbagFriend();

  ConfigGiftbagFriend(const ConfigGiftbagFriend& from);

  inline ConfigGiftbagFriend& operator=(const ConfigGiftbagFriend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagFriend(ConfigGiftbagFriend&& from) noexcept
    : ConfigGiftbagFriend() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagFriend& operator=(ConfigGiftbagFriend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagFriend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagFriend* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagFriend*>(
               &_ConfigGiftbagFriend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(ConfigGiftbagFriend* other);
  void Swap(ConfigGiftbagFriend* other);
  friend void swap(ConfigGiftbagFriend& a, ConfigGiftbagFriend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagFriend* New() const final {
    return CreateMaybeMessage<ConfigGiftbagFriend>(NULL);
  }

  ConfigGiftbagFriend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagFriend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagFriend& from);
  void MergeFrom(const ConfigGiftbagFriend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagFriend* other);
  protected:
  explicit ConfigGiftbagFriend(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 give_num_day = 2;
  bool has_give_num_day() const;
  void clear_give_num_day();
  static const int kGiveNumDayFieldNumber = 2;
  ::google::protobuf::int32 give_num_day() const;
  void set_give_num_day(::google::protobuf::int32 value);

  // required int32 accept_num_day = 3;
  bool has_accept_num_day() const;
  void clear_accept_num_day();
  static const int kAcceptNumDayFieldNumber = 3;
  ::google::protobuf::int32 accept_num_day() const;
  void set_accept_num_day(::google::protobuf::int32 value);

  // required int32 item_num = 12;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 12;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // required uint64 item_typeid = 11;
  bool has_item_typeid() const;
  void clear_item_typeid();
  static const int kItemTypeidFieldNumber = 11;
  ::google::protobuf::uint64 item_typeid() const;
  void set_item_typeid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagFriend)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_give_num_day();
  void clear_has_give_num_day();
  void set_has_accept_num_day();
  void clear_has_accept_num_day();
  void set_has_item_typeid();
  void clear_has_item_typeid();
  void set_has_item_num();
  void clear_has_item_num();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 give_num_day_;
  ::google::protobuf::int32 accept_num_day_;
  ::google::protobuf::int32 item_num_;
  ::google::protobuf::uint64 item_typeid_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigGiftbagFriendList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigGiftbagFriendList) */ {
 public:
  ConfigGiftbagFriendList();
  virtual ~ConfigGiftbagFriendList();

  ConfigGiftbagFriendList(const ConfigGiftbagFriendList& from);

  inline ConfigGiftbagFriendList& operator=(const ConfigGiftbagFriendList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGiftbagFriendList(ConfigGiftbagFriendList&& from) noexcept
    : ConfigGiftbagFriendList() {
    *this = ::std::move(from);
  }

  inline ConfigGiftbagFriendList& operator=(ConfigGiftbagFriendList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGiftbagFriendList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGiftbagFriendList* internal_default_instance() {
    return reinterpret_cast<const ConfigGiftbagFriendList*>(
               &_ConfigGiftbagFriendList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void UnsafeArenaSwap(ConfigGiftbagFriendList* other);
  void Swap(ConfigGiftbagFriendList* other);
  friend void swap(ConfigGiftbagFriendList& a, ConfigGiftbagFriendList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGiftbagFriendList* New() const final {
    return CreateMaybeMessage<ConfigGiftbagFriendList>(NULL);
  }

  ConfigGiftbagFriendList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigGiftbagFriendList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigGiftbagFriendList& from);
  void MergeFrom(const ConfigGiftbagFriendList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigGiftbagFriendList* other);
  protected:
  explicit ConfigGiftbagFriendList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigGiftbagFriend list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigGiftbagFriend* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFriend >*
      mutable_list();
  const ::db::ConfigGiftbagFriend& list(int index) const;
  ::db::ConfigGiftbagFriend* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFriend >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigGiftbagFriendList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFriend > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameCharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameCharge) */ {
 public:
  GameCharge();
  virtual ~GameCharge();

  GameCharge(const GameCharge& from);

  inline GameCharge& operator=(const GameCharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameCharge(GameCharge&& from) noexcept
    : GameCharge() {
    *this = ::std::move(from);
  }

  inline GameCharge& operator=(GameCharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameCharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameCharge* internal_default_instance() {
    return reinterpret_cast<const GameCharge*>(
               &_GameCharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void UnsafeArenaSwap(GameCharge* other);
  void Swap(GameCharge* other);
  friend void swap(GameCharge& a, GameCharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameCharge* New() const final {
    return CreateMaybeMessage<GameCharge>(NULL);
  }

  GameCharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameCharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameCharge& from);
  void MergeFrom(const GameCharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameCharge* other);
  protected:
  explicit GameCharge(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required bytes platid = 11;
  bool has_platid() const;
  void clear_platid();
  static const int kPlatidFieldNumber = 11;
  const ::std::string& platid() const;
  void set_platid(const ::std::string& value);
  #if LANG_CXX11
  void set_platid(::std::string&& value);
  #endif
  void set_platid(const char* value);
  void set_platid(const void* value, size_t size);
  ::std::string* mutable_platid();
  ::std::string* release_platid();
  void set_allocated_platid(::std::string* platid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_platid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_platid(
      ::std::string* platid);

  // required bytes ordernum = 12;
  bool has_ordernum() const;
  void clear_ordernum();
  static const int kOrdernumFieldNumber = 12;
  const ::std::string& ordernum() const;
  void set_ordernum(const ::std::string& value);
  #if LANG_CXX11
  void set_ordernum(::std::string&& value);
  #endif
  void set_ordernum(const char* value);
  void set_ordernum(const void* value, size_t size);
  ::std::string* mutable_ordernum();
  ::std::string* release_ordernum();
  void set_allocated_ordernum(::std::string* ordernum);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ordernum();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ordernum(
      ::std::string* ordernum);

  // required bytes order_receipt = 13;
  bool has_order_receipt() const;
  void clear_order_receipt();
  static const int kOrderReceiptFieldNumber = 13;
  const ::std::string& order_receipt() const;
  void set_order_receipt(const ::std::string& value);
  #if LANG_CXX11
  void set_order_receipt(::std::string&& value);
  #endif
  void set_order_receipt(const char* value);
  void set_order_receipt(const void* value, size_t size);
  ::std::string* mutable_order_receipt();
  ::std::string* release_order_receipt();
  void set_allocated_order_receipt(::std::string* order_receipt);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_order_receipt();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_order_receipt(
      ::std::string* order_receipt);

  // required bytes order_createtime = 14;
  bool has_order_createtime() const;
  void clear_order_createtime();
  static const int kOrderCreatetimeFieldNumber = 14;
  const ::std::string& order_createtime() const;
  void set_order_createtime(const ::std::string& value);
  #if LANG_CXX11
  void set_order_createtime(::std::string&& value);
  #endif
  void set_order_createtime(const char* value);
  void set_order_createtime(const void* value, size_t size);
  ::std::string* mutable_order_createtime();
  ::std::string* release_order_createtime();
  void set_allocated_order_createtime(::std::string* order_createtime);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_order_createtime();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_order_createtime(
      ::std::string* order_createtime);

  // required bytes order_notifytime = 15;
  bool has_order_notifytime() const;
  void clear_order_notifytime();
  static const int kOrderNotifytimeFieldNumber = 15;
  const ::std::string& order_notifytime() const;
  void set_order_notifytime(const ::std::string& value);
  #if LANG_CXX11
  void set_order_notifytime(::std::string&& value);
  #endif
  void set_order_notifytime(const char* value);
  void set_order_notifytime(const void* value, size_t size);
  ::std::string* mutable_order_notifytime();
  ::std::string* release_order_notifytime();
  void set_allocated_order_notifytime(::std::string* order_notifytime);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_order_notifytime();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_order_notifytime(
      ::std::string* order_notifytime);

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required float charge_cash = 3;
  bool has_charge_cash() const;
  void clear_charge_cash();
  static const int kChargeCashFieldNumber = 3;
  float charge_cash() const;
  void set_charge_cash(float value);

  // required int32 charge_type = 4;
  bool has_charge_type() const;
  void clear_charge_type();
  static const int kChargeTypeFieldNumber = 4;
  ::google::protobuf::int32 charge_type() const;
  void set_charge_type(::google::protobuf::int32 value);

  // required int32 charge_state = 5;
  bool has_charge_state() const;
  void clear_charge_state();
  static const int kChargeStateFieldNumber = 5;
  ::google::protobuf::int32 charge_state() const;
  void set_charge_state(::google::protobuf::int32 value);

  // required int32 goodsid = 16;
  bool has_goodsid() const;
  void clear_goodsid();
  static const int kGoodsidFieldNumber = 16;
  ::google::protobuf::int32 goodsid() const;
  void set_goodsid(::google::protobuf::int32 value);

  // required sfixed64 createtime = 21;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreatetimeFieldNumber = 21;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // required sfixed64 optime = 22;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 22;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameCharge)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_userid();
  void clear_has_userid();
  void set_has_charge_cash();
  void clear_has_charge_cash();
  void set_has_charge_type();
  void clear_has_charge_type();
  void set_has_charge_state();
  void clear_has_charge_state();
  void set_has_platid();
  void clear_has_platid();
  void set_has_ordernum();
  void clear_has_ordernum();
  void set_has_order_receipt();
  void clear_has_order_receipt();
  void set_has_order_createtime();
  void clear_has_order_createtime();
  void set_has_order_notifytime();
  void clear_has_order_notifytime();
  void set_has_goodsid();
  void clear_has_goodsid();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr platid_;
  ::google::protobuf::internal::ArenaStringPtr ordernum_;
  ::google::protobuf::internal::ArenaStringPtr order_receipt_;
  ::google::protobuf::internal::ArenaStringPtr order_createtime_;
  ::google::protobuf::internal::ArenaStringPtr order_notifytime_;
  ::google::protobuf::uint64 id_;
  float charge_cash_;
  ::google::protobuf::int32 charge_type_;
  ::google::protobuf::int32 charge_state_;
  ::google::protobuf::int32 goodsid_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameChargeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameChargeList) */ {
 public:
  GameChargeList();
  virtual ~GameChargeList();

  GameChargeList(const GameChargeList& from);

  inline GameChargeList& operator=(const GameChargeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameChargeList(GameChargeList&& from) noexcept
    : GameChargeList() {
    *this = ::std::move(from);
  }

  inline GameChargeList& operator=(GameChargeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameChargeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameChargeList* internal_default_instance() {
    return reinterpret_cast<const GameChargeList*>(
               &_GameChargeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void UnsafeArenaSwap(GameChargeList* other);
  void Swap(GameChargeList* other);
  friend void swap(GameChargeList& a, GameChargeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameChargeList* New() const final {
    return CreateMaybeMessage<GameChargeList>(NULL);
  }

  GameChargeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameChargeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameChargeList& from);
  void MergeFrom(const GameChargeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameChargeList* other);
  protected:
  explicit GameChargeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.GameCharge list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::GameCharge* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::GameCharge >*
      mutable_list();
  const ::db::GameCharge& list(int index) const;
  ::db::GameCharge* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::GameCharge >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.GameChargeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::GameCharge > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserChargeAndGiftbagFirstCharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserChargeAndGiftbagFirstCharge) */ {
 public:
  UserChargeAndGiftbagFirstCharge();
  virtual ~UserChargeAndGiftbagFirstCharge();

  UserChargeAndGiftbagFirstCharge(const UserChargeAndGiftbagFirstCharge& from);

  inline UserChargeAndGiftbagFirstCharge& operator=(const UserChargeAndGiftbagFirstCharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserChargeAndGiftbagFirstCharge(UserChargeAndGiftbagFirstCharge&& from) noexcept
    : UserChargeAndGiftbagFirstCharge() {
    *this = ::std::move(from);
  }

  inline UserChargeAndGiftbagFirstCharge& operator=(UserChargeAndGiftbagFirstCharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserChargeAndGiftbagFirstCharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserChargeAndGiftbagFirstCharge* internal_default_instance() {
    return reinterpret_cast<const UserChargeAndGiftbagFirstCharge*>(
               &_UserChargeAndGiftbagFirstCharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void UnsafeArenaSwap(UserChargeAndGiftbagFirstCharge* other);
  void Swap(UserChargeAndGiftbagFirstCharge* other);
  friend void swap(UserChargeAndGiftbagFirstCharge& a, UserChargeAndGiftbagFirstCharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserChargeAndGiftbagFirstCharge* New() const final {
    return CreateMaybeMessage<UserChargeAndGiftbagFirstCharge>(NULL);
  }

  UserChargeAndGiftbagFirstCharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserChargeAndGiftbagFirstCharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserChargeAndGiftbagFirstCharge& from);
  void MergeFrom(const UserChargeAndGiftbagFirstCharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserChargeAndGiftbagFirstCharge* other);
  protected:
  explicit UserChargeAndGiftbagFirstCharge(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required uint64 charge_subtype = 2;
  bool has_charge_subtype() const;
  void clear_charge_subtype();
  static const int kChargeSubtypeFieldNumber = 2;
  ::google::protobuf::uint64 charge_subtype() const;
  void set_charge_subtype(::google::protobuf::uint64 value);

  // required sfixed64 charge_time = 3;
  bool has_charge_time() const;
  void clear_charge_time();
  static const int kChargeTimeFieldNumber = 3;
  ::google::protobuf::int64 charge_time() const;
  void set_charge_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserChargeAndGiftbagFirstCharge)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_charge_subtype();
  void clear_has_charge_subtype();
  void set_has_charge_time();
  void clear_has_charge_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::uint64 charge_subtype_;
  ::google::protobuf::int64 charge_time_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserChargeAndGiftbagFirstChargeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserChargeAndGiftbagFirstChargeList) */ {
 public:
  UserChargeAndGiftbagFirstChargeList();
  virtual ~UserChargeAndGiftbagFirstChargeList();

  UserChargeAndGiftbagFirstChargeList(const UserChargeAndGiftbagFirstChargeList& from);

  inline UserChargeAndGiftbagFirstChargeList& operator=(const UserChargeAndGiftbagFirstChargeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserChargeAndGiftbagFirstChargeList(UserChargeAndGiftbagFirstChargeList&& from) noexcept
    : UserChargeAndGiftbagFirstChargeList() {
    *this = ::std::move(from);
  }

  inline UserChargeAndGiftbagFirstChargeList& operator=(UserChargeAndGiftbagFirstChargeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserChargeAndGiftbagFirstChargeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserChargeAndGiftbagFirstChargeList* internal_default_instance() {
    return reinterpret_cast<const UserChargeAndGiftbagFirstChargeList*>(
               &_UserChargeAndGiftbagFirstChargeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void UnsafeArenaSwap(UserChargeAndGiftbagFirstChargeList* other);
  void Swap(UserChargeAndGiftbagFirstChargeList* other);
  friend void swap(UserChargeAndGiftbagFirstChargeList& a, UserChargeAndGiftbagFirstChargeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserChargeAndGiftbagFirstChargeList* New() const final {
    return CreateMaybeMessage<UserChargeAndGiftbagFirstChargeList>(NULL);
  }

  UserChargeAndGiftbagFirstChargeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserChargeAndGiftbagFirstChargeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserChargeAndGiftbagFirstChargeList& from);
  void MergeFrom(const UserChargeAndGiftbagFirstChargeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserChargeAndGiftbagFirstChargeList* other);
  protected:
  explicit UserChargeAndGiftbagFirstChargeList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.UserChargeAndGiftbagFirstCharge list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::UserChargeAndGiftbagFirstCharge* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::UserChargeAndGiftbagFirstCharge >*
      mutable_list();
  const ::db::UserChargeAndGiftbagFirstCharge& list(int index) const;
  ::db::UserChargeAndGiftbagFirstCharge* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::UserChargeAndGiftbagFirstCharge >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.UserChargeAndGiftbagFirstChargeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::UserChargeAndGiftbagFirstCharge > list_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_game_charge_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_game_charge.Parameter) */ {
 public:
  proc_load_game_charge_Parameter();
  virtual ~proc_load_game_charge_Parameter();

  proc_load_game_charge_Parameter(const proc_load_game_charge_Parameter& from);

  inline proc_load_game_charge_Parameter& operator=(const proc_load_game_charge_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_game_charge_Parameter(proc_load_game_charge_Parameter&& from) noexcept
    : proc_load_game_charge_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_load_game_charge_Parameter& operator=(proc_load_game_charge_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_game_charge_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_game_charge_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_load_game_charge_Parameter*>(
               &_proc_load_game_charge_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void UnsafeArenaSwap(proc_load_game_charge_Parameter* other);
  void Swap(proc_load_game_charge_Parameter* other);
  friend void swap(proc_load_game_charge_Parameter& a, proc_load_game_charge_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_game_charge_Parameter* New() const final {
    return CreateMaybeMessage<proc_load_game_charge_Parameter>(NULL);
  }

  proc_load_game_charge_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_game_charge_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_game_charge_Parameter& from);
  void MergeFrom(const proc_load_game_charge_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_game_charge_Parameter* other);
  protected:
  explicit proc_load_game_charge_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 p_last_topid = 1;
  bool has_p_last_topid() const;
  void clear_p_last_topid();
  static const int kPLastTopidFieldNumber = 1;
  ::google::protobuf::uint64 p_last_topid() const;
  void set_p_last_topid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:db.proc_load_game_charge.Parameter)
 private:
  void set_has_p_last_topid();
  void clear_has_p_last_topid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 p_last_topid_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_game_charge_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_game_charge.ReturnRecord) */ {
 public:
  proc_load_game_charge_ReturnRecord();
  virtual ~proc_load_game_charge_ReturnRecord();

  proc_load_game_charge_ReturnRecord(const proc_load_game_charge_ReturnRecord& from);

  inline proc_load_game_charge_ReturnRecord& operator=(const proc_load_game_charge_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_game_charge_ReturnRecord(proc_load_game_charge_ReturnRecord&& from) noexcept
    : proc_load_game_charge_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_load_game_charge_ReturnRecord& operator=(proc_load_game_charge_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_game_charge_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_game_charge_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_load_game_charge_ReturnRecord*>(
               &_proc_load_game_charge_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void UnsafeArenaSwap(proc_load_game_charge_ReturnRecord* other);
  void Swap(proc_load_game_charge_ReturnRecord* other);
  friend void swap(proc_load_game_charge_ReturnRecord& a, proc_load_game_charge_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_game_charge_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_load_game_charge_ReturnRecord>(NULL);
  }

  proc_load_game_charge_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_game_charge_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_game_charge_ReturnRecord& from);
  void MergeFrom(const proc_load_game_charge_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_game_charge_ReturnRecord* other);
  protected:
  explicit proc_load_game_charge_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.GameCharge item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  private:
  const ::db::GameCharge& _internal_item() const;
  public:
  const ::db::GameCharge& item() const;
  ::db::GameCharge* release_item();
  ::db::GameCharge* mutable_item();
  void set_allocated_item(::db::GameCharge* item);
  void unsafe_arena_set_allocated_item(
      ::db::GameCharge* item);
  ::db::GameCharge* unsafe_arena_release_item();

  // @@protoc_insertion_point(class_scope:db.proc_load_game_charge.ReturnRecord)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::GameCharge* item_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_game_charge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_game_charge) */ {
 public:
  proc_load_game_charge();
  virtual ~proc_load_game_charge();

  proc_load_game_charge(const proc_load_game_charge& from);

  inline proc_load_game_charge& operator=(const proc_load_game_charge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_game_charge(proc_load_game_charge&& from) noexcept
    : proc_load_game_charge() {
    *this = ::std::move(from);
  }

  inline proc_load_game_charge& operator=(proc_load_game_charge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_game_charge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_game_charge* internal_default_instance() {
    return reinterpret_cast<const proc_load_game_charge*>(
               &_proc_load_game_charge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void UnsafeArenaSwap(proc_load_game_charge* other);
  void Swap(proc_load_game_charge* other);
  friend void swap(proc_load_game_charge& a, proc_load_game_charge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_game_charge* New() const final {
    return CreateMaybeMessage<proc_load_game_charge>(NULL);
  }

  proc_load_game_charge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_game_charge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_game_charge& from);
  void MergeFrom(const proc_load_game_charge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_game_charge* other);
  protected:
  explicit proc_load_game_charge(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_load_game_charge_Parameter Parameter;
  typedef proc_load_game_charge_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_load_game_charge.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_load_game_charge_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_game_charge_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_load_game_charge_ReturnRecord& return_record_list(int index) const;
  ::db::proc_load_game_charge_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_load_game_charge_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_load_game_charge.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_load_game_charge_Parameter& _internal_param() const;
  public:
  const ::db::proc_load_game_charge_Parameter& param() const;
  ::db::proc_load_game_charge_Parameter* release_param();
  ::db::proc_load_game_charge_Parameter* mutable_param();
  void set_allocated_param(::db::proc_load_game_charge_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_load_game_charge_Parameter* param);
  ::db::proc_load_game_charge_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_load_game_charge)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_game_charge_ReturnRecord > return_record_list_;
  ::db::proc_load_game_charge_Parameter* param_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_save_game_charge_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_save_game_charge.Parameter) */ {
 public:
  proc_save_game_charge_Parameter();
  virtual ~proc_save_game_charge_Parameter();

  proc_save_game_charge_Parameter(const proc_save_game_charge_Parameter& from);

  inline proc_save_game_charge_Parameter& operator=(const proc_save_game_charge_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_save_game_charge_Parameter(proc_save_game_charge_Parameter&& from) noexcept
    : proc_save_game_charge_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_save_game_charge_Parameter& operator=(proc_save_game_charge_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_save_game_charge_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_save_game_charge_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_save_game_charge_Parameter*>(
               &_proc_save_game_charge_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void UnsafeArenaSwap(proc_save_game_charge_Parameter* other);
  void Swap(proc_save_game_charge_Parameter* other);
  friend void swap(proc_save_game_charge_Parameter& a, proc_save_game_charge_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_save_game_charge_Parameter* New() const final {
    return CreateMaybeMessage<proc_save_game_charge_Parameter>(NULL);
  }

  proc_save_game_charge_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_save_game_charge_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_save_game_charge_Parameter& from);
  void MergeFrom(const proc_save_game_charge_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_save_game_charge_Parameter* other);
  protected:
  explicit proc_save_game_charge_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes p_receipt = 3;
  bool has_p_receipt() const;
  void clear_p_receipt();
  static const int kPReceiptFieldNumber = 3;
  const ::std::string& p_receipt() const;
  void set_p_receipt(const ::std::string& value);
  #if LANG_CXX11
  void set_p_receipt(::std::string&& value);
  #endif
  void set_p_receipt(const char* value);
  void set_p_receipt(const void* value, size_t size);
  ::std::string* mutable_p_receipt();
  ::std::string* release_p_receipt();
  void set_allocated_p_receipt(::std::string* p_receipt);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_receipt();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_receipt(
      ::std::string* p_receipt);

  // required uint64 p_id = 1;
  bool has_p_id() const;
  void clear_p_id();
  static const int kPIdFieldNumber = 1;
  ::google::protobuf::uint64 p_id() const;
  void set_p_id(::google::protobuf::uint64 value);

  // required sfixed64 p_optime = 4;
  bool has_p_optime() const;
  void clear_p_optime();
  static const int kPOptimeFieldNumber = 4;
  ::google::protobuf::int64 p_optime() const;
  void set_p_optime(::google::protobuf::int64 value);

  // required int32 p_state = 2;
  bool has_p_state() const;
  void clear_p_state();
  static const int kPStateFieldNumber = 2;
  ::google::protobuf::int32 p_state() const;
  void set_p_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.proc_save_game_charge.Parameter)
 private:
  void set_has_p_id();
  void clear_has_p_id();
  void set_has_p_state();
  void clear_has_p_state();
  void set_has_p_receipt();
  void clear_has_p_receipt();
  void set_has_p_optime();
  void clear_has_p_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr p_receipt_;
  ::google::protobuf::uint64 p_id_;
  ::google::protobuf::int64 p_optime_;
  ::google::protobuf::int32 p_state_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_save_game_charge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_save_game_charge) */ {
 public:
  proc_save_game_charge();
  virtual ~proc_save_game_charge();

  proc_save_game_charge(const proc_save_game_charge& from);

  inline proc_save_game_charge& operator=(const proc_save_game_charge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_save_game_charge(proc_save_game_charge&& from) noexcept
    : proc_save_game_charge() {
    *this = ::std::move(from);
  }

  inline proc_save_game_charge& operator=(proc_save_game_charge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_save_game_charge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_save_game_charge* internal_default_instance() {
    return reinterpret_cast<const proc_save_game_charge*>(
               &_proc_save_game_charge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void UnsafeArenaSwap(proc_save_game_charge* other);
  void Swap(proc_save_game_charge* other);
  friend void swap(proc_save_game_charge& a, proc_save_game_charge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_save_game_charge* New() const final {
    return CreateMaybeMessage<proc_save_game_charge>(NULL);
  }

  proc_save_game_charge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_save_game_charge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_save_game_charge& from);
  void MergeFrom(const proc_save_game_charge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_save_game_charge* other);
  protected:
  explicit proc_save_game_charge(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_save_game_charge_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_save_game_charge.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_save_game_charge_Parameter& _internal_param() const;
  public:
  const ::db::proc_save_game_charge_Parameter& param() const;
  ::db::proc_save_game_charge_Parameter* release_param();
  ::db::proc_save_game_charge_Parameter* mutable_param();
  void set_allocated_param(::db::proc_save_game_charge_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_save_game_charge_Parameter* param);
  ::db::proc_save_game_charge_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_save_game_charge)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_save_game_charge_Parameter* param_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_create_game_charge_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_create_game_charge.Parameter) */ {
 public:
  proc_create_game_charge_Parameter();
  virtual ~proc_create_game_charge_Parameter();

  proc_create_game_charge_Parameter(const proc_create_game_charge_Parameter& from);

  inline proc_create_game_charge_Parameter& operator=(const proc_create_game_charge_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_create_game_charge_Parameter(proc_create_game_charge_Parameter&& from) noexcept
    : proc_create_game_charge_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_create_game_charge_Parameter& operator=(proc_create_game_charge_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_create_game_charge_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_create_game_charge_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_create_game_charge_Parameter*>(
               &_proc_create_game_charge_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void UnsafeArenaSwap(proc_create_game_charge_Parameter* other);
  void Swap(proc_create_game_charge_Parameter* other);
  friend void swap(proc_create_game_charge_Parameter& a, proc_create_game_charge_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_create_game_charge_Parameter* New() const final {
    return CreateMaybeMessage<proc_create_game_charge_Parameter>(NULL);
  }

  proc_create_game_charge_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_create_game_charge_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_create_game_charge_Parameter& from);
  void MergeFrom(const proc_create_game_charge_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_create_game_charge_Parameter* other);
  protected:
  explicit proc_create_game_charge_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes p_userid = 1;
  bool has_p_userid() const;
  void clear_p_userid();
  static const int kPUseridFieldNumber = 1;
  const ::std::string& p_userid() const;
  void set_p_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_p_userid(::std::string&& value);
  #endif
  void set_p_userid(const char* value);
  void set_p_userid(const void* value, size_t size);
  ::std::string* mutable_p_userid();
  ::std::string* release_p_userid();
  void set_allocated_p_userid(::std::string* p_userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_userid(
      ::std::string* p_userid);

  // required bytes p_platid = 11;
  bool has_p_platid() const;
  void clear_p_platid();
  static const int kPPlatidFieldNumber = 11;
  const ::std::string& p_platid() const;
  void set_p_platid(const ::std::string& value);
  #if LANG_CXX11
  void set_p_platid(::std::string&& value);
  #endif
  void set_p_platid(const char* value);
  void set_p_platid(const void* value, size_t size);
  ::std::string* mutable_p_platid();
  ::std::string* release_p_platid();
  void set_allocated_p_platid(::std::string* p_platid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_platid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_platid(
      ::std::string* p_platid);

  // required bytes p_ordernum = 12;
  bool has_p_ordernum() const;
  void clear_p_ordernum();
  static const int kPOrdernumFieldNumber = 12;
  const ::std::string& p_ordernum() const;
  void set_p_ordernum(const ::std::string& value);
  #if LANG_CXX11
  void set_p_ordernum(::std::string&& value);
  #endif
  void set_p_ordernum(const char* value);
  void set_p_ordernum(const void* value, size_t size);
  ::std::string* mutable_p_ordernum();
  ::std::string* release_p_ordernum();
  void set_allocated_p_ordernum(::std::string* p_ordernum);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_ordernum();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_ordernum(
      ::std::string* p_ordernum);

  // required bytes p_order_receipt = 13;
  bool has_p_order_receipt() const;
  void clear_p_order_receipt();
  static const int kPOrderReceiptFieldNumber = 13;
  const ::std::string& p_order_receipt() const;
  void set_p_order_receipt(const ::std::string& value);
  #if LANG_CXX11
  void set_p_order_receipt(::std::string&& value);
  #endif
  void set_p_order_receipt(const char* value);
  void set_p_order_receipt(const void* value, size_t size);
  ::std::string* mutable_p_order_receipt();
  ::std::string* release_p_order_receipt();
  void set_allocated_p_order_receipt(::std::string* p_order_receipt);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_order_receipt();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_order_receipt(
      ::std::string* p_order_receipt);

  // required bytes p_order_createtime = 14;
  bool has_p_order_createtime() const;
  void clear_p_order_createtime();
  static const int kPOrderCreatetimeFieldNumber = 14;
  const ::std::string& p_order_createtime() const;
  void set_p_order_createtime(const ::std::string& value);
  #if LANG_CXX11
  void set_p_order_createtime(::std::string&& value);
  #endif
  void set_p_order_createtime(const char* value);
  void set_p_order_createtime(const void* value, size_t size);
  ::std::string* mutable_p_order_createtime();
  ::std::string* release_p_order_createtime();
  void set_allocated_p_order_createtime(::std::string* p_order_createtime);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_order_createtime();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_order_createtime(
      ::std::string* p_order_createtime);

  // required bytes p_order_notifytime = 15;
  bool has_p_order_notifytime() const;
  void clear_p_order_notifytime();
  static const int kPOrderNotifytimeFieldNumber = 15;
  const ::std::string& p_order_notifytime() const;
  void set_p_order_notifytime(const ::std::string& value);
  #if LANG_CXX11
  void set_p_order_notifytime(::std::string&& value);
  #endif
  void set_p_order_notifytime(const char* value);
  void set_p_order_notifytime(const void* value, size_t size);
  ::std::string* mutable_p_order_notifytime();
  ::std::string* release_p_order_notifytime();
  void set_allocated_p_order_notifytime(::std::string* p_order_notifytime);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_p_order_notifytime();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_p_order_notifytime(
      ::std::string* p_order_notifytime);

  // required float p_charge_cash = 2;
  bool has_p_charge_cash() const;
  void clear_p_charge_cash();
  static const int kPChargeCashFieldNumber = 2;
  float p_charge_cash() const;
  void set_p_charge_cash(float value);

  // required int32 p_charge_type = 3;
  bool has_p_charge_type() const;
  void clear_p_charge_type();
  static const int kPChargeTypeFieldNumber = 3;
  ::google::protobuf::int32 p_charge_type() const;
  void set_p_charge_type(::google::protobuf::int32 value);

  // required int32 p_charge_state = 4;
  bool has_p_charge_state() const;
  void clear_p_charge_state();
  static const int kPChargeStateFieldNumber = 4;
  ::google::protobuf::int32 p_charge_state() const;
  void set_p_charge_state(::google::protobuf::int32 value);

  // required int32 p_goods_id = 16;
  bool has_p_goods_id() const;
  void clear_p_goods_id();
  static const int kPGoodsIdFieldNumber = 16;
  ::google::protobuf::int32 p_goods_id() const;
  void set_p_goods_id(::google::protobuf::int32 value);

  // required sfixed64 p_optime = 21;
  bool has_p_optime() const;
  void clear_p_optime();
  static const int kPOptimeFieldNumber = 21;
  ::google::protobuf::int64 p_optime() const;
  void set_p_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.proc_create_game_charge.Parameter)
 private:
  void set_has_p_userid();
  void clear_has_p_userid();
  void set_has_p_charge_cash();
  void clear_has_p_charge_cash();
  void set_has_p_charge_type();
  void clear_has_p_charge_type();
  void set_has_p_charge_state();
  void clear_has_p_charge_state();
  void set_has_p_platid();
  void clear_has_p_platid();
  void set_has_p_ordernum();
  void clear_has_p_ordernum();
  void set_has_p_order_receipt();
  void clear_has_p_order_receipt();
  void set_has_p_order_createtime();
  void clear_has_p_order_createtime();
  void set_has_p_order_notifytime();
  void clear_has_p_order_notifytime();
  void set_has_p_goods_id();
  void clear_has_p_goods_id();
  void set_has_p_optime();
  void clear_has_p_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr p_userid_;
  ::google::protobuf::internal::ArenaStringPtr p_platid_;
  ::google::protobuf::internal::ArenaStringPtr p_ordernum_;
  ::google::protobuf::internal::ArenaStringPtr p_order_receipt_;
  ::google::protobuf::internal::ArenaStringPtr p_order_createtime_;
  ::google::protobuf::internal::ArenaStringPtr p_order_notifytime_;
  float p_charge_cash_;
  ::google::protobuf::int32 p_charge_type_;
  ::google::protobuf::int32 p_charge_state_;
  ::google::protobuf::int32 p_goods_id_;
  ::google::protobuf::int64 p_optime_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_create_game_charge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_create_game_charge) */ {
 public:
  proc_create_game_charge();
  virtual ~proc_create_game_charge();

  proc_create_game_charge(const proc_create_game_charge& from);

  inline proc_create_game_charge& operator=(const proc_create_game_charge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_create_game_charge(proc_create_game_charge&& from) noexcept
    : proc_create_game_charge() {
    *this = ::std::move(from);
  }

  inline proc_create_game_charge& operator=(proc_create_game_charge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_create_game_charge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_create_game_charge* internal_default_instance() {
    return reinterpret_cast<const proc_create_game_charge*>(
               &_proc_create_game_charge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void UnsafeArenaSwap(proc_create_game_charge* other);
  void Swap(proc_create_game_charge* other);
  friend void swap(proc_create_game_charge& a, proc_create_game_charge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_create_game_charge* New() const final {
    return CreateMaybeMessage<proc_create_game_charge>(NULL);
  }

  proc_create_game_charge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_create_game_charge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_create_game_charge& from);
  void MergeFrom(const proc_create_game_charge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_create_game_charge* other);
  protected:
  explicit proc_create_game_charge(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_create_game_charge_Parameter Parameter;

  // accessors -------------------------------------------------------

  // optional .db.proc_create_game_charge.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_create_game_charge_Parameter& _internal_param() const;
  public:
  const ::db::proc_create_game_charge_Parameter& param() const;
  ::db::proc_create_game_charge_Parameter* release_param();
  ::db::proc_create_game_charge_Parameter* mutable_param();
  void set_allocated_param(::db::proc_create_game_charge_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_create_game_charge_Parameter* param);
  ::db::proc_create_game_charge_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_create_game_charge)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::proc_create_game_charge_Parameter* param_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserMonthCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserMonthCard) */ {
 public:
  UserMonthCard();
  virtual ~UserMonthCard();

  UserMonthCard(const UserMonthCard& from);

  inline UserMonthCard& operator=(const UserMonthCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserMonthCard(UserMonthCard&& from) noexcept
    : UserMonthCard() {
    *this = ::std::move(from);
  }

  inline UserMonthCard& operator=(UserMonthCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMonthCard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserMonthCard* internal_default_instance() {
    return reinterpret_cast<const UserMonthCard*>(
               &_UserMonthCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void UnsafeArenaSwap(UserMonthCard* other);
  void Swap(UserMonthCard* other);
  friend void swap(UserMonthCard& a, UserMonthCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserMonthCard* New() const final {
    return CreateMaybeMessage<UserMonthCard>(NULL);
  }

  UserMonthCard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserMonthCard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserMonthCard& from);
  void MergeFrom(const UserMonthCard& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserMonthCard* other);
  protected:
  explicit UserMonthCard(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required int32 cardid = 2;
  bool has_cardid() const;
  void clear_cardid();
  static const int kCardidFieldNumber = 2;
  ::google::protobuf::int32 cardid() const;
  void set_cardid(::google::protobuf::int32 value);

  // required int32 buy_month_card_num = 3;
  bool has_buy_month_card_num() const;
  void clear_buy_month_card_num();
  static const int kBuyMonthCardNumFieldNumber = 3;
  ::google::protobuf::int32 buy_month_card_num() const;
  void set_buy_month_card_num(::google::protobuf::int32 value);

  // required sfixed64 buy_month_card_burntime = 4;
  bool has_buy_month_card_burntime() const;
  void clear_buy_month_card_burntime();
  static const int kBuyMonthCardBurntimeFieldNumber = 4;
  ::google::protobuf::int64 buy_month_card_burntime() const;
  void set_buy_month_card_burntime(::google::protobuf::int64 value);

  // required sfixed64 month_card_awardtime = 5;
  bool has_month_card_awardtime() const;
  void clear_month_card_awardtime();
  static const int kMonthCardAwardtimeFieldNumber = 5;
  ::google::protobuf::int64 month_card_awardtime() const;
  void set_month_card_awardtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserMonthCard)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_cardid();
  void clear_has_cardid();
  void set_has_buy_month_card_num();
  void clear_has_buy_month_card_num();
  void set_has_buy_month_card_burntime();
  void clear_has_buy_month_card_burntime();
  void set_has_month_card_awardtime();
  void clear_has_month_card_awardtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int32 cardid_;
  ::google::protobuf::int32 buy_month_card_num_;
  ::google::protobuf::int64 buy_month_card_burntime_;
  ::google::protobuf::int64 month_card_awardtime_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserRoleLvShopping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserRoleLvShopping) */ {
 public:
  UserRoleLvShopping();
  virtual ~UserRoleLvShopping();

  UserRoleLvShopping(const UserRoleLvShopping& from);

  inline UserRoleLvShopping& operator=(const UserRoleLvShopping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserRoleLvShopping(UserRoleLvShopping&& from) noexcept
    : UserRoleLvShopping() {
    *this = ::std::move(from);
  }

  inline UserRoleLvShopping& operator=(UserRoleLvShopping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRoleLvShopping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserRoleLvShopping* internal_default_instance() {
    return reinterpret_cast<const UserRoleLvShopping*>(
               &_UserRoleLvShopping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void UnsafeArenaSwap(UserRoleLvShopping* other);
  void Swap(UserRoleLvShopping* other);
  friend void swap(UserRoleLvShopping& a, UserRoleLvShopping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserRoleLvShopping* New() const final {
    return CreateMaybeMessage<UserRoleLvShopping>(NULL);
  }

  UserRoleLvShopping* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserRoleLvShopping>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserRoleLvShopping& from);
  void MergeFrom(const UserRoleLvShopping& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserRoleLvShopping* other);
  protected:
  explicit UserRoleLvShopping(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required uint64 giftbagid = 2;
  bool has_giftbagid() const;
  void clear_giftbagid();
  static const int kGiftbagidFieldNumber = 2;
  ::google::protobuf::uint64 giftbagid() const;
  void set_giftbagid(::google::protobuf::uint64 value);

  // required uint64 flag_reward = 3;
  bool has_flag_reward() const;
  void clear_flag_reward();
  static const int kFlagRewardFieldNumber = 3;
  ::google::protobuf::uint64 flag_reward() const;
  void set_flag_reward(::google::protobuf::uint64 value);

  // required sfixed64 awardtime = 4;
  bool has_awardtime() const;
  void clear_awardtime();
  static const int kAwardtimeFieldNumber = 4;
  ::google::protobuf::int64 awardtime() const;
  void set_awardtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserRoleLvShopping)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_giftbagid();
  void clear_has_giftbagid();
  void set_has_flag_reward();
  void clear_has_flag_reward();
  void set_has_awardtime();
  void clear_has_awardtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::uint64 giftbagid_;
  ::google::protobuf::uint64 flag_reward_;
  ::google::protobuf::int64 awardtime_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserStatsChargeAndGiftbag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserStatsChargeAndGiftbag) */ {
 public:
  UserStatsChargeAndGiftbag();
  virtual ~UserStatsChargeAndGiftbag();

  UserStatsChargeAndGiftbag(const UserStatsChargeAndGiftbag& from);

  inline UserStatsChargeAndGiftbag& operator=(const UserStatsChargeAndGiftbag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserStatsChargeAndGiftbag(UserStatsChargeAndGiftbag&& from) noexcept
    : UserStatsChargeAndGiftbag() {
    *this = ::std::move(from);
  }

  inline UserStatsChargeAndGiftbag& operator=(UserStatsChargeAndGiftbag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStatsChargeAndGiftbag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserStatsChargeAndGiftbag* internal_default_instance() {
    return reinterpret_cast<const UserStatsChargeAndGiftbag*>(
               &_UserStatsChargeAndGiftbag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void UnsafeArenaSwap(UserStatsChargeAndGiftbag* other);
  void Swap(UserStatsChargeAndGiftbag* other);
  friend void swap(UserStatsChargeAndGiftbag& a, UserStatsChargeAndGiftbag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserStatsChargeAndGiftbag* New() const final {
    return CreateMaybeMessage<UserStatsChargeAndGiftbag>(NULL);
  }

  UserStatsChargeAndGiftbag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserStatsChargeAndGiftbag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserStatsChargeAndGiftbag& from);
  void MergeFrom(const UserStatsChargeAndGiftbag& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserStatsChargeAndGiftbag* other);
  protected:
  explicit UserStatsChargeAndGiftbag(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required uint64 charge_pool_topid = 2;
  bool has_charge_pool_topid() const;
  void clear_charge_pool_topid();
  static const int kChargePoolTopidFieldNumber = 2;
  ::google::protobuf::uint64 charge_pool_topid() const;
  void set_charge_pool_topid(::google::protobuf::uint64 value);

  // required int32 friend_gift_accept_num_total = 63;
  bool has_friend_gift_accept_num_total() const;
  void clear_friend_gift_accept_num_total();
  static const int kFriendGiftAcceptNumTotalFieldNumber = 63;
  ::google::protobuf::int32 friend_gift_accept_num_total() const;
  void set_friend_gift_accept_num_total(::google::protobuf::int32 value);

  // required uint64 flag_role_signin_reward = 21;
  bool has_flag_role_signin_reward() const;
  void clear_flag_role_signin_reward();
  static const int kFlagRoleSigninRewardFieldNumber = 21;
  ::google::protobuf::uint64 flag_role_signin_reward() const;
  void set_flag_role_signin_reward(::google::protobuf::uint64 value);

  // required uint64 flag_role_signin = 22;
  bool has_flag_role_signin() const;
  void clear_flag_role_signin();
  static const int kFlagRoleSigninFieldNumber = 22;
  ::google::protobuf::uint64 flag_role_signin() const;
  void set_flag_role_signin(::google::protobuf::uint64 value);

  // required sfixed64 role_signin_burntime = 23;
  bool has_role_signin_burntime() const;
  void clear_role_signin_burntime();
  static const int kRoleSigninBurntimeFieldNumber = 23;
  ::google::protobuf::int64 role_signin_burntime() const;
  void set_role_signin_burntime(::google::protobuf::int64 value);

  // required int32 charge_point_num = 3;
  bool has_charge_point_num() const;
  void clear_charge_point_num();
  static const int kChargePointNumFieldNumber = 3;
  ::google::protobuf::int32 charge_point_num() const;
  void set_charge_point_num(::google::protobuf::int32 value);

  // required int32 friend_gift_give_num = 52;
  bool has_friend_gift_give_num() const;
  void clear_friend_gift_give_num();
  static const int kFriendGiftGiveNumFieldNumber = 52;
  ::google::protobuf::int32 friend_gift_give_num() const;
  void set_friend_gift_give_num(::google::protobuf::int32 value);

  // required uint64 flag_role_levelup_reward = 31;
  bool has_flag_role_levelup_reward() const;
  void clear_flag_role_levelup_reward();
  static const int kFlagRoleLevelupRewardFieldNumber = 31;
  ::google::protobuf::uint64 flag_role_levelup_reward() const;
  void set_flag_role_levelup_reward(::google::protobuf::uint64 value);

  // required uint64 flag_charge_reward = 32;
  bool has_flag_charge_reward() const;
  void clear_flag_charge_reward();
  static const int kFlagChargeRewardFieldNumber = 32;
  ::google::protobuf::uint64 flag_charge_reward() const;
  void set_flag_charge_reward(::google::protobuf::uint64 value);

  // required sfixed64 seven_day_signin_time = 41;
  bool has_seven_day_signin_time() const;
  void clear_seven_day_signin_time();
  static const int kSevenDaySigninTimeFieldNumber = 41;
  ::google::protobuf::int64 seven_day_signin_time() const;
  void set_seven_day_signin_time(::google::protobuf::int64 value);

  // required uint64 flag_seven_day_signin = 42;
  bool has_flag_seven_day_signin() const;
  void clear_flag_seven_day_signin();
  static const int kFlagSevenDaySigninFieldNumber = 42;
  ::google::protobuf::uint64 flag_seven_day_signin() const;
  void set_flag_seven_day_signin(::google::protobuf::uint64 value);

  // required uint64 flag_seven_day_signin_reward = 43;
  bool has_flag_seven_day_signin_reward() const;
  void clear_flag_seven_day_signin_reward();
  static const int kFlagSevenDaySigninRewardFieldNumber = 43;
  ::google::protobuf::uint64 flag_seven_day_signin_reward() const;
  void set_flag_seven_day_signin_reward(::google::protobuf::uint64 value);

  // required sfixed64 friend_gift_give_num_refreshtime = 51;
  bool has_friend_gift_give_num_refreshtime() const;
  void clear_friend_gift_give_num_refreshtime();
  static const int kFriendGiftGiveNumRefreshtimeFieldNumber = 51;
  ::google::protobuf::int64 friend_gift_give_num_refreshtime() const;
  void set_friend_gift_give_num_refreshtime(::google::protobuf::int64 value);

  // required int32 friend_gift_give_num_total = 53;
  bool has_friend_gift_give_num_total() const;
  void clear_friend_gift_give_num_total();
  static const int kFriendGiftGiveNumTotalFieldNumber = 53;
  ::google::protobuf::int32 friend_gift_give_num_total() const;
  void set_friend_gift_give_num_total(::google::protobuf::int32 value);

  // required int32 friend_gift_accept_num = 62;
  bool has_friend_gift_accept_num() const;
  void clear_friend_gift_accept_num();
  static const int kFriendGiftAcceptNumFieldNumber = 62;
  ::google::protobuf::int32 friend_gift_accept_num() const;
  void set_friend_gift_accept_num(::google::protobuf::int32 value);

  // required sfixed64 friend_gift_accept_num_refreshtime = 61;
  bool has_friend_gift_accept_num_refreshtime() const;
  void clear_friend_gift_accept_num_refreshtime();
  static const int kFriendGiftAcceptNumRefreshtimeFieldNumber = 61;
  ::google::protobuf::int64 friend_gift_accept_num_refreshtime() const;
  void set_friend_gift_accept_num_refreshtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserStatsChargeAndGiftbag)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_charge_pool_topid();
  void clear_has_charge_pool_topid();
  void set_has_charge_point_num();
  void clear_has_charge_point_num();
  void set_has_flag_role_signin_reward();
  void clear_has_flag_role_signin_reward();
  void set_has_flag_role_signin();
  void clear_has_flag_role_signin();
  void set_has_role_signin_burntime();
  void clear_has_role_signin_burntime();
  void set_has_flag_role_levelup_reward();
  void clear_has_flag_role_levelup_reward();
  void set_has_flag_charge_reward();
  void clear_has_flag_charge_reward();
  void set_has_seven_day_signin_time();
  void clear_has_seven_day_signin_time();
  void set_has_flag_seven_day_signin();
  void clear_has_flag_seven_day_signin();
  void set_has_flag_seven_day_signin_reward();
  void clear_has_flag_seven_day_signin_reward();
  void set_has_friend_gift_give_num_refreshtime();
  void clear_has_friend_gift_give_num_refreshtime();
  void set_has_friend_gift_give_num();
  void clear_has_friend_gift_give_num();
  void set_has_friend_gift_give_num_total();
  void clear_has_friend_gift_give_num_total();
  void set_has_friend_gift_accept_num_refreshtime();
  void clear_has_friend_gift_accept_num_refreshtime();
  void set_has_friend_gift_accept_num();
  void clear_has_friend_gift_accept_num();
  void set_has_friend_gift_accept_num_total();
  void clear_has_friend_gift_accept_num_total();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::uint64 charge_pool_topid_;
  ::google::protobuf::int32 friend_gift_accept_num_total_;
  ::google::protobuf::uint64 flag_role_signin_reward_;
  ::google::protobuf::uint64 flag_role_signin_;
  ::google::protobuf::int64 role_signin_burntime_;
  ::google::protobuf::int32 charge_point_num_;
  ::google::protobuf::int32 friend_gift_give_num_;
  ::google::protobuf::uint64 flag_role_levelup_reward_;
  ::google::protobuf::uint64 flag_charge_reward_;
  ::google::protobuf::int64 seven_day_signin_time_;
  ::google::protobuf::uint64 flag_seven_day_signin_;
  ::google::protobuf::uint64 flag_seven_day_signin_reward_;
  ::google::protobuf::int64 friend_gift_give_num_refreshtime_;
  ::google::protobuf::int32 friend_gift_give_num_total_;
  ::google::protobuf::int32 friend_gift_accept_num_;
  ::google::protobuf::int64 friend_gift_accept_num_refreshtime_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserActivityGiftbag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserActivityGiftbag) */ {
 public:
  UserActivityGiftbag();
  virtual ~UserActivityGiftbag();

  UserActivityGiftbag(const UserActivityGiftbag& from);

  inline UserActivityGiftbag& operator=(const UserActivityGiftbag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserActivityGiftbag(UserActivityGiftbag&& from) noexcept
    : UserActivityGiftbag() {
    *this = ::std::move(from);
  }

  inline UserActivityGiftbag& operator=(UserActivityGiftbag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserActivityGiftbag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserActivityGiftbag* internal_default_instance() {
    return reinterpret_cast<const UserActivityGiftbag*>(
               &_UserActivityGiftbag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void UnsafeArenaSwap(UserActivityGiftbag* other);
  void Swap(UserActivityGiftbag* other);
  friend void swap(UserActivityGiftbag& a, UserActivityGiftbag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserActivityGiftbag* New() const final {
    return CreateMaybeMessage<UserActivityGiftbag>(NULL);
  }

  UserActivityGiftbag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserActivityGiftbag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserActivityGiftbag& from);
  void MergeFrom(const UserActivityGiftbag& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserActivityGiftbag* other);
  protected:
  explicit UserActivityGiftbag(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required int32 activityid = 2;
  bool has_activityid() const;
  void clear_activityid();
  static const int kActivityidFieldNumber = 2;
  ::google::protobuf::int32 activityid() const;
  void set_activityid(::google::protobuf::int32 value);

  // required sfixed64 festival_signin_time = 41;
  bool has_festival_signin_time() const;
  void clear_festival_signin_time();
  static const int kFestivalSigninTimeFieldNumber = 41;
  ::google::protobuf::int64 festival_signin_time() const;
  void set_festival_signin_time(::google::protobuf::int64 value);

  // required uint64 flag_festival_signin = 42;
  bool has_flag_festival_signin() const;
  void clear_flag_festival_signin();
  static const int kFlagFestivalSigninFieldNumber = 42;
  ::google::protobuf::uint64 flag_festival_signin() const;
  void set_flag_festival_signin(::google::protobuf::uint64 value);

  // required uint64 flag_festival_signin_reward = 43;
  bool has_flag_festival_signin_reward() const;
  void clear_flag_festival_signin_reward();
  static const int kFlagFestivalSigninRewardFieldNumber = 43;
  ::google::protobuf::uint64 flag_festival_signin_reward() const;
  void set_flag_festival_signin_reward(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:db.UserActivityGiftbag)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_activityid();
  void clear_has_activityid();
  void set_has_festival_signin_time();
  void clear_has_festival_signin_time();
  void set_has_flag_festival_signin();
  void clear_has_flag_festival_signin();
  void set_has_flag_festival_signin_reward();
  void clear_has_flag_festival_signin_reward();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int32 activityid_;
  ::google::protobuf::int64 festival_signin_time_;
  ::google::protobuf::uint64 flag_festival_signin_;
  ::google::protobuf::uint64 flag_festival_signin_reward_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameGiftbagCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GameGiftbagCode) */ {
 public:
  GameGiftbagCode();
  virtual ~GameGiftbagCode();

  GameGiftbagCode(const GameGiftbagCode& from);

  inline GameGiftbagCode& operator=(const GameGiftbagCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameGiftbagCode(GameGiftbagCode&& from) noexcept
    : GameGiftbagCode() {
    *this = ::std::move(from);
  }

  inline GameGiftbagCode& operator=(GameGiftbagCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameGiftbagCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameGiftbagCode* internal_default_instance() {
    return reinterpret_cast<const GameGiftbagCode*>(
               &_GameGiftbagCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void UnsafeArenaSwap(GameGiftbagCode* other);
  void Swap(GameGiftbagCode* other);
  friend void swap(GameGiftbagCode& a, GameGiftbagCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameGiftbagCode* New() const final {
    return CreateMaybeMessage<GameGiftbagCode>(NULL);
  }

  GameGiftbagCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameGiftbagCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameGiftbagCode& from);
  void MergeFrom(const GameGiftbagCode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameGiftbagCode* other);
  protected:
  explicit GameGiftbagCode(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const void* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_code();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_code(
      ::std::string* code);

  // required bytes userid = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // optional sfixed64 active_time = 3;
  bool has_active_time() const;
  void clear_active_time();
  static const int kActiveTimeFieldNumber = 3;
  ::google::protobuf::int64 active_time() const;
  void set_active_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GameGiftbagCode)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_userid();
  void clear_has_userid();
  void set_has_active_time();
  void clear_has_active_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::int64 active_time_;
  friend struct ::protobuf_StoredProcChargeAndGiftbag_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigActivityTime

// required int32 id = 1;
inline bool ConfigActivityTime::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigActivityTime::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigActivityTime::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigActivityTime::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigActivityTime::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigActivityTime.id)
  return id_;
}
inline void ConfigActivityTime::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigActivityTime.id)
}

// required int32 type = 2;
inline bool ConfigActivityTime::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigActivityTime::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigActivityTime::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigActivityTime::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConfigActivityTime::type() const {
  // @@protoc_insertion_point(field_get:db.ConfigActivityTime.type)
  return type_;
}
inline void ConfigActivityTime::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigActivityTime.type)
}

// required bytes name = 3;
inline bool ConfigActivityTime::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigActivityTime::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigActivityTime::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigActivityTime::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigActivityTime::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigActivityTime.name)
  return name_.Get();
}
inline void ConfigActivityTime::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigActivityTime.name)
}
#if LANG_CXX11
inline void ConfigActivityTime::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigActivityTime.name)
}
#endif
inline void ConfigActivityTime::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigActivityTime.name)
}
inline void ConfigActivityTime::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigActivityTime.name)
}
inline ::std::string* ConfigActivityTime::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigActivityTime.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigActivityTime::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigActivityTime.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigActivityTime::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigActivityTime.name)
}
inline ::std::string* ConfigActivityTime::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigActivityTime.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigActivityTime::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigActivityTime.name)
}

// required bytes desc = 4;
inline bool ConfigActivityTime::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigActivityTime::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigActivityTime::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigActivityTime::clear_desc() {
  desc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_desc();
}
inline const ::std::string& ConfigActivityTime::desc() const {
  // @@protoc_insertion_point(field_get:db.ConfigActivityTime.desc)
  return desc_.Get();
}
inline void ConfigActivityTime::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigActivityTime.desc)
}
#if LANG_CXX11
inline void ConfigActivityTime::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigActivityTime.desc)
}
#endif
inline void ConfigActivityTime::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigActivityTime.desc)
}
inline void ConfigActivityTime::set_desc(const void* value,
    size_t size) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigActivityTime.desc)
}
inline ::std::string* ConfigActivityTime::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:db.ConfigActivityTime.desc)
  return desc_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigActivityTime::release_desc() {
  // @@protoc_insertion_point(field_release:db.ConfigActivityTime.desc)
  if (!has_desc()) {
    return NULL;
  }
  clear_has_desc();
  return desc_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigActivityTime::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigActivityTime.desc)
}
inline ::std::string* ConfigActivityTime::unsafe_arena_release_desc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigActivityTime.desc)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_desc();
  return desc_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigActivityTime::unsafe_arena_set_allocated_desc(
    ::std::string* desc) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      desc, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigActivityTime.desc)
}

// required int32 disable = 5;
inline bool ConfigActivityTime::has_disable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigActivityTime::set_has_disable() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigActivityTime::clear_has_disable() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigActivityTime::clear_disable() {
  disable_ = 0;
  clear_has_disable();
}
inline ::google::protobuf::int32 ConfigActivityTime::disable() const {
  // @@protoc_insertion_point(field_get:db.ConfigActivityTime.disable)
  return disable_;
}
inline void ConfigActivityTime::set_disable(::google::protobuf::int32 value) {
  set_has_disable();
  disable_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigActivityTime.disable)
}

// required sfixed64 begin_time = 6;
inline bool ConfigActivityTime::has_begin_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigActivityTime::set_has_begin_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigActivityTime::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigActivityTime::clear_begin_time() {
  begin_time_ = GOOGLE_LONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::int64 ConfigActivityTime::begin_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigActivityTime.begin_time)
  return begin_time_;
}
inline void ConfigActivityTime::set_begin_time(::google::protobuf::int64 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigActivityTime.begin_time)
}

// required sfixed64 end_time = 7;
inline bool ConfigActivityTime::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigActivityTime::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigActivityTime::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigActivityTime::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 ConfigActivityTime::end_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigActivityTime.end_time)
  return end_time_;
}
inline void ConfigActivityTime::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigActivityTime.end_time)
}

// -------------------------------------------------------------------

// ConfigActivityTimeList

// repeated .db.ConfigActivityTime list = 1;
inline int ConfigActivityTimeList::list_size() const {
  return list_.size();
}
inline void ConfigActivityTimeList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigActivityTime* ConfigActivityTimeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigActivityTimeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigActivityTime >*
ConfigActivityTimeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigActivityTimeList.list)
  return &list_;
}
inline const ::db::ConfigActivityTime& ConfigActivityTimeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigActivityTimeList.list)
  return list_.Get(index);
}
inline ::db::ConfigActivityTime* ConfigActivityTimeList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigActivityTimeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigActivityTime >&
ConfigActivityTimeList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigActivityTimeList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagFirstCharge

// required int32 charge_subtype = 1;
inline bool ConfigGiftbagFirstCharge::has_charge_subtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGiftbagFirstCharge::set_has_charge_subtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGiftbagFirstCharge::clear_has_charge_subtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGiftbagFirstCharge::clear_charge_subtype() {
  charge_subtype_ = 0;
  clear_has_charge_subtype();
}
inline ::google::protobuf::int32 ConfigGiftbagFirstCharge::charge_subtype() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFirstCharge.charge_subtype)
  return charge_subtype_;
}
inline void ConfigGiftbagFirstCharge::set_charge_subtype(::google::protobuf::int32 value) {
  set_has_charge_subtype();
  charge_subtype_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFirstCharge.charge_subtype)
}

// required bytes name = 2;
inline bool ConfigGiftbagFirstCharge::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagFirstCharge::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagFirstCharge::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagFirstCharge::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigGiftbagFirstCharge::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFirstCharge.name)
  return name_.Get();
}
inline void ConfigGiftbagFirstCharge::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFirstCharge.name)
}
#if LANG_CXX11
inline void ConfigGiftbagFirstCharge::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagFirstCharge.name)
}
#endif
inline void ConfigGiftbagFirstCharge::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagFirstCharge.name)
}
inline void ConfigGiftbagFirstCharge::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagFirstCharge.name)
}
inline ::std::string* ConfigGiftbagFirstCharge::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagFirstCharge.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagFirstCharge::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagFirstCharge.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagFirstCharge::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagFirstCharge.name)
}
inline ::std::string* ConfigGiftbagFirstCharge::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagFirstCharge.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagFirstCharge::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagFirstCharge.name)
}

// required bytes reward = 3;
inline bool ConfigGiftbagFirstCharge::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagFirstCharge::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagFirstCharge::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagFirstCharge::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGiftbagFirstCharge::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFirstCharge.reward)
  return reward_.Get();
}
inline void ConfigGiftbagFirstCharge::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFirstCharge.reward)
}
#if LANG_CXX11
inline void ConfigGiftbagFirstCharge::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagFirstCharge.reward)
}
#endif
inline void ConfigGiftbagFirstCharge::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagFirstCharge.reward)
}
inline void ConfigGiftbagFirstCharge::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagFirstCharge.reward)
}
inline ::std::string* ConfigGiftbagFirstCharge::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagFirstCharge.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagFirstCharge::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagFirstCharge.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagFirstCharge::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagFirstCharge.reward)
}
inline ::std::string* ConfigGiftbagFirstCharge::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagFirstCharge.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagFirstCharge::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagFirstCharge.reward)
}

// -------------------------------------------------------------------

// ConfigGiftbagFirstChargeList

// repeated .db.ConfigGiftbagFirstCharge list = 1;
inline int ConfigGiftbagFirstChargeList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagFirstChargeList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagFirstCharge* ConfigGiftbagFirstChargeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagFirstChargeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFirstCharge >*
ConfigGiftbagFirstChargeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagFirstChargeList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagFirstCharge& ConfigGiftbagFirstChargeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFirstChargeList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagFirstCharge* ConfigGiftbagFirstChargeList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagFirstChargeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFirstCharge >&
ConfigGiftbagFirstChargeList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagFirstChargeList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagCharge

// required int32 chargeid = 1;
inline bool ConfigGiftbagCharge::has_chargeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGiftbagCharge::set_has_chargeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGiftbagCharge::clear_has_chargeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGiftbagCharge::clear_chargeid() {
  chargeid_ = 0;
  clear_has_chargeid();
}
inline ::google::protobuf::int32 ConfigGiftbagCharge::chargeid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCharge.chargeid)
  return chargeid_;
}
inline void ConfigGiftbagCharge::set_chargeid(::google::protobuf::int32 value) {
  set_has_chargeid();
  chargeid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCharge.chargeid)
}

// required bytes name = 2;
inline bool ConfigGiftbagCharge::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagCharge::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagCharge::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagCharge::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigGiftbagCharge::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCharge.name)
  return name_.Get();
}
inline void ConfigGiftbagCharge::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCharge.name)
}
#if LANG_CXX11
inline void ConfigGiftbagCharge::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagCharge.name)
}
#endif
inline void ConfigGiftbagCharge::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagCharge.name)
}
inline void ConfigGiftbagCharge::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagCharge.name)
}
inline ::std::string* ConfigGiftbagCharge::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagCharge.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagCharge::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagCharge.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagCharge::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagCharge.name)
}
inline ::std::string* ConfigGiftbagCharge::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagCharge.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagCharge::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagCharge.name)
}

// required float cash = 3;
inline bool ConfigGiftbagCharge::has_cash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGiftbagCharge::set_has_cash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGiftbagCharge::clear_has_cash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGiftbagCharge::clear_cash() {
  cash_ = 0;
  clear_has_cash();
}
inline float ConfigGiftbagCharge::cash() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCharge.cash)
  return cash_;
}
inline void ConfigGiftbagCharge::set_cash(float value) {
  set_has_cash();
  cash_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCharge.cash)
}

// required bytes reward = 4;
inline bool ConfigGiftbagCharge::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagCharge::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagCharge::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagCharge::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGiftbagCharge::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCharge.reward)
  return reward_.Get();
}
inline void ConfigGiftbagCharge::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCharge.reward)
}
#if LANG_CXX11
inline void ConfigGiftbagCharge::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagCharge.reward)
}
#endif
inline void ConfigGiftbagCharge::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagCharge.reward)
}
inline void ConfigGiftbagCharge::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagCharge.reward)
}
inline ::std::string* ConfigGiftbagCharge::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagCharge.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagCharge::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagCharge.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagCharge::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagCharge.reward)
}
inline ::std::string* ConfigGiftbagCharge::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagCharge.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagCharge::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagCharge.reward)
}

// -------------------------------------------------------------------

// ConfigGiftbagChargeList

// repeated .db.ConfigGiftbagCharge list = 1;
inline int ConfigGiftbagChargeList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagChargeList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagCharge* ConfigGiftbagChargeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagChargeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCharge >*
ConfigGiftbagChargeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagChargeList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagCharge& ConfigGiftbagChargeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagChargeList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagCharge* ConfigGiftbagChargeList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagChargeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCharge >&
ConfigGiftbagChargeList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagChargeList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagSevenDay

// required int32 dayid = 1;
inline bool ConfigGiftbagSevenDay::has_dayid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagSevenDay::set_has_dayid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagSevenDay::clear_has_dayid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagSevenDay::clear_dayid() {
  dayid_ = 0;
  clear_has_dayid();
}
inline ::google::protobuf::int32 ConfigGiftbagSevenDay::dayid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagSevenDay.dayid)
  return dayid_;
}
inline void ConfigGiftbagSevenDay::set_dayid(::google::protobuf::int32 value) {
  set_has_dayid();
  dayid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagSevenDay.dayid)
}

// required bytes reward = 2;
inline bool ConfigGiftbagSevenDay::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagSevenDay::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagSevenDay::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagSevenDay::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGiftbagSevenDay::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagSevenDay.reward)
  return reward_.Get();
}
inline void ConfigGiftbagSevenDay::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagSevenDay.reward)
}
#if LANG_CXX11
inline void ConfigGiftbagSevenDay::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagSevenDay.reward)
}
#endif
inline void ConfigGiftbagSevenDay::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagSevenDay.reward)
}
inline void ConfigGiftbagSevenDay::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagSevenDay.reward)
}
inline ::std::string* ConfigGiftbagSevenDay::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagSevenDay.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagSevenDay::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagSevenDay.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagSevenDay::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagSevenDay.reward)
}
inline ::std::string* ConfigGiftbagSevenDay::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagSevenDay.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagSevenDay::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagSevenDay.reward)
}

// -------------------------------------------------------------------

// ConfigGiftbagSevenDayList

// repeated .db.ConfigGiftbagSevenDay list = 1;
inline int ConfigGiftbagSevenDayList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagSevenDayList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagSevenDay* ConfigGiftbagSevenDayList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagSevenDayList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagSevenDay >*
ConfigGiftbagSevenDayList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagSevenDayList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagSevenDay& ConfigGiftbagSevenDayList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagSevenDayList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagSevenDay* ConfigGiftbagSevenDayList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagSevenDayList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagSevenDay >&
ConfigGiftbagSevenDayList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagSevenDayList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagFestival

// required int32 activityid = 1;
inline bool ConfigGiftbagFestival::has_activityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagFestival::set_has_activityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagFestival::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagFestival::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 ConfigGiftbagFestival::activityid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFestival.activityid)
  return activityid_;
}
inline void ConfigGiftbagFestival::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFestival.activityid)
}

// required int32 dayid = 2;
inline bool ConfigGiftbagFestival::has_dayid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGiftbagFestival::set_has_dayid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGiftbagFestival::clear_has_dayid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGiftbagFestival::clear_dayid() {
  dayid_ = 0;
  clear_has_dayid();
}
inline ::google::protobuf::int32 ConfigGiftbagFestival::dayid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFestival.dayid)
  return dayid_;
}
inline void ConfigGiftbagFestival::set_dayid(::google::protobuf::int32 value) {
  set_has_dayid();
  dayid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFestival.dayid)
}

// required bytes reward = 3;
inline bool ConfigGiftbagFestival::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagFestival::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagFestival::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagFestival::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGiftbagFestival::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFestival.reward)
  return reward_.Get();
}
inline void ConfigGiftbagFestival::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFestival.reward)
}
#if LANG_CXX11
inline void ConfigGiftbagFestival::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagFestival.reward)
}
#endif
inline void ConfigGiftbagFestival::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagFestival.reward)
}
inline void ConfigGiftbagFestival::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagFestival.reward)
}
inline ::std::string* ConfigGiftbagFestival::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagFestival.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagFestival::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagFestival.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagFestival::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagFestival.reward)
}
inline ::std::string* ConfigGiftbagFestival::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagFestival.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagFestival::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagFestival.reward)
}

// -------------------------------------------------------------------

// ConfigGiftbagFestivalList

// repeated .db.ConfigGiftbagFestival list = 1;
inline int ConfigGiftbagFestivalList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagFestivalList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagFestival* ConfigGiftbagFestivalList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagFestivalList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFestival >*
ConfigGiftbagFestivalList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagFestivalList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagFestival& ConfigGiftbagFestivalList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFestivalList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagFestival* ConfigGiftbagFestivalList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagFestivalList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFestival >&
ConfigGiftbagFestivalList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagFestivalList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagMonthCard

// required int32 cardid = 1;
inline bool ConfigGiftbagMonthCard::has_cardid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_cardid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigGiftbagMonthCard::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigGiftbagMonthCard::clear_cardid() {
  cardid_ = 0;
  clear_has_cardid();
}
inline ::google::protobuf::int32 ConfigGiftbagMonthCard::cardid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.cardid)
  return cardid_;
}
inline void ConfigGiftbagMonthCard::set_cardid(::google::protobuf::int32 value) {
  set_has_cardid();
  cardid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.cardid)
}

// required bytes name = 2;
inline bool ConfigGiftbagMonthCard::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagMonthCard::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagMonthCard::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& ConfigGiftbagMonthCard::name() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.name)
  return name_.Get();
}
inline void ConfigGiftbagMonthCard::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.name)
}
#if LANG_CXX11
inline void ConfigGiftbagMonthCard::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagMonthCard.name)
}
#endif
inline void ConfigGiftbagMonthCard::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagMonthCard.name)
}
inline void ConfigGiftbagMonthCard::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagMonthCard.name)
}
inline ::std::string* ConfigGiftbagMonthCard::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagMonthCard.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagMonthCard::release_name() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagMonthCard.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagMonthCard::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagMonthCard.name)
}
inline ::std::string* ConfigGiftbagMonthCard::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagMonthCard.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagMonthCard::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagMonthCard.name)
}

// required bytes desc = 3;
inline bool ConfigGiftbagMonthCard::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagMonthCard::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagMonthCard::clear_desc() {
  desc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_desc();
}
inline const ::std::string& ConfigGiftbagMonthCard::desc() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.desc)
  return desc_.Get();
}
inline void ConfigGiftbagMonthCard::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.desc)
}
#if LANG_CXX11
inline void ConfigGiftbagMonthCard::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagMonthCard.desc)
}
#endif
inline void ConfigGiftbagMonthCard::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagMonthCard.desc)
}
inline void ConfigGiftbagMonthCard::set_desc(const void* value,
    size_t size) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagMonthCard.desc)
}
inline ::std::string* ConfigGiftbagMonthCard::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagMonthCard.desc)
  return desc_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagMonthCard::release_desc() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagMonthCard.desc)
  if (!has_desc()) {
    return NULL;
  }
  clear_has_desc();
  return desc_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagMonthCard::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagMonthCard.desc)
}
inline ::std::string* ConfigGiftbagMonthCard::unsafe_arena_release_desc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagMonthCard.desc)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_desc();
  return desc_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagMonthCard::unsafe_arena_set_allocated_desc(
    ::std::string* desc) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      desc, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagMonthCard.desc)
}

// required int32 card_days = 4;
inline bool ConfigGiftbagMonthCard::has_card_days() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_card_days() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigGiftbagMonthCard::clear_has_card_days() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigGiftbagMonthCard::clear_card_days() {
  card_days_ = 0;
  clear_has_card_days();
}
inline ::google::protobuf::int32 ConfigGiftbagMonthCard::card_days() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.card_days)
  return card_days_;
}
inline void ConfigGiftbagMonthCard::set_card_days(::google::protobuf::int32 value) {
  set_has_card_days();
  card_days_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.card_days)
}

// required bytes reward = 5;
inline bool ConfigGiftbagMonthCard::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGiftbagMonthCard::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGiftbagMonthCard::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGiftbagMonthCard::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.reward)
  return reward_.Get();
}
inline void ConfigGiftbagMonthCard::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.reward)
}
#if LANG_CXX11
inline void ConfigGiftbagMonthCard::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagMonthCard.reward)
}
#endif
inline void ConfigGiftbagMonthCard::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagMonthCard.reward)
}
inline void ConfigGiftbagMonthCard::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagMonthCard.reward)
}
inline ::std::string* ConfigGiftbagMonthCard::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagMonthCard.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagMonthCard::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagMonthCard.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagMonthCard::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagMonthCard.reward)
}
inline ::std::string* ConfigGiftbagMonthCard::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagMonthCard.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagMonthCard::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagMonthCard.reward)
}

// required float passenger_refresh_time_ratio = 11;
inline bool ConfigGiftbagMonthCard::has_passenger_refresh_time_ratio() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_passenger_refresh_time_ratio() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigGiftbagMonthCard::clear_has_passenger_refresh_time_ratio() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigGiftbagMonthCard::clear_passenger_refresh_time_ratio() {
  passenger_refresh_time_ratio_ = 0;
  clear_has_passenger_refresh_time_ratio();
}
inline float ConfigGiftbagMonthCard::passenger_refresh_time_ratio() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.passenger_refresh_time_ratio)
  return passenger_refresh_time_ratio_;
}
inline void ConfigGiftbagMonthCard::set_passenger_refresh_time_ratio(float value) {
  set_has_passenger_refresh_time_ratio();
  passenger_refresh_time_ratio_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.passenger_refresh_time_ratio)
}

// required float role_exp_ratio = 12;
inline bool ConfigGiftbagMonthCard::has_role_exp_ratio() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_role_exp_ratio() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigGiftbagMonthCard::clear_has_role_exp_ratio() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigGiftbagMonthCard::clear_role_exp_ratio() {
  role_exp_ratio_ = 0;
  clear_has_role_exp_ratio();
}
inline float ConfigGiftbagMonthCard::role_exp_ratio() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.role_exp_ratio)
  return role_exp_ratio_;
}
inline void ConfigGiftbagMonthCard::set_role_exp_ratio(float value) {
  set_has_role_exp_ratio();
  role_exp_ratio_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.role_exp_ratio)
}

// required float sailor_exp_ratio = 13;
inline bool ConfigGiftbagMonthCard::has_sailor_exp_ratio() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_sailor_exp_ratio() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigGiftbagMonthCard::clear_has_sailor_exp_ratio() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigGiftbagMonthCard::clear_sailor_exp_ratio() {
  sailor_exp_ratio_ = 0;
  clear_has_sailor_exp_ratio();
}
inline float ConfigGiftbagMonthCard::sailor_exp_ratio() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.sailor_exp_ratio)
  return sailor_exp_ratio_;
}
inline void ConfigGiftbagMonthCard::set_sailor_exp_ratio(float value) {
  set_has_sailor_exp_ratio();
  sailor_exp_ratio_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.sailor_exp_ratio)
}

// required int32 ghost_ship_reset_num = 14;
inline bool ConfigGiftbagMonthCard::has_ghost_ship_reset_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_ghost_ship_reset_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConfigGiftbagMonthCard::clear_has_ghost_ship_reset_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConfigGiftbagMonthCard::clear_ghost_ship_reset_num() {
  ghost_ship_reset_num_ = 0;
  clear_has_ghost_ship_reset_num();
}
inline ::google::protobuf::int32 ConfigGiftbagMonthCard::ghost_ship_reset_num() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.ghost_ship_reset_num)
  return ghost_ship_reset_num_;
}
inline void ConfigGiftbagMonthCard::set_ghost_ship_reset_num(::google::protobuf::int32 value) {
  set_has_ghost_ship_reset_num();
  ghost_ship_reset_num_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.ghost_ship_reset_num)
}

// required int32 free_resurrection_num = 15;
inline bool ConfigGiftbagMonthCard::has_free_resurrection_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_free_resurrection_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigGiftbagMonthCard::clear_has_free_resurrection_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigGiftbagMonthCard::clear_free_resurrection_num() {
  free_resurrection_num_ = 0;
  clear_has_free_resurrection_num();
}
inline ::google::protobuf::int32 ConfigGiftbagMonthCard::free_resurrection_num() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.free_resurrection_num)
  return free_resurrection_num_;
}
inline void ConfigGiftbagMonthCard::set_free_resurrection_num(::google::protobuf::int32 value) {
  set_has_free_resurrection_num();
  free_resurrection_num_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.free_resurrection_num)
}

// required bytes pirate_ship_fight_num = 16;
inline bool ConfigGiftbagMonthCard::has_pirate_ship_fight_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGiftbagMonthCard::set_has_pirate_ship_fight_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGiftbagMonthCard::clear_has_pirate_ship_fight_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGiftbagMonthCard::clear_pirate_ship_fight_num() {
  pirate_ship_fight_num_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_pirate_ship_fight_num();
}
inline const ::std::string& ConfigGiftbagMonthCard::pirate_ship_fight_num() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
  return pirate_ship_fight_num_.Get();
}
inline void ConfigGiftbagMonthCard::set_pirate_ship_fight_num(const ::std::string& value) {
  set_has_pirate_ship_fight_num();
  pirate_ship_fight_num_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
}
#if LANG_CXX11
inline void ConfigGiftbagMonthCard::set_pirate_ship_fight_num(::std::string&& value) {
  set_has_pirate_ship_fight_num();
  pirate_ship_fight_num_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
}
#endif
inline void ConfigGiftbagMonthCard::set_pirate_ship_fight_num(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pirate_ship_fight_num();
  pirate_ship_fight_num_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
}
inline void ConfigGiftbagMonthCard::set_pirate_ship_fight_num(const void* value,
    size_t size) {
  set_has_pirate_ship_fight_num();
  pirate_ship_fight_num_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
}
inline ::std::string* ConfigGiftbagMonthCard::mutable_pirate_ship_fight_num() {
  set_has_pirate_ship_fight_num();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
  return pirate_ship_fight_num_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagMonthCard::release_pirate_ship_fight_num() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
  if (!has_pirate_ship_fight_num()) {
    return NULL;
  }
  clear_has_pirate_ship_fight_num();
  return pirate_ship_fight_num_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagMonthCard::set_allocated_pirate_ship_fight_num(::std::string* pirate_ship_fight_num) {
  if (pirate_ship_fight_num != NULL) {
    set_has_pirate_ship_fight_num();
  } else {
    clear_has_pirate_ship_fight_num();
  }
  pirate_ship_fight_num_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pirate_ship_fight_num,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
}
inline ::std::string* ConfigGiftbagMonthCard::unsafe_arena_release_pirate_ship_fight_num() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_pirate_ship_fight_num();
  return pirate_ship_fight_num_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagMonthCard::unsafe_arena_set_allocated_pirate_ship_fight_num(
    ::std::string* pirate_ship_fight_num) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pirate_ship_fight_num != NULL) {
    set_has_pirate_ship_fight_num();
  } else {
    clear_has_pirate_ship_fight_num();
  }
  pirate_ship_fight_num_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pirate_ship_fight_num, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagMonthCard.pirate_ship_fight_num)
}

// -------------------------------------------------------------------

// ConfigGiftbagMonthCardList

// repeated .db.ConfigGiftbagMonthCard list = 1;
inline int ConfigGiftbagMonthCardList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagMonthCardList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagMonthCard* ConfigGiftbagMonthCardList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagMonthCardList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagMonthCard >*
ConfigGiftbagMonthCardList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagMonthCardList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagMonthCard& ConfigGiftbagMonthCardList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagMonthCardList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagMonthCard* ConfigGiftbagMonthCardList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagMonthCardList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagMonthCard >&
ConfigGiftbagMonthCardList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagMonthCardList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagRoleSignin

// required int32 id = 1;
inline bool ConfigGiftbagRoleSignin::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGiftbagRoleSignin::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGiftbagRoleSignin::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGiftbagRoleSignin::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ConfigGiftbagRoleSignin::id() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleSignin.id)
  return id_;
}
inline void ConfigGiftbagRoleSignin::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleSignin.id)
}

// required int32 dayid = 2;
inline bool ConfigGiftbagRoleSignin::has_dayid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGiftbagRoleSignin::set_has_dayid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGiftbagRoleSignin::clear_has_dayid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGiftbagRoleSignin::clear_dayid() {
  dayid_ = 0;
  clear_has_dayid();
}
inline ::google::protobuf::int32 ConfigGiftbagRoleSignin::dayid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleSignin.dayid)
  return dayid_;
}
inline void ConfigGiftbagRoleSignin::set_dayid(::google::protobuf::int32 value) {
  set_has_dayid();
  dayid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleSignin.dayid)
}

// required bytes reward = 3;
inline bool ConfigGiftbagRoleSignin::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagRoleSignin::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagRoleSignin::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagRoleSignin::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGiftbagRoleSignin::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleSignin.reward)
  return reward_.Get();
}
inline void ConfigGiftbagRoleSignin::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleSignin.reward)
}
#if LANG_CXX11
inline void ConfigGiftbagRoleSignin::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagRoleSignin.reward)
}
#endif
inline void ConfigGiftbagRoleSignin::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagRoleSignin.reward)
}
inline void ConfigGiftbagRoleSignin::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagRoleSignin.reward)
}
inline ::std::string* ConfigGiftbagRoleSignin::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleSignin.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagRoleSignin::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagRoleSignin.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleSignin::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagRoleSignin.reward)
}
inline ::std::string* ConfigGiftbagRoleSignin::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagRoleSignin.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleSignin::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagRoleSignin.reward)
}

// required bytes extra_reward = 4;
inline bool ConfigGiftbagRoleSignin::has_extra_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagRoleSignin::set_has_extra_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagRoleSignin::clear_has_extra_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagRoleSignin::clear_extra_reward() {
  extra_reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_extra_reward();
}
inline const ::std::string& ConfigGiftbagRoleSignin::extra_reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleSignin.extra_reward)
  return extra_reward_.Get();
}
inline void ConfigGiftbagRoleSignin::set_extra_reward(const ::std::string& value) {
  set_has_extra_reward();
  extra_reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleSignin.extra_reward)
}
#if LANG_CXX11
inline void ConfigGiftbagRoleSignin::set_extra_reward(::std::string&& value) {
  set_has_extra_reward();
  extra_reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagRoleSignin.extra_reward)
}
#endif
inline void ConfigGiftbagRoleSignin::set_extra_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extra_reward();
  extra_reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagRoleSignin.extra_reward)
}
inline void ConfigGiftbagRoleSignin::set_extra_reward(const void* value,
    size_t size) {
  set_has_extra_reward();
  extra_reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagRoleSignin.extra_reward)
}
inline ::std::string* ConfigGiftbagRoleSignin::mutable_extra_reward() {
  set_has_extra_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleSignin.extra_reward)
  return extra_reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagRoleSignin::release_extra_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagRoleSignin.extra_reward)
  if (!has_extra_reward()) {
    return NULL;
  }
  clear_has_extra_reward();
  return extra_reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleSignin::set_allocated_extra_reward(::std::string* extra_reward) {
  if (extra_reward != NULL) {
    set_has_extra_reward();
  } else {
    clear_has_extra_reward();
  }
  extra_reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra_reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagRoleSignin.extra_reward)
}
inline ::std::string* ConfigGiftbagRoleSignin::unsafe_arena_release_extra_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagRoleSignin.extra_reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_extra_reward();
  return extra_reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleSignin::unsafe_arena_set_allocated_extra_reward(
    ::std::string* extra_reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (extra_reward != NULL) {
    set_has_extra_reward();
  } else {
    clear_has_extra_reward();
  }
  extra_reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      extra_reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagRoleSignin.extra_reward)
}

// -------------------------------------------------------------------

// ConfigGiftbagRoleSigninList

// repeated .db.ConfigGiftbagRoleSignin list = 1;
inline int ConfigGiftbagRoleSigninList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagRoleSigninList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagRoleSignin* ConfigGiftbagRoleSigninList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleSigninList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleSignin >*
ConfigGiftbagRoleSigninList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagRoleSigninList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagRoleSignin& ConfigGiftbagRoleSigninList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleSigninList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagRoleSignin* ConfigGiftbagRoleSigninList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagRoleSigninList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleSignin >&
ConfigGiftbagRoleSigninList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagRoleSigninList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagRoleLevelup

// required int32 levelid = 1;
inline bool ConfigGiftbagRoleLevelup::has_levelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagRoleLevelup::set_has_levelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagRoleLevelup::clear_has_levelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagRoleLevelup::clear_levelid() {
  levelid_ = 0;
  clear_has_levelid();
}
inline ::google::protobuf::int32 ConfigGiftbagRoleLevelup::levelid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLevelup.levelid)
  return levelid_;
}
inline void ConfigGiftbagRoleLevelup::set_levelid(::google::protobuf::int32 value) {
  set_has_levelid();
  levelid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleLevelup.levelid)
}

// required bytes reward = 2;
inline bool ConfigGiftbagRoleLevelup::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagRoleLevelup::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagRoleLevelup::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagRoleLevelup::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGiftbagRoleLevelup::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLevelup.reward)
  return reward_.Get();
}
inline void ConfigGiftbagRoleLevelup::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleLevelup.reward)
}
#if LANG_CXX11
inline void ConfigGiftbagRoleLevelup::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagRoleLevelup.reward)
}
#endif
inline void ConfigGiftbagRoleLevelup::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagRoleLevelup.reward)
}
inline void ConfigGiftbagRoleLevelup::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagRoleLevelup.reward)
}
inline ::std::string* ConfigGiftbagRoleLevelup::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleLevelup.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagRoleLevelup::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagRoleLevelup.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleLevelup::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagRoleLevelup.reward)
}
inline ::std::string* ConfigGiftbagRoleLevelup::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagRoleLevelup.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleLevelup::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagRoleLevelup.reward)
}

// -------------------------------------------------------------------

// ConfigGiftbagRoleLevelupList

// repeated .db.ConfigGiftbagRoleLevelup list = 1;
inline int ConfigGiftbagRoleLevelupList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagRoleLevelupList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagRoleLevelup* ConfigGiftbagRoleLevelupList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleLevelupList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLevelup >*
ConfigGiftbagRoleLevelupList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagRoleLevelupList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagRoleLevelup& ConfigGiftbagRoleLevelupList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLevelupList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagRoleLevelup* ConfigGiftbagRoleLevelupList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagRoleLevelupList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLevelup >&
ConfigGiftbagRoleLevelupList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagRoleLevelupList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagRoleLvShopping

// required uint64 giftbagid = 1;
inline bool ConfigGiftbagRoleLvShopping::has_giftbagid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGiftbagRoleLvShopping::set_has_giftbagid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGiftbagRoleLvShopping::clear_has_giftbagid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGiftbagRoleLvShopping::clear_giftbagid() {
  giftbagid_ = GOOGLE_ULONGLONG(0);
  clear_has_giftbagid();
}
inline ::google::protobuf::uint64 ConfigGiftbagRoleLvShopping::giftbagid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLvShopping.giftbagid)
  return giftbagid_;
}
inline void ConfigGiftbagRoleLvShopping::set_giftbagid(::google::protobuf::uint64 value) {
  set_has_giftbagid();
  giftbagid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleLvShopping.giftbagid)
}

// required int32 levelid = 2;
inline bool ConfigGiftbagRoleLvShopping::has_levelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigGiftbagRoleLvShopping::set_has_levelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigGiftbagRoleLvShopping::clear_has_levelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigGiftbagRoleLvShopping::clear_levelid() {
  levelid_ = 0;
  clear_has_levelid();
}
inline ::google::protobuf::int32 ConfigGiftbagRoleLvShopping::levelid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLvShopping.levelid)
  return levelid_;
}
inline void ConfigGiftbagRoleLvShopping::set_levelid(::google::protobuf::int32 value) {
  set_has_levelid();
  levelid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleLvShopping.levelid)
}

// required bytes reward = 3;
inline bool ConfigGiftbagRoleLvShopping::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagRoleLvShopping::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagRoleLvShopping::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagRoleLvShopping::clear_reward() {
  reward_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_reward();
}
inline const ::std::string& ConfigGiftbagRoleLvShopping::reward() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLvShopping.reward)
  return reward_.Get();
}
inline void ConfigGiftbagRoleLvShopping::set_reward(const ::std::string& value) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleLvShopping.reward)
}
#if LANG_CXX11
inline void ConfigGiftbagRoleLvShopping::set_reward(::std::string&& value) {
  set_has_reward();
  reward_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagRoleLvShopping.reward)
}
#endif
inline void ConfigGiftbagRoleLvShopping::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagRoleLvShopping.reward)
}
inline void ConfigGiftbagRoleLvShopping::set_reward(const void* value,
    size_t size) {
  set_has_reward();
  reward_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagRoleLvShopping.reward)
}
inline ::std::string* ConfigGiftbagRoleLvShopping::mutable_reward() {
  set_has_reward();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleLvShopping.reward)
  return reward_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagRoleLvShopping::release_reward() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagRoleLvShopping.reward)
  if (!has_reward()) {
    return NULL;
  }
  clear_has_reward();
  return reward_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleLvShopping::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagRoleLvShopping.reward)
}
inline ::std::string* ConfigGiftbagRoleLvShopping::unsafe_arena_release_reward() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagRoleLvShopping.reward)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_reward();
  return reward_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleLvShopping::unsafe_arena_set_allocated_reward(
    ::std::string* reward) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward != NULL) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagRoleLvShopping.reward)
}

// required bytes mail_title = 4;
inline bool ConfigGiftbagRoleLvShopping::has_mail_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagRoleLvShopping::set_has_mail_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagRoleLvShopping::clear_has_mail_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagRoleLvShopping::clear_mail_title() {
  mail_title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_mail_title();
}
inline const ::std::string& ConfigGiftbagRoleLvShopping::mail_title() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLvShopping.mail_title)
  return mail_title_.Get();
}
inline void ConfigGiftbagRoleLvShopping::set_mail_title(const ::std::string& value) {
  set_has_mail_title();
  mail_title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleLvShopping.mail_title)
}
#if LANG_CXX11
inline void ConfigGiftbagRoleLvShopping::set_mail_title(::std::string&& value) {
  set_has_mail_title();
  mail_title_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagRoleLvShopping.mail_title)
}
#endif
inline void ConfigGiftbagRoleLvShopping::set_mail_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_title();
  mail_title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagRoleLvShopping.mail_title)
}
inline void ConfigGiftbagRoleLvShopping::set_mail_title(const void* value,
    size_t size) {
  set_has_mail_title();
  mail_title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagRoleLvShopping.mail_title)
}
inline ::std::string* ConfigGiftbagRoleLvShopping::mutable_mail_title() {
  set_has_mail_title();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleLvShopping.mail_title)
  return mail_title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagRoleLvShopping::release_mail_title() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagRoleLvShopping.mail_title)
  if (!has_mail_title()) {
    return NULL;
  }
  clear_has_mail_title();
  return mail_title_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleLvShopping::set_allocated_mail_title(::std::string* mail_title) {
  if (mail_title != NULL) {
    set_has_mail_title();
  } else {
    clear_has_mail_title();
  }
  mail_title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagRoleLvShopping.mail_title)
}
inline ::std::string* ConfigGiftbagRoleLvShopping::unsafe_arena_release_mail_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagRoleLvShopping.mail_title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_mail_title();
  return mail_title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleLvShopping::unsafe_arena_set_allocated_mail_title(
    ::std::string* mail_title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (mail_title != NULL) {
    set_has_mail_title();
  } else {
    clear_has_mail_title();
  }
  mail_title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      mail_title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagRoleLvShopping.mail_title)
}

// required bytes mail_text = 5;
inline bool ConfigGiftbagRoleLvShopping::has_mail_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGiftbagRoleLvShopping::set_has_mail_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGiftbagRoleLvShopping::clear_has_mail_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGiftbagRoleLvShopping::clear_mail_text() {
  mail_text_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_mail_text();
}
inline const ::std::string& ConfigGiftbagRoleLvShopping::mail_text() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLvShopping.mail_text)
  return mail_text_.Get();
}
inline void ConfigGiftbagRoleLvShopping::set_mail_text(const ::std::string& value) {
  set_has_mail_text();
  mail_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagRoleLvShopping.mail_text)
}
#if LANG_CXX11
inline void ConfigGiftbagRoleLvShopping::set_mail_text(::std::string&& value) {
  set_has_mail_text();
  mail_text_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagRoleLvShopping.mail_text)
}
#endif
inline void ConfigGiftbagRoleLvShopping::set_mail_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_text();
  mail_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagRoleLvShopping.mail_text)
}
inline void ConfigGiftbagRoleLvShopping::set_mail_text(const void* value,
    size_t size) {
  set_has_mail_text();
  mail_text_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagRoleLvShopping.mail_text)
}
inline ::std::string* ConfigGiftbagRoleLvShopping::mutable_mail_text() {
  set_has_mail_text();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleLvShopping.mail_text)
  return mail_text_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagRoleLvShopping::release_mail_text() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagRoleLvShopping.mail_text)
  if (!has_mail_text()) {
    return NULL;
  }
  clear_has_mail_text();
  return mail_text_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleLvShopping::set_allocated_mail_text(::std::string* mail_text) {
  if (mail_text != NULL) {
    set_has_mail_text();
  } else {
    clear_has_mail_text();
  }
  mail_text_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_text,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagRoleLvShopping.mail_text)
}
inline ::std::string* ConfigGiftbagRoleLvShopping::unsafe_arena_release_mail_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagRoleLvShopping.mail_text)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_mail_text();
  return mail_text_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagRoleLvShopping::unsafe_arena_set_allocated_mail_text(
    ::std::string* mail_text) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (mail_text != NULL) {
    set_has_mail_text();
  } else {
    clear_has_mail_text();
  }
  mail_text_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      mail_text, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagRoleLvShopping.mail_text)
}

// -------------------------------------------------------------------

// ConfigGiftbagRoleLvShoppingList

// repeated .db.ConfigGiftbagRoleLvShopping list = 1;
inline int ConfigGiftbagRoleLvShoppingList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagRoleLvShoppingList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagRoleLvShopping* ConfigGiftbagRoleLvShoppingList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagRoleLvShoppingList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLvShopping >*
ConfigGiftbagRoleLvShoppingList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagRoleLvShoppingList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagRoleLvShopping& ConfigGiftbagRoleLvShoppingList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagRoleLvShoppingList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagRoleLvShopping* ConfigGiftbagRoleLvShoppingList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagRoleLvShoppingList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagRoleLvShopping >&
ConfigGiftbagRoleLvShoppingList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagRoleLvShoppingList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagCode

// required bytes code = 1;
inline bool ConfigGiftbagCode::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagCode::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagCode::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagCode::clear_code() {
  code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_code();
}
inline const ::std::string& ConfigGiftbagCode::code() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCode.code)
  return code_.Get();
}
inline void ConfigGiftbagCode::set_code(const ::std::string& value) {
  set_has_code();
  code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCode.code)
}
#if LANG_CXX11
inline void ConfigGiftbagCode::set_code(::std::string&& value) {
  set_has_code();
  code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagCode.code)
}
#endif
inline void ConfigGiftbagCode::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagCode.code)
}
inline void ConfigGiftbagCode::set_code(const void* value,
    size_t size) {
  set_has_code();
  code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagCode.code)
}
inline ::std::string* ConfigGiftbagCode::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagCode.code)
  return code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagCode::release_code() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagCode.code)
  if (!has_code()) {
    return NULL;
  }
  clear_has_code();
  return code_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagCode::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagCode.code)
}
inline ::std::string* ConfigGiftbagCode::unsafe_arena_release_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagCode.code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_code();
  return code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagCode::unsafe_arena_set_allocated_code(
    ::std::string* code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagCode.code)
}

// required int32 type = 2;
inline bool ConfigGiftbagCode::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigGiftbagCode::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigGiftbagCode::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigGiftbagCode::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConfigGiftbagCode::type() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCode.type)
  return type_;
}
inline void ConfigGiftbagCode::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCode.type)
}

// required bytes desc = 3;
inline bool ConfigGiftbagCode::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagCode::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagCode::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagCode::clear_desc() {
  desc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_desc();
}
inline const ::std::string& ConfigGiftbagCode::desc() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCode.desc)
  return desc_.Get();
}
inline void ConfigGiftbagCode::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCode.desc)
}
#if LANG_CXX11
inline void ConfigGiftbagCode::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigGiftbagCode.desc)
}
#endif
inline void ConfigGiftbagCode::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigGiftbagCode.desc)
}
inline void ConfigGiftbagCode::set_desc(const void* value,
    size_t size) {
  set_has_desc();
  desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigGiftbagCode.desc)
}
inline ::std::string* ConfigGiftbagCode::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagCode.desc)
  return desc_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigGiftbagCode::release_desc() {
  // @@protoc_insertion_point(field_release:db.ConfigGiftbagCode.desc)
  if (!has_desc()) {
    return NULL;
  }
  clear_has_desc();
  return desc_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigGiftbagCode::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigGiftbagCode.desc)
}
inline ::std::string* ConfigGiftbagCode::unsafe_arena_release_desc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigGiftbagCode.desc)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_desc();
  return desc_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigGiftbagCode::unsafe_arena_set_allocated_desc(
    ::std::string* desc) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      desc, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigGiftbagCode.desc)
}

// required sfixed64 begin_time = 4;
inline bool ConfigGiftbagCode::has_begin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGiftbagCode::set_has_begin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGiftbagCode::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGiftbagCode::clear_begin_time() {
  begin_time_ = GOOGLE_LONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::int64 ConfigGiftbagCode::begin_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCode.begin_time)
  return begin_time_;
}
inline void ConfigGiftbagCode::set_begin_time(::google::protobuf::int64 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCode.begin_time)
}

// required sfixed64 end_time = 5;
inline bool ConfigGiftbagCode::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGiftbagCode::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGiftbagCode::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGiftbagCode::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 ConfigGiftbagCode::end_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCode.end_time)
  return end_time_;
}
inline void ConfigGiftbagCode::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCode.end_time)
}

// required uint64 reward_typeid = 11;
inline bool ConfigGiftbagCode::has_reward_typeid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigGiftbagCode::set_has_reward_typeid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigGiftbagCode::clear_has_reward_typeid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigGiftbagCode::clear_reward_typeid() {
  reward_typeid_ = GOOGLE_ULONGLONG(0);
  clear_has_reward_typeid();
}
inline ::google::protobuf::uint64 ConfigGiftbagCode::reward_typeid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCode.reward_typeid)
  return reward_typeid_;
}
inline void ConfigGiftbagCode::set_reward_typeid(::google::protobuf::uint64 value) {
  set_has_reward_typeid();
  reward_typeid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagCode.reward_typeid)
}

// -------------------------------------------------------------------

// ConfigGiftbagCodeList

// repeated .db.ConfigGiftbagCode list = 1;
inline int ConfigGiftbagCodeList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagCodeList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagCode* ConfigGiftbagCodeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagCodeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCode >*
ConfigGiftbagCodeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagCodeList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagCode& ConfigGiftbagCodeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagCodeList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagCode* ConfigGiftbagCodeList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagCodeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagCode >&
ConfigGiftbagCodeList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagCodeList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigGiftbagFriend

// required int32 level = 1;
inline bool ConfigGiftbagFriend::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigGiftbagFriend::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigGiftbagFriend::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigGiftbagFriend::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigGiftbagFriend::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFriend.level)
  return level_;
}
inline void ConfigGiftbagFriend::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFriend.level)
}

// required int32 give_num_day = 2;
inline bool ConfigGiftbagFriend::has_give_num_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigGiftbagFriend::set_has_give_num_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigGiftbagFriend::clear_has_give_num_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigGiftbagFriend::clear_give_num_day() {
  give_num_day_ = 0;
  clear_has_give_num_day();
}
inline ::google::protobuf::int32 ConfigGiftbagFriend::give_num_day() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFriend.give_num_day)
  return give_num_day_;
}
inline void ConfigGiftbagFriend::set_give_num_day(::google::protobuf::int32 value) {
  set_has_give_num_day();
  give_num_day_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFriend.give_num_day)
}

// required int32 accept_num_day = 3;
inline bool ConfigGiftbagFriend::has_accept_num_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigGiftbagFriend::set_has_accept_num_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigGiftbagFriend::clear_has_accept_num_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigGiftbagFriend::clear_accept_num_day() {
  accept_num_day_ = 0;
  clear_has_accept_num_day();
}
inline ::google::protobuf::int32 ConfigGiftbagFriend::accept_num_day() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFriend.accept_num_day)
  return accept_num_day_;
}
inline void ConfigGiftbagFriend::set_accept_num_day(::google::protobuf::int32 value) {
  set_has_accept_num_day();
  accept_num_day_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFriend.accept_num_day)
}

// required uint64 item_typeid = 11;
inline bool ConfigGiftbagFriend::has_item_typeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigGiftbagFriend::set_has_item_typeid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigGiftbagFriend::clear_has_item_typeid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigGiftbagFriend::clear_item_typeid() {
  item_typeid_ = GOOGLE_ULONGLONG(0);
  clear_has_item_typeid();
}
inline ::google::protobuf::uint64 ConfigGiftbagFriend::item_typeid() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFriend.item_typeid)
  return item_typeid_;
}
inline void ConfigGiftbagFriend::set_item_typeid(::google::protobuf::uint64 value) {
  set_has_item_typeid();
  item_typeid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFriend.item_typeid)
}

// required int32 item_num = 12;
inline bool ConfigGiftbagFriend::has_item_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigGiftbagFriend::set_has_item_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigGiftbagFriend::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigGiftbagFriend::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 ConfigGiftbagFriend::item_num() const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFriend.item_num)
  return item_num_;
}
inline void ConfigGiftbagFriend::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigGiftbagFriend.item_num)
}

// -------------------------------------------------------------------

// ConfigGiftbagFriendList

// repeated .db.ConfigGiftbagFriend list = 1;
inline int ConfigGiftbagFriendList::list_size() const {
  return list_.size();
}
inline void ConfigGiftbagFriendList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigGiftbagFriend* ConfigGiftbagFriendList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigGiftbagFriendList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFriend >*
ConfigGiftbagFriendList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigGiftbagFriendList.list)
  return &list_;
}
inline const ::db::ConfigGiftbagFriend& ConfigGiftbagFriendList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigGiftbagFriendList.list)
  return list_.Get(index);
}
inline ::db::ConfigGiftbagFriend* ConfigGiftbagFriendList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigGiftbagFriendList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigGiftbagFriend >&
ConfigGiftbagFriendList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigGiftbagFriendList.list)
  return list_;
}

// -------------------------------------------------------------------

// GameCharge

// required uint64 id = 1;
inline bool GameCharge::has_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameCharge::set_has_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameCharge::clear_has_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameCharge::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GameCharge::id() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.id)
  return id_;
}
inline void GameCharge::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.GameCharge.id)
}

// required bytes userid = 2;
inline bool GameCharge::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameCharge::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameCharge::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameCharge::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& GameCharge::userid() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.userid)
  return userid_.Get();
}
inline void GameCharge::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameCharge.userid)
}
#if LANG_CXX11
inline void GameCharge::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameCharge.userid)
}
#endif
inline void GameCharge::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameCharge.userid)
}
inline void GameCharge::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameCharge.userid)
}
inline ::std::string* GameCharge::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.GameCharge.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameCharge::release_userid() {
  // @@protoc_insertion_point(field_release:db.GameCharge.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameCharge::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameCharge.userid)
}
inline ::std::string* GameCharge::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameCharge.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameCharge::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameCharge.userid)
}

// required float charge_cash = 3;
inline bool GameCharge::has_charge_cash() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameCharge::set_has_charge_cash() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameCharge::clear_has_charge_cash() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameCharge::clear_charge_cash() {
  charge_cash_ = 0;
  clear_has_charge_cash();
}
inline float GameCharge::charge_cash() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.charge_cash)
  return charge_cash_;
}
inline void GameCharge::set_charge_cash(float value) {
  set_has_charge_cash();
  charge_cash_ = value;
  // @@protoc_insertion_point(field_set:db.GameCharge.charge_cash)
}

// required int32 charge_type = 4;
inline bool GameCharge::has_charge_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameCharge::set_has_charge_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameCharge::clear_has_charge_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameCharge::clear_charge_type() {
  charge_type_ = 0;
  clear_has_charge_type();
}
inline ::google::protobuf::int32 GameCharge::charge_type() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.charge_type)
  return charge_type_;
}
inline void GameCharge::set_charge_type(::google::protobuf::int32 value) {
  set_has_charge_type();
  charge_type_ = value;
  // @@protoc_insertion_point(field_set:db.GameCharge.charge_type)
}

// required int32 charge_state = 5;
inline bool GameCharge::has_charge_state() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GameCharge::set_has_charge_state() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GameCharge::clear_has_charge_state() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GameCharge::clear_charge_state() {
  charge_state_ = 0;
  clear_has_charge_state();
}
inline ::google::protobuf::int32 GameCharge::charge_state() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.charge_state)
  return charge_state_;
}
inline void GameCharge::set_charge_state(::google::protobuf::int32 value) {
  set_has_charge_state();
  charge_state_ = value;
  // @@protoc_insertion_point(field_set:db.GameCharge.charge_state)
}

// required bytes platid = 11;
inline bool GameCharge::has_platid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameCharge::set_has_platid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameCharge::clear_has_platid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameCharge::clear_platid() {
  platid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_platid();
}
inline const ::std::string& GameCharge::platid() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.platid)
  return platid_.Get();
}
inline void GameCharge::set_platid(const ::std::string& value) {
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameCharge.platid)
}
#if LANG_CXX11
inline void GameCharge::set_platid(::std::string&& value) {
  set_has_platid();
  platid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameCharge.platid)
}
#endif
inline void GameCharge::set_platid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameCharge.platid)
}
inline void GameCharge::set_platid(const void* value,
    size_t size) {
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameCharge.platid)
}
inline ::std::string* GameCharge::mutable_platid() {
  set_has_platid();
  // @@protoc_insertion_point(field_mutable:db.GameCharge.platid)
  return platid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameCharge::release_platid() {
  // @@protoc_insertion_point(field_release:db.GameCharge.platid)
  if (!has_platid()) {
    return NULL;
  }
  clear_has_platid();
  return platid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameCharge::set_allocated_platid(::std::string* platid) {
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameCharge.platid)
}
inline ::std::string* GameCharge::unsafe_arena_release_platid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameCharge.platid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_platid();
  return platid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameCharge::unsafe_arena_set_allocated_platid(
    ::std::string* platid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      platid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameCharge.platid)
}

// required bytes ordernum = 12;
inline bool GameCharge::has_ordernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameCharge::set_has_ordernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameCharge::clear_has_ordernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameCharge::clear_ordernum() {
  ordernum_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_ordernum();
}
inline const ::std::string& GameCharge::ordernum() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.ordernum)
  return ordernum_.Get();
}
inline void GameCharge::set_ordernum(const ::std::string& value) {
  set_has_ordernum();
  ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameCharge.ordernum)
}
#if LANG_CXX11
inline void GameCharge::set_ordernum(::std::string&& value) {
  set_has_ordernum();
  ordernum_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameCharge.ordernum)
}
#endif
inline void GameCharge::set_ordernum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ordernum();
  ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameCharge.ordernum)
}
inline void GameCharge::set_ordernum(const void* value,
    size_t size) {
  set_has_ordernum();
  ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameCharge.ordernum)
}
inline ::std::string* GameCharge::mutable_ordernum() {
  set_has_ordernum();
  // @@protoc_insertion_point(field_mutable:db.GameCharge.ordernum)
  return ordernum_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameCharge::release_ordernum() {
  // @@protoc_insertion_point(field_release:db.GameCharge.ordernum)
  if (!has_ordernum()) {
    return NULL;
  }
  clear_has_ordernum();
  return ordernum_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameCharge::set_allocated_ordernum(::std::string* ordernum) {
  if (ordernum != NULL) {
    set_has_ordernum();
  } else {
    clear_has_ordernum();
  }
  ordernum_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordernum,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameCharge.ordernum)
}
inline ::std::string* GameCharge::unsafe_arena_release_ordernum() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameCharge.ordernum)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_ordernum();
  return ordernum_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameCharge::unsafe_arena_set_allocated_ordernum(
    ::std::string* ordernum) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ordernum != NULL) {
    set_has_ordernum();
  } else {
    clear_has_ordernum();
  }
  ordernum_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ordernum, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameCharge.ordernum)
}

// required bytes order_receipt = 13;
inline bool GameCharge::has_order_receipt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameCharge::set_has_order_receipt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameCharge::clear_has_order_receipt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameCharge::clear_order_receipt() {
  order_receipt_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_order_receipt();
}
inline const ::std::string& GameCharge::order_receipt() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.order_receipt)
  return order_receipt_.Get();
}
inline void GameCharge::set_order_receipt(const ::std::string& value) {
  set_has_order_receipt();
  order_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameCharge.order_receipt)
}
#if LANG_CXX11
inline void GameCharge::set_order_receipt(::std::string&& value) {
  set_has_order_receipt();
  order_receipt_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameCharge.order_receipt)
}
#endif
inline void GameCharge::set_order_receipt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_order_receipt();
  order_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameCharge.order_receipt)
}
inline void GameCharge::set_order_receipt(const void* value,
    size_t size) {
  set_has_order_receipt();
  order_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameCharge.order_receipt)
}
inline ::std::string* GameCharge::mutable_order_receipt() {
  set_has_order_receipt();
  // @@protoc_insertion_point(field_mutable:db.GameCharge.order_receipt)
  return order_receipt_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameCharge::release_order_receipt() {
  // @@protoc_insertion_point(field_release:db.GameCharge.order_receipt)
  if (!has_order_receipt()) {
    return NULL;
  }
  clear_has_order_receipt();
  return order_receipt_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameCharge::set_allocated_order_receipt(::std::string* order_receipt) {
  if (order_receipt != NULL) {
    set_has_order_receipt();
  } else {
    clear_has_order_receipt();
  }
  order_receipt_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_receipt,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameCharge.order_receipt)
}
inline ::std::string* GameCharge::unsafe_arena_release_order_receipt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameCharge.order_receipt)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_order_receipt();
  return order_receipt_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameCharge::unsafe_arena_set_allocated_order_receipt(
    ::std::string* order_receipt) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (order_receipt != NULL) {
    set_has_order_receipt();
  } else {
    clear_has_order_receipt();
  }
  order_receipt_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      order_receipt, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameCharge.order_receipt)
}

// required bytes order_createtime = 14;
inline bool GameCharge::has_order_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameCharge::set_has_order_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameCharge::clear_has_order_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameCharge::clear_order_createtime() {
  order_createtime_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_order_createtime();
}
inline const ::std::string& GameCharge::order_createtime() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.order_createtime)
  return order_createtime_.Get();
}
inline void GameCharge::set_order_createtime(const ::std::string& value) {
  set_has_order_createtime();
  order_createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameCharge.order_createtime)
}
#if LANG_CXX11
inline void GameCharge::set_order_createtime(::std::string&& value) {
  set_has_order_createtime();
  order_createtime_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameCharge.order_createtime)
}
#endif
inline void GameCharge::set_order_createtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_order_createtime();
  order_createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameCharge.order_createtime)
}
inline void GameCharge::set_order_createtime(const void* value,
    size_t size) {
  set_has_order_createtime();
  order_createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameCharge.order_createtime)
}
inline ::std::string* GameCharge::mutable_order_createtime() {
  set_has_order_createtime();
  // @@protoc_insertion_point(field_mutable:db.GameCharge.order_createtime)
  return order_createtime_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameCharge::release_order_createtime() {
  // @@protoc_insertion_point(field_release:db.GameCharge.order_createtime)
  if (!has_order_createtime()) {
    return NULL;
  }
  clear_has_order_createtime();
  return order_createtime_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameCharge::set_allocated_order_createtime(::std::string* order_createtime) {
  if (order_createtime != NULL) {
    set_has_order_createtime();
  } else {
    clear_has_order_createtime();
  }
  order_createtime_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_createtime,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameCharge.order_createtime)
}
inline ::std::string* GameCharge::unsafe_arena_release_order_createtime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameCharge.order_createtime)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_order_createtime();
  return order_createtime_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameCharge::unsafe_arena_set_allocated_order_createtime(
    ::std::string* order_createtime) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (order_createtime != NULL) {
    set_has_order_createtime();
  } else {
    clear_has_order_createtime();
  }
  order_createtime_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      order_createtime, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameCharge.order_createtime)
}

// required bytes order_notifytime = 15;
inline bool GameCharge::has_order_notifytime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameCharge::set_has_order_notifytime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameCharge::clear_has_order_notifytime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameCharge::clear_order_notifytime() {
  order_notifytime_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_order_notifytime();
}
inline const ::std::string& GameCharge::order_notifytime() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.order_notifytime)
  return order_notifytime_.Get();
}
inline void GameCharge::set_order_notifytime(const ::std::string& value) {
  set_has_order_notifytime();
  order_notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameCharge.order_notifytime)
}
#if LANG_CXX11
inline void GameCharge::set_order_notifytime(::std::string&& value) {
  set_has_order_notifytime();
  order_notifytime_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameCharge.order_notifytime)
}
#endif
inline void GameCharge::set_order_notifytime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_order_notifytime();
  order_notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameCharge.order_notifytime)
}
inline void GameCharge::set_order_notifytime(const void* value,
    size_t size) {
  set_has_order_notifytime();
  order_notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameCharge.order_notifytime)
}
inline ::std::string* GameCharge::mutable_order_notifytime() {
  set_has_order_notifytime();
  // @@protoc_insertion_point(field_mutable:db.GameCharge.order_notifytime)
  return order_notifytime_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameCharge::release_order_notifytime() {
  // @@protoc_insertion_point(field_release:db.GameCharge.order_notifytime)
  if (!has_order_notifytime()) {
    return NULL;
  }
  clear_has_order_notifytime();
  return order_notifytime_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameCharge::set_allocated_order_notifytime(::std::string* order_notifytime) {
  if (order_notifytime != NULL) {
    set_has_order_notifytime();
  } else {
    clear_has_order_notifytime();
  }
  order_notifytime_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_notifytime,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameCharge.order_notifytime)
}
inline ::std::string* GameCharge::unsafe_arena_release_order_notifytime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameCharge.order_notifytime)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_order_notifytime();
  return order_notifytime_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameCharge::unsafe_arena_set_allocated_order_notifytime(
    ::std::string* order_notifytime) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (order_notifytime != NULL) {
    set_has_order_notifytime();
  } else {
    clear_has_order_notifytime();
  }
  order_notifytime_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      order_notifytime, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameCharge.order_notifytime)
}

// required int32 goodsid = 16;
inline bool GameCharge::has_goodsid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GameCharge::set_has_goodsid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GameCharge::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GameCharge::clear_goodsid() {
  goodsid_ = 0;
  clear_has_goodsid();
}
inline ::google::protobuf::int32 GameCharge::goodsid() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.goodsid)
  return goodsid_;
}
inline void GameCharge::set_goodsid(::google::protobuf::int32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:db.GameCharge.goodsid)
}

// required sfixed64 createtime = 21;
inline bool GameCharge::has_createtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GameCharge::set_has_createtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GameCharge::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GameCharge::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::int64 GameCharge::createtime() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.createtime)
  return createtime_;
}
inline void GameCharge::set_createtime(::google::protobuf::int64 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:db.GameCharge.createtime)
}

// required sfixed64 optime = 22;
inline bool GameCharge::has_optime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GameCharge::set_has_optime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GameCharge::clear_has_optime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GameCharge::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 GameCharge::optime() const {
  // @@protoc_insertion_point(field_get:db.GameCharge.optime)
  return optime_;
}
inline void GameCharge::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.GameCharge.optime)
}

// -------------------------------------------------------------------

// GameChargeList

// repeated .db.GameCharge list = 1;
inline int GameChargeList::list_size() const {
  return list_.size();
}
inline void GameChargeList::clear_list() {
  list_.Clear();
}
inline ::db::GameCharge* GameChargeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.GameChargeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::GameCharge >*
GameChargeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.GameChargeList.list)
  return &list_;
}
inline const ::db::GameCharge& GameChargeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.GameChargeList.list)
  return list_.Get(index);
}
inline ::db::GameCharge* GameChargeList::add_list() {
  // @@protoc_insertion_point(field_add:db.GameChargeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::GameCharge >&
GameChargeList::list() const {
  // @@protoc_insertion_point(field_list:db.GameChargeList.list)
  return list_;
}

// -------------------------------------------------------------------

// UserChargeAndGiftbagFirstCharge

// required bytes userid = 1;
inline bool UserChargeAndGiftbagFirstCharge::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserChargeAndGiftbagFirstCharge::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserChargeAndGiftbagFirstCharge::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserChargeAndGiftbagFirstCharge::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserChargeAndGiftbagFirstCharge::userid() const {
  // @@protoc_insertion_point(field_get:db.UserChargeAndGiftbagFirstCharge.userid)
  return userid_.Get();
}
inline void UserChargeAndGiftbagFirstCharge::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserChargeAndGiftbagFirstCharge.userid)
}
#if LANG_CXX11
inline void UserChargeAndGiftbagFirstCharge::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserChargeAndGiftbagFirstCharge.userid)
}
#endif
inline void UserChargeAndGiftbagFirstCharge::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserChargeAndGiftbagFirstCharge.userid)
}
inline void UserChargeAndGiftbagFirstCharge::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserChargeAndGiftbagFirstCharge.userid)
}
inline ::std::string* UserChargeAndGiftbagFirstCharge::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserChargeAndGiftbagFirstCharge.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserChargeAndGiftbagFirstCharge::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserChargeAndGiftbagFirstCharge.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserChargeAndGiftbagFirstCharge::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserChargeAndGiftbagFirstCharge.userid)
}
inline ::std::string* UserChargeAndGiftbagFirstCharge::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserChargeAndGiftbagFirstCharge.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserChargeAndGiftbagFirstCharge::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserChargeAndGiftbagFirstCharge.userid)
}

// required uint64 charge_subtype = 2;
inline bool UserChargeAndGiftbagFirstCharge::has_charge_subtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserChargeAndGiftbagFirstCharge::set_has_charge_subtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserChargeAndGiftbagFirstCharge::clear_has_charge_subtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserChargeAndGiftbagFirstCharge::clear_charge_subtype() {
  charge_subtype_ = GOOGLE_ULONGLONG(0);
  clear_has_charge_subtype();
}
inline ::google::protobuf::uint64 UserChargeAndGiftbagFirstCharge::charge_subtype() const {
  // @@protoc_insertion_point(field_get:db.UserChargeAndGiftbagFirstCharge.charge_subtype)
  return charge_subtype_;
}
inline void UserChargeAndGiftbagFirstCharge::set_charge_subtype(::google::protobuf::uint64 value) {
  set_has_charge_subtype();
  charge_subtype_ = value;
  // @@protoc_insertion_point(field_set:db.UserChargeAndGiftbagFirstCharge.charge_subtype)
}

// required sfixed64 charge_time = 3;
inline bool UserChargeAndGiftbagFirstCharge::has_charge_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserChargeAndGiftbagFirstCharge::set_has_charge_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserChargeAndGiftbagFirstCharge::clear_has_charge_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserChargeAndGiftbagFirstCharge::clear_charge_time() {
  charge_time_ = GOOGLE_LONGLONG(0);
  clear_has_charge_time();
}
inline ::google::protobuf::int64 UserChargeAndGiftbagFirstCharge::charge_time() const {
  // @@protoc_insertion_point(field_get:db.UserChargeAndGiftbagFirstCharge.charge_time)
  return charge_time_;
}
inline void UserChargeAndGiftbagFirstCharge::set_charge_time(::google::protobuf::int64 value) {
  set_has_charge_time();
  charge_time_ = value;
  // @@protoc_insertion_point(field_set:db.UserChargeAndGiftbagFirstCharge.charge_time)
}

// -------------------------------------------------------------------

// UserChargeAndGiftbagFirstChargeList

// repeated .db.UserChargeAndGiftbagFirstCharge list = 1;
inline int UserChargeAndGiftbagFirstChargeList::list_size() const {
  return list_.size();
}
inline void UserChargeAndGiftbagFirstChargeList::clear_list() {
  list_.Clear();
}
inline ::db::UserChargeAndGiftbagFirstCharge* UserChargeAndGiftbagFirstChargeList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.UserChargeAndGiftbagFirstChargeList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::UserChargeAndGiftbagFirstCharge >*
UserChargeAndGiftbagFirstChargeList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.UserChargeAndGiftbagFirstChargeList.list)
  return &list_;
}
inline const ::db::UserChargeAndGiftbagFirstCharge& UserChargeAndGiftbagFirstChargeList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.UserChargeAndGiftbagFirstChargeList.list)
  return list_.Get(index);
}
inline ::db::UserChargeAndGiftbagFirstCharge* UserChargeAndGiftbagFirstChargeList::add_list() {
  // @@protoc_insertion_point(field_add:db.UserChargeAndGiftbagFirstChargeList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::UserChargeAndGiftbagFirstCharge >&
UserChargeAndGiftbagFirstChargeList::list() const {
  // @@protoc_insertion_point(field_list:db.UserChargeAndGiftbagFirstChargeList.list)
  return list_;
}

// -------------------------------------------------------------------

// proc_load_game_charge_Parameter

// required uint64 p_last_topid = 1;
inline bool proc_load_game_charge_Parameter::has_p_last_topid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_game_charge_Parameter::set_has_p_last_topid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_game_charge_Parameter::clear_has_p_last_topid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_game_charge_Parameter::clear_p_last_topid() {
  p_last_topid_ = GOOGLE_ULONGLONG(0);
  clear_has_p_last_topid();
}
inline ::google::protobuf::uint64 proc_load_game_charge_Parameter::p_last_topid() const {
  // @@protoc_insertion_point(field_get:db.proc_load_game_charge.Parameter.p_last_topid)
  return p_last_topid_;
}
inline void proc_load_game_charge_Parameter::set_p_last_topid(::google::protobuf::uint64 value) {
  set_has_p_last_topid();
  p_last_topid_ = value;
  // @@protoc_insertion_point(field_set:db.proc_load_game_charge.Parameter.p_last_topid)
}

// -------------------------------------------------------------------

// proc_load_game_charge_ReturnRecord

// required .db.GameCharge item = 1;
inline bool proc_load_game_charge_ReturnRecord::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_game_charge_ReturnRecord::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_game_charge_ReturnRecord::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_game_charge_ReturnRecord::clear_item() {
  if (item_ != NULL) item_->Clear();
  clear_has_item();
}
inline const ::db::GameCharge& proc_load_game_charge_ReturnRecord::_internal_item() const {
  return *item_;
}
inline const ::db::GameCharge& proc_load_game_charge_ReturnRecord::item() const {
  const ::db::GameCharge* p = item_;
  // @@protoc_insertion_point(field_get:db.proc_load_game_charge.ReturnRecord.item)
  return p != NULL ? *p : *reinterpret_cast<const ::db::GameCharge*>(
      &::db::_GameCharge_default_instance_);
}
inline ::db::GameCharge* proc_load_game_charge_ReturnRecord::release_item() {
  // @@protoc_insertion_point(field_release:db.proc_load_game_charge.ReturnRecord.item)
  clear_has_item();
  ::db::GameCharge* temp = item_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  item_ = NULL;
  return temp;
}
inline ::db::GameCharge* proc_load_game_charge_ReturnRecord::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_game_charge.ReturnRecord.item)
  clear_has_item();
  ::db::GameCharge* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::db::GameCharge* proc_load_game_charge_ReturnRecord::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::db::GameCharge>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_game_charge.ReturnRecord.item)
  return item_;
}
inline void proc_load_game_charge_ReturnRecord::set_allocated_item(::db::GameCharge* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(item);
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
  } else {
    clear_has_item();
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_game_charge.ReturnRecord.item)
}

// -------------------------------------------------------------------

// proc_load_game_charge

// optional .db.proc_load_game_charge.Parameter param = 1;
inline bool proc_load_game_charge::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_game_charge::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_game_charge::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_game_charge::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_load_game_charge_Parameter& proc_load_game_charge::_internal_param() const {
  return *param_;
}
inline const ::db::proc_load_game_charge_Parameter& proc_load_game_charge::param() const {
  const ::db::proc_load_game_charge_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_load_game_charge.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_load_game_charge_Parameter*>(
      &::db::_proc_load_game_charge_Parameter_default_instance_);
}
inline ::db::proc_load_game_charge_Parameter* proc_load_game_charge::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_load_game_charge.param)
  clear_has_param();
  ::db::proc_load_game_charge_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_game_charge_Parameter* proc_load_game_charge::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_game_charge.param)
  clear_has_param();
  ::db::proc_load_game_charge_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_game_charge_Parameter* proc_load_game_charge::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_load_game_charge_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_game_charge.param)
  return param_;
}
inline void proc_load_game_charge::set_allocated_param(::db::proc_load_game_charge_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_game_charge.param)
}

// repeated .db.proc_load_game_charge.ReturnRecord return_record_list = 2;
inline int proc_load_game_charge::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_load_game_charge::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_load_game_charge_ReturnRecord* proc_load_game_charge::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_load_game_charge.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_load_game_charge_ReturnRecord >*
proc_load_game_charge::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_load_game_charge.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_load_game_charge_ReturnRecord& proc_load_game_charge::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_load_game_charge.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_load_game_charge_ReturnRecord* proc_load_game_charge::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_load_game_charge.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_load_game_charge_ReturnRecord >&
proc_load_game_charge::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_load_game_charge.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// proc_save_game_charge_Parameter

// required uint64 p_id = 1;
inline bool proc_save_game_charge_Parameter::has_p_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void proc_save_game_charge_Parameter::set_has_p_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void proc_save_game_charge_Parameter::clear_has_p_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void proc_save_game_charge_Parameter::clear_p_id() {
  p_id_ = GOOGLE_ULONGLONG(0);
  clear_has_p_id();
}
inline ::google::protobuf::uint64 proc_save_game_charge_Parameter::p_id() const {
  // @@protoc_insertion_point(field_get:db.proc_save_game_charge.Parameter.p_id)
  return p_id_;
}
inline void proc_save_game_charge_Parameter::set_p_id(::google::protobuf::uint64 value) {
  set_has_p_id();
  p_id_ = value;
  // @@protoc_insertion_point(field_set:db.proc_save_game_charge.Parameter.p_id)
}

// required int32 p_state = 2;
inline bool proc_save_game_charge_Parameter::has_p_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void proc_save_game_charge_Parameter::set_has_p_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void proc_save_game_charge_Parameter::clear_has_p_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void proc_save_game_charge_Parameter::clear_p_state() {
  p_state_ = 0;
  clear_has_p_state();
}
inline ::google::protobuf::int32 proc_save_game_charge_Parameter::p_state() const {
  // @@protoc_insertion_point(field_get:db.proc_save_game_charge.Parameter.p_state)
  return p_state_;
}
inline void proc_save_game_charge_Parameter::set_p_state(::google::protobuf::int32 value) {
  set_has_p_state();
  p_state_ = value;
  // @@protoc_insertion_point(field_set:db.proc_save_game_charge.Parameter.p_state)
}

// required bytes p_receipt = 3;
inline bool proc_save_game_charge_Parameter::has_p_receipt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_save_game_charge_Parameter::set_has_p_receipt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_save_game_charge_Parameter::clear_has_p_receipt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_save_game_charge_Parameter::clear_p_receipt() {
  p_receipt_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_receipt();
}
inline const ::std::string& proc_save_game_charge_Parameter::p_receipt() const {
  // @@protoc_insertion_point(field_get:db.proc_save_game_charge.Parameter.p_receipt)
  return p_receipt_.Get();
}
inline void proc_save_game_charge_Parameter::set_p_receipt(const ::std::string& value) {
  set_has_p_receipt();
  p_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_save_game_charge.Parameter.p_receipt)
}
#if LANG_CXX11
inline void proc_save_game_charge_Parameter::set_p_receipt(::std::string&& value) {
  set_has_p_receipt();
  p_receipt_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_save_game_charge.Parameter.p_receipt)
}
#endif
inline void proc_save_game_charge_Parameter::set_p_receipt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_receipt();
  p_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_save_game_charge.Parameter.p_receipt)
}
inline void proc_save_game_charge_Parameter::set_p_receipt(const void* value,
    size_t size) {
  set_has_p_receipt();
  p_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_save_game_charge.Parameter.p_receipt)
}
inline ::std::string* proc_save_game_charge_Parameter::mutable_p_receipt() {
  set_has_p_receipt();
  // @@protoc_insertion_point(field_mutable:db.proc_save_game_charge.Parameter.p_receipt)
  return p_receipt_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_save_game_charge_Parameter::release_p_receipt() {
  // @@protoc_insertion_point(field_release:db.proc_save_game_charge.Parameter.p_receipt)
  if (!has_p_receipt()) {
    return NULL;
  }
  clear_has_p_receipt();
  return p_receipt_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_save_game_charge_Parameter::set_allocated_p_receipt(::std::string* p_receipt) {
  if (p_receipt != NULL) {
    set_has_p_receipt();
  } else {
    clear_has_p_receipt();
  }
  p_receipt_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_receipt,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_save_game_charge.Parameter.p_receipt)
}
inline ::std::string* proc_save_game_charge_Parameter::unsafe_arena_release_p_receipt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_save_game_charge.Parameter.p_receipt)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_receipt();
  return p_receipt_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_save_game_charge_Parameter::unsafe_arena_set_allocated_p_receipt(
    ::std::string* p_receipt) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_receipt != NULL) {
    set_has_p_receipt();
  } else {
    clear_has_p_receipt();
  }
  p_receipt_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_receipt, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_save_game_charge.Parameter.p_receipt)
}

// required sfixed64 p_optime = 4;
inline bool proc_save_game_charge_Parameter::has_p_optime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void proc_save_game_charge_Parameter::set_has_p_optime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void proc_save_game_charge_Parameter::clear_has_p_optime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void proc_save_game_charge_Parameter::clear_p_optime() {
  p_optime_ = GOOGLE_LONGLONG(0);
  clear_has_p_optime();
}
inline ::google::protobuf::int64 proc_save_game_charge_Parameter::p_optime() const {
  // @@protoc_insertion_point(field_get:db.proc_save_game_charge.Parameter.p_optime)
  return p_optime_;
}
inline void proc_save_game_charge_Parameter::set_p_optime(::google::protobuf::int64 value) {
  set_has_p_optime();
  p_optime_ = value;
  // @@protoc_insertion_point(field_set:db.proc_save_game_charge.Parameter.p_optime)
}

// -------------------------------------------------------------------

// proc_save_game_charge

// optional .db.proc_save_game_charge.Parameter param = 1;
inline bool proc_save_game_charge::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_save_game_charge::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_save_game_charge::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_save_game_charge::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_save_game_charge_Parameter& proc_save_game_charge::_internal_param() const {
  return *param_;
}
inline const ::db::proc_save_game_charge_Parameter& proc_save_game_charge::param() const {
  const ::db::proc_save_game_charge_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_save_game_charge.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_save_game_charge_Parameter*>(
      &::db::_proc_save_game_charge_Parameter_default_instance_);
}
inline ::db::proc_save_game_charge_Parameter* proc_save_game_charge::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_save_game_charge.param)
  clear_has_param();
  ::db::proc_save_game_charge_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_save_game_charge_Parameter* proc_save_game_charge::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_save_game_charge.param)
  clear_has_param();
  ::db::proc_save_game_charge_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_save_game_charge_Parameter* proc_save_game_charge::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_save_game_charge_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_save_game_charge.param)
  return param_;
}
inline void proc_save_game_charge::set_allocated_param(::db::proc_save_game_charge_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_save_game_charge.param)
}

// -------------------------------------------------------------------

// proc_create_game_charge_Parameter

// required bytes p_userid = 1;
inline bool proc_create_game_charge_Parameter::has_p_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_create_game_charge_Parameter::clear_p_userid() {
  p_userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_userid();
}
inline const ::std::string& proc_create_game_charge_Parameter::p_userid() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_userid)
  return p_userid_.Get();
}
inline void proc_create_game_charge_Parameter::set_p_userid(const ::std::string& value) {
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_userid)
}
#if LANG_CXX11
inline void proc_create_game_charge_Parameter::set_p_userid(::std::string&& value) {
  set_has_p_userid();
  p_userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_create_game_charge.Parameter.p_userid)
}
#endif
inline void proc_create_game_charge_Parameter::set_p_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_create_game_charge.Parameter.p_userid)
}
inline void proc_create_game_charge_Parameter::set_p_userid(const void* value,
    size_t size) {
  set_has_p_userid();
  p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_create_game_charge.Parameter.p_userid)
}
inline ::std::string* proc_create_game_charge_Parameter::mutable_p_userid() {
  set_has_p_userid();
  // @@protoc_insertion_point(field_mutable:db.proc_create_game_charge.Parameter.p_userid)
  return p_userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_create_game_charge_Parameter::release_p_userid() {
  // @@protoc_insertion_point(field_release:db.proc_create_game_charge.Parameter.p_userid)
  if (!has_p_userid()) {
    return NULL;
  }
  clear_has_p_userid();
  return p_userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::set_allocated_p_userid(::std::string* p_userid) {
  if (p_userid != NULL) {
    set_has_p_userid();
  } else {
    clear_has_p_userid();
  }
  p_userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_create_game_charge.Parameter.p_userid)
}
inline ::std::string* proc_create_game_charge_Parameter::unsafe_arena_release_p_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_create_game_charge.Parameter.p_userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_userid();
  return p_userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::unsafe_arena_set_allocated_p_userid(
    ::std::string* p_userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_userid != NULL) {
    set_has_p_userid();
  } else {
    clear_has_p_userid();
  }
  p_userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_create_game_charge.Parameter.p_userid)
}

// required float p_charge_cash = 2;
inline bool proc_create_game_charge_Parameter::has_p_charge_cash() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_charge_cash() {
  _has_bits_[0] |= 0x00000040u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_charge_cash() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void proc_create_game_charge_Parameter::clear_p_charge_cash() {
  p_charge_cash_ = 0;
  clear_has_p_charge_cash();
}
inline float proc_create_game_charge_Parameter::p_charge_cash() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_charge_cash)
  return p_charge_cash_;
}
inline void proc_create_game_charge_Parameter::set_p_charge_cash(float value) {
  set_has_p_charge_cash();
  p_charge_cash_ = value;
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_charge_cash)
}

// required int32 p_charge_type = 3;
inline bool proc_create_game_charge_Parameter::has_p_charge_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_charge_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_charge_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void proc_create_game_charge_Parameter::clear_p_charge_type() {
  p_charge_type_ = 0;
  clear_has_p_charge_type();
}
inline ::google::protobuf::int32 proc_create_game_charge_Parameter::p_charge_type() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_charge_type)
  return p_charge_type_;
}
inline void proc_create_game_charge_Parameter::set_p_charge_type(::google::protobuf::int32 value) {
  set_has_p_charge_type();
  p_charge_type_ = value;
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_charge_type)
}

// required int32 p_charge_state = 4;
inline bool proc_create_game_charge_Parameter::has_p_charge_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_charge_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_charge_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void proc_create_game_charge_Parameter::clear_p_charge_state() {
  p_charge_state_ = 0;
  clear_has_p_charge_state();
}
inline ::google::protobuf::int32 proc_create_game_charge_Parameter::p_charge_state() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_charge_state)
  return p_charge_state_;
}
inline void proc_create_game_charge_Parameter::set_p_charge_state(::google::protobuf::int32 value) {
  set_has_p_charge_state();
  p_charge_state_ = value;
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_charge_state)
}

// required bytes p_platid = 11;
inline bool proc_create_game_charge_Parameter::has_p_platid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_platid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_platid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void proc_create_game_charge_Parameter::clear_p_platid() {
  p_platid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_platid();
}
inline const ::std::string& proc_create_game_charge_Parameter::p_platid() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_platid)
  return p_platid_.Get();
}
inline void proc_create_game_charge_Parameter::set_p_platid(const ::std::string& value) {
  set_has_p_platid();
  p_platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_platid)
}
#if LANG_CXX11
inline void proc_create_game_charge_Parameter::set_p_platid(::std::string&& value) {
  set_has_p_platid();
  p_platid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_create_game_charge.Parameter.p_platid)
}
#endif
inline void proc_create_game_charge_Parameter::set_p_platid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_platid();
  p_platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_create_game_charge.Parameter.p_platid)
}
inline void proc_create_game_charge_Parameter::set_p_platid(const void* value,
    size_t size) {
  set_has_p_platid();
  p_platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_create_game_charge.Parameter.p_platid)
}
inline ::std::string* proc_create_game_charge_Parameter::mutable_p_platid() {
  set_has_p_platid();
  // @@protoc_insertion_point(field_mutable:db.proc_create_game_charge.Parameter.p_platid)
  return p_platid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_create_game_charge_Parameter::release_p_platid() {
  // @@protoc_insertion_point(field_release:db.proc_create_game_charge.Parameter.p_platid)
  if (!has_p_platid()) {
    return NULL;
  }
  clear_has_p_platid();
  return p_platid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::set_allocated_p_platid(::std::string* p_platid) {
  if (p_platid != NULL) {
    set_has_p_platid();
  } else {
    clear_has_p_platid();
  }
  p_platid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_platid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_create_game_charge.Parameter.p_platid)
}
inline ::std::string* proc_create_game_charge_Parameter::unsafe_arena_release_p_platid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_create_game_charge.Parameter.p_platid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_platid();
  return p_platid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::unsafe_arena_set_allocated_p_platid(
    ::std::string* p_platid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_platid != NULL) {
    set_has_p_platid();
  } else {
    clear_has_p_platid();
  }
  p_platid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_platid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_create_game_charge.Parameter.p_platid)
}

// required bytes p_ordernum = 12;
inline bool proc_create_game_charge_Parameter::has_p_ordernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_ordernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_ordernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void proc_create_game_charge_Parameter::clear_p_ordernum() {
  p_ordernum_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_ordernum();
}
inline const ::std::string& proc_create_game_charge_Parameter::p_ordernum() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_ordernum)
  return p_ordernum_.Get();
}
inline void proc_create_game_charge_Parameter::set_p_ordernum(const ::std::string& value) {
  set_has_p_ordernum();
  p_ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_ordernum)
}
#if LANG_CXX11
inline void proc_create_game_charge_Parameter::set_p_ordernum(::std::string&& value) {
  set_has_p_ordernum();
  p_ordernum_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_create_game_charge.Parameter.p_ordernum)
}
#endif
inline void proc_create_game_charge_Parameter::set_p_ordernum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_ordernum();
  p_ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_create_game_charge.Parameter.p_ordernum)
}
inline void proc_create_game_charge_Parameter::set_p_ordernum(const void* value,
    size_t size) {
  set_has_p_ordernum();
  p_ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_create_game_charge.Parameter.p_ordernum)
}
inline ::std::string* proc_create_game_charge_Parameter::mutable_p_ordernum() {
  set_has_p_ordernum();
  // @@protoc_insertion_point(field_mutable:db.proc_create_game_charge.Parameter.p_ordernum)
  return p_ordernum_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_create_game_charge_Parameter::release_p_ordernum() {
  // @@protoc_insertion_point(field_release:db.proc_create_game_charge.Parameter.p_ordernum)
  if (!has_p_ordernum()) {
    return NULL;
  }
  clear_has_p_ordernum();
  return p_ordernum_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::set_allocated_p_ordernum(::std::string* p_ordernum) {
  if (p_ordernum != NULL) {
    set_has_p_ordernum();
  } else {
    clear_has_p_ordernum();
  }
  p_ordernum_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_ordernum,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_create_game_charge.Parameter.p_ordernum)
}
inline ::std::string* proc_create_game_charge_Parameter::unsafe_arena_release_p_ordernum() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_create_game_charge.Parameter.p_ordernum)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_ordernum();
  return p_ordernum_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::unsafe_arena_set_allocated_p_ordernum(
    ::std::string* p_ordernum) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_ordernum != NULL) {
    set_has_p_ordernum();
  } else {
    clear_has_p_ordernum();
  }
  p_ordernum_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_ordernum, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_create_game_charge.Parameter.p_ordernum)
}

// required bytes p_order_receipt = 13;
inline bool proc_create_game_charge_Parameter::has_p_order_receipt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_order_receipt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_order_receipt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void proc_create_game_charge_Parameter::clear_p_order_receipt() {
  p_order_receipt_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_order_receipt();
}
inline const ::std::string& proc_create_game_charge_Parameter::p_order_receipt() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_order_receipt)
  return p_order_receipt_.Get();
}
inline void proc_create_game_charge_Parameter::set_p_order_receipt(const ::std::string& value) {
  set_has_p_order_receipt();
  p_order_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_order_receipt)
}
#if LANG_CXX11
inline void proc_create_game_charge_Parameter::set_p_order_receipt(::std::string&& value) {
  set_has_p_order_receipt();
  p_order_receipt_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_create_game_charge.Parameter.p_order_receipt)
}
#endif
inline void proc_create_game_charge_Parameter::set_p_order_receipt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_order_receipt();
  p_order_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_create_game_charge.Parameter.p_order_receipt)
}
inline void proc_create_game_charge_Parameter::set_p_order_receipt(const void* value,
    size_t size) {
  set_has_p_order_receipt();
  p_order_receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_create_game_charge.Parameter.p_order_receipt)
}
inline ::std::string* proc_create_game_charge_Parameter::mutable_p_order_receipt() {
  set_has_p_order_receipt();
  // @@protoc_insertion_point(field_mutable:db.proc_create_game_charge.Parameter.p_order_receipt)
  return p_order_receipt_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_create_game_charge_Parameter::release_p_order_receipt() {
  // @@protoc_insertion_point(field_release:db.proc_create_game_charge.Parameter.p_order_receipt)
  if (!has_p_order_receipt()) {
    return NULL;
  }
  clear_has_p_order_receipt();
  return p_order_receipt_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::set_allocated_p_order_receipt(::std::string* p_order_receipt) {
  if (p_order_receipt != NULL) {
    set_has_p_order_receipt();
  } else {
    clear_has_p_order_receipt();
  }
  p_order_receipt_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_order_receipt,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_create_game_charge.Parameter.p_order_receipt)
}
inline ::std::string* proc_create_game_charge_Parameter::unsafe_arena_release_p_order_receipt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_create_game_charge.Parameter.p_order_receipt)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_order_receipt();
  return p_order_receipt_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::unsafe_arena_set_allocated_p_order_receipt(
    ::std::string* p_order_receipt) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_order_receipt != NULL) {
    set_has_p_order_receipt();
  } else {
    clear_has_p_order_receipt();
  }
  p_order_receipt_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_order_receipt, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_create_game_charge.Parameter.p_order_receipt)
}

// required bytes p_order_createtime = 14;
inline bool proc_create_game_charge_Parameter::has_p_order_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_order_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_order_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void proc_create_game_charge_Parameter::clear_p_order_createtime() {
  p_order_createtime_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_order_createtime();
}
inline const ::std::string& proc_create_game_charge_Parameter::p_order_createtime() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_order_createtime)
  return p_order_createtime_.Get();
}
inline void proc_create_game_charge_Parameter::set_p_order_createtime(const ::std::string& value) {
  set_has_p_order_createtime();
  p_order_createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_order_createtime)
}
#if LANG_CXX11
inline void proc_create_game_charge_Parameter::set_p_order_createtime(::std::string&& value) {
  set_has_p_order_createtime();
  p_order_createtime_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_create_game_charge.Parameter.p_order_createtime)
}
#endif
inline void proc_create_game_charge_Parameter::set_p_order_createtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_order_createtime();
  p_order_createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_create_game_charge.Parameter.p_order_createtime)
}
inline void proc_create_game_charge_Parameter::set_p_order_createtime(const void* value,
    size_t size) {
  set_has_p_order_createtime();
  p_order_createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_create_game_charge.Parameter.p_order_createtime)
}
inline ::std::string* proc_create_game_charge_Parameter::mutable_p_order_createtime() {
  set_has_p_order_createtime();
  // @@protoc_insertion_point(field_mutable:db.proc_create_game_charge.Parameter.p_order_createtime)
  return p_order_createtime_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_create_game_charge_Parameter::release_p_order_createtime() {
  // @@protoc_insertion_point(field_release:db.proc_create_game_charge.Parameter.p_order_createtime)
  if (!has_p_order_createtime()) {
    return NULL;
  }
  clear_has_p_order_createtime();
  return p_order_createtime_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::set_allocated_p_order_createtime(::std::string* p_order_createtime) {
  if (p_order_createtime != NULL) {
    set_has_p_order_createtime();
  } else {
    clear_has_p_order_createtime();
  }
  p_order_createtime_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_order_createtime,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_create_game_charge.Parameter.p_order_createtime)
}
inline ::std::string* proc_create_game_charge_Parameter::unsafe_arena_release_p_order_createtime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_create_game_charge.Parameter.p_order_createtime)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_order_createtime();
  return p_order_createtime_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::unsafe_arena_set_allocated_p_order_createtime(
    ::std::string* p_order_createtime) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_order_createtime != NULL) {
    set_has_p_order_createtime();
  } else {
    clear_has_p_order_createtime();
  }
  p_order_createtime_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_order_createtime, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_create_game_charge.Parameter.p_order_createtime)
}

// required bytes p_order_notifytime = 15;
inline bool proc_create_game_charge_Parameter::has_p_order_notifytime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_order_notifytime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_order_notifytime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void proc_create_game_charge_Parameter::clear_p_order_notifytime() {
  p_order_notifytime_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_p_order_notifytime();
}
inline const ::std::string& proc_create_game_charge_Parameter::p_order_notifytime() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_order_notifytime)
  return p_order_notifytime_.Get();
}
inline void proc_create_game_charge_Parameter::set_p_order_notifytime(const ::std::string& value) {
  set_has_p_order_notifytime();
  p_order_notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_order_notifytime)
}
#if LANG_CXX11
inline void proc_create_game_charge_Parameter::set_p_order_notifytime(::std::string&& value) {
  set_has_p_order_notifytime();
  p_order_notifytime_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.proc_create_game_charge.Parameter.p_order_notifytime)
}
#endif
inline void proc_create_game_charge_Parameter::set_p_order_notifytime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p_order_notifytime();
  p_order_notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.proc_create_game_charge.Parameter.p_order_notifytime)
}
inline void proc_create_game_charge_Parameter::set_p_order_notifytime(const void* value,
    size_t size) {
  set_has_p_order_notifytime();
  p_order_notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.proc_create_game_charge.Parameter.p_order_notifytime)
}
inline ::std::string* proc_create_game_charge_Parameter::mutable_p_order_notifytime() {
  set_has_p_order_notifytime();
  // @@protoc_insertion_point(field_mutable:db.proc_create_game_charge.Parameter.p_order_notifytime)
  return p_order_notifytime_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* proc_create_game_charge_Parameter::release_p_order_notifytime() {
  // @@protoc_insertion_point(field_release:db.proc_create_game_charge.Parameter.p_order_notifytime)
  if (!has_p_order_notifytime()) {
    return NULL;
  }
  clear_has_p_order_notifytime();
  return p_order_notifytime_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::set_allocated_p_order_notifytime(::std::string* p_order_notifytime) {
  if (p_order_notifytime != NULL) {
    set_has_p_order_notifytime();
  } else {
    clear_has_p_order_notifytime();
  }
  p_order_notifytime_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p_order_notifytime,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.proc_create_game_charge.Parameter.p_order_notifytime)
}
inline ::std::string* proc_create_game_charge_Parameter::unsafe_arena_release_p_order_notifytime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_create_game_charge.Parameter.p_order_notifytime)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_p_order_notifytime();
  return p_order_notifytime_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void proc_create_game_charge_Parameter::unsafe_arena_set_allocated_p_order_notifytime(
    ::std::string* p_order_notifytime) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (p_order_notifytime != NULL) {
    set_has_p_order_notifytime();
  } else {
    clear_has_p_order_notifytime();
  }
  p_order_notifytime_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      p_order_notifytime, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_create_game_charge.Parameter.p_order_notifytime)
}

// required int32 p_goods_id = 16;
inline bool proc_create_game_charge_Parameter::has_p_goods_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_goods_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_goods_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void proc_create_game_charge_Parameter::clear_p_goods_id() {
  p_goods_id_ = 0;
  clear_has_p_goods_id();
}
inline ::google::protobuf::int32 proc_create_game_charge_Parameter::p_goods_id() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_goods_id)
  return p_goods_id_;
}
inline void proc_create_game_charge_Parameter::set_p_goods_id(::google::protobuf::int32 value) {
  set_has_p_goods_id();
  p_goods_id_ = value;
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_goods_id)
}

// required sfixed64 p_optime = 21;
inline bool proc_create_game_charge_Parameter::has_p_optime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void proc_create_game_charge_Parameter::set_has_p_optime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void proc_create_game_charge_Parameter::clear_has_p_optime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void proc_create_game_charge_Parameter::clear_p_optime() {
  p_optime_ = GOOGLE_LONGLONG(0);
  clear_has_p_optime();
}
inline ::google::protobuf::int64 proc_create_game_charge_Parameter::p_optime() const {
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.Parameter.p_optime)
  return p_optime_;
}
inline void proc_create_game_charge_Parameter::set_p_optime(::google::protobuf::int64 value) {
  set_has_p_optime();
  p_optime_ = value;
  // @@protoc_insertion_point(field_set:db.proc_create_game_charge.Parameter.p_optime)
}

// -------------------------------------------------------------------

// proc_create_game_charge

// optional .db.proc_create_game_charge.Parameter param = 1;
inline bool proc_create_game_charge::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_create_game_charge::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_create_game_charge::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_create_game_charge::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_create_game_charge_Parameter& proc_create_game_charge::_internal_param() const {
  return *param_;
}
inline const ::db::proc_create_game_charge_Parameter& proc_create_game_charge::param() const {
  const ::db::proc_create_game_charge_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_create_game_charge.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_create_game_charge_Parameter*>(
      &::db::_proc_create_game_charge_Parameter_default_instance_);
}
inline ::db::proc_create_game_charge_Parameter* proc_create_game_charge::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_create_game_charge.param)
  clear_has_param();
  ::db::proc_create_game_charge_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_create_game_charge_Parameter* proc_create_game_charge::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_create_game_charge.param)
  clear_has_param();
  ::db::proc_create_game_charge_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_create_game_charge_Parameter* proc_create_game_charge::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_create_game_charge_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_create_game_charge.param)
  return param_;
}
inline void proc_create_game_charge::set_allocated_param(::db::proc_create_game_charge_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_create_game_charge.param)
}

// -------------------------------------------------------------------

// UserMonthCard

// required bytes userid = 1;
inline bool UserMonthCard::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMonthCard::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMonthCard::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMonthCard::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserMonthCard::userid() const {
  // @@protoc_insertion_point(field_get:db.UserMonthCard.userid)
  return userid_.Get();
}
inline void UserMonthCard::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserMonthCard.userid)
}
#if LANG_CXX11
inline void UserMonthCard::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserMonthCard.userid)
}
#endif
inline void UserMonthCard::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserMonthCard.userid)
}
inline void UserMonthCard::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserMonthCard.userid)
}
inline ::std::string* UserMonthCard::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserMonthCard.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserMonthCard::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserMonthCard.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserMonthCard::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserMonthCard.userid)
}
inline ::std::string* UserMonthCard::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserMonthCard.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserMonthCard::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserMonthCard.userid)
}

// required int32 cardid = 2;
inline bool UserMonthCard::has_cardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserMonthCard::set_has_cardid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserMonthCard::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserMonthCard::clear_cardid() {
  cardid_ = 0;
  clear_has_cardid();
}
inline ::google::protobuf::int32 UserMonthCard::cardid() const {
  // @@protoc_insertion_point(field_get:db.UserMonthCard.cardid)
  return cardid_;
}
inline void UserMonthCard::set_cardid(::google::protobuf::int32 value) {
  set_has_cardid();
  cardid_ = value;
  // @@protoc_insertion_point(field_set:db.UserMonthCard.cardid)
}

// required int32 buy_month_card_num = 3;
inline bool UserMonthCard::has_buy_month_card_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserMonthCard::set_has_buy_month_card_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserMonthCard::clear_has_buy_month_card_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserMonthCard::clear_buy_month_card_num() {
  buy_month_card_num_ = 0;
  clear_has_buy_month_card_num();
}
inline ::google::protobuf::int32 UserMonthCard::buy_month_card_num() const {
  // @@protoc_insertion_point(field_get:db.UserMonthCard.buy_month_card_num)
  return buy_month_card_num_;
}
inline void UserMonthCard::set_buy_month_card_num(::google::protobuf::int32 value) {
  set_has_buy_month_card_num();
  buy_month_card_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserMonthCard.buy_month_card_num)
}

// required sfixed64 buy_month_card_burntime = 4;
inline bool UserMonthCard::has_buy_month_card_burntime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserMonthCard::set_has_buy_month_card_burntime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserMonthCard::clear_has_buy_month_card_burntime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserMonthCard::clear_buy_month_card_burntime() {
  buy_month_card_burntime_ = GOOGLE_LONGLONG(0);
  clear_has_buy_month_card_burntime();
}
inline ::google::protobuf::int64 UserMonthCard::buy_month_card_burntime() const {
  // @@protoc_insertion_point(field_get:db.UserMonthCard.buy_month_card_burntime)
  return buy_month_card_burntime_;
}
inline void UserMonthCard::set_buy_month_card_burntime(::google::protobuf::int64 value) {
  set_has_buy_month_card_burntime();
  buy_month_card_burntime_ = value;
  // @@protoc_insertion_point(field_set:db.UserMonthCard.buy_month_card_burntime)
}

// required sfixed64 month_card_awardtime = 5;
inline bool UserMonthCard::has_month_card_awardtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserMonthCard::set_has_month_card_awardtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserMonthCard::clear_has_month_card_awardtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserMonthCard::clear_month_card_awardtime() {
  month_card_awardtime_ = GOOGLE_LONGLONG(0);
  clear_has_month_card_awardtime();
}
inline ::google::protobuf::int64 UserMonthCard::month_card_awardtime() const {
  // @@protoc_insertion_point(field_get:db.UserMonthCard.month_card_awardtime)
  return month_card_awardtime_;
}
inline void UserMonthCard::set_month_card_awardtime(::google::protobuf::int64 value) {
  set_has_month_card_awardtime();
  month_card_awardtime_ = value;
  // @@protoc_insertion_point(field_set:db.UserMonthCard.month_card_awardtime)
}

// -------------------------------------------------------------------

// UserRoleLvShopping

// required bytes userid = 1;
inline bool UserRoleLvShopping::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRoleLvShopping::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRoleLvShopping::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRoleLvShopping::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserRoleLvShopping::userid() const {
  // @@protoc_insertion_point(field_get:db.UserRoleLvShopping.userid)
  return userid_.Get();
}
inline void UserRoleLvShopping::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserRoleLvShopping.userid)
}
#if LANG_CXX11
inline void UserRoleLvShopping::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserRoleLvShopping.userid)
}
#endif
inline void UserRoleLvShopping::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserRoleLvShopping.userid)
}
inline void UserRoleLvShopping::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserRoleLvShopping.userid)
}
inline ::std::string* UserRoleLvShopping::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserRoleLvShopping.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserRoleLvShopping::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserRoleLvShopping.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserRoleLvShopping::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserRoleLvShopping.userid)
}
inline ::std::string* UserRoleLvShopping::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserRoleLvShopping.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserRoleLvShopping::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserRoleLvShopping.userid)
}

// required uint64 giftbagid = 2;
inline bool UserRoleLvShopping::has_giftbagid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserRoleLvShopping::set_has_giftbagid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserRoleLvShopping::clear_has_giftbagid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserRoleLvShopping::clear_giftbagid() {
  giftbagid_ = GOOGLE_ULONGLONG(0);
  clear_has_giftbagid();
}
inline ::google::protobuf::uint64 UserRoleLvShopping::giftbagid() const {
  // @@protoc_insertion_point(field_get:db.UserRoleLvShopping.giftbagid)
  return giftbagid_;
}
inline void UserRoleLvShopping::set_giftbagid(::google::protobuf::uint64 value) {
  set_has_giftbagid();
  giftbagid_ = value;
  // @@protoc_insertion_point(field_set:db.UserRoleLvShopping.giftbagid)
}

// required uint64 flag_reward = 3;
inline bool UserRoleLvShopping::has_flag_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserRoleLvShopping::set_has_flag_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserRoleLvShopping::clear_has_flag_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserRoleLvShopping::clear_flag_reward() {
  flag_reward_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_reward();
}
inline ::google::protobuf::uint64 UserRoleLvShopping::flag_reward() const {
  // @@protoc_insertion_point(field_get:db.UserRoleLvShopping.flag_reward)
  return flag_reward_;
}
inline void UserRoleLvShopping::set_flag_reward(::google::protobuf::uint64 value) {
  set_has_flag_reward();
  flag_reward_ = value;
  // @@protoc_insertion_point(field_set:db.UserRoleLvShopping.flag_reward)
}

// required sfixed64 awardtime = 4;
inline bool UserRoleLvShopping::has_awardtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserRoleLvShopping::set_has_awardtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserRoleLvShopping::clear_has_awardtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserRoleLvShopping::clear_awardtime() {
  awardtime_ = GOOGLE_LONGLONG(0);
  clear_has_awardtime();
}
inline ::google::protobuf::int64 UserRoleLvShopping::awardtime() const {
  // @@protoc_insertion_point(field_get:db.UserRoleLvShopping.awardtime)
  return awardtime_;
}
inline void UserRoleLvShopping::set_awardtime(::google::protobuf::int64 value) {
  set_has_awardtime();
  awardtime_ = value;
  // @@protoc_insertion_point(field_set:db.UserRoleLvShopping.awardtime)
}

// -------------------------------------------------------------------

// UserStatsChargeAndGiftbag

// required bytes userid = 1;
inline bool UserStatsChargeAndGiftbag::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatsChargeAndGiftbag::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatsChargeAndGiftbag::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserStatsChargeAndGiftbag::userid() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.userid)
  return userid_.Get();
}
inline void UserStatsChargeAndGiftbag::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.userid)
}
#if LANG_CXX11
inline void UserStatsChargeAndGiftbag::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserStatsChargeAndGiftbag.userid)
}
#endif
inline void UserStatsChargeAndGiftbag::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserStatsChargeAndGiftbag.userid)
}
inline void UserStatsChargeAndGiftbag::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserStatsChargeAndGiftbag.userid)
}
inline ::std::string* UserStatsChargeAndGiftbag::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserStatsChargeAndGiftbag.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserStatsChargeAndGiftbag::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserStatsChargeAndGiftbag.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserStatsChargeAndGiftbag::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserStatsChargeAndGiftbag.userid)
}
inline ::std::string* UserStatsChargeAndGiftbag::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserStatsChargeAndGiftbag.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserStatsChargeAndGiftbag::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserStatsChargeAndGiftbag.userid)
}

// required uint64 charge_pool_topid = 2;
inline bool UserStatsChargeAndGiftbag::has_charge_pool_topid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_charge_pool_topid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserStatsChargeAndGiftbag::clear_has_charge_pool_topid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserStatsChargeAndGiftbag::clear_charge_pool_topid() {
  charge_pool_topid_ = GOOGLE_ULONGLONG(0);
  clear_has_charge_pool_topid();
}
inline ::google::protobuf::uint64 UserStatsChargeAndGiftbag::charge_pool_topid() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.charge_pool_topid)
  return charge_pool_topid_;
}
inline void UserStatsChargeAndGiftbag::set_charge_pool_topid(::google::protobuf::uint64 value) {
  set_has_charge_pool_topid();
  charge_pool_topid_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.charge_pool_topid)
}

// required int32 charge_point_num = 3;
inline bool UserStatsChargeAndGiftbag::has_charge_point_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_charge_point_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserStatsChargeAndGiftbag::clear_has_charge_point_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserStatsChargeAndGiftbag::clear_charge_point_num() {
  charge_point_num_ = 0;
  clear_has_charge_point_num();
}
inline ::google::protobuf::int32 UserStatsChargeAndGiftbag::charge_point_num() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.charge_point_num)
  return charge_point_num_;
}
inline void UserStatsChargeAndGiftbag::set_charge_point_num(::google::protobuf::int32 value) {
  set_has_charge_point_num();
  charge_point_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.charge_point_num)
}

// required uint64 flag_role_signin_reward = 21;
inline bool UserStatsChargeAndGiftbag::has_flag_role_signin_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_flag_role_signin_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserStatsChargeAndGiftbag::clear_has_flag_role_signin_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserStatsChargeAndGiftbag::clear_flag_role_signin_reward() {
  flag_role_signin_reward_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_role_signin_reward();
}
inline ::google::protobuf::uint64 UserStatsChargeAndGiftbag::flag_role_signin_reward() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.flag_role_signin_reward)
  return flag_role_signin_reward_;
}
inline void UserStatsChargeAndGiftbag::set_flag_role_signin_reward(::google::protobuf::uint64 value) {
  set_has_flag_role_signin_reward();
  flag_role_signin_reward_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.flag_role_signin_reward)
}

// required uint64 flag_role_signin = 22;
inline bool UserStatsChargeAndGiftbag::has_flag_role_signin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_flag_role_signin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserStatsChargeAndGiftbag::clear_has_flag_role_signin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserStatsChargeAndGiftbag::clear_flag_role_signin() {
  flag_role_signin_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_role_signin();
}
inline ::google::protobuf::uint64 UserStatsChargeAndGiftbag::flag_role_signin() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.flag_role_signin)
  return flag_role_signin_;
}
inline void UserStatsChargeAndGiftbag::set_flag_role_signin(::google::protobuf::uint64 value) {
  set_has_flag_role_signin();
  flag_role_signin_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.flag_role_signin)
}

// required sfixed64 role_signin_burntime = 23;
inline bool UserStatsChargeAndGiftbag::has_role_signin_burntime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_role_signin_burntime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserStatsChargeAndGiftbag::clear_has_role_signin_burntime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserStatsChargeAndGiftbag::clear_role_signin_burntime() {
  role_signin_burntime_ = GOOGLE_LONGLONG(0);
  clear_has_role_signin_burntime();
}
inline ::google::protobuf::int64 UserStatsChargeAndGiftbag::role_signin_burntime() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.role_signin_burntime)
  return role_signin_burntime_;
}
inline void UserStatsChargeAndGiftbag::set_role_signin_burntime(::google::protobuf::int64 value) {
  set_has_role_signin_burntime();
  role_signin_burntime_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.role_signin_burntime)
}

// required uint64 flag_role_levelup_reward = 31;
inline bool UserStatsChargeAndGiftbag::has_flag_role_levelup_reward() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_flag_role_levelup_reward() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserStatsChargeAndGiftbag::clear_has_flag_role_levelup_reward() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserStatsChargeAndGiftbag::clear_flag_role_levelup_reward() {
  flag_role_levelup_reward_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_role_levelup_reward();
}
inline ::google::protobuf::uint64 UserStatsChargeAndGiftbag::flag_role_levelup_reward() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.flag_role_levelup_reward)
  return flag_role_levelup_reward_;
}
inline void UserStatsChargeAndGiftbag::set_flag_role_levelup_reward(::google::protobuf::uint64 value) {
  set_has_flag_role_levelup_reward();
  flag_role_levelup_reward_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.flag_role_levelup_reward)
}

// required uint64 flag_charge_reward = 32;
inline bool UserStatsChargeAndGiftbag::has_flag_charge_reward() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_flag_charge_reward() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserStatsChargeAndGiftbag::clear_has_flag_charge_reward() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserStatsChargeAndGiftbag::clear_flag_charge_reward() {
  flag_charge_reward_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_charge_reward();
}
inline ::google::protobuf::uint64 UserStatsChargeAndGiftbag::flag_charge_reward() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.flag_charge_reward)
  return flag_charge_reward_;
}
inline void UserStatsChargeAndGiftbag::set_flag_charge_reward(::google::protobuf::uint64 value) {
  set_has_flag_charge_reward();
  flag_charge_reward_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.flag_charge_reward)
}

// required sfixed64 seven_day_signin_time = 41;
inline bool UserStatsChargeAndGiftbag::has_seven_day_signin_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_seven_day_signin_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserStatsChargeAndGiftbag::clear_has_seven_day_signin_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserStatsChargeAndGiftbag::clear_seven_day_signin_time() {
  seven_day_signin_time_ = GOOGLE_LONGLONG(0);
  clear_has_seven_day_signin_time();
}
inline ::google::protobuf::int64 UserStatsChargeAndGiftbag::seven_day_signin_time() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.seven_day_signin_time)
  return seven_day_signin_time_;
}
inline void UserStatsChargeAndGiftbag::set_seven_day_signin_time(::google::protobuf::int64 value) {
  set_has_seven_day_signin_time();
  seven_day_signin_time_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.seven_day_signin_time)
}

// required uint64 flag_seven_day_signin = 42;
inline bool UserStatsChargeAndGiftbag::has_flag_seven_day_signin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_flag_seven_day_signin() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserStatsChargeAndGiftbag::clear_has_flag_seven_day_signin() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserStatsChargeAndGiftbag::clear_flag_seven_day_signin() {
  flag_seven_day_signin_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_seven_day_signin();
}
inline ::google::protobuf::uint64 UserStatsChargeAndGiftbag::flag_seven_day_signin() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.flag_seven_day_signin)
  return flag_seven_day_signin_;
}
inline void UserStatsChargeAndGiftbag::set_flag_seven_day_signin(::google::protobuf::uint64 value) {
  set_has_flag_seven_day_signin();
  flag_seven_day_signin_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.flag_seven_day_signin)
}

// required uint64 flag_seven_day_signin_reward = 43;
inline bool UserStatsChargeAndGiftbag::has_flag_seven_day_signin_reward() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_flag_seven_day_signin_reward() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UserStatsChargeAndGiftbag::clear_has_flag_seven_day_signin_reward() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UserStatsChargeAndGiftbag::clear_flag_seven_day_signin_reward() {
  flag_seven_day_signin_reward_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_seven_day_signin_reward();
}
inline ::google::protobuf::uint64 UserStatsChargeAndGiftbag::flag_seven_day_signin_reward() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.flag_seven_day_signin_reward)
  return flag_seven_day_signin_reward_;
}
inline void UserStatsChargeAndGiftbag::set_flag_seven_day_signin_reward(::google::protobuf::uint64 value) {
  set_has_flag_seven_day_signin_reward();
  flag_seven_day_signin_reward_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.flag_seven_day_signin_reward)
}

// required sfixed64 friend_gift_give_num_refreshtime = 51;
inline bool UserStatsChargeAndGiftbag::has_friend_gift_give_num_refreshtime() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_friend_gift_give_num_refreshtime() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UserStatsChargeAndGiftbag::clear_has_friend_gift_give_num_refreshtime() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UserStatsChargeAndGiftbag::clear_friend_gift_give_num_refreshtime() {
  friend_gift_give_num_refreshtime_ = GOOGLE_LONGLONG(0);
  clear_has_friend_gift_give_num_refreshtime();
}
inline ::google::protobuf::int64 UserStatsChargeAndGiftbag::friend_gift_give_num_refreshtime() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.friend_gift_give_num_refreshtime)
  return friend_gift_give_num_refreshtime_;
}
inline void UserStatsChargeAndGiftbag::set_friend_gift_give_num_refreshtime(::google::protobuf::int64 value) {
  set_has_friend_gift_give_num_refreshtime();
  friend_gift_give_num_refreshtime_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.friend_gift_give_num_refreshtime)
}

// required int32 friend_gift_give_num = 52;
inline bool UserStatsChargeAndGiftbag::has_friend_gift_give_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_friend_gift_give_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserStatsChargeAndGiftbag::clear_has_friend_gift_give_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserStatsChargeAndGiftbag::clear_friend_gift_give_num() {
  friend_gift_give_num_ = 0;
  clear_has_friend_gift_give_num();
}
inline ::google::protobuf::int32 UserStatsChargeAndGiftbag::friend_gift_give_num() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.friend_gift_give_num)
  return friend_gift_give_num_;
}
inline void UserStatsChargeAndGiftbag::set_friend_gift_give_num(::google::protobuf::int32 value) {
  set_has_friend_gift_give_num();
  friend_gift_give_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.friend_gift_give_num)
}

// required int32 friend_gift_give_num_total = 53;
inline bool UserStatsChargeAndGiftbag::has_friend_gift_give_num_total() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_friend_gift_give_num_total() {
  _has_bits_[0] |= 0x00004000u;
}
inline void UserStatsChargeAndGiftbag::clear_has_friend_gift_give_num_total() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void UserStatsChargeAndGiftbag::clear_friend_gift_give_num_total() {
  friend_gift_give_num_total_ = 0;
  clear_has_friend_gift_give_num_total();
}
inline ::google::protobuf::int32 UserStatsChargeAndGiftbag::friend_gift_give_num_total() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.friend_gift_give_num_total)
  return friend_gift_give_num_total_;
}
inline void UserStatsChargeAndGiftbag::set_friend_gift_give_num_total(::google::protobuf::int32 value) {
  set_has_friend_gift_give_num_total();
  friend_gift_give_num_total_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.friend_gift_give_num_total)
}

// required sfixed64 friend_gift_accept_num_refreshtime = 61;
inline bool UserStatsChargeAndGiftbag::has_friend_gift_accept_num_refreshtime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_friend_gift_accept_num_refreshtime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void UserStatsChargeAndGiftbag::clear_has_friend_gift_accept_num_refreshtime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void UserStatsChargeAndGiftbag::clear_friend_gift_accept_num_refreshtime() {
  friend_gift_accept_num_refreshtime_ = GOOGLE_LONGLONG(0);
  clear_has_friend_gift_accept_num_refreshtime();
}
inline ::google::protobuf::int64 UserStatsChargeAndGiftbag::friend_gift_accept_num_refreshtime() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.friend_gift_accept_num_refreshtime)
  return friend_gift_accept_num_refreshtime_;
}
inline void UserStatsChargeAndGiftbag::set_friend_gift_accept_num_refreshtime(::google::protobuf::int64 value) {
  set_has_friend_gift_accept_num_refreshtime();
  friend_gift_accept_num_refreshtime_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.friend_gift_accept_num_refreshtime)
}

// required int32 friend_gift_accept_num = 62;
inline bool UserStatsChargeAndGiftbag::has_friend_gift_accept_num() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_friend_gift_accept_num() {
  _has_bits_[0] |= 0x00008000u;
}
inline void UserStatsChargeAndGiftbag::clear_has_friend_gift_accept_num() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void UserStatsChargeAndGiftbag::clear_friend_gift_accept_num() {
  friend_gift_accept_num_ = 0;
  clear_has_friend_gift_accept_num();
}
inline ::google::protobuf::int32 UserStatsChargeAndGiftbag::friend_gift_accept_num() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.friend_gift_accept_num)
  return friend_gift_accept_num_;
}
inline void UserStatsChargeAndGiftbag::set_friend_gift_accept_num(::google::protobuf::int32 value) {
  set_has_friend_gift_accept_num();
  friend_gift_accept_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.friend_gift_accept_num)
}

// required int32 friend_gift_accept_num_total = 63;
inline bool UserStatsChargeAndGiftbag::has_friend_gift_accept_num_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserStatsChargeAndGiftbag::set_has_friend_gift_accept_num_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserStatsChargeAndGiftbag::clear_has_friend_gift_accept_num_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserStatsChargeAndGiftbag::clear_friend_gift_accept_num_total() {
  friend_gift_accept_num_total_ = 0;
  clear_has_friend_gift_accept_num_total();
}
inline ::google::protobuf::int32 UserStatsChargeAndGiftbag::friend_gift_accept_num_total() const {
  // @@protoc_insertion_point(field_get:db.UserStatsChargeAndGiftbag.friend_gift_accept_num_total)
  return friend_gift_accept_num_total_;
}
inline void UserStatsChargeAndGiftbag::set_friend_gift_accept_num_total(::google::protobuf::int32 value) {
  set_has_friend_gift_accept_num_total();
  friend_gift_accept_num_total_ = value;
  // @@protoc_insertion_point(field_set:db.UserStatsChargeAndGiftbag.friend_gift_accept_num_total)
}

// -------------------------------------------------------------------

// UserActivityGiftbag

// required bytes userid = 1;
inline bool UserActivityGiftbag::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserActivityGiftbag::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserActivityGiftbag::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserActivityGiftbag::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserActivityGiftbag::userid() const {
  // @@protoc_insertion_point(field_get:db.UserActivityGiftbag.userid)
  return userid_.Get();
}
inline void UserActivityGiftbag::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserActivityGiftbag.userid)
}
#if LANG_CXX11
inline void UserActivityGiftbag::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserActivityGiftbag.userid)
}
#endif
inline void UserActivityGiftbag::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserActivityGiftbag.userid)
}
inline void UserActivityGiftbag::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserActivityGiftbag.userid)
}
inline ::std::string* UserActivityGiftbag::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserActivityGiftbag.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserActivityGiftbag::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserActivityGiftbag.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserActivityGiftbag::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserActivityGiftbag.userid)
}
inline ::std::string* UserActivityGiftbag::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserActivityGiftbag.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserActivityGiftbag::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserActivityGiftbag.userid)
}

// required int32 activityid = 2;
inline bool UserActivityGiftbag::has_activityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserActivityGiftbag::set_has_activityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserActivityGiftbag::clear_has_activityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserActivityGiftbag::clear_activityid() {
  activityid_ = 0;
  clear_has_activityid();
}
inline ::google::protobuf::int32 UserActivityGiftbag::activityid() const {
  // @@protoc_insertion_point(field_get:db.UserActivityGiftbag.activityid)
  return activityid_;
}
inline void UserActivityGiftbag::set_activityid(::google::protobuf::int32 value) {
  set_has_activityid();
  activityid_ = value;
  // @@protoc_insertion_point(field_set:db.UserActivityGiftbag.activityid)
}

// required sfixed64 festival_signin_time = 41;
inline bool UserActivityGiftbag::has_festival_signin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserActivityGiftbag::set_has_festival_signin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserActivityGiftbag::clear_has_festival_signin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserActivityGiftbag::clear_festival_signin_time() {
  festival_signin_time_ = GOOGLE_LONGLONG(0);
  clear_has_festival_signin_time();
}
inline ::google::protobuf::int64 UserActivityGiftbag::festival_signin_time() const {
  // @@protoc_insertion_point(field_get:db.UserActivityGiftbag.festival_signin_time)
  return festival_signin_time_;
}
inline void UserActivityGiftbag::set_festival_signin_time(::google::protobuf::int64 value) {
  set_has_festival_signin_time();
  festival_signin_time_ = value;
  // @@protoc_insertion_point(field_set:db.UserActivityGiftbag.festival_signin_time)
}

// required uint64 flag_festival_signin = 42;
inline bool UserActivityGiftbag::has_flag_festival_signin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserActivityGiftbag::set_has_flag_festival_signin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserActivityGiftbag::clear_has_flag_festival_signin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserActivityGiftbag::clear_flag_festival_signin() {
  flag_festival_signin_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_festival_signin();
}
inline ::google::protobuf::uint64 UserActivityGiftbag::flag_festival_signin() const {
  // @@protoc_insertion_point(field_get:db.UserActivityGiftbag.flag_festival_signin)
  return flag_festival_signin_;
}
inline void UserActivityGiftbag::set_flag_festival_signin(::google::protobuf::uint64 value) {
  set_has_flag_festival_signin();
  flag_festival_signin_ = value;
  // @@protoc_insertion_point(field_set:db.UserActivityGiftbag.flag_festival_signin)
}

// required uint64 flag_festival_signin_reward = 43;
inline bool UserActivityGiftbag::has_flag_festival_signin_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserActivityGiftbag::set_has_flag_festival_signin_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserActivityGiftbag::clear_has_flag_festival_signin_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserActivityGiftbag::clear_flag_festival_signin_reward() {
  flag_festival_signin_reward_ = GOOGLE_ULONGLONG(0);
  clear_has_flag_festival_signin_reward();
}
inline ::google::protobuf::uint64 UserActivityGiftbag::flag_festival_signin_reward() const {
  // @@protoc_insertion_point(field_get:db.UserActivityGiftbag.flag_festival_signin_reward)
  return flag_festival_signin_reward_;
}
inline void UserActivityGiftbag::set_flag_festival_signin_reward(::google::protobuf::uint64 value) {
  set_has_flag_festival_signin_reward();
  flag_festival_signin_reward_ = value;
  // @@protoc_insertion_point(field_set:db.UserActivityGiftbag.flag_festival_signin_reward)
}

// -------------------------------------------------------------------

// GameGiftbagCode

// required bytes code = 1;
inline bool GameGiftbagCode::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameGiftbagCode::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameGiftbagCode::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameGiftbagCode::clear_code() {
  code_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_code();
}
inline const ::std::string& GameGiftbagCode::code() const {
  // @@protoc_insertion_point(field_get:db.GameGiftbagCode.code)
  return code_.Get();
}
inline void GameGiftbagCode::set_code(const ::std::string& value) {
  set_has_code();
  code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGiftbagCode.code)
}
#if LANG_CXX11
inline void GameGiftbagCode::set_code(::std::string&& value) {
  set_has_code();
  code_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGiftbagCode.code)
}
#endif
inline void GameGiftbagCode::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGiftbagCode.code)
}
inline void GameGiftbagCode::set_code(const void* value,
    size_t size) {
  set_has_code();
  code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGiftbagCode.code)
}
inline ::std::string* GameGiftbagCode::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:db.GameGiftbagCode.code)
  return code_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGiftbagCode::release_code() {
  // @@protoc_insertion_point(field_release:db.GameGiftbagCode.code)
  if (!has_code()) {
    return NULL;
  }
  clear_has_code();
  return code_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGiftbagCode::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGiftbagCode.code)
}
inline ::std::string* GameGiftbagCode::unsafe_arena_release_code() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGiftbagCode.code)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_code();
  return code_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGiftbagCode::unsafe_arena_set_allocated_code(
    ::std::string* code) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      code, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGiftbagCode.code)
}

// required bytes userid = 2;
inline bool GameGiftbagCode::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameGiftbagCode::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameGiftbagCode::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameGiftbagCode::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& GameGiftbagCode::userid() const {
  // @@protoc_insertion_point(field_get:db.GameGiftbagCode.userid)
  return userid_.Get();
}
inline void GameGiftbagCode::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GameGiftbagCode.userid)
}
#if LANG_CXX11
inline void GameGiftbagCode::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GameGiftbagCode.userid)
}
#endif
inline void GameGiftbagCode::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GameGiftbagCode.userid)
}
inline void GameGiftbagCode::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GameGiftbagCode.userid)
}
inline ::std::string* GameGiftbagCode::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.GameGiftbagCode.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GameGiftbagCode::release_userid() {
  // @@protoc_insertion_point(field_release:db.GameGiftbagCode.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GameGiftbagCode::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GameGiftbagCode.userid)
}
inline ::std::string* GameGiftbagCode::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GameGiftbagCode.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GameGiftbagCode::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GameGiftbagCode.userid)
}

// optional sfixed64 active_time = 3;
inline bool GameGiftbagCode::has_active_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameGiftbagCode::set_has_active_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameGiftbagCode::clear_has_active_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameGiftbagCode::clear_active_time() {
  active_time_ = GOOGLE_LONGLONG(0);
  clear_has_active_time();
}
inline ::google::protobuf::int64 GameGiftbagCode::active_time() const {
  // @@protoc_insertion_point(field_get:db.GameGiftbagCode.active_time)
  return active_time_;
}
inline void GameGiftbagCode::set_active_time(::google::protobuf::int64 value) {
  set_has_active_time();
  active_time_ = value;
  // @@protoc_insertion_point(field_set:db.GameGiftbagCode.active_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::db::GAME_CHARGE_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::db::GAME_CHARGE_TYPE>() {
  return ::db::GAME_CHARGE_TYPE_descriptor();
}
template <> struct is_proto_enum< ::db::GAME_CHARGE_STATE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::db::GAME_CHARGE_STATE>() {
  return ::db::GAME_CHARGE_STATE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_StoredProcChargeAndGiftbag_2eproto
