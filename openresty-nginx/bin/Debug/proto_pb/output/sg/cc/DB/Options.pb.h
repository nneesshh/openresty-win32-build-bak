// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Options.proto

#ifndef PROTOBUF_Options_2eproto__INCLUDED
#define PROTOBUF_Options_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace db {
class SaveAndLoadOptions;
class SaveAndLoadOptionsDefaultTypeInternal;
extern SaveAndLoadOptionsDefaultTypeInternal _SaveAndLoadOptions_default_instance_;
}  // namespace db

namespace db {

namespace protobuf_Options_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Options_2eproto

// ===================================================================

class SaveAndLoadOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.SaveAndLoadOptions) */ {
 public:
  SaveAndLoadOptions();
  virtual ~SaveAndLoadOptions();

  SaveAndLoadOptions(const SaveAndLoadOptions& from);

  inline SaveAndLoadOptions& operator=(const SaveAndLoadOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveAndLoadOptions(SaveAndLoadOptions&& from) noexcept
    : SaveAndLoadOptions() {
    *this = ::std::move(from);
  }

  inline SaveAndLoadOptions& operator=(SaveAndLoadOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveAndLoadOptions& default_instance();

  static inline const SaveAndLoadOptions* internal_default_instance() {
    return reinterpret_cast<const SaveAndLoadOptions*>(
               &_SaveAndLoadOptions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(SaveAndLoadOptions* other);
  void Swap(SaveAndLoadOptions* other);
  friend void swap(SaveAndLoadOptions& a, SaveAndLoadOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveAndLoadOptions* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveAndLoadOptions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveAndLoadOptions& from);
  void MergeFrom(const SaveAndLoadOptions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveAndLoadOptions* other);
  protected:
  explicit SaveAndLoadOptions(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bytes_is_blob = 1;
  bool has_bytes_is_blob() const;
  void clear_bytes_is_blob();
  static const int kBytesIsBlobFieldNumber = 1;
  bool bytes_is_blob() const;
  void set_bytes_is_blob(bool value);

  // @@protoc_insertion_point(class_scope:db.SaveAndLoadOptions)
 private:
  void set_has_bytes_is_blob();
  void clear_has_bytes_is_blob();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bytes_is_blob_;
  friend struct protobuf_Options_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SaveAndLoadOptions

// optional bool bytes_is_blob = 1;
inline bool SaveAndLoadOptions::has_bytes_is_blob() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveAndLoadOptions::set_has_bytes_is_blob() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveAndLoadOptions::clear_has_bytes_is_blob() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveAndLoadOptions::clear_bytes_is_blob() {
  bytes_is_blob_ = false;
  clear_has_bytes_is_blob();
}
inline bool SaveAndLoadOptions::bytes_is_blob() const {
  // @@protoc_insertion_point(field_get:db.SaveAndLoadOptions.bytes_is_blob)
  return bytes_is_blob_;
}
inline void SaveAndLoadOptions::set_bytes_is_blob(bool value) {
  set_has_bytes_is_blob();
  bytes_is_blob_ = value;
  // @@protoc_insertion_point(field_set:db.SaveAndLoadOptions.bytes_is_blob)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace db

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Options_2eproto__INCLUDED
