// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoredProcHunt.proto

#ifndef PROTOBUF_INCLUDED_StoredProcHunt_2eproto
#define PROTOBUF_INCLUDED_StoredProcHunt_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_StoredProcHunt_2eproto 

namespace protobuf_StoredProcHunt_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_StoredProcHunt_2eproto
namespace db {
class ConfigHuntFishingTool;
class ConfigHuntFishingToolDefaultTypeInternal;
extern ConfigHuntFishingToolDefaultTypeInternal _ConfigHuntFishingTool_default_instance_;
class ConfigHuntFishingToolList;
class ConfigHuntFishingToolListDefaultTypeInternal;
extern ConfigHuntFishingToolListDefaultTypeInternal _ConfigHuntFishingToolList_default_instance_;
class ConfigHuntGround;
class ConfigHuntGroundDefaultTypeInternal;
extern ConfigHuntGroundDefaultTypeInternal _ConfigHuntGround_default_instance_;
class ConfigHuntGroundList;
class ConfigHuntGroundListDefaultTypeInternal;
extern ConfigHuntGroundListDefaultTypeInternal _ConfigHuntGroundList_default_instance_;
class ConfigHuntPrey;
class ConfigHuntPreyDefaultTypeInternal;
extern ConfigHuntPreyDefaultTypeInternal _ConfigHuntPrey_default_instance_;
class ConfigHuntPreyList;
class ConfigHuntPreyListDefaultTypeInternal;
extern ConfigHuntPreyListDefaultTypeInternal _ConfigHuntPreyList_default_instance_;
class ConfigHuntTrap;
class ConfigHuntTrapDefaultTypeInternal;
extern ConfigHuntTrapDefaultTypeInternal _ConfigHuntTrap_default_instance_;
class ConfigHuntTrapList;
class ConfigHuntTrapListDefaultTypeInternal;
extern ConfigHuntTrapListDefaultTypeInternal _ConfigHuntTrapList_default_instance_;
class UserHuntGround;
class UserHuntGroundDefaultTypeInternal;
extern UserHuntGroundDefaultTypeInternal _UserHuntGround_default_instance_;
class UserHuntPrey;
class UserHuntPreyDefaultTypeInternal;
extern UserHuntPreyDefaultTypeInternal _UserHuntPrey_default_instance_;
}  // namespace db
namespace google {
namespace protobuf {
template<> ::db::ConfigHuntFishingTool* Arena::CreateMaybeMessage<::db::ConfigHuntFishingTool>(Arena*);
template<> ::db::ConfigHuntFishingToolList* Arena::CreateMaybeMessage<::db::ConfigHuntFishingToolList>(Arena*);
template<> ::db::ConfigHuntGround* Arena::CreateMaybeMessage<::db::ConfigHuntGround>(Arena*);
template<> ::db::ConfigHuntGroundList* Arena::CreateMaybeMessage<::db::ConfigHuntGroundList>(Arena*);
template<> ::db::ConfigHuntPrey* Arena::CreateMaybeMessage<::db::ConfigHuntPrey>(Arena*);
template<> ::db::ConfigHuntPreyList* Arena::CreateMaybeMessage<::db::ConfigHuntPreyList>(Arena*);
template<> ::db::ConfigHuntTrap* Arena::CreateMaybeMessage<::db::ConfigHuntTrap>(Arena*);
template<> ::db::ConfigHuntTrapList* Arena::CreateMaybeMessage<::db::ConfigHuntTrapList>(Arena*);
template<> ::db::UserHuntGround* Arena::CreateMaybeMessage<::db::UserHuntGround>(Arena*);
template<> ::db::UserHuntPrey* Arena::CreateMaybeMessage<::db::UserHuntPrey>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace db {

// ===================================================================

class ConfigHuntGround : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHuntGround) */ {
 public:
  ConfigHuntGround();
  virtual ~ConfigHuntGround();

  ConfigHuntGround(const ConfigHuntGround& from);

  inline ConfigHuntGround& operator=(const ConfigHuntGround& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHuntGround(ConfigHuntGround&& from) noexcept
    : ConfigHuntGround() {
    *this = ::std::move(from);
  }

  inline ConfigHuntGround& operator=(ConfigHuntGround&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHuntGround& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHuntGround* internal_default_instance() {
    return reinterpret_cast<const ConfigHuntGround*>(
               &_ConfigHuntGround_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ConfigHuntGround* other);
  void Swap(ConfigHuntGround* other);
  friend void swap(ConfigHuntGround& a, ConfigHuntGround& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHuntGround* New() const final {
    return CreateMaybeMessage<ConfigHuntGround>(NULL);
  }

  ConfigHuntGround* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHuntGround>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHuntGround& from);
  void MergeFrom(const ConfigHuntGround& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHuntGround* other);
  protected:
  explicit ConfigHuntGround(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 groundid = 1;
  bool has_groundid() const;
  void clear_groundid();
  static const int kGroundidFieldNumber = 1;
  ::google::protobuf::uint64 groundid() const;
  void set_groundid(::google::protobuf::uint64 value);

  // required int32 ground_type = 2;
  bool has_ground_type() const;
  void clear_ground_type();
  static const int kGroundTypeFieldNumber = 2;
  ::google::protobuf::int32 ground_type() const;
  void set_ground_type(::google::protobuf::int32 value);

  // required int32 prey_num = 3;
  bool has_prey_num() const;
  void clear_prey_num();
  static const int kPreyNumFieldNumber = 3;
  ::google::protobuf::int32 prey_num() const;
  void set_prey_num(::google::protobuf::int32 value);

  // required int32 prey_hunt_num = 4;
  bool has_prey_hunt_num() const;
  void clear_prey_hunt_num();
  static const int kPreyHuntNumFieldNumber = 4;
  ::google::protobuf::int32 prey_hunt_num() const;
  void set_prey_hunt_num(::google::protobuf::int32 value);

  // required int32 prey_refresh_time = 5;
  bool has_prey_refresh_time() const;
  void clear_prey_refresh_time();
  static const int kPreyRefreshTimeFieldNumber = 5;
  ::google::protobuf::int32 prey_refresh_time() const;
  void set_prey_refresh_time(::google::protobuf::int32 value);

  // required int32 hunt_recover_time = 6;
  bool has_hunt_recover_time() const;
  void clear_hunt_recover_time();
  static const int kHuntRecoverTimeFieldNumber = 6;
  ::google::protobuf::int32 hunt_recover_time() const;
  void set_hunt_recover_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigHuntGround)
 private:
  void set_has_groundid();
  void clear_has_groundid();
  void set_has_ground_type();
  void clear_has_ground_type();
  void set_has_prey_num();
  void clear_has_prey_num();
  void set_has_prey_hunt_num();
  void clear_has_prey_hunt_num();
  void set_has_prey_refresh_time();
  void clear_has_prey_refresh_time();
  void set_has_hunt_recover_time();
  void clear_has_hunt_recover_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 groundid_;
  ::google::protobuf::int32 ground_type_;
  ::google::protobuf::int32 prey_num_;
  ::google::protobuf::int32 prey_hunt_num_;
  ::google::protobuf::int32 prey_refresh_time_;
  ::google::protobuf::int32 hunt_recover_time_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHuntGroundList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHuntGroundList) */ {
 public:
  ConfigHuntGroundList();
  virtual ~ConfigHuntGroundList();

  ConfigHuntGroundList(const ConfigHuntGroundList& from);

  inline ConfigHuntGroundList& operator=(const ConfigHuntGroundList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHuntGroundList(ConfigHuntGroundList&& from) noexcept
    : ConfigHuntGroundList() {
    *this = ::std::move(from);
  }

  inline ConfigHuntGroundList& operator=(ConfigHuntGroundList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHuntGroundList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHuntGroundList* internal_default_instance() {
    return reinterpret_cast<const ConfigHuntGroundList*>(
               &_ConfigHuntGroundList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ConfigHuntGroundList* other);
  void Swap(ConfigHuntGroundList* other);
  friend void swap(ConfigHuntGroundList& a, ConfigHuntGroundList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHuntGroundList* New() const final {
    return CreateMaybeMessage<ConfigHuntGroundList>(NULL);
  }

  ConfigHuntGroundList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHuntGroundList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHuntGroundList& from);
  void MergeFrom(const ConfigHuntGroundList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHuntGroundList* other);
  protected:
  explicit ConfigHuntGroundList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigHuntGround list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigHuntGround* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntGround >*
      mutable_list();
  const ::db::ConfigHuntGround& list(int index) const;
  ::db::ConfigHuntGround* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntGround >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigHuntGroundList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntGround > list_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHuntTrap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHuntTrap) */ {
 public:
  ConfigHuntTrap();
  virtual ~ConfigHuntTrap();

  ConfigHuntTrap(const ConfigHuntTrap& from);

  inline ConfigHuntTrap& operator=(const ConfigHuntTrap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHuntTrap(ConfigHuntTrap&& from) noexcept
    : ConfigHuntTrap() {
    *this = ::std::move(from);
  }

  inline ConfigHuntTrap& operator=(ConfigHuntTrap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHuntTrap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHuntTrap* internal_default_instance() {
    return reinterpret_cast<const ConfigHuntTrap*>(
               &_ConfigHuntTrap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ConfigHuntTrap* other);
  void Swap(ConfigHuntTrap* other);
  friend void swap(ConfigHuntTrap& a, ConfigHuntTrap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHuntTrap* New() const final {
    return CreateMaybeMessage<ConfigHuntTrap>(NULL);
  }

  ConfigHuntTrap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHuntTrap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHuntTrap& from);
  void MergeFrom(const ConfigHuntTrap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHuntTrap* other);
  protected:
  explicit ConfigHuntTrap(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes target_group = 4;
  bool has_target_group() const;
  void clear_target_group();
  static const int kTargetGroupFieldNumber = 4;
  const ::std::string& target_group() const;
  void set_target_group(const ::std::string& value);
  #if LANG_CXX11
  void set_target_group(::std::string&& value);
  #endif
  void set_target_group(const char* value);
  void set_target_group(const void* value, size_t size);
  ::std::string* mutable_target_group();
  ::std::string* release_target_group();
  void set_allocated_target_group(::std::string* target_group);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_target_group();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_target_group(
      ::std::string* target_group);

  // required int32 trapid = 1;
  bool has_trapid() const;
  void clear_trapid();
  static const int kTrapidFieldNumber = 1;
  ::google::protobuf::int32 trapid() const;
  void set_trapid(::google::protobuf::int32 value);

  // required int32 size_type = 2;
  bool has_size_type() const;
  void clear_size_type();
  static const int kSizeTypeFieldNumber = 2;
  ::google::protobuf::int32 size_type() const;
  void set_size_type(::google::protobuf::int32 value);

  // required uint64 itemid = 3;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 3;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:db.ConfigHuntTrap)
 private:
  void set_has_trapid();
  void clear_has_trapid();
  void set_has_size_type();
  void clear_has_size_type();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_target_group();
  void clear_has_target_group();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr target_group_;
  ::google::protobuf::int32 trapid_;
  ::google::protobuf::int32 size_type_;
  ::google::protobuf::uint64 itemid_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHuntTrapList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHuntTrapList) */ {
 public:
  ConfigHuntTrapList();
  virtual ~ConfigHuntTrapList();

  ConfigHuntTrapList(const ConfigHuntTrapList& from);

  inline ConfigHuntTrapList& operator=(const ConfigHuntTrapList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHuntTrapList(ConfigHuntTrapList&& from) noexcept
    : ConfigHuntTrapList() {
    *this = ::std::move(from);
  }

  inline ConfigHuntTrapList& operator=(ConfigHuntTrapList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHuntTrapList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHuntTrapList* internal_default_instance() {
    return reinterpret_cast<const ConfigHuntTrapList*>(
               &_ConfigHuntTrapList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ConfigHuntTrapList* other);
  void Swap(ConfigHuntTrapList* other);
  friend void swap(ConfigHuntTrapList& a, ConfigHuntTrapList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHuntTrapList* New() const final {
    return CreateMaybeMessage<ConfigHuntTrapList>(NULL);
  }

  ConfigHuntTrapList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHuntTrapList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHuntTrapList& from);
  void MergeFrom(const ConfigHuntTrapList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHuntTrapList* other);
  protected:
  explicit ConfigHuntTrapList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigHuntTrap list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigHuntTrap* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntTrap >*
      mutable_list();
  const ::db::ConfigHuntTrap& list(int index) const;
  ::db::ConfigHuntTrap* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntTrap >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigHuntTrapList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntTrap > list_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHuntFishingTool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHuntFishingTool) */ {
 public:
  ConfigHuntFishingTool();
  virtual ~ConfigHuntFishingTool();

  ConfigHuntFishingTool(const ConfigHuntFishingTool& from);

  inline ConfigHuntFishingTool& operator=(const ConfigHuntFishingTool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHuntFishingTool(ConfigHuntFishingTool&& from) noexcept
    : ConfigHuntFishingTool() {
    *this = ::std::move(from);
  }

  inline ConfigHuntFishingTool& operator=(ConfigHuntFishingTool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHuntFishingTool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHuntFishingTool* internal_default_instance() {
    return reinterpret_cast<const ConfigHuntFishingTool*>(
               &_ConfigHuntFishingTool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(ConfigHuntFishingTool* other);
  void Swap(ConfigHuntFishingTool* other);
  friend void swap(ConfigHuntFishingTool& a, ConfigHuntFishingTool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHuntFishingTool* New() const final {
    return CreateMaybeMessage<ConfigHuntFishingTool>(NULL);
  }

  ConfigHuntFishingTool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHuntFishingTool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHuntFishingTool& from);
  void MergeFrom(const ConfigHuntFishingTool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHuntFishingTool* other);
  protected:
  explicit ConfigHuntFishingTool(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes target_group = 4;
  bool has_target_group() const;
  void clear_target_group();
  static const int kTargetGroupFieldNumber = 4;
  const ::std::string& target_group() const;
  void set_target_group(const ::std::string& value);
  #if LANG_CXX11
  void set_target_group(::std::string&& value);
  #endif
  void set_target_group(const char* value);
  void set_target_group(const void* value, size_t size);
  ::std::string* mutable_target_group();
  ::std::string* release_target_group();
  void set_allocated_target_group(::std::string* target_group);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_target_group();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_target_group(
      ::std::string* target_group);

  // required int32 toolid = 1;
  bool has_toolid() const;
  void clear_toolid();
  static const int kToolidFieldNumber = 1;
  ::google::protobuf::int32 toolid() const;
  void set_toolid(::google::protobuf::int32 value);

  // required int32 tool_type = 2;
  bool has_tool_type() const;
  void clear_tool_type();
  static const int kToolTypeFieldNumber = 2;
  ::google::protobuf::int32 tool_type() const;
  void set_tool_type(::google::protobuf::int32 value);

  // required uint64 itemid = 3;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 3;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:db.ConfigHuntFishingTool)
 private:
  void set_has_toolid();
  void clear_has_toolid();
  void set_has_tool_type();
  void clear_has_tool_type();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_target_group();
  void clear_has_target_group();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr target_group_;
  ::google::protobuf::int32 toolid_;
  ::google::protobuf::int32 tool_type_;
  ::google::protobuf::uint64 itemid_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHuntFishingToolList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHuntFishingToolList) */ {
 public:
  ConfigHuntFishingToolList();
  virtual ~ConfigHuntFishingToolList();

  ConfigHuntFishingToolList(const ConfigHuntFishingToolList& from);

  inline ConfigHuntFishingToolList& operator=(const ConfigHuntFishingToolList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHuntFishingToolList(ConfigHuntFishingToolList&& from) noexcept
    : ConfigHuntFishingToolList() {
    *this = ::std::move(from);
  }

  inline ConfigHuntFishingToolList& operator=(ConfigHuntFishingToolList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHuntFishingToolList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHuntFishingToolList* internal_default_instance() {
    return reinterpret_cast<const ConfigHuntFishingToolList*>(
               &_ConfigHuntFishingToolList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(ConfigHuntFishingToolList* other);
  void Swap(ConfigHuntFishingToolList* other);
  friend void swap(ConfigHuntFishingToolList& a, ConfigHuntFishingToolList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHuntFishingToolList* New() const final {
    return CreateMaybeMessage<ConfigHuntFishingToolList>(NULL);
  }

  ConfigHuntFishingToolList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHuntFishingToolList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHuntFishingToolList& from);
  void MergeFrom(const ConfigHuntFishingToolList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHuntFishingToolList* other);
  protected:
  explicit ConfigHuntFishingToolList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigHuntFishingTool list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigHuntFishingTool* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntFishingTool >*
      mutable_list();
  const ::db::ConfigHuntFishingTool& list(int index) const;
  ::db::ConfigHuntFishingTool* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntFishingTool >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigHuntFishingToolList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntFishingTool > list_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHuntPrey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHuntPrey) */ {
 public:
  ConfigHuntPrey();
  virtual ~ConfigHuntPrey();

  ConfigHuntPrey(const ConfigHuntPrey& from);

  inline ConfigHuntPrey& operator=(const ConfigHuntPrey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHuntPrey(ConfigHuntPrey&& from) noexcept
    : ConfigHuntPrey() {
    *this = ::std::move(from);
  }

  inline ConfigHuntPrey& operator=(ConfigHuntPrey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHuntPrey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHuntPrey* internal_default_instance() {
    return reinterpret_cast<const ConfigHuntPrey*>(
               &_ConfigHuntPrey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(ConfigHuntPrey* other);
  void Swap(ConfigHuntPrey* other);
  friend void swap(ConfigHuntPrey& a, ConfigHuntPrey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHuntPrey* New() const final {
    return CreateMaybeMessage<ConfigHuntPrey>(NULL);
  }

  ConfigHuntPrey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHuntPrey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHuntPrey& from);
  void MergeFrom(const ConfigHuntPrey& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHuntPrey* other);
  protected:
  explicit ConfigHuntPrey(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes drop_list = 7;
  bool has_drop_list() const;
  void clear_drop_list();
  static const int kDropListFieldNumber = 7;
  const ::std::string& drop_list() const;
  void set_drop_list(const ::std::string& value);
  #if LANG_CXX11
  void set_drop_list(::std::string&& value);
  #endif
  void set_drop_list(const char* value);
  void set_drop_list(const void* value, size_t size);
  ::std::string* mutable_drop_list();
  ::std::string* release_drop_list();
  void set_allocated_drop_list(::std::string* drop_list);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_drop_list();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_drop_list(
      ::std::string* drop_list);

  // required uint64 groundid = 1;
  bool has_groundid() const;
  void clear_groundid();
  static const int kGroundidFieldNumber = 1;
  ::google::protobuf::uint64 groundid() const;
  void set_groundid(::google::protobuf::uint64 value);

  // required uint64 prey_typeid = 2;
  bool has_prey_typeid() const;
  void clear_prey_typeid();
  static const int kPreyTypeidFieldNumber = 2;
  ::google::protobuf::uint64 prey_typeid() const;
  void set_prey_typeid(::google::protobuf::uint64 value);

  // required int32 prey_type = 3;
  bool has_prey_type() const;
  void clear_prey_type();
  static const int kPreyTypeFieldNumber = 3;
  ::google::protobuf::int32 prey_type() const;
  void set_prey_type(::google::protobuf::int32 value);

  // required int32 size_type = 4;
  bool has_size_type() const;
  void clear_size_type();
  static const int kSizeTypeFieldNumber = 4;
  ::google::protobuf::int32 size_type() const;
  void set_size_type(::google::protobuf::int32 value);

  // required float refresh_ratio = 5;
  bool has_refresh_ratio() const;
  void clear_refresh_ratio();
  static const int kRefreshRatioFieldNumber = 5;
  float refresh_ratio() const;
  void set_refresh_ratio(float value);

  // required int32 level = 6;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.ConfigHuntPrey)
 private:
  void set_has_groundid();
  void clear_has_groundid();
  void set_has_prey_typeid();
  void clear_has_prey_typeid();
  void set_has_prey_type();
  void clear_has_prey_type();
  void set_has_size_type();
  void clear_has_size_type();
  void set_has_refresh_ratio();
  void clear_has_refresh_ratio();
  void set_has_level();
  void clear_has_level();
  void set_has_drop_list();
  void clear_has_drop_list();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr drop_list_;
  ::google::protobuf::uint64 groundid_;
  ::google::protobuf::uint64 prey_typeid_;
  ::google::protobuf::int32 prey_type_;
  ::google::protobuf::int32 size_type_;
  float refresh_ratio_;
  ::google::protobuf::int32 level_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigHuntPreyList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.ConfigHuntPreyList) */ {
 public:
  ConfigHuntPreyList();
  virtual ~ConfigHuntPreyList();

  ConfigHuntPreyList(const ConfigHuntPreyList& from);

  inline ConfigHuntPreyList& operator=(const ConfigHuntPreyList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigHuntPreyList(ConfigHuntPreyList&& from) noexcept
    : ConfigHuntPreyList() {
    *this = ::std::move(from);
  }

  inline ConfigHuntPreyList& operator=(ConfigHuntPreyList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigHuntPreyList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigHuntPreyList* internal_default_instance() {
    return reinterpret_cast<const ConfigHuntPreyList*>(
               &_ConfigHuntPreyList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(ConfigHuntPreyList* other);
  void Swap(ConfigHuntPreyList* other);
  friend void swap(ConfigHuntPreyList& a, ConfigHuntPreyList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigHuntPreyList* New() const final {
    return CreateMaybeMessage<ConfigHuntPreyList>(NULL);
  }

  ConfigHuntPreyList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigHuntPreyList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigHuntPreyList& from);
  void MergeFrom(const ConfigHuntPreyList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigHuntPreyList* other);
  protected:
  explicit ConfigHuntPreyList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db.ConfigHuntPrey list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::db::ConfigHuntPrey* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntPrey >*
      mutable_list();
  const ::db::ConfigHuntPrey& list(int index) const;
  ::db::ConfigHuntPrey* add_list();
  const ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntPrey >&
      list() const;

  // @@protoc_insertion_point(class_scope:db.ConfigHuntPreyList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntPrey > list_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserHuntGround : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserHuntGround) */ {
 public:
  UserHuntGround();
  virtual ~UserHuntGround();

  UserHuntGround(const UserHuntGround& from);

  inline UserHuntGround& operator=(const UserHuntGround& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserHuntGround(UserHuntGround&& from) noexcept
    : UserHuntGround() {
    *this = ::std::move(from);
  }

  inline UserHuntGround& operator=(UserHuntGround&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserHuntGround& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserHuntGround* internal_default_instance() {
    return reinterpret_cast<const UserHuntGround*>(
               &_UserHuntGround_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(UserHuntGround* other);
  void Swap(UserHuntGround* other);
  friend void swap(UserHuntGround& a, UserHuntGround& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserHuntGround* New() const final {
    return CreateMaybeMessage<UserHuntGround>(NULL);
  }

  UserHuntGround* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserHuntGround>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserHuntGround& from);
  void MergeFrom(const UserHuntGround& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserHuntGround* other);
  protected:
  explicit UserHuntGround(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required uint64 groundid = 2;
  bool has_groundid() const;
  void clear_groundid();
  static const int kGroundidFieldNumber = 2;
  ::google::protobuf::uint64 groundid() const;
  void set_groundid(::google::protobuf::uint64 value);

  // required int32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required int32 hunt_num = 4;
  bool has_hunt_num() const;
  void clear_hunt_num();
  static const int kHuntNumFieldNumber = 4;
  ::google::protobuf::int32 hunt_num() const;
  void set_hunt_num(::google::protobuf::int32 value);

  // required sfixed64 hunt_recover_starttime = 5;
  bool has_hunt_recover_starttime() const;
  void clear_hunt_recover_starttime();
  static const int kHuntRecoverStarttimeFieldNumber = 5;
  ::google::protobuf::int64 hunt_recover_starttime() const;
  void set_hunt_recover_starttime(::google::protobuf::int64 value);

  // required int32 hunt_recover_cd_seconds = 6;
  bool has_hunt_recover_cd_seconds() const;
  void clear_hunt_recover_cd_seconds();
  static const int kHuntRecoverCdSecondsFieldNumber = 6;
  ::google::protobuf::int32 hunt_recover_cd_seconds() const;
  void set_hunt_recover_cd_seconds(::google::protobuf::int32 value);

  // required float hunt_recover_add_ratio1 = 7;
  bool has_hunt_recover_add_ratio1() const;
  void clear_hunt_recover_add_ratio1();
  static const int kHuntRecoverAddRatio1FieldNumber = 7;
  float hunt_recover_add_ratio1() const;
  void set_hunt_recover_add_ratio1(float value);

  // required float hunt_recover_add_ratio2 = 8;
  bool has_hunt_recover_add_ratio2() const;
  void clear_hunt_recover_add_ratio2();
  static const int kHuntRecoverAddRatio2FieldNumber = 8;
  float hunt_recover_add_ratio2() const;
  void set_hunt_recover_add_ratio2(float value);

  // required float hunt_recover_add_ratio3 = 9;
  bool has_hunt_recover_add_ratio3() const;
  void clear_hunt_recover_add_ratio3();
  static const int kHuntRecoverAddRatio3FieldNumber = 9;
  float hunt_recover_add_ratio3() const;
  void set_hunt_recover_add_ratio3(float value);

  // required sfixed64 growtime = 11;
  bool has_growtime() const;
  void clear_growtime();
  static const int kGrowtimeFieldNumber = 11;
  ::google::protobuf::int64 growtime() const;
  void set_growtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserHuntGround)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_groundid();
  void clear_has_groundid();
  void set_has_state();
  void clear_has_state();
  void set_has_hunt_num();
  void clear_has_hunt_num();
  void set_has_hunt_recover_starttime();
  void clear_has_hunt_recover_starttime();
  void set_has_hunt_recover_cd_seconds();
  void clear_has_hunt_recover_cd_seconds();
  void set_has_hunt_recover_add_ratio1();
  void clear_has_hunt_recover_add_ratio1();
  void set_has_hunt_recover_add_ratio2();
  void clear_has_hunt_recover_add_ratio2();
  void set_has_hunt_recover_add_ratio3();
  void clear_has_hunt_recover_add_ratio3();
  void set_has_growtime();
  void clear_has_growtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::uint64 groundid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 hunt_num_;
  ::google::protobuf::int64 hunt_recover_starttime_;
  ::google::protobuf::int32 hunt_recover_cd_seconds_;
  float hunt_recover_add_ratio1_;
  float hunt_recover_add_ratio2_;
  float hunt_recover_add_ratio3_;
  ::google::protobuf::int64 growtime_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserHuntPrey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.UserHuntPrey) */ {
 public:
  UserHuntPrey();
  virtual ~UserHuntPrey();

  UserHuntPrey(const UserHuntPrey& from);

  inline UserHuntPrey& operator=(const UserHuntPrey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserHuntPrey(UserHuntPrey&& from) noexcept
    : UserHuntPrey() {
    *this = ::std::move(from);
  }

  inline UserHuntPrey& operator=(UserHuntPrey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserHuntPrey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserHuntPrey* internal_default_instance() {
    return reinterpret_cast<const UserHuntPrey*>(
               &_UserHuntPrey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(UserHuntPrey* other);
  void Swap(UserHuntPrey* other);
  friend void swap(UserHuntPrey& a, UserHuntPrey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserHuntPrey* New() const final {
    return CreateMaybeMessage<UserHuntPrey>(NULL);
  }

  UserHuntPrey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserHuntPrey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserHuntPrey& from);
  void MergeFrom(const UserHuntPrey& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserHuntPrey* other);
  protected:
  explicit UserHuntPrey(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required uint64 groundid = 2;
  bool has_groundid() const;
  void clear_groundid();
  static const int kGroundidFieldNumber = 2;
  ::google::protobuf::uint64 groundid() const;
  void set_groundid(::google::protobuf::uint64 value);

  // required int32 sn = 3;
  bool has_sn() const;
  void clear_sn();
  static const int kSnFieldNumber = 3;
  ::google::protobuf::int32 sn() const;
  void set_sn(::google::protobuf::int32 value);

  // required int32 prey_type = 4;
  bool has_prey_type() const;
  void clear_prey_type();
  static const int kPreyTypeFieldNumber = 4;
  ::google::protobuf::int32 prey_type() const;
  void set_prey_type(::google::protobuf::int32 value);

  // required uint64 cfgid = 5;
  bool has_cfgid() const;
  void clear_cfgid();
  static const int kCfgidFieldNumber = 5;
  ::google::protobuf::uint64 cfgid() const;
  void set_cfgid(::google::protobuf::uint64 value);

  // required int32 cfg_groupid = 6;
  bool has_cfg_groupid() const;
  void clear_cfg_groupid();
  static const int kCfgGroupidFieldNumber = 6;
  ::google::protobuf::int32 cfg_groupid() const;
  void set_cfg_groupid(::google::protobuf::int32 value);

  // required int32 state = 7;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required int32 seconds = 8;
  bool has_seconds() const;
  void clear_seconds();
  static const int kSecondsFieldNumber = 8;
  ::google::protobuf::int32 seconds() const;
  void set_seconds(::google::protobuf::int32 value);

  // required int32 seqno = 9;
  bool has_seqno() const;
  void clear_seqno();
  static const int kSeqnoFieldNumber = 9;
  ::google::protobuf::int32 seqno() const;
  void set_seqno(::google::protobuf::int32 value);

  // required int32 task_menuid = 11;
  bool has_task_menuid() const;
  void clear_task_menuid();
  static const int kTaskMenuidFieldNumber = 11;
  ::google::protobuf::int32 task_menuid() const;
  void set_task_menuid(::google::protobuf::int32 value);

  // required sfixed64 optime = 21;
  bool has_optime() const;
  void clear_optime();
  static const int kOptimeFieldNumber = 21;
  ::google::protobuf::int64 optime() const;
  void set_optime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.UserHuntPrey)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_groundid();
  void clear_has_groundid();
  void set_has_sn();
  void clear_has_sn();
  void set_has_prey_type();
  void clear_has_prey_type();
  void set_has_cfgid();
  void clear_has_cfgid();
  void set_has_cfg_groupid();
  void clear_has_cfg_groupid();
  void set_has_state();
  void clear_has_state();
  void set_has_seconds();
  void clear_has_seconds();
  void set_has_seqno();
  void clear_has_seqno();
  void set_has_task_menuid();
  void clear_has_task_menuid();
  void set_has_optime();
  void clear_has_optime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::uint64 groundid_;
  ::google::protobuf::int32 sn_;
  ::google::protobuf::int32 prey_type_;
  ::google::protobuf::uint64 cfgid_;
  ::google::protobuf::int32 cfg_groupid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 seconds_;
  ::google::protobuf::int32 seqno_;
  ::google::protobuf::int32 task_menuid_;
  ::google::protobuf::int64 optime_;
  friend struct ::protobuf_StoredProcHunt_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigHuntGround

// required uint64 groundid = 1;
inline bool ConfigHuntGround::has_groundid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigHuntGround::set_has_groundid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigHuntGround::clear_has_groundid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigHuntGround::clear_groundid() {
  groundid_ = GOOGLE_ULONGLONG(0);
  clear_has_groundid();
}
inline ::google::protobuf::uint64 ConfigHuntGround::groundid() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntGround.groundid)
  return groundid_;
}
inline void ConfigHuntGround::set_groundid(::google::protobuf::uint64 value) {
  set_has_groundid();
  groundid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntGround.groundid)
}

// required int32 ground_type = 2;
inline bool ConfigHuntGround::has_ground_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigHuntGround::set_has_ground_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigHuntGround::clear_has_ground_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigHuntGround::clear_ground_type() {
  ground_type_ = 0;
  clear_has_ground_type();
}
inline ::google::protobuf::int32 ConfigHuntGround::ground_type() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntGround.ground_type)
  return ground_type_;
}
inline void ConfigHuntGround::set_ground_type(::google::protobuf::int32 value) {
  set_has_ground_type();
  ground_type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntGround.ground_type)
}

// required int32 prey_num = 3;
inline bool ConfigHuntGround::has_prey_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigHuntGround::set_has_prey_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigHuntGround::clear_has_prey_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigHuntGround::clear_prey_num() {
  prey_num_ = 0;
  clear_has_prey_num();
}
inline ::google::protobuf::int32 ConfigHuntGround::prey_num() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntGround.prey_num)
  return prey_num_;
}
inline void ConfigHuntGround::set_prey_num(::google::protobuf::int32 value) {
  set_has_prey_num();
  prey_num_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntGround.prey_num)
}

// required int32 prey_hunt_num = 4;
inline bool ConfigHuntGround::has_prey_hunt_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigHuntGround::set_has_prey_hunt_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigHuntGround::clear_has_prey_hunt_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigHuntGround::clear_prey_hunt_num() {
  prey_hunt_num_ = 0;
  clear_has_prey_hunt_num();
}
inline ::google::protobuf::int32 ConfigHuntGround::prey_hunt_num() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntGround.prey_hunt_num)
  return prey_hunt_num_;
}
inline void ConfigHuntGround::set_prey_hunt_num(::google::protobuf::int32 value) {
  set_has_prey_hunt_num();
  prey_hunt_num_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntGround.prey_hunt_num)
}

// required int32 prey_refresh_time = 5;
inline bool ConfigHuntGround::has_prey_refresh_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigHuntGround::set_has_prey_refresh_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigHuntGround::clear_has_prey_refresh_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigHuntGround::clear_prey_refresh_time() {
  prey_refresh_time_ = 0;
  clear_has_prey_refresh_time();
}
inline ::google::protobuf::int32 ConfigHuntGround::prey_refresh_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntGround.prey_refresh_time)
  return prey_refresh_time_;
}
inline void ConfigHuntGround::set_prey_refresh_time(::google::protobuf::int32 value) {
  set_has_prey_refresh_time();
  prey_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntGround.prey_refresh_time)
}

// required int32 hunt_recover_time = 6;
inline bool ConfigHuntGround::has_hunt_recover_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigHuntGround::set_has_hunt_recover_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigHuntGround::clear_has_hunt_recover_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigHuntGround::clear_hunt_recover_time() {
  hunt_recover_time_ = 0;
  clear_has_hunt_recover_time();
}
inline ::google::protobuf::int32 ConfigHuntGround::hunt_recover_time() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntGround.hunt_recover_time)
  return hunt_recover_time_;
}
inline void ConfigHuntGround::set_hunt_recover_time(::google::protobuf::int32 value) {
  set_has_hunt_recover_time();
  hunt_recover_time_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntGround.hunt_recover_time)
}

// -------------------------------------------------------------------

// ConfigHuntGroundList

// repeated .db.ConfigHuntGround list = 1;
inline int ConfigHuntGroundList::list_size() const {
  return list_.size();
}
inline void ConfigHuntGroundList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigHuntGround* ConfigHuntGroundList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigHuntGroundList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntGround >*
ConfigHuntGroundList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigHuntGroundList.list)
  return &list_;
}
inline const ::db::ConfigHuntGround& ConfigHuntGroundList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntGroundList.list)
  return list_.Get(index);
}
inline ::db::ConfigHuntGround* ConfigHuntGroundList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigHuntGroundList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntGround >&
ConfigHuntGroundList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigHuntGroundList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigHuntTrap

// required int32 trapid = 1;
inline bool ConfigHuntTrap::has_trapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigHuntTrap::set_has_trapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigHuntTrap::clear_has_trapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigHuntTrap::clear_trapid() {
  trapid_ = 0;
  clear_has_trapid();
}
inline ::google::protobuf::int32 ConfigHuntTrap::trapid() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntTrap.trapid)
  return trapid_;
}
inline void ConfigHuntTrap::set_trapid(::google::protobuf::int32 value) {
  set_has_trapid();
  trapid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntTrap.trapid)
}

// required int32 size_type = 2;
inline bool ConfigHuntTrap::has_size_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigHuntTrap::set_has_size_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigHuntTrap::clear_has_size_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigHuntTrap::clear_size_type() {
  size_type_ = 0;
  clear_has_size_type();
}
inline ::google::protobuf::int32 ConfigHuntTrap::size_type() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntTrap.size_type)
  return size_type_;
}
inline void ConfigHuntTrap::set_size_type(::google::protobuf::int32 value) {
  set_has_size_type();
  size_type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntTrap.size_type)
}

// required uint64 itemid = 3;
inline bool ConfigHuntTrap::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigHuntTrap::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigHuntTrap::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigHuntTrap::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 ConfigHuntTrap::itemid() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntTrap.itemid)
  return itemid_;
}
inline void ConfigHuntTrap::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntTrap.itemid)
}

// required bytes target_group = 4;
inline bool ConfigHuntTrap::has_target_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigHuntTrap::set_has_target_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigHuntTrap::clear_has_target_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigHuntTrap::clear_target_group() {
  target_group_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_target_group();
}
inline const ::std::string& ConfigHuntTrap::target_group() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntTrap.target_group)
  return target_group_.Get();
}
inline void ConfigHuntTrap::set_target_group(const ::std::string& value) {
  set_has_target_group();
  target_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigHuntTrap.target_group)
}
#if LANG_CXX11
inline void ConfigHuntTrap::set_target_group(::std::string&& value) {
  set_has_target_group();
  target_group_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigHuntTrap.target_group)
}
#endif
inline void ConfigHuntTrap::set_target_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target_group();
  target_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigHuntTrap.target_group)
}
inline void ConfigHuntTrap::set_target_group(const void* value,
    size_t size) {
  set_has_target_group();
  target_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigHuntTrap.target_group)
}
inline ::std::string* ConfigHuntTrap::mutable_target_group() {
  set_has_target_group();
  // @@protoc_insertion_point(field_mutable:db.ConfigHuntTrap.target_group)
  return target_group_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigHuntTrap::release_target_group() {
  // @@protoc_insertion_point(field_release:db.ConfigHuntTrap.target_group)
  if (!has_target_group()) {
    return NULL;
  }
  clear_has_target_group();
  return target_group_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigHuntTrap::set_allocated_target_group(::std::string* target_group) {
  if (target_group != NULL) {
    set_has_target_group();
  } else {
    clear_has_target_group();
  }
  target_group_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_group,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigHuntTrap.target_group)
}
inline ::std::string* ConfigHuntTrap::unsafe_arena_release_target_group() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigHuntTrap.target_group)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_target_group();
  return target_group_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigHuntTrap::unsafe_arena_set_allocated_target_group(
    ::std::string* target_group) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (target_group != NULL) {
    set_has_target_group();
  } else {
    clear_has_target_group();
  }
  target_group_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      target_group, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigHuntTrap.target_group)
}

// -------------------------------------------------------------------

// ConfigHuntTrapList

// repeated .db.ConfigHuntTrap list = 1;
inline int ConfigHuntTrapList::list_size() const {
  return list_.size();
}
inline void ConfigHuntTrapList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigHuntTrap* ConfigHuntTrapList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigHuntTrapList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntTrap >*
ConfigHuntTrapList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigHuntTrapList.list)
  return &list_;
}
inline const ::db::ConfigHuntTrap& ConfigHuntTrapList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntTrapList.list)
  return list_.Get(index);
}
inline ::db::ConfigHuntTrap* ConfigHuntTrapList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigHuntTrapList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntTrap >&
ConfigHuntTrapList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigHuntTrapList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigHuntFishingTool

// required int32 toolid = 1;
inline bool ConfigHuntFishingTool::has_toolid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigHuntFishingTool::set_has_toolid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigHuntFishingTool::clear_has_toolid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigHuntFishingTool::clear_toolid() {
  toolid_ = 0;
  clear_has_toolid();
}
inline ::google::protobuf::int32 ConfigHuntFishingTool::toolid() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntFishingTool.toolid)
  return toolid_;
}
inline void ConfigHuntFishingTool::set_toolid(::google::protobuf::int32 value) {
  set_has_toolid();
  toolid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntFishingTool.toolid)
}

// required int32 tool_type = 2;
inline bool ConfigHuntFishingTool::has_tool_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigHuntFishingTool::set_has_tool_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigHuntFishingTool::clear_has_tool_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigHuntFishingTool::clear_tool_type() {
  tool_type_ = 0;
  clear_has_tool_type();
}
inline ::google::protobuf::int32 ConfigHuntFishingTool::tool_type() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntFishingTool.tool_type)
  return tool_type_;
}
inline void ConfigHuntFishingTool::set_tool_type(::google::protobuf::int32 value) {
  set_has_tool_type();
  tool_type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntFishingTool.tool_type)
}

// required uint64 itemid = 3;
inline bool ConfigHuntFishingTool::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigHuntFishingTool::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigHuntFishingTool::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigHuntFishingTool::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 ConfigHuntFishingTool::itemid() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntFishingTool.itemid)
  return itemid_;
}
inline void ConfigHuntFishingTool::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntFishingTool.itemid)
}

// required bytes target_group = 4;
inline bool ConfigHuntFishingTool::has_target_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigHuntFishingTool::set_has_target_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigHuntFishingTool::clear_has_target_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigHuntFishingTool::clear_target_group() {
  target_group_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_target_group();
}
inline const ::std::string& ConfigHuntFishingTool::target_group() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntFishingTool.target_group)
  return target_group_.Get();
}
inline void ConfigHuntFishingTool::set_target_group(const ::std::string& value) {
  set_has_target_group();
  target_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigHuntFishingTool.target_group)
}
#if LANG_CXX11
inline void ConfigHuntFishingTool::set_target_group(::std::string&& value) {
  set_has_target_group();
  target_group_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigHuntFishingTool.target_group)
}
#endif
inline void ConfigHuntFishingTool::set_target_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target_group();
  target_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigHuntFishingTool.target_group)
}
inline void ConfigHuntFishingTool::set_target_group(const void* value,
    size_t size) {
  set_has_target_group();
  target_group_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigHuntFishingTool.target_group)
}
inline ::std::string* ConfigHuntFishingTool::mutable_target_group() {
  set_has_target_group();
  // @@protoc_insertion_point(field_mutable:db.ConfigHuntFishingTool.target_group)
  return target_group_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigHuntFishingTool::release_target_group() {
  // @@protoc_insertion_point(field_release:db.ConfigHuntFishingTool.target_group)
  if (!has_target_group()) {
    return NULL;
  }
  clear_has_target_group();
  return target_group_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigHuntFishingTool::set_allocated_target_group(::std::string* target_group) {
  if (target_group != NULL) {
    set_has_target_group();
  } else {
    clear_has_target_group();
  }
  target_group_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_group,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigHuntFishingTool.target_group)
}
inline ::std::string* ConfigHuntFishingTool::unsafe_arena_release_target_group() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigHuntFishingTool.target_group)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_target_group();
  return target_group_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigHuntFishingTool::unsafe_arena_set_allocated_target_group(
    ::std::string* target_group) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (target_group != NULL) {
    set_has_target_group();
  } else {
    clear_has_target_group();
  }
  target_group_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      target_group, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigHuntFishingTool.target_group)
}

// -------------------------------------------------------------------

// ConfigHuntFishingToolList

// repeated .db.ConfigHuntFishingTool list = 1;
inline int ConfigHuntFishingToolList::list_size() const {
  return list_.size();
}
inline void ConfigHuntFishingToolList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigHuntFishingTool* ConfigHuntFishingToolList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigHuntFishingToolList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntFishingTool >*
ConfigHuntFishingToolList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigHuntFishingToolList.list)
  return &list_;
}
inline const ::db::ConfigHuntFishingTool& ConfigHuntFishingToolList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntFishingToolList.list)
  return list_.Get(index);
}
inline ::db::ConfigHuntFishingTool* ConfigHuntFishingToolList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigHuntFishingToolList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntFishingTool >&
ConfigHuntFishingToolList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigHuntFishingToolList.list)
  return list_;
}

// -------------------------------------------------------------------

// ConfigHuntPrey

// required uint64 groundid = 1;
inline bool ConfigHuntPrey::has_groundid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigHuntPrey::set_has_groundid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigHuntPrey::clear_has_groundid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigHuntPrey::clear_groundid() {
  groundid_ = GOOGLE_ULONGLONG(0);
  clear_has_groundid();
}
inline ::google::protobuf::uint64 ConfigHuntPrey::groundid() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntPrey.groundid)
  return groundid_;
}
inline void ConfigHuntPrey::set_groundid(::google::protobuf::uint64 value) {
  set_has_groundid();
  groundid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntPrey.groundid)
}

// required uint64 prey_typeid = 2;
inline bool ConfigHuntPrey::has_prey_typeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigHuntPrey::set_has_prey_typeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigHuntPrey::clear_has_prey_typeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigHuntPrey::clear_prey_typeid() {
  prey_typeid_ = GOOGLE_ULONGLONG(0);
  clear_has_prey_typeid();
}
inline ::google::protobuf::uint64 ConfigHuntPrey::prey_typeid() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntPrey.prey_typeid)
  return prey_typeid_;
}
inline void ConfigHuntPrey::set_prey_typeid(::google::protobuf::uint64 value) {
  set_has_prey_typeid();
  prey_typeid_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntPrey.prey_typeid)
}

// required int32 prey_type = 3;
inline bool ConfigHuntPrey::has_prey_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigHuntPrey::set_has_prey_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigHuntPrey::clear_has_prey_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigHuntPrey::clear_prey_type() {
  prey_type_ = 0;
  clear_has_prey_type();
}
inline ::google::protobuf::int32 ConfigHuntPrey::prey_type() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntPrey.prey_type)
  return prey_type_;
}
inline void ConfigHuntPrey::set_prey_type(::google::protobuf::int32 value) {
  set_has_prey_type();
  prey_type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntPrey.prey_type)
}

// required int32 size_type = 4;
inline bool ConfigHuntPrey::has_size_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigHuntPrey::set_has_size_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigHuntPrey::clear_has_size_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigHuntPrey::clear_size_type() {
  size_type_ = 0;
  clear_has_size_type();
}
inline ::google::protobuf::int32 ConfigHuntPrey::size_type() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntPrey.size_type)
  return size_type_;
}
inline void ConfigHuntPrey::set_size_type(::google::protobuf::int32 value) {
  set_has_size_type();
  size_type_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntPrey.size_type)
}

// required float refresh_ratio = 5;
inline bool ConfigHuntPrey::has_refresh_ratio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigHuntPrey::set_has_refresh_ratio() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigHuntPrey::clear_has_refresh_ratio() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigHuntPrey::clear_refresh_ratio() {
  refresh_ratio_ = 0;
  clear_has_refresh_ratio();
}
inline float ConfigHuntPrey::refresh_ratio() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntPrey.refresh_ratio)
  return refresh_ratio_;
}
inline void ConfigHuntPrey::set_refresh_ratio(float value) {
  set_has_refresh_ratio();
  refresh_ratio_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntPrey.refresh_ratio)
}

// required int32 level = 6;
inline bool ConfigHuntPrey::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigHuntPrey::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigHuntPrey::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigHuntPrey::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ConfigHuntPrey::level() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntPrey.level)
  return level_;
}
inline void ConfigHuntPrey::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:db.ConfigHuntPrey.level)
}

// required bytes drop_list = 7;
inline bool ConfigHuntPrey::has_drop_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigHuntPrey::set_has_drop_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigHuntPrey::clear_has_drop_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigHuntPrey::clear_drop_list() {
  drop_list_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_drop_list();
}
inline const ::std::string& ConfigHuntPrey::drop_list() const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntPrey.drop_list)
  return drop_list_.Get();
}
inline void ConfigHuntPrey::set_drop_list(const ::std::string& value) {
  set_has_drop_list();
  drop_list_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.ConfigHuntPrey.drop_list)
}
#if LANG_CXX11
inline void ConfigHuntPrey::set_drop_list(::std::string&& value) {
  set_has_drop_list();
  drop_list_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.ConfigHuntPrey.drop_list)
}
#endif
inline void ConfigHuntPrey::set_drop_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_drop_list();
  drop_list_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.ConfigHuntPrey.drop_list)
}
inline void ConfigHuntPrey::set_drop_list(const void* value,
    size_t size) {
  set_has_drop_list();
  drop_list_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.ConfigHuntPrey.drop_list)
}
inline ::std::string* ConfigHuntPrey::mutable_drop_list() {
  set_has_drop_list();
  // @@protoc_insertion_point(field_mutable:db.ConfigHuntPrey.drop_list)
  return drop_list_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ConfigHuntPrey::release_drop_list() {
  // @@protoc_insertion_point(field_release:db.ConfigHuntPrey.drop_list)
  if (!has_drop_list()) {
    return NULL;
  }
  clear_has_drop_list();
  return drop_list_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ConfigHuntPrey::set_allocated_drop_list(::std::string* drop_list) {
  if (drop_list != NULL) {
    set_has_drop_list();
  } else {
    clear_has_drop_list();
  }
  drop_list_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drop_list,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.ConfigHuntPrey.drop_list)
}
inline ::std::string* ConfigHuntPrey::unsafe_arena_release_drop_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.ConfigHuntPrey.drop_list)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_drop_list();
  return drop_list_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ConfigHuntPrey::unsafe_arena_set_allocated_drop_list(
    ::std::string* drop_list) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (drop_list != NULL) {
    set_has_drop_list();
  } else {
    clear_has_drop_list();
  }
  drop_list_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      drop_list, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.ConfigHuntPrey.drop_list)
}

// -------------------------------------------------------------------

// ConfigHuntPreyList

// repeated .db.ConfigHuntPrey list = 1;
inline int ConfigHuntPreyList::list_size() const {
  return list_.size();
}
inline void ConfigHuntPreyList::clear_list() {
  list_.Clear();
}
inline ::db::ConfigHuntPrey* ConfigHuntPreyList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.ConfigHuntPreyList.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntPrey >*
ConfigHuntPreyList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:db.ConfigHuntPreyList.list)
  return &list_;
}
inline const ::db::ConfigHuntPrey& ConfigHuntPreyList::list(int index) const {
  // @@protoc_insertion_point(field_get:db.ConfigHuntPreyList.list)
  return list_.Get(index);
}
inline ::db::ConfigHuntPrey* ConfigHuntPreyList::add_list() {
  // @@protoc_insertion_point(field_add:db.ConfigHuntPreyList.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::ConfigHuntPrey >&
ConfigHuntPreyList::list() const {
  // @@protoc_insertion_point(field_list:db.ConfigHuntPreyList.list)
  return list_;
}

// -------------------------------------------------------------------

// UserHuntGround

// required bytes userid = 1;
inline bool UserHuntGround::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserHuntGround::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserHuntGround::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserHuntGround::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserHuntGround::userid() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.userid)
  return userid_.Get();
}
inline void UserHuntGround::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserHuntGround.userid)
}
#if LANG_CXX11
inline void UserHuntGround::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserHuntGround.userid)
}
#endif
inline void UserHuntGround::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserHuntGround.userid)
}
inline void UserHuntGround::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserHuntGround.userid)
}
inline ::std::string* UserHuntGround::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserHuntGround.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserHuntGround::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserHuntGround.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserHuntGround::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserHuntGround.userid)
}
inline ::std::string* UserHuntGround::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserHuntGround.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserHuntGround::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserHuntGround.userid)
}

// required uint64 groundid = 2;
inline bool UserHuntGround::has_groundid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserHuntGround::set_has_groundid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserHuntGround::clear_has_groundid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserHuntGround::clear_groundid() {
  groundid_ = GOOGLE_ULONGLONG(0);
  clear_has_groundid();
}
inline ::google::protobuf::uint64 UserHuntGround::groundid() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.groundid)
  return groundid_;
}
inline void UserHuntGround::set_groundid(::google::protobuf::uint64 value) {
  set_has_groundid();
  groundid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.groundid)
}

// required int32 state = 3;
inline bool UserHuntGround::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserHuntGround::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserHuntGround::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserHuntGround::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UserHuntGround::state() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.state)
  return state_;
}
inline void UserHuntGround::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.state)
}

// required int32 hunt_num = 4;
inline bool UserHuntGround::has_hunt_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserHuntGround::set_has_hunt_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserHuntGround::clear_has_hunt_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserHuntGround::clear_hunt_num() {
  hunt_num_ = 0;
  clear_has_hunt_num();
}
inline ::google::protobuf::int32 UserHuntGround::hunt_num() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.hunt_num)
  return hunt_num_;
}
inline void UserHuntGround::set_hunt_num(::google::protobuf::int32 value) {
  set_has_hunt_num();
  hunt_num_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.hunt_num)
}

// required sfixed64 hunt_recover_starttime = 5;
inline bool UserHuntGround::has_hunt_recover_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserHuntGround::set_has_hunt_recover_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserHuntGround::clear_has_hunt_recover_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserHuntGround::clear_hunt_recover_starttime() {
  hunt_recover_starttime_ = GOOGLE_LONGLONG(0);
  clear_has_hunt_recover_starttime();
}
inline ::google::protobuf::int64 UserHuntGround::hunt_recover_starttime() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.hunt_recover_starttime)
  return hunt_recover_starttime_;
}
inline void UserHuntGround::set_hunt_recover_starttime(::google::protobuf::int64 value) {
  set_has_hunt_recover_starttime();
  hunt_recover_starttime_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.hunt_recover_starttime)
}

// required int32 hunt_recover_cd_seconds = 6;
inline bool UserHuntGround::has_hunt_recover_cd_seconds() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserHuntGround::set_has_hunt_recover_cd_seconds() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserHuntGround::clear_has_hunt_recover_cd_seconds() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserHuntGround::clear_hunt_recover_cd_seconds() {
  hunt_recover_cd_seconds_ = 0;
  clear_has_hunt_recover_cd_seconds();
}
inline ::google::protobuf::int32 UserHuntGround::hunt_recover_cd_seconds() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.hunt_recover_cd_seconds)
  return hunt_recover_cd_seconds_;
}
inline void UserHuntGround::set_hunt_recover_cd_seconds(::google::protobuf::int32 value) {
  set_has_hunt_recover_cd_seconds();
  hunt_recover_cd_seconds_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.hunt_recover_cd_seconds)
}

// required float hunt_recover_add_ratio1 = 7;
inline bool UserHuntGround::has_hunt_recover_add_ratio1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserHuntGround::set_has_hunt_recover_add_ratio1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserHuntGround::clear_has_hunt_recover_add_ratio1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserHuntGround::clear_hunt_recover_add_ratio1() {
  hunt_recover_add_ratio1_ = 0;
  clear_has_hunt_recover_add_ratio1();
}
inline float UserHuntGround::hunt_recover_add_ratio1() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.hunt_recover_add_ratio1)
  return hunt_recover_add_ratio1_;
}
inline void UserHuntGround::set_hunt_recover_add_ratio1(float value) {
  set_has_hunt_recover_add_ratio1();
  hunt_recover_add_ratio1_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.hunt_recover_add_ratio1)
}

// required float hunt_recover_add_ratio2 = 8;
inline bool UserHuntGround::has_hunt_recover_add_ratio2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserHuntGround::set_has_hunt_recover_add_ratio2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserHuntGround::clear_has_hunt_recover_add_ratio2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserHuntGround::clear_hunt_recover_add_ratio2() {
  hunt_recover_add_ratio2_ = 0;
  clear_has_hunt_recover_add_ratio2();
}
inline float UserHuntGround::hunt_recover_add_ratio2() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.hunt_recover_add_ratio2)
  return hunt_recover_add_ratio2_;
}
inline void UserHuntGround::set_hunt_recover_add_ratio2(float value) {
  set_has_hunt_recover_add_ratio2();
  hunt_recover_add_ratio2_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.hunt_recover_add_ratio2)
}

// required float hunt_recover_add_ratio3 = 9;
inline bool UserHuntGround::has_hunt_recover_add_ratio3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserHuntGround::set_has_hunt_recover_add_ratio3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserHuntGround::clear_has_hunt_recover_add_ratio3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserHuntGround::clear_hunt_recover_add_ratio3() {
  hunt_recover_add_ratio3_ = 0;
  clear_has_hunt_recover_add_ratio3();
}
inline float UserHuntGround::hunt_recover_add_ratio3() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.hunt_recover_add_ratio3)
  return hunt_recover_add_ratio3_;
}
inline void UserHuntGround::set_hunt_recover_add_ratio3(float value) {
  set_has_hunt_recover_add_ratio3();
  hunt_recover_add_ratio3_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.hunt_recover_add_ratio3)
}

// required sfixed64 growtime = 11;
inline bool UserHuntGround::has_growtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserHuntGround::set_has_growtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserHuntGround::clear_has_growtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserHuntGround::clear_growtime() {
  growtime_ = GOOGLE_LONGLONG(0);
  clear_has_growtime();
}
inline ::google::protobuf::int64 UserHuntGround::growtime() const {
  // @@protoc_insertion_point(field_get:db.UserHuntGround.growtime)
  return growtime_;
}
inline void UserHuntGround::set_growtime(::google::protobuf::int64 value) {
  set_has_growtime();
  growtime_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntGround.growtime)
}

// -------------------------------------------------------------------

// UserHuntPrey

// required bytes userid = 1;
inline bool UserHuntPrey::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserHuntPrey::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserHuntPrey::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserHuntPrey::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& UserHuntPrey::userid() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.userid)
  return userid_.Get();
}
inline void UserHuntPrey::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.userid)
}
#if LANG_CXX11
inline void UserHuntPrey::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.UserHuntPrey.userid)
}
#endif
inline void UserHuntPrey::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.UserHuntPrey.userid)
}
inline void UserHuntPrey::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.UserHuntPrey.userid)
}
inline ::std::string* UserHuntPrey::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.UserHuntPrey.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UserHuntPrey::release_userid() {
  // @@protoc_insertion_point(field_release:db.UserHuntPrey.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void UserHuntPrey::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.UserHuntPrey.userid)
}
inline ::std::string* UserHuntPrey::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.UserHuntPrey.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UserHuntPrey::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.UserHuntPrey.userid)
}

// required uint64 groundid = 2;
inline bool UserHuntPrey::has_groundid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserHuntPrey::set_has_groundid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserHuntPrey::clear_has_groundid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserHuntPrey::clear_groundid() {
  groundid_ = GOOGLE_ULONGLONG(0);
  clear_has_groundid();
}
inline ::google::protobuf::uint64 UserHuntPrey::groundid() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.groundid)
  return groundid_;
}
inline void UserHuntPrey::set_groundid(::google::protobuf::uint64 value) {
  set_has_groundid();
  groundid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.groundid)
}

// required int32 sn = 3;
inline bool UserHuntPrey::has_sn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserHuntPrey::set_has_sn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserHuntPrey::clear_has_sn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserHuntPrey::clear_sn() {
  sn_ = 0;
  clear_has_sn();
}
inline ::google::protobuf::int32 UserHuntPrey::sn() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.sn)
  return sn_;
}
inline void UserHuntPrey::set_sn(::google::protobuf::int32 value) {
  set_has_sn();
  sn_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.sn)
}

// required int32 prey_type = 4;
inline bool UserHuntPrey::has_prey_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserHuntPrey::set_has_prey_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserHuntPrey::clear_has_prey_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserHuntPrey::clear_prey_type() {
  prey_type_ = 0;
  clear_has_prey_type();
}
inline ::google::protobuf::int32 UserHuntPrey::prey_type() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.prey_type)
  return prey_type_;
}
inline void UserHuntPrey::set_prey_type(::google::protobuf::int32 value) {
  set_has_prey_type();
  prey_type_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.prey_type)
}

// required uint64 cfgid = 5;
inline bool UserHuntPrey::has_cfgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserHuntPrey::set_has_cfgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserHuntPrey::clear_has_cfgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserHuntPrey::clear_cfgid() {
  cfgid_ = GOOGLE_ULONGLONG(0);
  clear_has_cfgid();
}
inline ::google::protobuf::uint64 UserHuntPrey::cfgid() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.cfgid)
  return cfgid_;
}
inline void UserHuntPrey::set_cfgid(::google::protobuf::uint64 value) {
  set_has_cfgid();
  cfgid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.cfgid)
}

// required int32 cfg_groupid = 6;
inline bool UserHuntPrey::has_cfg_groupid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserHuntPrey::set_has_cfg_groupid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserHuntPrey::clear_has_cfg_groupid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserHuntPrey::clear_cfg_groupid() {
  cfg_groupid_ = 0;
  clear_has_cfg_groupid();
}
inline ::google::protobuf::int32 UserHuntPrey::cfg_groupid() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.cfg_groupid)
  return cfg_groupid_;
}
inline void UserHuntPrey::set_cfg_groupid(::google::protobuf::int32 value) {
  set_has_cfg_groupid();
  cfg_groupid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.cfg_groupid)
}

// required int32 state = 7;
inline bool UserHuntPrey::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserHuntPrey::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserHuntPrey::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserHuntPrey::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UserHuntPrey::state() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.state)
  return state_;
}
inline void UserHuntPrey::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.state)
}

// required int32 seconds = 8;
inline bool UserHuntPrey::has_seconds() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserHuntPrey::set_has_seconds() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserHuntPrey::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserHuntPrey::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
inline ::google::protobuf::int32 UserHuntPrey::seconds() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.seconds)
  return seconds_;
}
inline void UserHuntPrey::set_seconds(::google::protobuf::int32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.seconds)
}

// required int32 seqno = 9;
inline bool UserHuntPrey::has_seqno() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserHuntPrey::set_has_seqno() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserHuntPrey::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserHuntPrey::clear_seqno() {
  seqno_ = 0;
  clear_has_seqno();
}
inline ::google::protobuf::int32 UserHuntPrey::seqno() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.seqno)
  return seqno_;
}
inline void UserHuntPrey::set_seqno(::google::protobuf::int32 value) {
  set_has_seqno();
  seqno_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.seqno)
}

// required int32 task_menuid = 11;
inline bool UserHuntPrey::has_task_menuid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserHuntPrey::set_has_task_menuid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserHuntPrey::clear_has_task_menuid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserHuntPrey::clear_task_menuid() {
  task_menuid_ = 0;
  clear_has_task_menuid();
}
inline ::google::protobuf::int32 UserHuntPrey::task_menuid() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.task_menuid)
  return task_menuid_;
}
inline void UserHuntPrey::set_task_menuid(::google::protobuf::int32 value) {
  set_has_task_menuid();
  task_menuid_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.task_menuid)
}

// required sfixed64 optime = 21;
inline bool UserHuntPrey::has_optime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserHuntPrey::set_has_optime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserHuntPrey::clear_has_optime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserHuntPrey::clear_optime() {
  optime_ = GOOGLE_LONGLONG(0);
  clear_has_optime();
}
inline ::google::protobuf::int64 UserHuntPrey::optime() const {
  // @@protoc_insertion_point(field_get:db.UserHuntPrey.optime)
  return optime_;
}
inline void UserHuntPrey::set_optime(::google::protobuf::int64 value) {
  set_has_optime();
  optime_ = value;
  // @@protoc_insertion_point(field_set:db.UserHuntPrey.optime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_StoredProcHunt_2eproto
