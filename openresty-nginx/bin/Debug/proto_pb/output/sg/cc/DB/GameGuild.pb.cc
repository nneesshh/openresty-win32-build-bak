// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameGuild.proto

#include "GameGuild.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GameGuild_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuild;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildBadge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildBuilding;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildDonation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildSignin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildUserTitle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameGuildTrack;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_delete_game_guild_track_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_game_guild_tracks_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_game_guild_tracks_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GameGuild_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_game_guild_track_Parameter;
}  // namespace protobuf_GameGuild_2eproto
namespace db {
class ConfigGuildDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuild>
      _instance;
} _ConfigGuild_default_instance_;
class ConfigGuildListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildList>
      _instance;
} _ConfigGuildList_default_instance_;
class ConfigGuildUserTitleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildUserTitle>
      _instance;
} _ConfigGuildUserTitle_default_instance_;
class ConfigGuildUserTitleListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildUserTitleList>
      _instance;
} _ConfigGuildUserTitleList_default_instance_;
class ConfigGuildSigninDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildSignin>
      _instance;
} _ConfigGuildSignin_default_instance_;
class ConfigGuildSigninListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildSigninList>
      _instance;
} _ConfigGuildSigninList_default_instance_;
class ConfigGuildBadgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildBadge>
      _instance;
} _ConfigGuildBadge_default_instance_;
class ConfigGuildBadgeListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildBadgeList>
      _instance;
} _ConfigGuildBadgeList_default_instance_;
class ConfigGuildDonationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildDonation>
      _instance;
} _ConfigGuildDonation_default_instance_;
class ConfigGuildDonationListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildDonationList>
      _instance;
} _ConfigGuildDonationList_default_instance_;
class ConfigGuildBuildingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildBuilding>
      _instance;
} _ConfigGuildBuilding_default_instance_;
class ConfigGuildBuildingListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigGuildBuildingList>
      _instance;
} _ConfigGuildBuildingList_default_instance_;
class GameGuildDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameGuild>
      _instance;
} _GameGuild_default_instance_;
class GameGuildBuildingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameGuildBuilding>
      _instance;
} _GameGuildBuilding_default_instance_;
class GameGuildStoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameGuildStore>
      _instance;
} _GameGuildStore_default_instance_;
class GameGuildUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameGuildUser>
      _instance;
} _GameGuildUser_default_instance_;
class GameStatsGuildUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameStatsGuildUser>
      _instance;
} _GameStatsGuildUser_default_instance_;
class UserStatsGuildCommonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserStatsGuildCommon>
      _instance;
} _UserStatsGuildCommon_default_instance_;
class GameGuildTrackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameGuildTrack>
      _instance;
} _GameGuildTrack_default_instance_;
class proc_i_load_game_guild_tracks_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_game_guild_tracks_Parameter>
      _instance;
} _proc_i_load_game_guild_tracks_Parameter_default_instance_;
class proc_i_load_game_guild_tracks_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_game_guild_tracks_ReturnRecord>
      _instance;
} _proc_i_load_game_guild_tracks_ReturnRecord_default_instance_;
class proc_i_load_game_guild_tracksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_load_game_guild_tracks>
      _instance;
} _proc_i_load_game_guild_tracks_default_instance_;
class proc_i_save_game_guild_track_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_game_guild_track_Parameter>
      _instance;
} _proc_i_save_game_guild_track_Parameter_default_instance_;
class proc_i_save_game_guild_trackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_save_game_guild_track>
      _instance;
} _proc_i_save_game_guild_track_default_instance_;
class proc_i_delete_game_guild_track_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_delete_game_guild_track_Parameter>
      _instance;
} _proc_i_delete_game_guild_track_Parameter_default_instance_;
class proc_i_delete_game_guild_trackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_i_delete_game_guild_track>
      _instance;
} _proc_i_delete_game_guild_track_default_instance_;
}  // namespace db
namespace protobuf_GameGuild_2eproto {
static void InitDefaultsConfigGuild() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuild_default_instance_;
    new (ptr) ::db::ConfigGuild();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuild::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuild =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGuild}, {}};

static void InitDefaultsConfigGuildList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildList_default_instance_;
    new (ptr) ::db::ConfigGuildList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGuildList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGuildList}, {
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuild.base,}};

static void InitDefaultsConfigGuildUserTitle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildUserTitle_default_instance_;
    new (ptr) ::db::ConfigGuildUserTitle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildUserTitle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildUserTitle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGuildUserTitle}, {}};

static void InitDefaultsConfigGuildUserTitleList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildUserTitleList_default_instance_;
    new (ptr) ::db::ConfigGuildUserTitleList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildUserTitleList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGuildUserTitleList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGuildUserTitleList}, {
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildUserTitle.base,}};

static void InitDefaultsConfigGuildSignin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildSignin_default_instance_;
    new (ptr) ::db::ConfigGuildSignin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildSignin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildSignin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGuildSignin}, {}};

static void InitDefaultsConfigGuildSigninList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildSigninList_default_instance_;
    new (ptr) ::db::ConfigGuildSigninList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildSigninList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGuildSigninList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGuildSigninList}, {
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildSignin.base,}};

static void InitDefaultsConfigGuildBadge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildBadge_default_instance_;
    new (ptr) ::db::ConfigGuildBadge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildBadge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildBadge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGuildBadge}, {}};

static void InitDefaultsConfigGuildBadgeList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildBadgeList_default_instance_;
    new (ptr) ::db::ConfigGuildBadgeList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildBadgeList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGuildBadgeList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGuildBadgeList}, {
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildBadge.base,}};

static void InitDefaultsConfigGuildDonation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildDonation_default_instance_;
    new (ptr) ::db::ConfigGuildDonation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildDonation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildDonation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGuildDonation}, {}};

static void InitDefaultsConfigGuildDonationList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildDonationList_default_instance_;
    new (ptr) ::db::ConfigGuildDonationList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildDonationList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGuildDonationList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGuildDonationList}, {
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildDonation.base,}};

static void InitDefaultsConfigGuildBuilding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildBuilding_default_instance_;
    new (ptr) ::db::ConfigGuildBuilding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildBuilding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigGuildBuilding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigGuildBuilding}, {}};

static void InitDefaultsConfigGuildBuildingList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_ConfigGuildBuildingList_default_instance_;
    new (ptr) ::db::ConfigGuildBuildingList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::ConfigGuildBuildingList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigGuildBuildingList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigGuildBuildingList}, {
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildBuilding.base,}};

static void InitDefaultsGameGuild() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameGuild_default_instance_;
    new (ptr) ::db::GameGuild();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameGuild::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameGuild =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameGuild}, {}};

static void InitDefaultsGameGuildBuilding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameGuildBuilding_default_instance_;
    new (ptr) ::db::GameGuildBuilding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameGuildBuilding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameGuildBuilding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameGuildBuilding}, {}};

static void InitDefaultsGameGuildStore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameGuildStore_default_instance_;
    new (ptr) ::db::GameGuildStore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameGuildStore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameGuildStore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameGuildStore}, {}};

static void InitDefaultsGameGuildUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameGuildUser_default_instance_;
    new (ptr) ::db::GameGuildUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameGuildUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameGuildUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameGuildUser}, {}};

static void InitDefaultsGameStatsGuildUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameStatsGuildUser_default_instance_;
    new (ptr) ::db::GameStatsGuildUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameStatsGuildUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameStatsGuildUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameStatsGuildUser}, {}};

static void InitDefaultsUserStatsGuildCommon() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_UserStatsGuildCommon_default_instance_;
    new (ptr) ::db::UserStatsGuildCommon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::UserStatsGuildCommon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserStatsGuildCommon =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserStatsGuildCommon}, {}};

static void InitDefaultsGameGuildTrack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GameGuildTrack_default_instance_;
    new (ptr) ::db::GameGuildTrack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GameGuildTrack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameGuildTrack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameGuildTrack}, {}};

static void InitDefaultsproc_i_load_game_guild_tracks_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_game_guild_tracks_Parameter_default_instance_;
    new (ptr) ::db::proc_i_load_game_guild_tracks_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_game_guild_tracks_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_load_game_guild_tracks_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_i_load_game_guild_tracks_Parameter}, {}};

static void InitDefaultsproc_i_load_game_guild_tracks_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_game_guild_tracks_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_i_load_game_guild_tracks_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_game_guild_tracks_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_load_game_guild_tracks_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_load_game_guild_tracks_ReturnRecord}, {
      &protobuf_GameGuild_2eproto::scc_info_GameGuildTrack.base,}};

static void InitDefaultsproc_i_load_game_guild_tracks() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_load_game_guild_tracks_default_instance_;
    new (ptr) ::db::proc_i_load_game_guild_tracks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_load_game_guild_tracks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_i_load_game_guild_tracks =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_i_load_game_guild_tracks}, {
      &protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks_Parameter.base,
      &protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks_ReturnRecord.base,}};

static void InitDefaultsproc_i_save_game_guild_track_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_game_guild_track_Parameter_default_instance_;
    new (ptr) ::db::proc_i_save_game_guild_track_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_game_guild_track_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_game_guild_track_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_game_guild_track_Parameter}, {
      &protobuf_GameGuild_2eproto::scc_info_GameGuildTrack.base,}};

static void InitDefaultsproc_i_save_game_guild_track() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_save_game_guild_track_default_instance_;
    new (ptr) ::db::proc_i_save_game_guild_track();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_save_game_guild_track::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_save_game_guild_track =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_save_game_guild_track}, {
      &protobuf_GameGuild_2eproto::scc_info_proc_i_save_game_guild_track_Parameter.base,}};

static void InitDefaultsproc_i_delete_game_guild_track_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_delete_game_guild_track_Parameter_default_instance_;
    new (ptr) ::db::proc_i_delete_game_guild_track_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_delete_game_guild_track_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_i_delete_game_guild_track_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_i_delete_game_guild_track_Parameter}, {}};

static void InitDefaultsproc_i_delete_game_guild_track() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_i_delete_game_guild_track_default_instance_;
    new (ptr) ::db::proc_i_delete_game_guild_track();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_i_delete_game_guild_track::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_i_delete_game_guild_track =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_i_delete_game_guild_track}, {
      &protobuf_GameGuild_2eproto::scc_info_proc_i_delete_game_guild_track_Parameter.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuild.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildUserTitle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildUserTitleList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildSignin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildSigninList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildBadge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildBadgeList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildDonation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildDonationList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildBuilding.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigGuildBuildingList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameGuild.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameGuildBuilding.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameGuildStore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameGuildUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameStatsGuildUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserStatsGuildCommon.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameGuildTrack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_game_guild_tracks_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_game_guild_tracks_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_load_game_guild_tracks.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_game_guild_track_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_save_game_guild_track.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_delete_game_guild_track_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_i_delete_game_guild_track.base);
}

::google::protobuf::Metadata file_level_metadata[26];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, vice_leader_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, leader_offline_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, quit_join_cd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, donation_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, cond_leader_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, cond_build_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, cond_population_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, mail_text_accept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuild, mail_text_kick_),
  4,
  0,
  5,
  6,
  7,
  8,
  9,
  10,
  1,
  11,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitle, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitle, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitle, manage_shopping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitle, manage_chat_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitleList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitleList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildUserTitleList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSignin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSignin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSignin, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSignin, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSignin, need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSignin, award_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSigninList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSigninList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildSigninList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadge, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadge, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadge, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadge, param_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadgeList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadgeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBadgeList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonation, donates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonation, award_donation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonation, award_item_typeid_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonationList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonationList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildDonationList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuilding, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuilding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuilding, building_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuilding, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuilding, cond_prebuild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuilding, cond_build_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuilding, cond_building_time_),
  2,
  3,
  0,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuildingList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuildingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::ConfigGuildBuildingList, list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, population_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, fund_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, announcement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, badge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, accept_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, join_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, join_force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, shopping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuild, optime_),
  3,
  0,
  4,
  6,
  5,
  1,
  7,
  2,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, building_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildBuilding, optime_),
  0,
  1,
  2,
  3,
  5,
  4,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildStore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildStore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildStore, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildStore, item_typeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildStore, item_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildStore, optime_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildUser, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildUser, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildUser, ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildUser, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildUser, donation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildUser, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildUser, optime_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, donation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, donation_refreshtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, signin_state1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, signin_optime1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, signin_state2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, signin_optime2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, signin_state3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameStatsGuildUser, signin_optime3_),
  0,
  1,
  3,
  2,
  4,
  5,
  7,
  6,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsGuildCommon, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsGuildCommon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsGuildCommon, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::UserStatsGuildCommon, last_quit_guild_time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, owner_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, owner_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, owner_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, announcement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, target_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, target_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, target_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, donation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, building_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, building_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GameGuildTrack, optime_),
  4,
  0,
  5,
  6,
  7,
  8,
  1,
  2,
  9,
  3,
  10,
  11,
  12,
  13,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks_ReturnRecord, item_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_load_game_guild_tracks, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_game_guild_track_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_game_guild_track_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_game_guild_track_Parameter, p_track_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_game_guild_track, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_game_guild_track, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_save_game_guild_track, param_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_delete_game_guild_track_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_delete_game_guild_track_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_delete_game_guild_track_Parameter, p_guildid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_delete_game_guild_track, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_delete_game_guild_track, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_i_delete_game_guild_track, param_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::db::ConfigGuild)},
  { 29, 35, sizeof(::db::ConfigGuildList)},
  { 36, 45, sizeof(::db::ConfigGuildUserTitle)},
  { 49, 55, sizeof(::db::ConfigGuildUserTitleList)},
  { 56, 65, sizeof(::db::ConfigGuildSignin)},
  { 69, 75, sizeof(::db::ConfigGuildSigninList)},
  { 76, 85, sizeof(::db::ConfigGuildBadge)},
  { 89, 95, sizeof(::db::ConfigGuildBadgeList)},
  { 96, 105, sizeof(::db::ConfigGuildDonation)},
  { 109, 115, sizeof(::db::ConfigGuildDonationList)},
  { 116, 126, sizeof(::db::ConfigGuildBuilding)},
  { 131, 137, sizeof(::db::ConfigGuildBuildingList)},
  { 138, 157, sizeof(::db::GameGuild)},
  { 171, 183, sizeof(::db::GameGuildBuilding)},
  { 190, 199, sizeof(::db::GameGuildStore)},
  { 203, 214, sizeof(::db::GameGuildUser)},
  { 220, 235, sizeof(::db::GameStatsGuildUser)},
  { 245, 252, sizeof(::db::UserStatsGuildCommon)},
  { 254, 274, sizeof(::db::GameGuildTrack)},
  { 289, 294, sizeof(::db::proc_i_load_game_guild_tracks_Parameter)},
  { 294, 300, sizeof(::db::proc_i_load_game_guild_tracks_ReturnRecord)},
  { 301, 308, sizeof(::db::proc_i_load_game_guild_tracks)},
  { 310, 316, sizeof(::db::proc_i_save_game_guild_track_Parameter)},
  { 317, 323, sizeof(::db::proc_i_save_game_guild_track)},
  { 324, 330, sizeof(::db::proc_i_delete_game_guild_track_Parameter)},
  { 331, 337, sizeof(::db::proc_i_delete_game_guild_track)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuild_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildUserTitle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildUserTitleList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildSignin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildSigninList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildBadge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildBadgeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildDonation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildDonationList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildBuilding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_ConfigGuildBuildingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameGuild_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameGuildBuilding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameGuildStore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameGuildUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameStatsGuildUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_UserStatsGuildCommon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GameGuildTrack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_game_guild_tracks_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_game_guild_tracks_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_load_game_guild_tracks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_game_guild_track_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_save_game_guild_track_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_delete_game_guild_track_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_i_delete_game_guild_track_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GameGuild.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017GameGuild.proto\022\002db\"\233\002\n\013ConfigGuild\022\r\n"
      "\005level\030\001 \002(\005\022\014\n\004desc\030\002 \002(\014\022\014\n\004size\030\003 \002(\005"
      "\022\027\n\017vice_leader_num\030\004 \002(\005\022\033\n\023leader_offl"
      "ine_time\030\005 \002(\005\022\024\n\014quit_join_cd\030\006 \002(\005\022\026\n\016"
      "donation_limit\030\007 \002(\005\022\031\n\021cond_leader_leve"
      "l\030\013 \002(\005\022\027\n\017cond_build_cost\030\014 \002(\014\022\027\n\017cond"
      "_population\030\r \002(\005\022\030\n\020mail_text_accept\030\025 "
      "\002(\014\022\026\n\016mail_text_kick\030\026 \002(\014\"0\n\017ConfigGui"
      "ldList\022\035\n\004list\030\001 \003(\0132\017.db.ConfigGuild\"^\n"
      "\024ConfigGuildUserTitle\022\n\n\002id\030\001 \002(\005\022\014\n\004des"
      "c\030\002 \002(\014\022\027\n\017manage_shopping\030\013 \002(\005\022\023\n\013mana"
      "ge_chat\030\014 \002(\005\"B\n\030ConfigGuildUserTitleLis"
      "t\022&\n\004list\030\001 \003(\0132\030.db.ConfigGuildUserTitl"
      "e\"M\n\021ConfigGuildSignin\022\r\n\005level\030\001 \002(\005\022\014\n"
      "\004type\030\002 \002(\005\022\014\n\004need\030\003 \002(\014\022\r\n\005award\030\004 \002(\014"
      "\"<\n\025ConfigGuildSigninList\022#\n\004list\030\001 \003(\0132"
      "\025.db.ConfigGuildSignin\"J\n\020ConfigGuildBad"
      "ge\022\n\n\002id\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\r\n\005order\030\003 "
      "\002(\005\022\r\n\005param\030\004 \002(\014\":\n\024ConfigGuildBadgeLi"
      "st\022\"\n\004list\030\001 \003(\0132\024.db.ConfigGuildBadge\"e"
      "\n\023ConfigGuildDonation\022\n\n\002id\030\001 \002(\005\022\017\n\007don"
      "ates\030\002 \002(\014\022\026\n\016award_donation\030\003 \002(\005\022\031\n\021aw"
      "ard_item_typeid\030\004 \002(\004\"@\n\027ConfigGuildDona"
      "tionList\022%\n\004list\030\001 \003(\0132\027.db.ConfigGuildD"
      "onation\"\207\001\n\023ConfigGuildBuilding\022\025\n\rbuild"
      "ing_type\030\001 \002(\005\022\r\n\005level\030\002 \002(\005\022\025\n\rcond_pr"
      "ebuild\030\003 \002(\014\022\027\n\017cond_build_cost\030\004 \002(\014\022\032\n"
      "\022cond_building_time\030\005 \002(\005\"@\n\027ConfigGuild"
      "BuildingList\022%\n\004list\030\001 \003(\0132\027.db.ConfigGu"
      "ildBuilding\"\374\001\n\tGameGuild\022\017\n\007guildid\030\001 \002"
      "(\005\022\014\n\004name\030\002 \002(\014\022\r\n\005level\030\003 \002(\005\022\022\n\npopul"
      "ation\030\004 \002(\005\022\014\n\004fund\030\005 \002(\004\022\024\n\014announcemen"
      "t\030\006 \002(\014\022\r\n\005state\030\007 \002(\005\022\r\n\005badge\030\010 \002(\014\022\023\n"
      "\013accept_type\030\013 \002(\005\022\022\n\njoin_level\030\014 \002(\005\022\022"
      "\n\njoin_force\030\r \002(\005\022\020\n\010shopping\030\016 \002(\005\022\014\n\004"
      "chat\030\017 \002(\005\022\016\n\006optime\030\025 \002(\020\"\215\001\n\021GameGuild"
      "Building\022\017\n\007guildid\030\001 \002(\005\022\025\n\rbuilding_ty"
      "pe\030\002 \002(\005\022\r\n\005level\030\003 \002(\005\022\r\n\005state\030\004 \002(\005\022\017"
      "\n\007seconds\030\005 \002(\005\022\021\n\tstarttime\030\006 \002(\020\022\016\n\006op"
      "time\030\025 \002(\020\"X\n\016GameGuildStore\022\017\n\007guildid\030"
      "\001 \002(\005\022\023\n\013item_typeid\030\002 \002(\004\022\020\n\010item_num\030\003"
      " \002(\005\022\016\n\006optime\030\013 \002(\020\"r\n\rGameGuildUser\022\017\n"
      "\007guildid\030\001 \002(\005\022\020\n\010ticketid\030\002 \002(\005\022\r\n\005titl"
      "e\030\003 \002(\005\022\020\n\010donation\030\004 \002(\005\022\r\n\005state\030\005 \002(\005"
      "\022\016\n\006optime\030\013 \002(\020\"\364\001\n\022GameStatsGuildUser\022"
      "\020\n\010ticketid\030\001 \002(\005\022\017\n\007guildid\030\002 \002(\005\022\020\n\010do"
      "nation\030\003 \002(\005\022\034\n\024donation_refreshtime\030\004 \002"
      "(\020\022\025\n\rsignin_state1\030\013 \002(\005\022\026\n\016signin_opti"
      "me1\030\014 \002(\020\022\025\n\rsignin_state2\030\r \002(\005\022\026\n\016sign"
      "in_optime2\030\016 \002(\020\022\025\n\rsignin_state3\030\017 \002(\005\022"
      "\026\n\016signin_optime3\030\020 \002(\020\"D\n\024UserStatsGuil"
      "dCommon\022\016\n\006userid\030\001 \002(\014\022\034\n\024last_quit_gui"
      "ld_time\030\002 \002(\020\"\270\002\n\016GameGuildTrack\022\022\n\nowne"
      "r_uuid\030\001 \002(\004\022\022\n\nowner_nick\030\002 \002(\014\022\023\n\013owne"
      "r_title\030\003 \002(\005\022\023\n\013action_type\030\004 \002(\005\022\016\n\006ac"
      "tion\030\005 \002(\005\022\017\n\007guildid\030\013 \002(\005\022\014\n\004name\030\014 \002("
      "\014\022\024\n\014announcement\030\r \002(\014\022\023\n\013target_uuid\030\016"
      " \002(\004\022\023\n\013target_nick\030\017 \002(\014\022\024\n\014target_titl"
      "e\030\020 \002(\005\022\020\n\010donation\030\021 \002(\005\022\025\n\rbuilding_ty"
      "pe\030\022 \002(\005\022\026\n\016building_level\030\023 \002(\005\022\016\n\006opti"
      "me\030\025 \002(\020\"\346\001\n\035proc_i_load_game_guild_trac"
      "ks\022:\n\005param\030\001 \001(\0132+.db.proc_i_load_game_"
      "guild_tracks.Parameter\022J\n\022return_record_"
      "list\030\002 \003(\0132..db.proc_i_load_game_guild_t"
      "racks.ReturnRecord\032\013\n\tParameter\0320\n\014Retur"
      "nRecord\022 \n\004item\030\001 \002(\0132\022.db.GameGuildTrac"
      "k\"\213\001\n\034proc_i_save_game_guild_track\0229\n\005pa"
      "ram\030\001 \001(\0132*.db.proc_i_save_game_guild_tr"
      "ack.Parameter\0320\n\tParameter\022#\n\007p_track\030\001 "
      "\002(\0132\022.db.GameGuildTrack\"}\n\036proc_i_delete"
      "_game_guild_track\022;\n\005param\030\001 \001(\0132,.db.pr"
      "oc_i_delete_game_guild_track.Parameter\032\036"
      "\n\tParameter\022\021\n\tp_guildid\030\001 \002(\005B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2915);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameGuild.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GameGuild_2eproto
namespace db {

// ===================================================================

void ConfigGuild::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuild::kLevelFieldNumber;
const int ConfigGuild::kDescFieldNumber;
const int ConfigGuild::kSizeFieldNumber;
const int ConfigGuild::kViceLeaderNumFieldNumber;
const int ConfigGuild::kLeaderOfflineTimeFieldNumber;
const int ConfigGuild::kQuitJoinCdFieldNumber;
const int ConfigGuild::kDonationLimitFieldNumber;
const int ConfigGuild::kCondLeaderLevelFieldNumber;
const int ConfigGuild::kCondBuildCostFieldNumber;
const int ConfigGuild::kCondPopulationFieldNumber;
const int ConfigGuild::kMailTextAcceptFieldNumber;
const int ConfigGuild::kMailTextKickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuild::ConfigGuild()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuild.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuild)
}
ConfigGuild::ConfigGuild(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuild.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuild)
}
ConfigGuild::ConfigGuild(const ConfigGuild& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc(),
      GetArenaNoVirtual());
  }
  cond_build_cost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cond_build_cost()) {
    cond_build_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cond_build_cost(),
      GetArenaNoVirtual());
  }
  mail_text_accept_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_text_accept()) {
    mail_text_accept_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_text_accept(),
      GetArenaNoVirtual());
  }
  mail_text_kick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_text_kick()) {
    mail_text_kick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_text_kick(),
      GetArenaNoVirtual());
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&cond_population_) -
    reinterpret_cast<char*>(&level_)) + sizeof(cond_population_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuild)
}

void ConfigGuild::SharedCtor() {
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cond_build_cost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_text_accept_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_text_kick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_population_) -
      reinterpret_cast<char*>(&level_)) + sizeof(cond_population_));
}

ConfigGuild::~ConfigGuild() {
  // @@protoc_insertion_point(destructor:db.ConfigGuild)
  SharedDtor();
}

void ConfigGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cond_build_cost_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_text_accept_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_text_kick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGuild::ArenaDtor(void* object) {
  ConfigGuild* _this = reinterpret_cast< ConfigGuild* >(object);
  (void)_this;
}
void ConfigGuild::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuild::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuild& ConfigGuild::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuild.base);
  return *internal_default_instance();
}


void ConfigGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      cond_build_cost_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      mail_text_accept_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      mail_text_kick_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leader_offline_time_) -
        reinterpret_cast<char*>(&level_)) + sizeof(leader_offline_time_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&quit_join_cd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cond_population_) -
        reinterpret_cast<char*>(&quit_join_cd_)) + sizeof(cond_population_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuild::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuild)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 vice_leader_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_vice_leader_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vice_leader_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 leader_offline_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_leader_offline_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_offline_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 quit_join_cd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_quit_join_cd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quit_join_cd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 donation_limit = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_donation_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &donation_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cond_leader_level = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_cond_leader_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cond_leader_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes cond_build_cost = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cond_build_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cond_population = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_cond_population();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cond_population_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes mail_text_accept = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mail_text_accept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes mail_text_kick = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mail_text_kick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuild)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuild)
  return false;
#undef DO_
}

void ConfigGuild::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->desc(), output);
  }

  // required int32 size = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->size(), output);
  }

  // required int32 vice_leader_num = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vice_leader_num(), output);
  }

  // required int32 leader_offline_time = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->leader_offline_time(), output);
  }

  // required int32 quit_join_cd = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->quit_join_cd(), output);
  }

  // required int32 donation_limit = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->donation_limit(), output);
  }

  // required int32 cond_leader_level = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->cond_leader_level(), output);
  }

  // required bytes cond_build_cost = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->cond_build_cost(), output);
  }

  // required int32 cond_population = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->cond_population(), output);
  }

  // required bytes mail_text_accept = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      21, this->mail_text_accept(), output);
  }

  // required bytes mail_text_kick = 22;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      22, this->mail_text_kick(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuild)
}

::google::protobuf::uint8* ConfigGuild::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  // required int32 size = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->size(), target);
  }

  // required int32 vice_leader_num = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vice_leader_num(), target);
  }

  // required int32 leader_offline_time = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->leader_offline_time(), target);
  }

  // required int32 quit_join_cd = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->quit_join_cd(), target);
  }

  // required int32 donation_limit = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->donation_limit(), target);
  }

  // required int32 cond_leader_level = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->cond_leader_level(), target);
  }

  // required bytes cond_build_cost = 12;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->cond_build_cost(), target);
  }

  // required int32 cond_population = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->cond_population(), target);
  }

  // required bytes mail_text_accept = 21;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        21, this->mail_text_accept(), target);
  }

  // required bytes mail_text_kick = 22;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        22, this->mail_text_kick(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuild)
  return target;
}

size_t ConfigGuild::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGuild)
  size_t total_size = 0;

  if (has_desc()) {
    // required bytes desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  if (has_cond_build_cost()) {
    // required bytes cond_build_cost = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cond_build_cost());
  }

  if (has_mail_text_accept()) {
    // required bytes mail_text_accept = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mail_text_accept());
  }

  if (has_mail_text_kick()) {
    // required bytes mail_text_kick = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mail_text_kick());
  }

  if (has_level()) {
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_size()) {
    // required int32 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  if (has_vice_leader_num()) {
    // required int32 vice_leader_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vice_leader_num());
  }

  if (has_leader_offline_time()) {
    // required int32 leader_offline_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->leader_offline_time());
  }

  if (has_quit_join_cd()) {
    // required int32 quit_join_cd = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quit_join_cd());
  }

  if (has_donation_limit()) {
    // required int32 donation_limit = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->donation_limit());
  }

  if (has_cond_leader_level()) {
    // required int32 cond_leader_level = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cond_leader_level());
  }

  if (has_cond_population()) {
    // required int32 cond_population = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cond_population());
  }

  return total_size;
}
size_t ConfigGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuild)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000fff) ^ 0x00000fff) == 0) {  // All required fields are present.
    // required bytes desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());

    // required bytes cond_build_cost = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cond_build_cost());

    // required bytes mail_text_accept = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mail_text_accept());

    // required bytes mail_text_kick = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mail_text_kick());

    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());

    // required int32 vice_leader_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vice_leader_num());

    // required int32 leader_offline_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->leader_offline_time());

    // required int32 quit_join_cd = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quit_join_cd());

    // required int32 donation_limit = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->donation_limit());

    // required int32 cond_leader_level = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cond_leader_level());

    // required int32 cond_population = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cond_population());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuild::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuild* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuild>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuild)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuild)
    MergeFrom(*source);
  }
}

void ConfigGuild::MergeFrom(const ConfigGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_desc(from.desc());
    }
    if (cached_has_bits & 0x00000002u) {
      set_cond_build_cost(from.cond_build_cost());
    }
    if (cached_has_bits & 0x00000004u) {
      set_mail_text_accept(from.mail_text_accept());
    }
    if (cached_has_bits & 0x00000008u) {
      set_mail_text_kick(from.mail_text_kick());
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000020u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000040u) {
      vice_leader_num_ = from.vice_leader_num_;
    }
    if (cached_has_bits & 0x00000080u) {
      leader_offline_time_ = from.leader_offline_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      quit_join_cd_ = from.quit_join_cd_;
    }
    if (cached_has_bits & 0x00000200u) {
      donation_limit_ = from.donation_limit_;
    }
    if (cached_has_bits & 0x00000400u) {
      cond_leader_level_ = from.cond_leader_level_;
    }
    if (cached_has_bits & 0x00000800u) {
      cond_population_ = from.cond_population_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGuild::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuild::CopyFrom(const ConfigGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuild::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fff) != 0x00000fff) return false;
  return true;
}

void ConfigGuild::Swap(ConfigGuild* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuild* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuild::UnsafeArenaSwap(ConfigGuild* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuild::InternalSwap(ConfigGuild* other) {
  using std::swap;
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cond_build_cost_.Swap(&other->cond_build_cost_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mail_text_accept_.Swap(&other->mail_text_accept_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mail_text_kick_.Swap(&other->mail_text_kick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  swap(size_, other->size_);
  swap(vice_leader_num_, other->vice_leader_num_);
  swap(leader_offline_time_, other->leader_offline_time_);
  swap(quit_join_cd_, other->quit_join_cd_);
  swap(donation_limit_, other->donation_limit_);
  swap(cond_leader_level_, other->cond_leader_level_);
  swap(cond_population_, other->cond_population_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuild::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildList::ConfigGuildList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildList)
}
ConfigGuildList::ConfigGuildList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildList)
}
ConfigGuildList::ConfigGuildList(const ConfigGuildList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildList)
}

void ConfigGuildList::SharedCtor() {
}

ConfigGuildList::~ConfigGuildList() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildList)
  SharedDtor();
}

void ConfigGuildList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGuildList::ArenaDtor(void* object) {
  ConfigGuildList* _this = reinterpret_cast< ConfigGuildList* >(object);
  (void)_this;
}
void ConfigGuildList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildList::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildList& ConfigGuildList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildList.base);
  return *internal_default_instance();
}


void ConfigGuildList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGuild list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildList)
  return false;
#undef DO_
}

void ConfigGuildList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuild list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildList)
}

::google::protobuf::uint8* ConfigGuildList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuild list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildList)
  return target;
}

size_t ConfigGuildList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGuild list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildList)
    MergeFrom(*source);
  }
}

void ConfigGuildList::MergeFrom(const ConfigGuildList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGuildList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildList::CopyFrom(const ConfigGuildList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGuildList::Swap(ConfigGuildList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildList::UnsafeArenaSwap(ConfigGuildList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildList::InternalSwap(ConfigGuildList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildList::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildUserTitle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildUserTitle::kIdFieldNumber;
const int ConfigGuildUserTitle::kDescFieldNumber;
const int ConfigGuildUserTitle::kManageShoppingFieldNumber;
const int ConfigGuildUserTitle::kManageChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildUserTitle::ConfigGuildUserTitle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildUserTitle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildUserTitle)
}
ConfigGuildUserTitle::ConfigGuildUserTitle(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildUserTitle.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildUserTitle)
}
ConfigGuildUserTitle::ConfigGuildUserTitle(const ConfigGuildUserTitle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc(),
      GetArenaNoVirtual());
  }
  ::memcpy(&manage_chat_, &from.manage_chat_,
    static_cast<size_t>(reinterpret_cast<char*>(&manage_shopping_) -
    reinterpret_cast<char*>(&manage_chat_)) + sizeof(manage_shopping_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildUserTitle)
}

void ConfigGuildUserTitle::SharedCtor() {
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&manage_chat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&manage_shopping_) -
      reinterpret_cast<char*>(&manage_chat_)) + sizeof(manage_shopping_));
}

ConfigGuildUserTitle::~ConfigGuildUserTitle() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildUserTitle)
  SharedDtor();
}

void ConfigGuildUserTitle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGuildUserTitle::ArenaDtor(void* object) {
  ConfigGuildUserTitle* _this = reinterpret_cast< ConfigGuildUserTitle* >(object);
  (void)_this;
}
void ConfigGuildUserTitle::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildUserTitle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildUserTitle::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildUserTitle& ConfigGuildUserTitle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildUserTitle.base);
  return *internal_default_instance();
}


void ConfigGuildUserTitle::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildUserTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    desc_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 14u) {
    ::memset(&manage_chat_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&manage_shopping_) -
        reinterpret_cast<char*>(&manage_chat_)) + sizeof(manage_shopping_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildUserTitle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildUserTitle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 manage_shopping = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_manage_shopping();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &manage_shopping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 manage_chat = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_manage_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &manage_chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildUserTitle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildUserTitle)
  return false;
#undef DO_
}

void ConfigGuildUserTitle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildUserTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->desc(), output);
  }

  // required int32 manage_shopping = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->manage_shopping(), output);
  }

  // required int32 manage_chat = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->manage_chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildUserTitle)
}

::google::protobuf::uint8* ConfigGuildUserTitle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildUserTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bytes desc = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  // required int32 manage_shopping = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->manage_shopping(), target);
  }

  // required int32 manage_chat = 12;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->manage_chat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildUserTitle)
  return target;
}

size_t ConfigGuildUserTitle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGuildUserTitle)
  size_t total_size = 0;

  if (has_desc()) {
    // required bytes desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  if (has_manage_chat()) {
    // required int32 manage_chat = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->manage_chat());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_manage_shopping()) {
    // required int32 manage_shopping = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->manage_shopping());
  }

  return total_size;
}
size_t ConfigGuildUserTitle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildUserTitle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());

    // required int32 manage_chat = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->manage_chat());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 manage_shopping = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->manage_shopping());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildUserTitle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildUserTitle)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildUserTitle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildUserTitle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildUserTitle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildUserTitle)
    MergeFrom(*source);
  }
}

void ConfigGuildUserTitle::MergeFrom(const ConfigGuildUserTitle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildUserTitle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_desc(from.desc());
    }
    if (cached_has_bits & 0x00000002u) {
      manage_chat_ = from.manage_chat_;
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      manage_shopping_ = from.manage_shopping_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGuildUserTitle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildUserTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildUserTitle::CopyFrom(const ConfigGuildUserTitle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildUserTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildUserTitle::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ConfigGuildUserTitle::Swap(ConfigGuildUserTitle* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildUserTitle* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildUserTitle::UnsafeArenaSwap(ConfigGuildUserTitle* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildUserTitle::InternalSwap(ConfigGuildUserTitle* other) {
  using std::swap;
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(manage_chat_, other->manage_chat_);
  swap(id_, other->id_);
  swap(manage_shopping_, other->manage_shopping_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildUserTitle::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildUserTitleList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildUserTitleList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildUserTitleList::ConfigGuildUserTitleList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildUserTitleList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildUserTitleList)
}
ConfigGuildUserTitleList::ConfigGuildUserTitleList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildUserTitleList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildUserTitleList)
}
ConfigGuildUserTitleList::ConfigGuildUserTitleList(const ConfigGuildUserTitleList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildUserTitleList)
}

void ConfigGuildUserTitleList::SharedCtor() {
}

ConfigGuildUserTitleList::~ConfigGuildUserTitleList() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildUserTitleList)
  SharedDtor();
}

void ConfigGuildUserTitleList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGuildUserTitleList::ArenaDtor(void* object) {
  ConfigGuildUserTitleList* _this = reinterpret_cast< ConfigGuildUserTitleList* >(object);
  (void)_this;
}
void ConfigGuildUserTitleList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildUserTitleList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildUserTitleList::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildUserTitleList& ConfigGuildUserTitleList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildUserTitleList.base);
  return *internal_default_instance();
}


void ConfigGuildUserTitleList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildUserTitleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildUserTitleList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildUserTitleList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGuildUserTitle list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildUserTitleList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildUserTitleList)
  return false;
#undef DO_
}

void ConfigGuildUserTitleList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildUserTitleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildUserTitle list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildUserTitleList)
}

::google::protobuf::uint8* ConfigGuildUserTitleList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildUserTitleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildUserTitle list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildUserTitleList)
  return target;
}

size_t ConfigGuildUserTitleList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildUserTitleList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGuildUserTitle list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildUserTitleList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildUserTitleList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildUserTitleList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildUserTitleList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildUserTitleList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildUserTitleList)
    MergeFrom(*source);
  }
}

void ConfigGuildUserTitleList::MergeFrom(const ConfigGuildUserTitleList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildUserTitleList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGuildUserTitleList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildUserTitleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildUserTitleList::CopyFrom(const ConfigGuildUserTitleList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildUserTitleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildUserTitleList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGuildUserTitleList::Swap(ConfigGuildUserTitleList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildUserTitleList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildUserTitleList::UnsafeArenaSwap(ConfigGuildUserTitleList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildUserTitleList::InternalSwap(ConfigGuildUserTitleList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildUserTitleList::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildSignin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildSignin::kLevelFieldNumber;
const int ConfigGuildSignin::kTypeFieldNumber;
const int ConfigGuildSignin::kNeedFieldNumber;
const int ConfigGuildSignin::kAwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildSignin::ConfigGuildSignin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildSignin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildSignin)
}
ConfigGuildSignin::ConfigGuildSignin(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildSignin.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildSignin)
}
ConfigGuildSignin::ConfigGuildSignin(const ConfigGuildSignin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  need_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_need()) {
    need_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.need(),
      GetArenaNoVirtual());
  }
  award_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_award()) {
    award_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.award(),
      GetArenaNoVirtual());
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&level_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildSignin)
}

void ConfigGuildSignin::SharedCtor() {
  need_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  award_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&level_)) + sizeof(type_));
}

ConfigGuildSignin::~ConfigGuildSignin() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildSignin)
  SharedDtor();
}

void ConfigGuildSignin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  need_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  award_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGuildSignin::ArenaDtor(void* object) {
  ConfigGuildSignin* _this = reinterpret_cast< ConfigGuildSignin* >(object);
  (void)_this;
}
void ConfigGuildSignin::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildSignin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildSignin::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildSignin& ConfigGuildSignin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildSignin.base);
  return *internal_default_instance();
}


void ConfigGuildSignin::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      need_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      award_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&level_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildSignin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildSignin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes need = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_need()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes award = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_award()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildSignin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildSignin)
  return false;
#undef DO_
}

void ConfigGuildSignin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required bytes need = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->need(), output);
  }

  // required bytes award = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->award(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildSignin)
}

::google::protobuf::uint8* ConfigGuildSignin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildSignin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required bytes need = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->need(), target);
  }

  // required bytes award = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->award(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildSignin)
  return target;
}

size_t ConfigGuildSignin::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGuildSignin)
  size_t total_size = 0;

  if (has_need()) {
    // required bytes need = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->need());
  }

  if (has_award()) {
    // required bytes award = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->award());
  }

  if (has_level()) {
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t ConfigGuildSignin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildSignin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes need = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->need());

    // required bytes award = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->award());

    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildSignin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildSignin)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildSignin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildSignin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildSignin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildSignin)
    MergeFrom(*source);
  }
}

void ConfigGuildSignin::MergeFrom(const ConfigGuildSignin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildSignin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_need(from.need());
    }
    if (cached_has_bits & 0x00000002u) {
      set_award(from.award());
    }
    if (cached_has_bits & 0x00000004u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGuildSignin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildSignin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildSignin::CopyFrom(const ConfigGuildSignin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildSignin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildSignin::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ConfigGuildSignin::Swap(ConfigGuildSignin* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildSignin* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildSignin::UnsafeArenaSwap(ConfigGuildSignin* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildSignin::InternalSwap(ConfigGuildSignin* other) {
  using std::swap;
  need_.Swap(&other->need_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  award_.Swap(&other->award_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildSignin::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildSigninList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildSigninList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildSigninList::ConfigGuildSigninList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildSigninList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildSigninList)
}
ConfigGuildSigninList::ConfigGuildSigninList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildSigninList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildSigninList)
}
ConfigGuildSigninList::ConfigGuildSigninList(const ConfigGuildSigninList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildSigninList)
}

void ConfigGuildSigninList::SharedCtor() {
}

ConfigGuildSigninList::~ConfigGuildSigninList() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildSigninList)
  SharedDtor();
}

void ConfigGuildSigninList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGuildSigninList::ArenaDtor(void* object) {
  ConfigGuildSigninList* _this = reinterpret_cast< ConfigGuildSigninList* >(object);
  (void)_this;
}
void ConfigGuildSigninList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildSigninList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildSigninList::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildSigninList& ConfigGuildSigninList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildSigninList.base);
  return *internal_default_instance();
}


void ConfigGuildSigninList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildSigninList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildSigninList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildSigninList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGuildSignin list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildSigninList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildSigninList)
  return false;
#undef DO_
}

void ConfigGuildSigninList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildSigninList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildSignin list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildSigninList)
}

::google::protobuf::uint8* ConfigGuildSigninList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildSigninList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildSignin list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildSigninList)
  return target;
}

size_t ConfigGuildSigninList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildSigninList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGuildSignin list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildSigninList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildSigninList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildSigninList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildSigninList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildSigninList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildSigninList)
    MergeFrom(*source);
  }
}

void ConfigGuildSigninList::MergeFrom(const ConfigGuildSigninList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildSigninList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGuildSigninList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildSigninList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildSigninList::CopyFrom(const ConfigGuildSigninList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildSigninList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildSigninList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGuildSigninList::Swap(ConfigGuildSigninList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildSigninList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildSigninList::UnsafeArenaSwap(ConfigGuildSigninList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildSigninList::InternalSwap(ConfigGuildSigninList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildSigninList::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildBadge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildBadge::kIdFieldNumber;
const int ConfigGuildBadge::kTypeFieldNumber;
const int ConfigGuildBadge::kOrderFieldNumber;
const int ConfigGuildBadge::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildBadge::ConfigGuildBadge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildBadge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildBadge)
}
ConfigGuildBadge::ConfigGuildBadge(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildBadge.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildBadge)
}
ConfigGuildBadge::ConfigGuildBadge(const ConfigGuildBadge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param()) {
    param_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&order_) -
    reinterpret_cast<char*>(&id_)) + sizeof(order_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildBadge)
}

void ConfigGuildBadge::SharedCtor() {
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_) -
      reinterpret_cast<char*>(&id_)) + sizeof(order_));
}

ConfigGuildBadge::~ConfigGuildBadge() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildBadge)
  SharedDtor();
}

void ConfigGuildBadge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGuildBadge::ArenaDtor(void* object) {
  ConfigGuildBadge* _this = reinterpret_cast< ConfigGuildBadge* >(object);
  (void)_this;
}
void ConfigGuildBadge::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildBadge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildBadge::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildBadge& ConfigGuildBadge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildBadge.base);
  return *internal_default_instance();
}


void ConfigGuildBadge::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildBadge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    param_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 14u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&order_) -
        reinterpret_cast<char*>(&id_)) + sizeof(order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildBadge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildBadge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes param = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildBadge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildBadge)
  return false;
#undef DO_
}

void ConfigGuildBadge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildBadge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required int32 order = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->order(), output);
  }

  // required bytes param = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildBadge)
}

::google::protobuf::uint8* ConfigGuildBadge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildBadge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required int32 order = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->order(), target);
  }

  // required bytes param = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->param(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildBadge)
  return target;
}

size_t ConfigGuildBadge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGuildBadge)
  size_t total_size = 0;

  if (has_param()) {
    // required bytes param = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->param());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_order()) {
    // required int32 order = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order());
  }

  return total_size;
}
size_t ConfigGuildBadge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildBadge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes param = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->param());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required int32 order = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildBadge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildBadge)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildBadge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildBadge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildBadge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildBadge)
    MergeFrom(*source);
  }
}

void ConfigGuildBadge::MergeFrom(const ConfigGuildBadge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildBadge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_param(from.param());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      order_ = from.order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGuildBadge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildBadge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildBadge::CopyFrom(const ConfigGuildBadge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildBadge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildBadge::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ConfigGuildBadge::Swap(ConfigGuildBadge* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildBadge* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildBadge::UnsafeArenaSwap(ConfigGuildBadge* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildBadge::InternalSwap(ConfigGuildBadge* other) {
  using std::swap;
  param_.Swap(&other->param_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(order_, other->order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildBadge::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildBadgeList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildBadgeList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildBadgeList::ConfigGuildBadgeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildBadgeList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildBadgeList)
}
ConfigGuildBadgeList::ConfigGuildBadgeList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildBadgeList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildBadgeList)
}
ConfigGuildBadgeList::ConfigGuildBadgeList(const ConfigGuildBadgeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildBadgeList)
}

void ConfigGuildBadgeList::SharedCtor() {
}

ConfigGuildBadgeList::~ConfigGuildBadgeList() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildBadgeList)
  SharedDtor();
}

void ConfigGuildBadgeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGuildBadgeList::ArenaDtor(void* object) {
  ConfigGuildBadgeList* _this = reinterpret_cast< ConfigGuildBadgeList* >(object);
  (void)_this;
}
void ConfigGuildBadgeList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildBadgeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildBadgeList::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildBadgeList& ConfigGuildBadgeList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildBadgeList.base);
  return *internal_default_instance();
}


void ConfigGuildBadgeList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildBadgeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildBadgeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildBadgeList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGuildBadge list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildBadgeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildBadgeList)
  return false;
#undef DO_
}

void ConfigGuildBadgeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildBadgeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildBadge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildBadgeList)
}

::google::protobuf::uint8* ConfigGuildBadgeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildBadgeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildBadge list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildBadgeList)
  return target;
}

size_t ConfigGuildBadgeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildBadgeList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGuildBadge list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildBadgeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildBadgeList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildBadgeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildBadgeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildBadgeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildBadgeList)
    MergeFrom(*source);
  }
}

void ConfigGuildBadgeList::MergeFrom(const ConfigGuildBadgeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildBadgeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGuildBadgeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildBadgeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildBadgeList::CopyFrom(const ConfigGuildBadgeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildBadgeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildBadgeList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGuildBadgeList::Swap(ConfigGuildBadgeList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildBadgeList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildBadgeList::UnsafeArenaSwap(ConfigGuildBadgeList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildBadgeList::InternalSwap(ConfigGuildBadgeList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildBadgeList::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildDonation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildDonation::kIdFieldNumber;
const int ConfigGuildDonation::kDonatesFieldNumber;
const int ConfigGuildDonation::kAwardDonationFieldNumber;
const int ConfigGuildDonation::kAwardItemTypeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildDonation::ConfigGuildDonation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildDonation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildDonation)
}
ConfigGuildDonation::ConfigGuildDonation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildDonation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildDonation)
}
ConfigGuildDonation::ConfigGuildDonation(const ConfigGuildDonation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  donates_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_donates()) {
    donates_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.donates(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&award_item_typeid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(award_item_typeid_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildDonation)
}

void ConfigGuildDonation::SharedCtor() {
  donates_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&award_item_typeid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(award_item_typeid_));
}

ConfigGuildDonation::~ConfigGuildDonation() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildDonation)
  SharedDtor();
}

void ConfigGuildDonation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  donates_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGuildDonation::ArenaDtor(void* object) {
  ConfigGuildDonation* _this = reinterpret_cast< ConfigGuildDonation* >(object);
  (void)_this;
}
void ConfigGuildDonation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildDonation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildDonation::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildDonation& ConfigGuildDonation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildDonation.base);
  return *internal_default_instance();
}


void ConfigGuildDonation::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildDonation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    donates_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 14u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&award_item_typeid_) -
        reinterpret_cast<char*>(&id_)) + sizeof(award_item_typeid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildDonation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildDonation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes donates = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_donates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 award_donation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_award_donation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_donation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 award_item_typeid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_award_item_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &award_item_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildDonation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildDonation)
  return false;
#undef DO_
}

void ConfigGuildDonation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildDonation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bytes donates = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->donates(), output);
  }

  // required int32 award_donation = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->award_donation(), output);
  }

  // required uint64 award_item_typeid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->award_item_typeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildDonation)
}

::google::protobuf::uint8* ConfigGuildDonation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildDonation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bytes donates = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->donates(), target);
  }

  // required int32 award_donation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->award_donation(), target);
  }

  // required uint64 award_item_typeid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->award_item_typeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildDonation)
  return target;
}

size_t ConfigGuildDonation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGuildDonation)
  size_t total_size = 0;

  if (has_donates()) {
    // required bytes donates = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->donates());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_award_donation()) {
    // required int32 award_donation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->award_donation());
  }

  if (has_award_item_typeid()) {
    // required uint64 award_item_typeid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->award_item_typeid());
  }

  return total_size;
}
size_t ConfigGuildDonation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildDonation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes donates = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->donates());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 award_donation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->award_donation());

    // required uint64 award_item_typeid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->award_item_typeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildDonation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildDonation)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildDonation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildDonation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildDonation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildDonation)
    MergeFrom(*source);
  }
}

void ConfigGuildDonation::MergeFrom(const ConfigGuildDonation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildDonation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_donates(from.donates());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      award_donation_ = from.award_donation_;
    }
    if (cached_has_bits & 0x00000008u) {
      award_item_typeid_ = from.award_item_typeid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGuildDonation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildDonation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildDonation::CopyFrom(const ConfigGuildDonation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildDonation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildDonation::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ConfigGuildDonation::Swap(ConfigGuildDonation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildDonation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildDonation::UnsafeArenaSwap(ConfigGuildDonation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildDonation::InternalSwap(ConfigGuildDonation* other) {
  using std::swap;
  donates_.Swap(&other->donates_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(award_donation_, other->award_donation_);
  swap(award_item_typeid_, other->award_item_typeid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildDonation::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildDonationList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildDonationList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildDonationList::ConfigGuildDonationList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildDonationList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildDonationList)
}
ConfigGuildDonationList::ConfigGuildDonationList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildDonationList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildDonationList)
}
ConfigGuildDonationList::ConfigGuildDonationList(const ConfigGuildDonationList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildDonationList)
}

void ConfigGuildDonationList::SharedCtor() {
}

ConfigGuildDonationList::~ConfigGuildDonationList() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildDonationList)
  SharedDtor();
}

void ConfigGuildDonationList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGuildDonationList::ArenaDtor(void* object) {
  ConfigGuildDonationList* _this = reinterpret_cast< ConfigGuildDonationList* >(object);
  (void)_this;
}
void ConfigGuildDonationList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildDonationList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildDonationList::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildDonationList& ConfigGuildDonationList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildDonationList.base);
  return *internal_default_instance();
}


void ConfigGuildDonationList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildDonationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildDonationList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildDonationList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGuildDonation list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildDonationList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildDonationList)
  return false;
#undef DO_
}

void ConfigGuildDonationList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildDonationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildDonation list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildDonationList)
}

::google::protobuf::uint8* ConfigGuildDonationList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildDonationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildDonation list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildDonationList)
  return target;
}

size_t ConfigGuildDonationList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildDonationList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGuildDonation list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildDonationList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildDonationList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildDonationList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildDonationList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildDonationList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildDonationList)
    MergeFrom(*source);
  }
}

void ConfigGuildDonationList::MergeFrom(const ConfigGuildDonationList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildDonationList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGuildDonationList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildDonationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildDonationList::CopyFrom(const ConfigGuildDonationList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildDonationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildDonationList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGuildDonationList::Swap(ConfigGuildDonationList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildDonationList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildDonationList::UnsafeArenaSwap(ConfigGuildDonationList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildDonationList::InternalSwap(ConfigGuildDonationList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildDonationList::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildBuilding::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildBuilding::kBuildingTypeFieldNumber;
const int ConfigGuildBuilding::kLevelFieldNumber;
const int ConfigGuildBuilding::kCondPrebuildFieldNumber;
const int ConfigGuildBuilding::kCondBuildCostFieldNumber;
const int ConfigGuildBuilding::kCondBuildingTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildBuilding::ConfigGuildBuilding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildBuilding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildBuilding)
}
ConfigGuildBuilding::ConfigGuildBuilding(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildBuilding.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildBuilding)
}
ConfigGuildBuilding::ConfigGuildBuilding(const ConfigGuildBuilding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cond_prebuild_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cond_prebuild()) {
    cond_prebuild_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cond_prebuild(),
      GetArenaNoVirtual());
  }
  cond_build_cost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cond_build_cost()) {
    cond_build_cost_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cond_build_cost(),
      GetArenaNoVirtual());
  }
  ::memcpy(&building_type_, &from.building_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&cond_building_time_) -
    reinterpret_cast<char*>(&building_type_)) + sizeof(cond_building_time_));
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildBuilding)
}

void ConfigGuildBuilding::SharedCtor() {
  cond_prebuild_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cond_build_cost_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&building_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cond_building_time_) -
      reinterpret_cast<char*>(&building_type_)) + sizeof(cond_building_time_));
}

ConfigGuildBuilding::~ConfigGuildBuilding() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildBuilding)
  SharedDtor();
}

void ConfigGuildBuilding::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  cond_prebuild_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cond_build_cost_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigGuildBuilding::ArenaDtor(void* object) {
  ConfigGuildBuilding* _this = reinterpret_cast< ConfigGuildBuilding* >(object);
  (void)_this;
}
void ConfigGuildBuilding::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildBuilding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildBuilding::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildBuilding& ConfigGuildBuilding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildBuilding.base);
  return *internal_default_instance();
}


void ConfigGuildBuilding::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildBuilding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      cond_prebuild_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      cond_build_cost_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&building_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cond_building_time_) -
        reinterpret_cast<char*>(&building_type_)) + sizeof(cond_building_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildBuilding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildBuilding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 building_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_building_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes cond_prebuild = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cond_prebuild()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes cond_build_cost = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cond_build_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cond_building_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_cond_building_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cond_building_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildBuilding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildBuilding)
  return false;
#undef DO_
}

void ConfigGuildBuilding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildBuilding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 building_type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->building_type(), output);
  }

  // required int32 level = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // required bytes cond_prebuild = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->cond_prebuild(), output);
  }

  // required bytes cond_build_cost = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->cond_build_cost(), output);
  }

  // required int32 cond_building_time = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cond_building_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildBuilding)
}

::google::protobuf::uint8* ConfigGuildBuilding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildBuilding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 building_type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->building_type(), target);
  }

  // required int32 level = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // required bytes cond_prebuild = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->cond_prebuild(), target);
  }

  // required bytes cond_build_cost = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->cond_build_cost(), target);
  }

  // required int32 cond_building_time = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cond_building_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildBuilding)
  return target;
}

size_t ConfigGuildBuilding::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.ConfigGuildBuilding)
  size_t total_size = 0;

  if (has_cond_prebuild()) {
    // required bytes cond_prebuild = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cond_prebuild());
  }

  if (has_cond_build_cost()) {
    // required bytes cond_build_cost = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cond_build_cost());
  }

  if (has_building_type()) {
    // required int32 building_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_type());
  }

  if (has_level()) {
    // required int32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_cond_building_time()) {
    // required int32 cond_building_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cond_building_time());
  }

  return total_size;
}
size_t ConfigGuildBuilding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildBuilding)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes cond_prebuild = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cond_prebuild());

    // required bytes cond_build_cost = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cond_build_cost());

    // required int32 building_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_type());

    // required int32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 cond_building_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cond_building_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildBuilding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildBuilding)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildBuilding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildBuilding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildBuilding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildBuilding)
    MergeFrom(*source);
  }
}

void ConfigGuildBuilding::MergeFrom(const ConfigGuildBuilding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildBuilding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_cond_prebuild(from.cond_prebuild());
    }
    if (cached_has_bits & 0x00000002u) {
      set_cond_build_cost(from.cond_build_cost());
    }
    if (cached_has_bits & 0x00000004u) {
      building_type_ = from.building_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000010u) {
      cond_building_time_ = from.cond_building_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigGuildBuilding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildBuilding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildBuilding::CopyFrom(const ConfigGuildBuilding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildBuilding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildBuilding::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void ConfigGuildBuilding::Swap(ConfigGuildBuilding* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildBuilding* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildBuilding::UnsafeArenaSwap(ConfigGuildBuilding* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildBuilding::InternalSwap(ConfigGuildBuilding* other) {
  using std::swap;
  cond_prebuild_.Swap(&other->cond_prebuild_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cond_build_cost_.Swap(&other->cond_build_cost_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(building_type_, other->building_type_);
  swap(level_, other->level_);
  swap(cond_building_time_, other->cond_building_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildBuilding::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigGuildBuildingList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigGuildBuildingList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigGuildBuildingList::ConfigGuildBuildingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_ConfigGuildBuildingList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.ConfigGuildBuildingList)
}
ConfigGuildBuildingList::ConfigGuildBuildingList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildBuildingList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.ConfigGuildBuildingList)
}
ConfigGuildBuildingList::ConfigGuildBuildingList(const ConfigGuildBuildingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.ConfigGuildBuildingList)
}

void ConfigGuildBuildingList::SharedCtor() {
}

ConfigGuildBuildingList::~ConfigGuildBuildingList() {
  // @@protoc_insertion_point(destructor:db.ConfigGuildBuildingList)
  SharedDtor();
}

void ConfigGuildBuildingList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ConfigGuildBuildingList::ArenaDtor(void* object) {
  ConfigGuildBuildingList* _this = reinterpret_cast< ConfigGuildBuildingList* >(object);
  (void)_this;
}
void ConfigGuildBuildingList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ConfigGuildBuildingList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigGuildBuildingList::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigGuildBuildingList& ConfigGuildBuildingList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_ConfigGuildBuildingList.base);
  return *internal_default_instance();
}


void ConfigGuildBuildingList::Clear() {
// @@protoc_insertion_point(message_clear_start:db.ConfigGuildBuildingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigGuildBuildingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.ConfigGuildBuildingList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .db.ConfigGuildBuilding list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.ConfigGuildBuildingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.ConfigGuildBuildingList)
  return false;
#undef DO_
}

void ConfigGuildBuildingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.ConfigGuildBuildingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildBuilding list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.ConfigGuildBuildingList)
}

::google::protobuf::uint8* ConfigGuildBuildingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.ConfigGuildBuildingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .db.ConfigGuildBuilding list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.ConfigGuildBuildingList)
  return target;
}

size_t ConfigGuildBuildingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.ConfigGuildBuildingList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.ConfigGuildBuilding list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigGuildBuildingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.ConfigGuildBuildingList)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigGuildBuildingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigGuildBuildingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.ConfigGuildBuildingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.ConfigGuildBuildingList)
    MergeFrom(*source);
  }
}

void ConfigGuildBuildingList::MergeFrom(const ConfigGuildBuildingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.ConfigGuildBuildingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void ConfigGuildBuildingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.ConfigGuildBuildingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigGuildBuildingList::CopyFrom(const ConfigGuildBuildingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.ConfigGuildBuildingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigGuildBuildingList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void ConfigGuildBuildingList::Swap(ConfigGuildBuildingList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ConfigGuildBuildingList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ConfigGuildBuildingList::UnsafeArenaSwap(ConfigGuildBuildingList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ConfigGuildBuildingList::InternalSwap(ConfigGuildBuildingList* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigGuildBuildingList::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameGuild::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameGuild::kGuildidFieldNumber;
const int GameGuild::kNameFieldNumber;
const int GameGuild::kLevelFieldNumber;
const int GameGuild::kPopulationFieldNumber;
const int GameGuild::kFundFieldNumber;
const int GameGuild::kAnnouncementFieldNumber;
const int GameGuild::kStateFieldNumber;
const int GameGuild::kBadgeFieldNumber;
const int GameGuild::kAcceptTypeFieldNumber;
const int GameGuild::kJoinLevelFieldNumber;
const int GameGuild::kJoinForceFieldNumber;
const int GameGuild::kShoppingFieldNumber;
const int GameGuild::kChatFieldNumber;
const int GameGuild::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameGuild::GameGuild()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_GameGuild.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameGuild)
}
GameGuild::GameGuild(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuild.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameGuild)
}
GameGuild::GameGuild(const GameGuild& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement()) {
    announcement_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement(),
      GetArenaNoVirtual());
  }
  badge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_badge()) {
    badge_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.badge(),
      GetArenaNoVirtual());
  }
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&optime_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
  // @@protoc_insertion_point(copy_constructor:db.GameGuild)
}

void GameGuild::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  badge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optime_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
}

GameGuild::~GameGuild() {
  // @@protoc_insertion_point(destructor:db.GameGuild)
  SharedDtor();
}

void GameGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  badge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameGuild::ArenaDtor(void* object) {
  GameGuild* _this = reinterpret_cast< GameGuild* >(object);
  (void)_this;
}
void GameGuild::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameGuild::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameGuild& GameGuild::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuild.base);
  return *internal_default_instance();
}


void GameGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameGuild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      announcement_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      badge_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&guildid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&guildid_)) + sizeof(state_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&accept_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optime_) -
        reinterpret_cast<char*>(&accept_type_)) + sizeof(optime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameGuild::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameGuild)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 population = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_population();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &population_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 fund = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_fund();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fund_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes announcement = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_announcement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes badge = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_badge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 accept_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_accept_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accept_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 join_level = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_join_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &join_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 join_force = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_join_force();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &join_force_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 shopping = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_shopping();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shopping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 chat = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 optime = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameGuild)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameGuild)
  return false;
#undef DO_
}

void GameGuild::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameGuild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 guildid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guildid(), output);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // required int32 level = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // required int32 population = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->population(), output);
  }

  // required uint64 fund = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->fund(), output);
  }

  // required bytes announcement = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->announcement(), output);
  }

  // required int32 state = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->state(), output);
  }

  // required bytes badge = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->badge(), output);
  }

  // required int32 accept_type = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->accept_type(), output);
  }

  // required int32 join_level = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->join_level(), output);
  }

  // required int32 join_force = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->join_force(), output);
  }

  // required int32 shopping = 14;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->shopping(), output);
  }

  // required int32 chat = 15;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->chat(), output);
  }

  // required sfixed64 optime = 21;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(21, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameGuild)
}

::google::protobuf::uint8* GameGuild::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameGuild)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 guildid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guildid(), target);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // required int32 level = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // required int32 population = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->population(), target);
  }

  // required uint64 fund = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->fund(), target);
  }

  // required bytes announcement = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->announcement(), target);
  }

  // required int32 state = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->state(), target);
  }

  // required bytes badge = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->badge(), target);
  }

  // required int32 accept_type = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->accept_type(), target);
  }

  // required int32 join_level = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->join_level(), target);
  }

  // required int32 join_force = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->join_force(), target);
  }

  // required int32 shopping = 14;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->shopping(), target);
  }

  // required int32 chat = 15;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->chat(), target);
  }

  // required sfixed64 optime = 21;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(21, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameGuild)
  return target;
}

size_t GameGuild::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameGuild)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_announcement()) {
    // required bytes announcement = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->announcement());
  }

  if (has_badge()) {
    // required bytes badge = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->badge());
  }

  if (has_guildid()) {
    // required int32 guildid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());
  }

  if (has_level()) {
    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_fund()) {
    // required uint64 fund = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fund());
  }

  if (has_population()) {
    // required int32 population = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->population());
  }

  if (has_state()) {
    // required int32 state = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_accept_type()) {
    // required int32 accept_type = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accept_type());
  }

  if (has_join_level()) {
    // required int32 join_level = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->join_level());
  }

  if (has_join_force()) {
    // required int32 join_force = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->join_force());
  }

  if (has_shopping()) {
    // required int32 shopping = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shopping());
  }

  if (has_chat()) {
    // required int32 chat = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chat());
  }

  if (has_optime()) {
    // required sfixed64 optime = 21;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t GameGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameGuild)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00003fff) ^ 0x00003fff) == 0) {  // All required fields are present.
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes announcement = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->announcement());

    // required bytes badge = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->badge());

    // required int32 guildid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());

    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required uint64 fund = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fund());

    // required int32 population = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->population());

    // required int32 state = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required int32 accept_type = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accept_type());

    // required int32 join_level = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->join_level());

    // required int32 join_force = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->join_force());

    // required int32 shopping = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shopping());

    // required int32 chat = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chat());

    // required sfixed64 optime = 21;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameGuild::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const GameGuild* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameGuild>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameGuild)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameGuild)
    MergeFrom(*source);
  }
}

void GameGuild::MergeFrom(const GameGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000002u) {
      set_announcement(from.announcement());
    }
    if (cached_has_bits & 0x00000004u) {
      set_badge(from.badge());
    }
    if (cached_has_bits & 0x00000008u) {
      guildid_ = from.guildid_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000020u) {
      fund_ = from.fund_;
    }
    if (cached_has_bits & 0x00000040u) {
      population_ = from.population_;
    }
    if (cached_has_bits & 0x00000080u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      accept_type_ = from.accept_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      join_level_ = from.join_level_;
    }
    if (cached_has_bits & 0x00000400u) {
      join_force_ = from.join_force_;
    }
    if (cached_has_bits & 0x00000800u) {
      shopping_ = from.shopping_;
    }
    if (cached_has_bits & 0x00001000u) {
      chat_ = from.chat_;
    }
    if (cached_has_bits & 0x00002000u) {
      optime_ = from.optime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameGuild::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameGuild::CopyFrom(const GameGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameGuild::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003fff) != 0x00003fff) return false;
  return true;
}

void GameGuild::Swap(GameGuild* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameGuild* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameGuild::UnsafeArenaSwap(GameGuild* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameGuild::InternalSwap(GameGuild* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  announcement_.Swap(&other->announcement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  badge_.Swap(&other->badge_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guildid_, other->guildid_);
  swap(level_, other->level_);
  swap(fund_, other->fund_);
  swap(population_, other->population_);
  swap(state_, other->state_);
  swap(accept_type_, other->accept_type_);
  swap(join_level_, other->join_level_);
  swap(join_force_, other->join_force_);
  swap(shopping_, other->shopping_);
  swap(chat_, other->chat_);
  swap(optime_, other->optime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameGuild::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameGuildBuilding::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameGuildBuilding::kGuildidFieldNumber;
const int GameGuildBuilding::kBuildingTypeFieldNumber;
const int GameGuildBuilding::kLevelFieldNumber;
const int GameGuildBuilding::kStateFieldNumber;
const int GameGuildBuilding::kSecondsFieldNumber;
const int GameGuildBuilding::kStarttimeFieldNumber;
const int GameGuildBuilding::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameGuildBuilding::GameGuildBuilding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_GameGuildBuilding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameGuildBuilding)
}
GameGuildBuilding::GameGuildBuilding(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuildBuilding.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameGuildBuilding)
}
GameGuildBuilding::GameGuildBuilding(const GameGuildBuilding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&optime_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
  // @@protoc_insertion_point(copy_constructor:db.GameGuildBuilding)
}

void GameGuildBuilding::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optime_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
}

GameGuildBuilding::~GameGuildBuilding() {
  // @@protoc_insertion_point(destructor:db.GameGuildBuilding)
  SharedDtor();
}

void GameGuildBuilding::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameGuildBuilding::ArenaDtor(void* object) {
  GameGuildBuilding* _this = reinterpret_cast< GameGuildBuilding* >(object);
  (void)_this;
}
void GameGuildBuilding::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameGuildBuilding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameGuildBuilding::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameGuildBuilding& GameGuildBuilding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuildBuilding.base);
  return *internal_default_instance();
}


void GameGuildBuilding::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameGuildBuilding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&guildid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optime_) -
        reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameGuildBuilding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameGuildBuilding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 building_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_building_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 seconds = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 starttime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_starttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 optime = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameGuildBuilding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameGuildBuilding)
  return false;
#undef DO_
}

void GameGuildBuilding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameGuildBuilding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 guildid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guildid(), output);
  }

  // required int32 building_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->building_type(), output);
  }

  // required int32 level = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // required int32 state = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // required int32 seconds = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->seconds(), output);
  }

  // required sfixed64 starttime = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(6, this->starttime(), output);
  }

  // required sfixed64 optime = 21;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(21, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameGuildBuilding)
}

::google::protobuf::uint8* GameGuildBuilding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameGuildBuilding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 guildid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guildid(), target);
  }

  // required int32 building_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->building_type(), target);
  }

  // required int32 level = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // required int32 state = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // required int32 seconds = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->seconds(), target);
  }

  // required sfixed64 starttime = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(6, this->starttime(), target);
  }

  // required sfixed64 optime = 21;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(21, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameGuildBuilding)
  return target;
}

size_t GameGuildBuilding::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameGuildBuilding)
  size_t total_size = 0;

  if (has_guildid()) {
    // required int32 guildid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());
  }

  if (has_building_type()) {
    // required int32 building_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_type());
  }

  if (has_level()) {
    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_state()) {
    // required int32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_starttime()) {
    // required sfixed64 starttime = 6;
    total_size += 1 + 8;
  }

  if (has_seconds()) {
    // required int32 seconds = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds());
  }

  if (has_optime()) {
    // required sfixed64 optime = 21;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t GameGuildBuilding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameGuildBuilding)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required int32 guildid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());

    // required int32 building_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_type());

    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required sfixed64 starttime = 6;
    total_size += 1 + 8;

    // required int32 seconds = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds());

    // required sfixed64 optime = 21;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameGuildBuilding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameGuildBuilding)
  GOOGLE_DCHECK_NE(&from, this);
  const GameGuildBuilding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameGuildBuilding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameGuildBuilding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameGuildBuilding)
    MergeFrom(*source);
  }
}

void GameGuildBuilding::MergeFrom(const GameGuildBuilding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameGuildBuilding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      guildid_ = from.guildid_;
    }
    if (cached_has_bits & 0x00000002u) {
      building_type_ = from.building_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000010u) {
      starttime_ = from.starttime_;
    }
    if (cached_has_bits & 0x00000020u) {
      seconds_ = from.seconds_;
    }
    if (cached_has_bits & 0x00000040u) {
      optime_ = from.optime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameGuildBuilding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameGuildBuilding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameGuildBuilding::CopyFrom(const GameGuildBuilding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameGuildBuilding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameGuildBuilding::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void GameGuildBuilding::Swap(GameGuildBuilding* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameGuildBuilding* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameGuildBuilding::UnsafeArenaSwap(GameGuildBuilding* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameGuildBuilding::InternalSwap(GameGuildBuilding* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(building_type_, other->building_type_);
  swap(level_, other->level_);
  swap(state_, other->state_);
  swap(starttime_, other->starttime_);
  swap(seconds_, other->seconds_);
  swap(optime_, other->optime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameGuildBuilding::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameGuildStore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameGuildStore::kGuildidFieldNumber;
const int GameGuildStore::kItemTypeidFieldNumber;
const int GameGuildStore::kItemNumFieldNumber;
const int GameGuildStore::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameGuildStore::GameGuildStore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_GameGuildStore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameGuildStore)
}
GameGuildStore::GameGuildStore(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuildStore.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameGuildStore)
}
GameGuildStore::GameGuildStore(const GameGuildStore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_typeid_, &from.item_typeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&optime_) -
    reinterpret_cast<char*>(&item_typeid_)) + sizeof(optime_));
  // @@protoc_insertion_point(copy_constructor:db.GameGuildStore)
}

void GameGuildStore::SharedCtor() {
  ::memset(&item_typeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optime_) -
      reinterpret_cast<char*>(&item_typeid_)) + sizeof(optime_));
}

GameGuildStore::~GameGuildStore() {
  // @@protoc_insertion_point(destructor:db.GameGuildStore)
  SharedDtor();
}

void GameGuildStore::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameGuildStore::ArenaDtor(void* object) {
  GameGuildStore* _this = reinterpret_cast< GameGuildStore* >(object);
  (void)_this;
}
void GameGuildStore::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameGuildStore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameGuildStore::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameGuildStore& GameGuildStore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuildStore.base);
  return *internal_default_instance();
}


void GameGuildStore::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameGuildStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&item_typeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optime_) -
        reinterpret_cast<char*>(&item_typeid_)) + sizeof(optime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameGuildStore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameGuildStore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 item_typeid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 item_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 optime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameGuildStore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameGuildStore)
  return false;
#undef DO_
}

void GameGuildStore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameGuildStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 guildid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guildid(), output);
  }

  // required uint64 item_typeid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_typeid(), output);
  }

  // required int32 item_num = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_num(), output);
  }

  // required sfixed64 optime = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(11, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameGuildStore)
}

::google::protobuf::uint8* GameGuildStore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameGuildStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 guildid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guildid(), target);
  }

  // required uint64 item_typeid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_typeid(), target);
  }

  // required int32 item_num = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_num(), target);
  }

  // required sfixed64 optime = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(11, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameGuildStore)
  return target;
}

size_t GameGuildStore::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameGuildStore)
  size_t total_size = 0;

  if (has_item_typeid()) {
    // required uint64 item_typeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());
  }

  if (has_guildid()) {
    // required int32 guildid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());
  }

  if (has_item_num()) {
    // required int32 item_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_num());
  }

  if (has_optime()) {
    // required sfixed64 optime = 11;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t GameGuildStore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameGuildStore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint64 item_typeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_typeid());

    // required int32 guildid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());

    // required int32 item_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_num());

    // required sfixed64 optime = 11;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameGuildStore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameGuildStore)
  GOOGLE_DCHECK_NE(&from, this);
  const GameGuildStore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameGuildStore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameGuildStore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameGuildStore)
    MergeFrom(*source);
  }
}

void GameGuildStore::MergeFrom(const GameGuildStore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameGuildStore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_typeid_ = from.item_typeid_;
    }
    if (cached_has_bits & 0x00000002u) {
      guildid_ = from.guildid_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_num_ = from.item_num_;
    }
    if (cached_has_bits & 0x00000008u) {
      optime_ = from.optime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameGuildStore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameGuildStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameGuildStore::CopyFrom(const GameGuildStore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameGuildStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameGuildStore::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void GameGuildStore::Swap(GameGuildStore* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameGuildStore* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameGuildStore::UnsafeArenaSwap(GameGuildStore* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameGuildStore::InternalSwap(GameGuildStore* other) {
  using std::swap;
  swap(item_typeid_, other->item_typeid_);
  swap(guildid_, other->guildid_);
  swap(item_num_, other->item_num_);
  swap(optime_, other->optime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameGuildStore::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameGuildUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameGuildUser::kGuildidFieldNumber;
const int GameGuildUser::kTicketidFieldNumber;
const int GameGuildUser::kTitleFieldNumber;
const int GameGuildUser::kDonationFieldNumber;
const int GameGuildUser::kStateFieldNumber;
const int GameGuildUser::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameGuildUser::GameGuildUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_GameGuildUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameGuildUser)
}
GameGuildUser::GameGuildUser(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuildUser.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameGuildUser)
}
GameGuildUser::GameGuildUser(const GameGuildUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&optime_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
  // @@protoc_insertion_point(copy_constructor:db.GameGuildUser)
}

void GameGuildUser::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optime_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
}

GameGuildUser::~GameGuildUser() {
  // @@protoc_insertion_point(destructor:db.GameGuildUser)
  SharedDtor();
}

void GameGuildUser::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameGuildUser::ArenaDtor(void* object) {
  GameGuildUser* _this = reinterpret_cast< GameGuildUser* >(object);
  (void)_this;
}
void GameGuildUser::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameGuildUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameGuildUser::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameGuildUser& GameGuildUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuildUser.base);
  return *internal_default_instance();
}


void GameGuildUser::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameGuildUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&guildid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optime_) -
        reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameGuildUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameGuildUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ticketid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_title();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &title_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 donation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_donation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &donation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 optime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameGuildUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameGuildUser)
  return false;
#undef DO_
}

void GameGuildUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameGuildUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 guildid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guildid(), output);
  }

  // required int32 ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ticketid(), output);
  }

  // required int32 title = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->title(), output);
  }

  // required int32 donation = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->donation(), output);
  }

  // required int32 state = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  // required sfixed64 optime = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(11, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameGuildUser)
}

::google::protobuf::uint8* GameGuildUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameGuildUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 guildid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guildid(), target);
  }

  // required int32 ticketid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ticketid(), target);
  }

  // required int32 title = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->title(), target);
  }

  // required int32 donation = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->donation(), target);
  }

  // required int32 state = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  // required sfixed64 optime = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(11, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameGuildUser)
  return target;
}

size_t GameGuildUser::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameGuildUser)
  size_t total_size = 0;

  if (has_guildid()) {
    // required int32 guildid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());
  }

  if (has_ticketid()) {
    // required int32 ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());
  }

  if (has_title()) {
    // required int32 title = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->title());
  }

  if (has_donation()) {
    // required int32 donation = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->donation());
  }

  if (has_state()) {
    // required int32 state = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_optime()) {
    // required sfixed64 optime = 11;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t GameGuildUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameGuildUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required int32 guildid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());

    // required int32 ticketid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());

    // required int32 title = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->title());

    // required int32 donation = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->donation());

    // required int32 state = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required sfixed64 optime = 11;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameGuildUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameGuildUser)
  GOOGLE_DCHECK_NE(&from, this);
  const GameGuildUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameGuildUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameGuildUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameGuildUser)
    MergeFrom(*source);
  }
}

void GameGuildUser::MergeFrom(const GameGuildUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameGuildUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      guildid_ = from.guildid_;
    }
    if (cached_has_bits & 0x00000002u) {
      ticketid_ = from.ticketid_;
    }
    if (cached_has_bits & 0x00000004u) {
      title_ = from.title_;
    }
    if (cached_has_bits & 0x00000008u) {
      donation_ = from.donation_;
    }
    if (cached_has_bits & 0x00000010u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000020u) {
      optime_ = from.optime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameGuildUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameGuildUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameGuildUser::CopyFrom(const GameGuildUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameGuildUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameGuildUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void GameGuildUser::Swap(GameGuildUser* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameGuildUser* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameGuildUser::UnsafeArenaSwap(GameGuildUser* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameGuildUser::InternalSwap(GameGuildUser* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(ticketid_, other->ticketid_);
  swap(title_, other->title_);
  swap(donation_, other->donation_);
  swap(state_, other->state_);
  swap(optime_, other->optime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameGuildUser::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameStatsGuildUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameStatsGuildUser::kTicketidFieldNumber;
const int GameStatsGuildUser::kGuildidFieldNumber;
const int GameStatsGuildUser::kDonationFieldNumber;
const int GameStatsGuildUser::kDonationRefreshtimeFieldNumber;
const int GameStatsGuildUser::kSigninState1FieldNumber;
const int GameStatsGuildUser::kSigninOptime1FieldNumber;
const int GameStatsGuildUser::kSigninState2FieldNumber;
const int GameStatsGuildUser::kSigninOptime2FieldNumber;
const int GameStatsGuildUser::kSigninState3FieldNumber;
const int GameStatsGuildUser::kSigninOptime3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStatsGuildUser::GameStatsGuildUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_GameStatsGuildUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameStatsGuildUser)
}
GameStatsGuildUser::GameStatsGuildUser(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameStatsGuildUser.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameStatsGuildUser)
}
GameStatsGuildUser::GameStatsGuildUser(const GameStatsGuildUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ticketid_, &from.ticketid_,
    static_cast<size_t>(reinterpret_cast<char*>(&signin_optime3_) -
    reinterpret_cast<char*>(&ticketid_)) + sizeof(signin_optime3_));
  // @@protoc_insertion_point(copy_constructor:db.GameStatsGuildUser)
}

void GameStatsGuildUser::SharedCtor() {
  ::memset(&ticketid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signin_optime3_) -
      reinterpret_cast<char*>(&ticketid_)) + sizeof(signin_optime3_));
}

GameStatsGuildUser::~GameStatsGuildUser() {
  // @@protoc_insertion_point(destructor:db.GameStatsGuildUser)
  SharedDtor();
}

void GameStatsGuildUser::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GameStatsGuildUser::ArenaDtor(void* object) {
  GameStatsGuildUser* _this = reinterpret_cast< GameStatsGuildUser* >(object);
  (void)_this;
}
void GameStatsGuildUser::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameStatsGuildUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameStatsGuildUser::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameStatsGuildUser& GameStatsGuildUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameStatsGuildUser.base);
  return *internal_default_instance();
}


void GameStatsGuildUser::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameStatsGuildUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&ticketid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&signin_state2_) -
        reinterpret_cast<char*>(&ticketid_)) + sizeof(signin_state2_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&signin_state3_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&signin_optime3_) -
        reinterpret_cast<char*>(&signin_state3_)) + sizeof(signin_optime3_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameStatsGuildUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameStatsGuildUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ticketid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 donation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_donation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &donation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 donation_refreshtime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_donation_refreshtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &donation_refreshtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 signin_state1 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_signin_state1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &signin_state1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 signin_optime1 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_signin_optime1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &signin_optime1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 signin_state2 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_signin_state2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &signin_state2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 signin_optime2 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_signin_optime2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &signin_optime2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 signin_state3 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_signin_state3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &signin_state3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 signin_optime3 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {
          set_has_signin_optime3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &signin_optime3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameStatsGuildUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameStatsGuildUser)
  return false;
#undef DO_
}

void GameStatsGuildUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameStatsGuildUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ticketid(), output);
  }

  // required int32 guildid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guildid(), output);
  }

  // required int32 donation = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->donation(), output);
  }

  // required sfixed64 donation_refreshtime = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->donation_refreshtime(), output);
  }

  // required int32 signin_state1 = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->signin_state1(), output);
  }

  // required sfixed64 signin_optime1 = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(12, this->signin_optime1(), output);
  }

  // required int32 signin_state2 = 13;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->signin_state2(), output);
  }

  // required sfixed64 signin_optime2 = 14;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(14, this->signin_optime2(), output);
  }

  // required int32 signin_state3 = 15;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->signin_state3(), output);
  }

  // required sfixed64 signin_optime3 = 16;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(16, this->signin_optime3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameStatsGuildUser)
}

::google::protobuf::uint8* GameStatsGuildUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameStatsGuildUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ticketid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ticketid(), target);
  }

  // required int32 guildid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guildid(), target);
  }

  // required int32 donation = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->donation(), target);
  }

  // required sfixed64 donation_refreshtime = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->donation_refreshtime(), target);
  }

  // required int32 signin_state1 = 11;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->signin_state1(), target);
  }

  // required sfixed64 signin_optime1 = 12;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(12, this->signin_optime1(), target);
  }

  // required int32 signin_state2 = 13;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->signin_state2(), target);
  }

  // required sfixed64 signin_optime2 = 14;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(14, this->signin_optime2(), target);
  }

  // required int32 signin_state3 = 15;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->signin_state3(), target);
  }

  // required sfixed64 signin_optime3 = 16;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(16, this->signin_optime3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameStatsGuildUser)
  return target;
}

size_t GameStatsGuildUser::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameStatsGuildUser)
  size_t total_size = 0;

  if (has_ticketid()) {
    // required int32 ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());
  }

  if (has_guildid()) {
    // required int32 guildid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());
  }

  if (has_donation_refreshtime()) {
    // required sfixed64 donation_refreshtime = 4;
    total_size += 1 + 8;
  }

  if (has_donation()) {
    // required int32 donation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->donation());
  }

  if (has_signin_state1()) {
    // required int32 signin_state1 = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->signin_state1());
  }

  if (has_signin_optime1()) {
    // required sfixed64 signin_optime1 = 12;
    total_size += 1 + 8;
  }

  if (has_signin_optime2()) {
    // required sfixed64 signin_optime2 = 14;
    total_size += 1 + 8;
  }

  if (has_signin_state2()) {
    // required int32 signin_state2 = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->signin_state2());
  }

  if (has_signin_state3()) {
    // required int32 signin_state3 = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->signin_state3());
  }

  if (has_signin_optime3()) {
    // required sfixed64 signin_optime3 = 16;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t GameStatsGuildUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameStatsGuildUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required int32 ticketid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());

    // required int32 guildid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());

    // required sfixed64 donation_refreshtime = 4;
    total_size += 1 + 8;

    // required int32 donation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->donation());

    // required int32 signin_state1 = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->signin_state1());

    // required sfixed64 signin_optime1 = 12;
    total_size += 1 + 8;

    // required sfixed64 signin_optime2 = 14;
    total_size += 1 + 8;

    // required int32 signin_state2 = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->signin_state2());

    // required int32 signin_state3 = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->signin_state3());

    // required sfixed64 signin_optime3 = 16;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameStatsGuildUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameStatsGuildUser)
  GOOGLE_DCHECK_NE(&from, this);
  const GameStatsGuildUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStatsGuildUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameStatsGuildUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameStatsGuildUser)
    MergeFrom(*source);
  }
}

void GameStatsGuildUser::MergeFrom(const GameStatsGuildUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameStatsGuildUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      ticketid_ = from.ticketid_;
    }
    if (cached_has_bits & 0x00000002u) {
      guildid_ = from.guildid_;
    }
    if (cached_has_bits & 0x00000004u) {
      donation_refreshtime_ = from.donation_refreshtime_;
    }
    if (cached_has_bits & 0x00000008u) {
      donation_ = from.donation_;
    }
    if (cached_has_bits & 0x00000010u) {
      signin_state1_ = from.signin_state1_;
    }
    if (cached_has_bits & 0x00000020u) {
      signin_optime1_ = from.signin_optime1_;
    }
    if (cached_has_bits & 0x00000040u) {
      signin_optime2_ = from.signin_optime2_;
    }
    if (cached_has_bits & 0x00000080u) {
      signin_state2_ = from.signin_state2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      signin_state3_ = from.signin_state3_;
    }
    if (cached_has_bits & 0x00000200u) {
      signin_optime3_ = from.signin_optime3_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameStatsGuildUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameStatsGuildUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStatsGuildUser::CopyFrom(const GameStatsGuildUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameStatsGuildUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameStatsGuildUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;
  return true;
}

void GameStatsGuildUser::Swap(GameStatsGuildUser* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameStatsGuildUser* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameStatsGuildUser::UnsafeArenaSwap(GameStatsGuildUser* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameStatsGuildUser::InternalSwap(GameStatsGuildUser* other) {
  using std::swap;
  swap(ticketid_, other->ticketid_);
  swap(guildid_, other->guildid_);
  swap(donation_refreshtime_, other->donation_refreshtime_);
  swap(donation_, other->donation_);
  swap(signin_state1_, other->signin_state1_);
  swap(signin_optime1_, other->signin_optime1_);
  swap(signin_optime2_, other->signin_optime2_);
  swap(signin_state2_, other->signin_state2_);
  swap(signin_state3_, other->signin_state3_);
  swap(signin_optime3_, other->signin_optime3_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameStatsGuildUser::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserStatsGuildCommon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserStatsGuildCommon::kUseridFieldNumber;
const int UserStatsGuildCommon::kLastQuitGuildTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserStatsGuildCommon::UserStatsGuildCommon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_UserStatsGuildCommon.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.UserStatsGuildCommon)
}
UserStatsGuildCommon::UserStatsGuildCommon(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_UserStatsGuildCommon.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.UserStatsGuildCommon)
}
UserStatsGuildCommon::UserStatsGuildCommon(const UserStatsGuildCommon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  last_quit_guild_time_ = from.last_quit_guild_time_;
  // @@protoc_insertion_point(copy_constructor:db.UserStatsGuildCommon)
}

void UserStatsGuildCommon::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_quit_guild_time_ = GOOGLE_LONGLONG(0);
}

UserStatsGuildCommon::~UserStatsGuildCommon() {
  // @@protoc_insertion_point(destructor:db.UserStatsGuildCommon)
  SharedDtor();
}

void UserStatsGuildCommon::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserStatsGuildCommon::ArenaDtor(void* object) {
  UserStatsGuildCommon* _this = reinterpret_cast< UserStatsGuildCommon* >(object);
  (void)_this;
}
void UserStatsGuildCommon::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UserStatsGuildCommon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserStatsGuildCommon::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserStatsGuildCommon& UserStatsGuildCommon::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_UserStatsGuildCommon.base);
  return *internal_default_instance();
}


void UserStatsGuildCommon::Clear() {
// @@protoc_insertion_point(message_clear_start:db.UserStatsGuildCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    userid_.ClearNonDefaultToEmpty();
  }
  last_quit_guild_time_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserStatsGuildCommon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.UserStatsGuildCommon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 last_quit_guild_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_last_quit_guild_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &last_quit_guild_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.UserStatsGuildCommon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.UserStatsGuildCommon)
  return false;
#undef DO_
}

void UserStatsGuildCommon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.UserStatsGuildCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required sfixed64 last_quit_guild_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->last_quit_guild_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.UserStatsGuildCommon)
}

::google::protobuf::uint8* UserStatsGuildCommon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.UserStatsGuildCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required sfixed64 last_quit_guild_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->last_quit_guild_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.UserStatsGuildCommon)
  return target;
}

size_t UserStatsGuildCommon::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.UserStatsGuildCommon)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_last_quit_guild_time()) {
    // required sfixed64 last_quit_guild_time = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t UserStatsGuildCommon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.UserStatsGuildCommon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required sfixed64 last_quit_guild_time = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserStatsGuildCommon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.UserStatsGuildCommon)
  GOOGLE_DCHECK_NE(&from, this);
  const UserStatsGuildCommon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserStatsGuildCommon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.UserStatsGuildCommon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.UserStatsGuildCommon)
    MergeFrom(*source);
  }
}

void UserStatsGuildCommon::MergeFrom(const UserStatsGuildCommon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.UserStatsGuildCommon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      last_quit_guild_time_ = from.last_quit_guild_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserStatsGuildCommon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.UserStatsGuildCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserStatsGuildCommon::CopyFrom(const UserStatsGuildCommon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.UserStatsGuildCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserStatsGuildCommon::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UserStatsGuildCommon::Swap(UserStatsGuildCommon* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UserStatsGuildCommon* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void UserStatsGuildCommon::UnsafeArenaSwap(UserStatsGuildCommon* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UserStatsGuildCommon::InternalSwap(UserStatsGuildCommon* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_quit_guild_time_, other->last_quit_guild_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserStatsGuildCommon::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameGuildTrack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameGuildTrack::kOwnerUuidFieldNumber;
const int GameGuildTrack::kOwnerNickFieldNumber;
const int GameGuildTrack::kOwnerTitleFieldNumber;
const int GameGuildTrack::kActionTypeFieldNumber;
const int GameGuildTrack::kActionFieldNumber;
const int GameGuildTrack::kGuildidFieldNumber;
const int GameGuildTrack::kNameFieldNumber;
const int GameGuildTrack::kAnnouncementFieldNumber;
const int GameGuildTrack::kTargetUuidFieldNumber;
const int GameGuildTrack::kTargetNickFieldNumber;
const int GameGuildTrack::kTargetTitleFieldNumber;
const int GameGuildTrack::kDonationFieldNumber;
const int GameGuildTrack::kBuildingTypeFieldNumber;
const int GameGuildTrack::kBuildingLevelFieldNumber;
const int GameGuildTrack::kOptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameGuildTrack::GameGuildTrack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_GameGuildTrack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GameGuildTrack)
}
GameGuildTrack::GameGuildTrack(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuildTrack.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GameGuildTrack)
}
GameGuildTrack::GameGuildTrack(const GameGuildTrack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_owner_nick()) {
    owner_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_nick(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement()) {
    announcement_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement(),
      GetArenaNoVirtual());
  }
  target_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target_nick()) {
    target_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_nick(),
      GetArenaNoVirtual());
  }
  ::memcpy(&owner_uuid_, &from.owner_uuid_,
    static_cast<size_t>(reinterpret_cast<char*>(&optime_) -
    reinterpret_cast<char*>(&owner_uuid_)) + sizeof(optime_));
  // @@protoc_insertion_point(copy_constructor:db.GameGuildTrack)
}

void GameGuildTrack::SharedCtor() {
  owner_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&owner_uuid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optime_) -
      reinterpret_cast<char*>(&owner_uuid_)) + sizeof(optime_));
}

GameGuildTrack::~GameGuildTrack() {
  // @@protoc_insertion_point(destructor:db.GameGuildTrack)
  SharedDtor();
}

void GameGuildTrack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  owner_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameGuildTrack::ArenaDtor(void* object) {
  GameGuildTrack* _this = reinterpret_cast< GameGuildTrack* >(object);
  (void)_this;
}
void GameGuildTrack::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GameGuildTrack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameGuildTrack::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameGuildTrack& GameGuildTrack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_GameGuildTrack.base);
  return *internal_default_instance();
}


void GameGuildTrack::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GameGuildTrack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      owner_nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      announcement_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      target_nick_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&owner_uuid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&owner_uuid_)) + sizeof(action_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&guildid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optime_) -
        reinterpret_cast<char*>(&guildid_)) + sizeof(optime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameGuildTrack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GameGuildTrack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 owner_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_owner_uuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &owner_uuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes owner_nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 owner_title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_owner_title();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_title_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 action_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_action_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 guildid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes announcement = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_announcement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 target_uuid = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_target_uuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_uuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes target_nick = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_target_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 target_title = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_target_title();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_title_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 donation = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_donation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &donation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 building_type = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_building_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 building_level = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_building_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &building_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 optime = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {
          set_has_optime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &optime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GameGuildTrack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GameGuildTrack)
  return false;
#undef DO_
}

void GameGuildTrack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GameGuildTrack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 owner_uuid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->owner_uuid(), output);
  }

  // required bytes owner_nick = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->owner_nick(), output);
  }

  // required int32 owner_title = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->owner_title(), output);
  }

  // required int32 action_type = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->action_type(), output);
  }

  // required int32 action = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->action(), output);
  }

  // required int32 guildid = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->guildid(), output);
  }

  // required bytes name = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->name(), output);
  }

  // required bytes announcement = 13;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->announcement(), output);
  }

  // required uint64 target_uuid = 14;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->target_uuid(), output);
  }

  // required bytes target_nick = 15;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->target_nick(), output);
  }

  // required int32 target_title = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->target_title(), output);
  }

  // required int32 donation = 17;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->donation(), output);
  }

  // required int32 building_type = 18;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->building_type(), output);
  }

  // required int32 building_level = 19;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->building_level(), output);
  }

  // required sfixed64 optime = 21;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(21, this->optime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GameGuildTrack)
}

::google::protobuf::uint8* GameGuildTrack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GameGuildTrack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 owner_uuid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->owner_uuid(), target);
  }

  // required bytes owner_nick = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->owner_nick(), target);
  }

  // required int32 owner_title = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->owner_title(), target);
  }

  // required int32 action_type = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->action_type(), target);
  }

  // required int32 action = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->action(), target);
  }

  // required int32 guildid = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->guildid(), target);
  }

  // required bytes name = 12;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->name(), target);
  }

  // required bytes announcement = 13;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->announcement(), target);
  }

  // required uint64 target_uuid = 14;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->target_uuid(), target);
  }

  // required bytes target_nick = 15;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->target_nick(), target);
  }

  // required int32 target_title = 16;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->target_title(), target);
  }

  // required int32 donation = 17;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->donation(), target);
  }

  // required int32 building_type = 18;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->building_type(), target);
  }

  // required int32 building_level = 19;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->building_level(), target);
  }

  // required sfixed64 optime = 21;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(21, this->optime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GameGuildTrack)
  return target;
}

size_t GameGuildTrack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GameGuildTrack)
  size_t total_size = 0;

  if (has_owner_nick()) {
    // required bytes owner_nick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_nick());
  }

  if (has_name()) {
    // required bytes name = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_announcement()) {
    // required bytes announcement = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->announcement());
  }

  if (has_target_nick()) {
    // required bytes target_nick = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->target_nick());
  }

  if (has_owner_uuid()) {
    // required uint64 owner_uuid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->owner_uuid());
  }

  if (has_owner_title()) {
    // required int32 owner_title = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_title());
  }

  if (has_action_type()) {
    // required int32 action_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_type());
  }

  if (has_action()) {
    // required int32 action = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());
  }

  if (has_guildid()) {
    // required int32 guildid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());
  }

  if (has_target_uuid()) {
    // required uint64 target_uuid = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_uuid());
  }

  if (has_target_title()) {
    // required int32 target_title = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_title());
  }

  if (has_donation()) {
    // required int32 donation = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->donation());
  }

  if (has_building_type()) {
    // required int32 building_type = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_type());
  }

  if (has_building_level()) {
    // required int32 building_level = 19;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_level());
  }

  if (has_optime()) {
    // required sfixed64 optime = 21;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t GameGuildTrack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GameGuildTrack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00007fff) ^ 0x00007fff) == 0) {  // All required fields are present.
    // required bytes owner_nick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_nick());

    // required bytes name = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes announcement = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->announcement());

    // required bytes target_nick = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->target_nick());

    // required uint64 owner_uuid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->owner_uuid());

    // required int32 owner_title = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_title());

    // required int32 action_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_type());

    // required int32 action = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());

    // required int32 guildid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guildid());

    // required uint64 target_uuid = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_uuid());

    // required int32 target_title = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_title());

    // required int32 donation = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->donation());

    // required int32 building_type = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_type());

    // required int32 building_level = 19;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->building_level());

    // required sfixed64 optime = 21;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameGuildTrack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GameGuildTrack)
  GOOGLE_DCHECK_NE(&from, this);
  const GameGuildTrack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameGuildTrack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GameGuildTrack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GameGuildTrack)
    MergeFrom(*source);
  }
}

void GameGuildTrack::MergeFrom(const GameGuildTrack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GameGuildTrack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_owner_nick(from.owner_nick());
    }
    if (cached_has_bits & 0x00000002u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000004u) {
      set_announcement(from.announcement());
    }
    if (cached_has_bits & 0x00000008u) {
      set_target_nick(from.target_nick());
    }
    if (cached_has_bits & 0x00000010u) {
      owner_uuid_ = from.owner_uuid_;
    }
    if (cached_has_bits & 0x00000020u) {
      owner_title_ = from.owner_title_;
    }
    if (cached_has_bits & 0x00000040u) {
      action_type_ = from.action_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      guildid_ = from.guildid_;
    }
    if (cached_has_bits & 0x00000200u) {
      target_uuid_ = from.target_uuid_;
    }
    if (cached_has_bits & 0x00000400u) {
      target_title_ = from.target_title_;
    }
    if (cached_has_bits & 0x00000800u) {
      donation_ = from.donation_;
    }
    if (cached_has_bits & 0x00001000u) {
      building_type_ = from.building_type_;
    }
    if (cached_has_bits & 0x00002000u) {
      building_level_ = from.building_level_;
    }
    if (cached_has_bits & 0x00004000u) {
      optime_ = from.optime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameGuildTrack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GameGuildTrack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameGuildTrack::CopyFrom(const GameGuildTrack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GameGuildTrack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameGuildTrack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00007fff) != 0x00007fff) return false;
  return true;
}

void GameGuildTrack::Swap(GameGuildTrack* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GameGuildTrack* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GameGuildTrack::UnsafeArenaSwap(GameGuildTrack* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GameGuildTrack::InternalSwap(GameGuildTrack* other) {
  using std::swap;
  owner_nick_.Swap(&other->owner_nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  announcement_.Swap(&other->announcement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_nick_.Swap(&other->target_nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(owner_uuid_, other->owner_uuid_);
  swap(owner_title_, other->owner_title_);
  swap(action_type_, other->action_type_);
  swap(action_, other->action_);
  swap(guildid_, other->guildid_);
  swap(target_uuid_, other->target_uuid_);
  swap(target_title_, other->target_title_);
  swap(donation_, other->donation_);
  swap(building_type_, other->building_type_);
  swap(building_level_, other->building_level_);
  swap(optime_, other->optime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameGuildTrack::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_game_guild_tracks_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_game_guild_tracks_Parameter::proc_i_load_game_guild_tracks_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_game_guild_tracks.Parameter)
}
proc_i_load_game_guild_tracks_Parameter::proc_i_load_game_guild_tracks_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_game_guild_tracks.Parameter)
}
proc_i_load_game_guild_tracks_Parameter::proc_i_load_game_guild_tracks_Parameter(const proc_i_load_game_guild_tracks_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_game_guild_tracks.Parameter)
}

void proc_i_load_game_guild_tracks_Parameter::SharedCtor() {
}

proc_i_load_game_guild_tracks_Parameter::~proc_i_load_game_guild_tracks_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_game_guild_tracks.Parameter)
  SharedDtor();
}

void proc_i_load_game_guild_tracks_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_i_load_game_guild_tracks_Parameter::ArenaDtor(void* object) {
  proc_i_load_game_guild_tracks_Parameter* _this = reinterpret_cast< proc_i_load_game_guild_tracks_Parameter* >(object);
  (void)_this;
}
void proc_i_load_game_guild_tracks_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_game_guild_tracks_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_game_guild_tracks_Parameter::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_game_guild_tracks_Parameter& proc_i_load_game_guild_tracks_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks_Parameter.base);
  return *internal_default_instance();
}


void proc_i_load_game_guild_tracks_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_game_guild_tracks.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_game_guild_tracks_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_game_guild_tracks.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_game_guild_tracks.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_game_guild_tracks.Parameter)
  return false;
#undef DO_
}

void proc_i_load_game_guild_tracks_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_game_guild_tracks.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_game_guild_tracks.Parameter)
}

::google::protobuf::uint8* proc_i_load_game_guild_tracks_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_game_guild_tracks.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_game_guild_tracks.Parameter)
  return target;
}

size_t proc_i_load_game_guild_tracks_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_game_guild_tracks.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_game_guild_tracks_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_game_guild_tracks.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_game_guild_tracks_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_game_guild_tracks_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_game_guild_tracks.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_game_guild_tracks.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_load_game_guild_tracks_Parameter::MergeFrom(const proc_i_load_game_guild_tracks_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_game_guild_tracks.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_i_load_game_guild_tracks_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_game_guild_tracks.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_game_guild_tracks_Parameter::CopyFrom(const proc_i_load_game_guild_tracks_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_game_guild_tracks.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_game_guild_tracks_Parameter::IsInitialized() const {
  return true;
}

void proc_i_load_game_guild_tracks_Parameter::Swap(proc_i_load_game_guild_tracks_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_game_guild_tracks_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_game_guild_tracks_Parameter::UnsafeArenaSwap(proc_i_load_game_guild_tracks_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_game_guild_tracks_Parameter::InternalSwap(proc_i_load_game_guild_tracks_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_game_guild_tracks_Parameter::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_game_guild_tracks_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_i_load_game_guild_tracks_ReturnRecord_default_instance_._instance.get_mutable()->item_ = const_cast< ::db::GameGuildTrack*>(
      ::db::GameGuildTrack::internal_default_instance());
}
void proc_i_load_game_guild_tracks_ReturnRecord::unsafe_arena_set_allocated_item(
    ::db::GameGuildTrack* item) {
  if (GetArenaNoVirtual() == NULL) {
    delete item_;
  }
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_game_guild_tracks.ReturnRecord.item)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_game_guild_tracks_ReturnRecord::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_game_guild_tracks_ReturnRecord::proc_i_load_game_guild_tracks_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_game_guild_tracks.ReturnRecord)
}
proc_i_load_game_guild_tracks_ReturnRecord::proc_i_load_game_guild_tracks_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_game_guild_tracks.ReturnRecord)
}
proc_i_load_game_guild_tracks_ReturnRecord::proc_i_load_game_guild_tracks_ReturnRecord(const proc_i_load_game_guild_tracks_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::db::GameGuildTrack(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_game_guild_tracks.ReturnRecord)
}

void proc_i_load_game_guild_tracks_ReturnRecord::SharedCtor() {
  item_ = NULL;
}

proc_i_load_game_guild_tracks_ReturnRecord::~proc_i_load_game_guild_tracks_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_game_guild_tracks.ReturnRecord)
  SharedDtor();
}

void proc_i_load_game_guild_tracks_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete item_;
}

void proc_i_load_game_guild_tracks_ReturnRecord::ArenaDtor(void* object) {
  proc_i_load_game_guild_tracks_ReturnRecord* _this = reinterpret_cast< proc_i_load_game_guild_tracks_ReturnRecord* >(object);
  (void)_this;
}
void proc_i_load_game_guild_tracks_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_game_guild_tracks_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_game_guild_tracks_ReturnRecord::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_game_guild_tracks_ReturnRecord& proc_i_load_game_guild_tracks_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_i_load_game_guild_tracks_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(item_ != NULL);
    item_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_game_guild_tracks_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.GameGuildTrack item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_game_guild_tracks.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_game_guild_tracks.ReturnRecord)
  return false;
#undef DO_
}

void proc_i_load_game_guild_tracks_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GameGuildTrack item = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_item(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_game_guild_tracks.ReturnRecord)
}

::google::protobuf::uint8* proc_i_load_game_guild_tracks_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GameGuildTrack item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_item(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_game_guild_tracks.ReturnRecord)
  return target;
}

size_t proc_i_load_game_guild_tracks_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.GameGuildTrack item = 1;
  if (has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_game_guild_tracks_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_game_guild_tracks_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_game_guild_tracks_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_game_guild_tracks.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_game_guild_tracks.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_i_load_game_guild_tracks_ReturnRecord::MergeFrom(const proc_i_load_game_guild_tracks_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::db::GameGuildTrack::MergeFrom(from.item());
  }
}

void proc_i_load_game_guild_tracks_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_game_guild_tracks_ReturnRecord::CopyFrom(const proc_i_load_game_guild_tracks_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_game_guild_tracks.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_game_guild_tracks_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_item()) {
    if (!this->item_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_load_game_guild_tracks_ReturnRecord::Swap(proc_i_load_game_guild_tracks_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_game_guild_tracks_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_game_guild_tracks_ReturnRecord::UnsafeArenaSwap(proc_i_load_game_guild_tracks_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_game_guild_tracks_ReturnRecord::InternalSwap(proc_i_load_game_guild_tracks_ReturnRecord* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_game_guild_tracks_ReturnRecord::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_load_game_guild_tracks::InitAsDefaultInstance() {
  ::db::_proc_i_load_game_guild_tracks_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_load_game_guild_tracks_Parameter*>(
      ::db::proc_i_load_game_guild_tracks_Parameter::internal_default_instance());
}
void proc_i_load_game_guild_tracks::unsafe_arena_set_allocated_param(
    ::db::proc_i_load_game_guild_tracks_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_load_game_guild_tracks.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_load_game_guild_tracks::kParamFieldNumber;
const int proc_i_load_game_guild_tracks::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_load_game_guild_tracks::proc_i_load_game_guild_tracks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_load_game_guild_tracks)
}
proc_i_load_game_guild_tracks::proc_i_load_game_guild_tracks(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_load_game_guild_tracks)
}
proc_i_load_game_guild_tracks::proc_i_load_game_guild_tracks(const proc_i_load_game_guild_tracks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_load_game_guild_tracks_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_load_game_guild_tracks)
}

void proc_i_load_game_guild_tracks::SharedCtor() {
  param_ = NULL;
}

proc_i_load_game_guild_tracks::~proc_i_load_game_guild_tracks() {
  // @@protoc_insertion_point(destructor:db.proc_i_load_game_guild_tracks)
  SharedDtor();
}

void proc_i_load_game_guild_tracks::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_load_game_guild_tracks::ArenaDtor(void* object) {
  proc_i_load_game_guild_tracks* _this = reinterpret_cast< proc_i_load_game_guild_tracks* >(object);
  (void)_this;
}
void proc_i_load_game_guild_tracks::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_load_game_guild_tracks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_load_game_guild_tracks::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_load_game_guild_tracks& proc_i_load_game_guild_tracks::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_load_game_guild_tracks.base);
  return *internal_default_instance();
}


void proc_i_load_game_guild_tracks::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_load_game_guild_tracks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_load_game_guild_tracks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_load_game_guild_tracks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_load_game_guild_tracks.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_i_load_game_guild_tracks.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_load_game_guild_tracks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_load_game_guild_tracks)
  return false;
#undef DO_
}

void proc_i_load_game_guild_tracks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_load_game_guild_tracks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_game_guild_tracks.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_i_load_game_guild_tracks.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_load_game_guild_tracks)
}

::google::protobuf::uint8* proc_i_load_game_guild_tracks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_load_game_guild_tracks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_load_game_guild_tracks.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_i_load_game_guild_tracks.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_load_game_guild_tracks)
  return target;
}

size_t proc_i_load_game_guild_tracks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_load_game_guild_tracks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_i_load_game_guild_tracks.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_i_load_game_guild_tracks.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_load_game_guild_tracks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_load_game_guild_tracks)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_load_game_guild_tracks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_load_game_guild_tracks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_load_game_guild_tracks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_load_game_guild_tracks)
    MergeFrom(*source);
  }
}

void proc_i_load_game_guild_tracks::MergeFrom(const proc_i_load_game_guild_tracks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_load_game_guild_tracks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_i_load_game_guild_tracks_Parameter::MergeFrom(from.param());
  }
}

void proc_i_load_game_guild_tracks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_load_game_guild_tracks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_load_game_guild_tracks::CopyFrom(const proc_i_load_game_guild_tracks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_load_game_guild_tracks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_load_game_guild_tracks::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_i_load_game_guild_tracks::Swap(proc_i_load_game_guild_tracks* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_load_game_guild_tracks* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_load_game_guild_tracks::UnsafeArenaSwap(proc_i_load_game_guild_tracks* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_load_game_guild_tracks::InternalSwap(proc_i_load_game_guild_tracks* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_load_game_guild_tracks::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_game_guild_track_Parameter::InitAsDefaultInstance() {
  ::db::_proc_i_save_game_guild_track_Parameter_default_instance_._instance.get_mutable()->p_track_ = const_cast< ::db::GameGuildTrack*>(
      ::db::GameGuildTrack::internal_default_instance());
}
void proc_i_save_game_guild_track_Parameter::unsafe_arena_set_allocated_p_track(
    ::db::GameGuildTrack* p_track) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_track_;
  }
  p_track_ = p_track;
  if (p_track) {
    set_has_p_track();
  } else {
    clear_has_p_track();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_game_guild_track.Parameter.p_track)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_game_guild_track_Parameter::kPTrackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_game_guild_track_Parameter::proc_i_save_game_guild_track_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_proc_i_save_game_guild_track_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_game_guild_track.Parameter)
}
proc_i_save_game_guild_track_Parameter::proc_i_save_game_guild_track_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_save_game_guild_track_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_game_guild_track.Parameter)
}
proc_i_save_game_guild_track_Parameter::proc_i_save_game_guild_track_Parameter(const proc_i_save_game_guild_track_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_track()) {
    p_track_ = new ::db::GameGuildTrack(*from.p_track_);
  } else {
    p_track_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_game_guild_track.Parameter)
}

void proc_i_save_game_guild_track_Parameter::SharedCtor() {
  p_track_ = NULL;
}

proc_i_save_game_guild_track_Parameter::~proc_i_save_game_guild_track_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_game_guild_track.Parameter)
  SharedDtor();
}

void proc_i_save_game_guild_track_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_track_;
}

void proc_i_save_game_guild_track_Parameter::ArenaDtor(void* object) {
  proc_i_save_game_guild_track_Parameter* _this = reinterpret_cast< proc_i_save_game_guild_track_Parameter* >(object);
  (void)_this;
}
void proc_i_save_game_guild_track_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_game_guild_track_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_game_guild_track_Parameter::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_game_guild_track_Parameter& proc_i_save_game_guild_track_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_save_game_guild_track_Parameter.base);
  return *internal_default_instance();
}


void proc_i_save_game_guild_track_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_game_guild_track.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_track_ != NULL);
    p_track_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_game_guild_track_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_game_guild_track.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.GameGuildTrack p_track = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_track()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_game_guild_track.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_game_guild_track.Parameter)
  return false;
#undef DO_
}

void proc_i_save_game_guild_track_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_game_guild_track.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GameGuildTrack p_track = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_track(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_game_guild_track.Parameter)
}

::google::protobuf::uint8* proc_i_save_game_guild_track_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_game_guild_track.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GameGuildTrack p_track = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_track(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_game_guild_track.Parameter)
  return target;
}

size_t proc_i_save_game_guild_track_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_game_guild_track.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.GameGuildTrack p_track = 1;
  if (has_p_track()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_track_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_game_guild_track_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_game_guild_track.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_game_guild_track_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_game_guild_track_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_game_guild_track.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_game_guild_track.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_save_game_guild_track_Parameter::MergeFrom(const proc_i_save_game_guild_track_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_game_guild_track.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_track()) {
    mutable_p_track()->::db::GameGuildTrack::MergeFrom(from.p_track());
  }
}

void proc_i_save_game_guild_track_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_game_guild_track.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_game_guild_track_Parameter::CopyFrom(const proc_i_save_game_guild_track_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_game_guild_track.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_game_guild_track_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_track()) {
    if (!this->p_track_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_game_guild_track_Parameter::Swap(proc_i_save_game_guild_track_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_game_guild_track_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_game_guild_track_Parameter::UnsafeArenaSwap(proc_i_save_game_guild_track_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_game_guild_track_Parameter::InternalSwap(proc_i_save_game_guild_track_Parameter* other) {
  using std::swap;
  swap(p_track_, other->p_track_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_game_guild_track_Parameter::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_save_game_guild_track::InitAsDefaultInstance() {
  ::db::_proc_i_save_game_guild_track_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_save_game_guild_track_Parameter*>(
      ::db::proc_i_save_game_guild_track_Parameter::internal_default_instance());
}
void proc_i_save_game_guild_track::unsafe_arena_set_allocated_param(
    ::db::proc_i_save_game_guild_track_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_save_game_guild_track.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_save_game_guild_track::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_save_game_guild_track::proc_i_save_game_guild_track()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_proc_i_save_game_guild_track.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_save_game_guild_track)
}
proc_i_save_game_guild_track::proc_i_save_game_guild_track(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_save_game_guild_track.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_save_game_guild_track)
}
proc_i_save_game_guild_track::proc_i_save_game_guild_track(const proc_i_save_game_guild_track& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_save_game_guild_track_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_save_game_guild_track)
}

void proc_i_save_game_guild_track::SharedCtor() {
  param_ = NULL;
}

proc_i_save_game_guild_track::~proc_i_save_game_guild_track() {
  // @@protoc_insertion_point(destructor:db.proc_i_save_game_guild_track)
  SharedDtor();
}

void proc_i_save_game_guild_track::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_save_game_guild_track::ArenaDtor(void* object) {
  proc_i_save_game_guild_track* _this = reinterpret_cast< proc_i_save_game_guild_track* >(object);
  (void)_this;
}
void proc_i_save_game_guild_track::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_save_game_guild_track::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_save_game_guild_track::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_save_game_guild_track& proc_i_save_game_guild_track::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_save_game_guild_track.base);
  return *internal_default_instance();
}


void proc_i_save_game_guild_track::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_save_game_guild_track)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_save_game_guild_track::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_save_game_guild_track)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_save_game_guild_track.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_save_game_guild_track)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_save_game_guild_track)
  return false;
#undef DO_
}

void proc_i_save_game_guild_track::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_save_game_guild_track)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_game_guild_track.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_save_game_guild_track)
}

::google::protobuf::uint8* proc_i_save_game_guild_track::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_save_game_guild_track)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_save_game_guild_track.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_save_game_guild_track)
  return target;
}

size_t proc_i_save_game_guild_track::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_save_game_guild_track)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_i_save_game_guild_track.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_save_game_guild_track::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_save_game_guild_track)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_save_game_guild_track* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_save_game_guild_track>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_save_game_guild_track)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_save_game_guild_track)
    MergeFrom(*source);
  }
}

void proc_i_save_game_guild_track::MergeFrom(const proc_i_save_game_guild_track& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_save_game_guild_track)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_i_save_game_guild_track_Parameter::MergeFrom(from.param());
  }
}

void proc_i_save_game_guild_track::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_save_game_guild_track)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_save_game_guild_track::CopyFrom(const proc_i_save_game_guild_track& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_save_game_guild_track)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_save_game_guild_track::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_save_game_guild_track::Swap(proc_i_save_game_guild_track* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_save_game_guild_track* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_save_game_guild_track::UnsafeArenaSwap(proc_i_save_game_guild_track* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_save_game_guild_track::InternalSwap(proc_i_save_game_guild_track* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_save_game_guild_track::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_delete_game_guild_track_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_delete_game_guild_track_Parameter::kPGuildidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_delete_game_guild_track_Parameter::proc_i_delete_game_guild_track_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_proc_i_delete_game_guild_track_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_delete_game_guild_track.Parameter)
}
proc_i_delete_game_guild_track_Parameter::proc_i_delete_game_guild_track_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_delete_game_guild_track_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_delete_game_guild_track.Parameter)
}
proc_i_delete_game_guild_track_Parameter::proc_i_delete_game_guild_track_Parameter(const proc_i_delete_game_guild_track_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p_guildid_ = from.p_guildid_;
  // @@protoc_insertion_point(copy_constructor:db.proc_i_delete_game_guild_track.Parameter)
}

void proc_i_delete_game_guild_track_Parameter::SharedCtor() {
  p_guildid_ = 0;
}

proc_i_delete_game_guild_track_Parameter::~proc_i_delete_game_guild_track_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_i_delete_game_guild_track.Parameter)
  SharedDtor();
}

void proc_i_delete_game_guild_track_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_i_delete_game_guild_track_Parameter::ArenaDtor(void* object) {
  proc_i_delete_game_guild_track_Parameter* _this = reinterpret_cast< proc_i_delete_game_guild_track_Parameter* >(object);
  (void)_this;
}
void proc_i_delete_game_guild_track_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_delete_game_guild_track_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_delete_game_guild_track_Parameter::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_delete_game_guild_track_Parameter& proc_i_delete_game_guild_track_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_delete_game_guild_track_Parameter.base);
  return *internal_default_instance();
}


void proc_i_delete_game_guild_track_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_delete_game_guild_track.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  p_guildid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_delete_game_guild_track_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_delete_game_guild_track.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 p_guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_p_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_delete_game_guild_track.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_delete_game_guild_track.Parameter)
  return false;
#undef DO_
}

void proc_i_delete_game_guild_track_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_delete_game_guild_track.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 p_guildid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->p_guildid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_delete_game_guild_track.Parameter)
}

::google::protobuf::uint8* proc_i_delete_game_guild_track_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_delete_game_guild_track.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 p_guildid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->p_guildid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_delete_game_guild_track.Parameter)
  return target;
}

size_t proc_i_delete_game_guild_track_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_delete_game_guild_track.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 p_guildid = 1;
  if (has_p_guildid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_guildid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_delete_game_guild_track_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_delete_game_guild_track.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_delete_game_guild_track_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_delete_game_guild_track_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_delete_game_guild_track.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_delete_game_guild_track.Parameter)
    MergeFrom(*source);
  }
}

void proc_i_delete_game_guild_track_Parameter::MergeFrom(const proc_i_delete_game_guild_track_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_delete_game_guild_track.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_guildid()) {
    set_p_guildid(from.p_guildid());
  }
}

void proc_i_delete_game_guild_track_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_delete_game_guild_track.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_delete_game_guild_track_Parameter::CopyFrom(const proc_i_delete_game_guild_track_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_delete_game_guild_track.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_delete_game_guild_track_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void proc_i_delete_game_guild_track_Parameter::Swap(proc_i_delete_game_guild_track_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_delete_game_guild_track_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_delete_game_guild_track_Parameter::UnsafeArenaSwap(proc_i_delete_game_guild_track_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_delete_game_guild_track_Parameter::InternalSwap(proc_i_delete_game_guild_track_Parameter* other) {
  using std::swap;
  swap(p_guildid_, other->p_guildid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_delete_game_guild_track_Parameter::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_i_delete_game_guild_track::InitAsDefaultInstance() {
  ::db::_proc_i_delete_game_guild_track_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_i_delete_game_guild_track_Parameter*>(
      ::db::proc_i_delete_game_guild_track_Parameter::internal_default_instance());
}
void proc_i_delete_game_guild_track::unsafe_arena_set_allocated_param(
    ::db::proc_i_delete_game_guild_track_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_i_delete_game_guild_track.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_i_delete_game_guild_track::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_i_delete_game_guild_track::proc_i_delete_game_guild_track()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GameGuild_2eproto::scc_info_proc_i_delete_game_guild_track.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_i_delete_game_guild_track)
}
proc_i_delete_game_guild_track::proc_i_delete_game_guild_track(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_delete_game_guild_track.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_i_delete_game_guild_track)
}
proc_i_delete_game_guild_track::proc_i_delete_game_guild_track(const proc_i_delete_game_guild_track& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_i_delete_game_guild_track_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_i_delete_game_guild_track)
}

void proc_i_delete_game_guild_track::SharedCtor() {
  param_ = NULL;
}

proc_i_delete_game_guild_track::~proc_i_delete_game_guild_track() {
  // @@protoc_insertion_point(destructor:db.proc_i_delete_game_guild_track)
  SharedDtor();
}

void proc_i_delete_game_guild_track::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_i_delete_game_guild_track::ArenaDtor(void* object) {
  proc_i_delete_game_guild_track* _this = reinterpret_cast< proc_i_delete_game_guild_track* >(object);
  (void)_this;
}
void proc_i_delete_game_guild_track::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_i_delete_game_guild_track::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_i_delete_game_guild_track::descriptor() {
  ::protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_i_delete_game_guild_track& proc_i_delete_game_guild_track::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GameGuild_2eproto::scc_info_proc_i_delete_game_guild_track.base);
  return *internal_default_instance();
}


void proc_i_delete_game_guild_track::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_i_delete_game_guild_track)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_i_delete_game_guild_track::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_i_delete_game_guild_track)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_i_delete_game_guild_track.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_i_delete_game_guild_track)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_i_delete_game_guild_track)
  return false;
#undef DO_
}

void proc_i_delete_game_guild_track::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_i_delete_game_guild_track)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_delete_game_guild_track.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_i_delete_game_guild_track)
}

::google::protobuf::uint8* proc_i_delete_game_guild_track::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_i_delete_game_guild_track)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_i_delete_game_guild_track.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_i_delete_game_guild_track)
  return target;
}

size_t proc_i_delete_game_guild_track::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_i_delete_game_guild_track)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_i_delete_game_guild_track.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_i_delete_game_guild_track::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_i_delete_game_guild_track)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_i_delete_game_guild_track* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_i_delete_game_guild_track>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_i_delete_game_guild_track)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_i_delete_game_guild_track)
    MergeFrom(*source);
  }
}

void proc_i_delete_game_guild_track::MergeFrom(const proc_i_delete_game_guild_track& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_i_delete_game_guild_track)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_i_delete_game_guild_track_Parameter::MergeFrom(from.param());
  }
}

void proc_i_delete_game_guild_track::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_i_delete_game_guild_track)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_i_delete_game_guild_track::CopyFrom(const proc_i_delete_game_guild_track& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_i_delete_game_guild_track)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_i_delete_game_guild_track::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_i_delete_game_guild_track::Swap(proc_i_delete_game_guild_track* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_i_delete_game_guild_track* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_i_delete_game_guild_track::UnsafeArenaSwap(proc_i_delete_game_guild_track* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_i_delete_game_guild_track::InternalSwap(proc_i_delete_game_guild_track* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_i_delete_game_guild_track::GetMetadata() const {
  protobuf_GameGuild_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameGuild_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuild* Arena::CreateMaybeMessage< ::db::ConfigGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuild >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildList* Arena::CreateMaybeMessage< ::db::ConfigGuildList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildUserTitle* Arena::CreateMaybeMessage< ::db::ConfigGuildUserTitle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildUserTitle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildUserTitleList* Arena::CreateMaybeMessage< ::db::ConfigGuildUserTitleList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildUserTitleList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildSignin* Arena::CreateMaybeMessage< ::db::ConfigGuildSignin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildSignin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildSigninList* Arena::CreateMaybeMessage< ::db::ConfigGuildSigninList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildSigninList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildBadge* Arena::CreateMaybeMessage< ::db::ConfigGuildBadge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildBadge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildBadgeList* Arena::CreateMaybeMessage< ::db::ConfigGuildBadgeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildBadgeList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildDonation* Arena::CreateMaybeMessage< ::db::ConfigGuildDonation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildDonation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildDonationList* Arena::CreateMaybeMessage< ::db::ConfigGuildDonationList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildDonationList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildBuilding* Arena::CreateMaybeMessage< ::db::ConfigGuildBuilding >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildBuilding >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::ConfigGuildBuildingList* Arena::CreateMaybeMessage< ::db::ConfigGuildBuildingList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::ConfigGuildBuildingList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameGuild* Arena::CreateMaybeMessage< ::db::GameGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameGuild >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameGuildBuilding* Arena::CreateMaybeMessage< ::db::GameGuildBuilding >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameGuildBuilding >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameGuildStore* Arena::CreateMaybeMessage< ::db::GameGuildStore >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameGuildStore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameGuildUser* Arena::CreateMaybeMessage< ::db::GameGuildUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameGuildUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameStatsGuildUser* Arena::CreateMaybeMessage< ::db::GameStatsGuildUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameStatsGuildUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::UserStatsGuildCommon* Arena::CreateMaybeMessage< ::db::UserStatsGuildCommon >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::UserStatsGuildCommon >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GameGuildTrack* Arena::CreateMaybeMessage< ::db::GameGuildTrack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GameGuildTrack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_game_guild_tracks_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_load_game_guild_tracks_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_game_guild_tracks_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_game_guild_tracks_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_i_load_game_guild_tracks_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_game_guild_tracks_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_load_game_guild_tracks* Arena::CreateMaybeMessage< ::db::proc_i_load_game_guild_tracks >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_load_game_guild_tracks >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_game_guild_track_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_save_game_guild_track_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_game_guild_track_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_save_game_guild_track* Arena::CreateMaybeMessage< ::db::proc_i_save_game_guild_track >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_save_game_guild_track >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_delete_game_guild_track_Parameter* Arena::CreateMaybeMessage< ::db::proc_i_delete_game_guild_track_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_delete_game_guild_track_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_i_delete_game_guild_track* Arena::CreateMaybeMessage< ::db::proc_i_delete_game_guild_track >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_i_delete_game_guild_track >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
