// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Pay.proto

#ifndef PROTOBUF_INCLUDED_Pay_2eproto
#define PROTOBUF_INCLUDED_Pay_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Pay_2eproto 

namespace protobuf_Pay_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Pay_2eproto
namespace pay {
class PayNotify;
class PayNotifyDefaultTypeInternal;
extern PayNotifyDefaultTypeInternal _PayNotify_default_instance_;
}  // namespace pay
namespace google {
namespace protobuf {
template<> ::pay::PayNotify* Arena::CreateMaybeMessage<::pay::PayNotify>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pay {

// ===================================================================

class PayNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pay.PayNotify) */ {
 public:
  PayNotify();
  virtual ~PayNotify();

  PayNotify(const PayNotify& from);

  inline PayNotify& operator=(const PayNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PayNotify(PayNotify&& from) noexcept
    : PayNotify() {
    *this = ::std::move(from);
  }

  inline PayNotify& operator=(PayNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PayNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PayNotify* internal_default_instance() {
    return reinterpret_cast<const PayNotify*>(
               &_PayNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(PayNotify* other);
  void Swap(PayNotify* other);
  friend void swap(PayNotify& a, PayNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PayNotify* New() const final {
    return CreateMaybeMessage<PayNotify>(NULL);
  }

  PayNotify* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PayNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PayNotify& from);
  void MergeFrom(const PayNotify& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PayNotify* other);
  protected:
  explicit PayNotify(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes accountid = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  #if LANG_CXX11
  void set_accountid(::std::string&& value);
  #endif
  void set_accountid(const char* value);
  void set_accountid(const void* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_accountid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_accountid(
      ::std::string* accountid);

  // required bytes platid = 12;
  bool has_platid() const;
  void clear_platid();
  static const int kPlatidFieldNumber = 12;
  const ::std::string& platid() const;
  void set_platid(const ::std::string& value);
  #if LANG_CXX11
  void set_platid(::std::string&& value);
  #endif
  void set_platid(const char* value);
  void set_platid(const void* value, size_t size);
  ::std::string* mutable_platid();
  ::std::string* release_platid();
  void set_allocated_platid(::std::string* platid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_platid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_platid(
      ::std::string* platid);

  // required bytes ordernum = 13;
  bool has_ordernum() const;
  void clear_ordernum();
  static const int kOrdernumFieldNumber = 13;
  const ::std::string& ordernum() const;
  void set_ordernum(const ::std::string& value);
  #if LANG_CXX11
  void set_ordernum(::std::string&& value);
  #endif
  void set_ordernum(const char* value);
  void set_ordernum(const void* value, size_t size);
  ::std::string* mutable_ordernum();
  ::std::string* release_ordernum();
  void set_allocated_ordernum(::std::string* ordernum);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ordernum();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ordernum(
      ::std::string* ordernum);

  // required bytes receipt = 14;
  bool has_receipt() const;
  void clear_receipt();
  static const int kReceiptFieldNumber = 14;
  const ::std::string& receipt() const;
  void set_receipt(const ::std::string& value);
  #if LANG_CXX11
  void set_receipt(::std::string&& value);
  #endif
  void set_receipt(const char* value);
  void set_receipt(const void* value, size_t size);
  ::std::string* mutable_receipt();
  ::std::string* release_receipt();
  void set_allocated_receipt(::std::string* receipt);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_receipt();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_receipt(
      ::std::string* receipt);

  // required bytes notifytime = 15;
  bool has_notifytime() const;
  void clear_notifytime();
  static const int kNotifytimeFieldNumber = 15;
  const ::std::string& notifytime() const;
  void set_notifytime(const ::std::string& value);
  #if LANG_CXX11
  void set_notifytime(::std::string&& value);
  #endif
  void set_notifytime(const char* value);
  void set_notifytime(const void* value, size_t size);
  ::std::string* mutable_notifytime();
  ::std::string* release_notifytime();
  void set_allocated_notifytime(::std::string* notifytime);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_notifytime();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_notifytime(
      ::std::string* notifytime);

  // required bytes createtime = 16;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreatetimeFieldNumber = 16;
  const ::std::string& createtime() const;
  void set_createtime(const ::std::string& value);
  #if LANG_CXX11
  void set_createtime(::std::string&& value);
  #endif
  void set_createtime(const char* value);
  void set_createtime(const void* value, size_t size);
  ::std::string* mutable_createtime();
  ::std::string* release_createtime();
  void set_allocated_createtime(::std::string* createtime);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_createtime();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_createtime(
      ::std::string* createtime);

  // required float chargecash = 2;
  bool has_chargecash() const;
  void clear_chargecash();
  static const int kChargecashFieldNumber = 2;
  float chargecash() const;
  void set_chargecash(float value);

  // required int32 chargetype = 3;
  bool has_chargetype() const;
  void clear_chargetype();
  static const int kChargetypeFieldNumber = 3;
  ::google::protobuf::int32 chargetype() const;
  void set_chargetype(::google::protobuf::int32 value);

  // required int32 goodsid = 4;
  bool has_goodsid() const;
  void clear_goodsid();
  static const int kGoodsidFieldNumber = 4;
  ::google::protobuf::int32 goodsid() const;
  void set_goodsid(::google::protobuf::int32 value);

  // required int32 serverid = 11;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 11;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pay.PayNotify)
 private:
  void set_has_accountid();
  void clear_has_accountid();
  void set_has_chargecash();
  void clear_has_chargecash();
  void set_has_chargetype();
  void clear_has_chargetype();
  void set_has_goodsid();
  void clear_has_goodsid();
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_platid();
  void clear_has_platid();
  void set_has_ordernum();
  void clear_has_ordernum();
  void set_has_receipt();
  void clear_has_receipt();
  void set_has_notifytime();
  void clear_has_notifytime();
  void set_has_createtime();
  void clear_has_createtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  ::google::protobuf::internal::ArenaStringPtr platid_;
  ::google::protobuf::internal::ArenaStringPtr ordernum_;
  ::google::protobuf::internal::ArenaStringPtr receipt_;
  ::google::protobuf::internal::ArenaStringPtr notifytime_;
  ::google::protobuf::internal::ArenaStringPtr createtime_;
  float chargecash_;
  ::google::protobuf::int32 chargetype_;
  ::google::protobuf::int32 goodsid_;
  ::google::protobuf::int32 serverid_;
  friend struct ::protobuf_Pay_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PayNotify

// required bytes accountid = 1;
inline bool PayNotify::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PayNotify::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PayNotify::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PayNotify::clear_accountid() {
  accountid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_accountid();
}
inline const ::std::string& PayNotify::accountid() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.accountid)
  return accountid_.Get();
}
inline void PayNotify::set_accountid(const ::std::string& value) {
  set_has_accountid();
  accountid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pay.PayNotify.accountid)
}
#if LANG_CXX11
inline void PayNotify::set_accountid(::std::string&& value) {
  set_has_accountid();
  accountid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pay.PayNotify.accountid)
}
#endif
inline void PayNotify::set_accountid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_accountid();
  accountid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pay.PayNotify.accountid)
}
inline void PayNotify::set_accountid(const void* value,
    size_t size) {
  set_has_accountid();
  accountid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pay.PayNotify.accountid)
}
inline ::std::string* PayNotify::mutable_accountid() {
  set_has_accountid();
  // @@protoc_insertion_point(field_mutable:pay.PayNotify.accountid)
  return accountid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PayNotify::release_accountid() {
  // @@protoc_insertion_point(field_release:pay.PayNotify.accountid)
  if (!has_accountid()) {
    return NULL;
  }
  clear_has_accountid();
  return accountid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void PayNotify::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    set_has_accountid();
  } else {
    clear_has_accountid();
  }
  accountid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pay.PayNotify.accountid)
}
inline ::std::string* PayNotify::unsafe_arena_release_accountid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pay.PayNotify.accountid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_accountid();
  return accountid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PayNotify::unsafe_arena_set_allocated_accountid(
    ::std::string* accountid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (accountid != NULL) {
    set_has_accountid();
  } else {
    clear_has_accountid();
  }
  accountid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      accountid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pay.PayNotify.accountid)
}

// required float chargecash = 2;
inline bool PayNotify::has_chargecash() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PayNotify::set_has_chargecash() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PayNotify::clear_has_chargecash() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PayNotify::clear_chargecash() {
  chargecash_ = 0;
  clear_has_chargecash();
}
inline float PayNotify::chargecash() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.chargecash)
  return chargecash_;
}
inline void PayNotify::set_chargecash(float value) {
  set_has_chargecash();
  chargecash_ = value;
  // @@protoc_insertion_point(field_set:pay.PayNotify.chargecash)
}

// required int32 chargetype = 3;
inline bool PayNotify::has_chargetype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PayNotify::set_has_chargetype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PayNotify::clear_has_chargetype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PayNotify::clear_chargetype() {
  chargetype_ = 0;
  clear_has_chargetype();
}
inline ::google::protobuf::int32 PayNotify::chargetype() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.chargetype)
  return chargetype_;
}
inline void PayNotify::set_chargetype(::google::protobuf::int32 value) {
  set_has_chargetype();
  chargetype_ = value;
  // @@protoc_insertion_point(field_set:pay.PayNotify.chargetype)
}

// required int32 goodsid = 4;
inline bool PayNotify::has_goodsid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PayNotify::set_has_goodsid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PayNotify::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PayNotify::clear_goodsid() {
  goodsid_ = 0;
  clear_has_goodsid();
}
inline ::google::protobuf::int32 PayNotify::goodsid() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.goodsid)
  return goodsid_;
}
inline void PayNotify::set_goodsid(::google::protobuf::int32 value) {
  set_has_goodsid();
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:pay.PayNotify.goodsid)
}

// required int32 serverid = 11;
inline bool PayNotify::has_serverid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PayNotify::set_has_serverid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PayNotify::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PayNotify::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 PayNotify::serverid() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.serverid)
  return serverid_;
}
inline void PayNotify::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:pay.PayNotify.serverid)
}

// required bytes platid = 12;
inline bool PayNotify::has_platid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PayNotify::set_has_platid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PayNotify::clear_has_platid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PayNotify::clear_platid() {
  platid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_platid();
}
inline const ::std::string& PayNotify::platid() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.platid)
  return platid_.Get();
}
inline void PayNotify::set_platid(const ::std::string& value) {
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pay.PayNotify.platid)
}
#if LANG_CXX11
inline void PayNotify::set_platid(::std::string&& value) {
  set_has_platid();
  platid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pay.PayNotify.platid)
}
#endif
inline void PayNotify::set_platid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pay.PayNotify.platid)
}
inline void PayNotify::set_platid(const void* value,
    size_t size) {
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pay.PayNotify.platid)
}
inline ::std::string* PayNotify::mutable_platid() {
  set_has_platid();
  // @@protoc_insertion_point(field_mutable:pay.PayNotify.platid)
  return platid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PayNotify::release_platid() {
  // @@protoc_insertion_point(field_release:pay.PayNotify.platid)
  if (!has_platid()) {
    return NULL;
  }
  clear_has_platid();
  return platid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void PayNotify::set_allocated_platid(::std::string* platid) {
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pay.PayNotify.platid)
}
inline ::std::string* PayNotify::unsafe_arena_release_platid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pay.PayNotify.platid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_platid();
  return platid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PayNotify::unsafe_arena_set_allocated_platid(
    ::std::string* platid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      platid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pay.PayNotify.platid)
}

// required bytes ordernum = 13;
inline bool PayNotify::has_ordernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PayNotify::set_has_ordernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PayNotify::clear_has_ordernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PayNotify::clear_ordernum() {
  ordernum_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_ordernum();
}
inline const ::std::string& PayNotify::ordernum() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.ordernum)
  return ordernum_.Get();
}
inline void PayNotify::set_ordernum(const ::std::string& value) {
  set_has_ordernum();
  ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pay.PayNotify.ordernum)
}
#if LANG_CXX11
inline void PayNotify::set_ordernum(::std::string&& value) {
  set_has_ordernum();
  ordernum_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pay.PayNotify.ordernum)
}
#endif
inline void PayNotify::set_ordernum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ordernum();
  ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pay.PayNotify.ordernum)
}
inline void PayNotify::set_ordernum(const void* value,
    size_t size) {
  set_has_ordernum();
  ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pay.PayNotify.ordernum)
}
inline ::std::string* PayNotify::mutable_ordernum() {
  set_has_ordernum();
  // @@protoc_insertion_point(field_mutable:pay.PayNotify.ordernum)
  return ordernum_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PayNotify::release_ordernum() {
  // @@protoc_insertion_point(field_release:pay.PayNotify.ordernum)
  if (!has_ordernum()) {
    return NULL;
  }
  clear_has_ordernum();
  return ordernum_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void PayNotify::set_allocated_ordernum(::std::string* ordernum) {
  if (ordernum != NULL) {
    set_has_ordernum();
  } else {
    clear_has_ordernum();
  }
  ordernum_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordernum,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pay.PayNotify.ordernum)
}
inline ::std::string* PayNotify::unsafe_arena_release_ordernum() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pay.PayNotify.ordernum)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_ordernum();
  return ordernum_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PayNotify::unsafe_arena_set_allocated_ordernum(
    ::std::string* ordernum) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ordernum != NULL) {
    set_has_ordernum();
  } else {
    clear_has_ordernum();
  }
  ordernum_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ordernum, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pay.PayNotify.ordernum)
}

// required bytes receipt = 14;
inline bool PayNotify::has_receipt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PayNotify::set_has_receipt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PayNotify::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PayNotify::clear_receipt() {
  receipt_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_receipt();
}
inline const ::std::string& PayNotify::receipt() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.receipt)
  return receipt_.Get();
}
inline void PayNotify::set_receipt(const ::std::string& value) {
  set_has_receipt();
  receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pay.PayNotify.receipt)
}
#if LANG_CXX11
inline void PayNotify::set_receipt(::std::string&& value) {
  set_has_receipt();
  receipt_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pay.PayNotify.receipt)
}
#endif
inline void PayNotify::set_receipt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_receipt();
  receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pay.PayNotify.receipt)
}
inline void PayNotify::set_receipt(const void* value,
    size_t size) {
  set_has_receipt();
  receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pay.PayNotify.receipt)
}
inline ::std::string* PayNotify::mutable_receipt() {
  set_has_receipt();
  // @@protoc_insertion_point(field_mutable:pay.PayNotify.receipt)
  return receipt_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PayNotify::release_receipt() {
  // @@protoc_insertion_point(field_release:pay.PayNotify.receipt)
  if (!has_receipt()) {
    return NULL;
  }
  clear_has_receipt();
  return receipt_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void PayNotify::set_allocated_receipt(::std::string* receipt) {
  if (receipt != NULL) {
    set_has_receipt();
  } else {
    clear_has_receipt();
  }
  receipt_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pay.PayNotify.receipt)
}
inline ::std::string* PayNotify::unsafe_arena_release_receipt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pay.PayNotify.receipt)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_receipt();
  return receipt_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PayNotify::unsafe_arena_set_allocated_receipt(
    ::std::string* receipt) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (receipt != NULL) {
    set_has_receipt();
  } else {
    clear_has_receipt();
  }
  receipt_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      receipt, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pay.PayNotify.receipt)
}

// required bytes notifytime = 15;
inline bool PayNotify::has_notifytime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PayNotify::set_has_notifytime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PayNotify::clear_has_notifytime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PayNotify::clear_notifytime() {
  notifytime_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_notifytime();
}
inline const ::std::string& PayNotify::notifytime() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.notifytime)
  return notifytime_.Get();
}
inline void PayNotify::set_notifytime(const ::std::string& value) {
  set_has_notifytime();
  notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pay.PayNotify.notifytime)
}
#if LANG_CXX11
inline void PayNotify::set_notifytime(::std::string&& value) {
  set_has_notifytime();
  notifytime_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pay.PayNotify.notifytime)
}
#endif
inline void PayNotify::set_notifytime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_notifytime();
  notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pay.PayNotify.notifytime)
}
inline void PayNotify::set_notifytime(const void* value,
    size_t size) {
  set_has_notifytime();
  notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pay.PayNotify.notifytime)
}
inline ::std::string* PayNotify::mutable_notifytime() {
  set_has_notifytime();
  // @@protoc_insertion_point(field_mutable:pay.PayNotify.notifytime)
  return notifytime_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PayNotify::release_notifytime() {
  // @@protoc_insertion_point(field_release:pay.PayNotify.notifytime)
  if (!has_notifytime()) {
    return NULL;
  }
  clear_has_notifytime();
  return notifytime_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void PayNotify::set_allocated_notifytime(::std::string* notifytime) {
  if (notifytime != NULL) {
    set_has_notifytime();
  } else {
    clear_has_notifytime();
  }
  notifytime_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notifytime,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pay.PayNotify.notifytime)
}
inline ::std::string* PayNotify::unsafe_arena_release_notifytime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pay.PayNotify.notifytime)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_notifytime();
  return notifytime_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PayNotify::unsafe_arena_set_allocated_notifytime(
    ::std::string* notifytime) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (notifytime != NULL) {
    set_has_notifytime();
  } else {
    clear_has_notifytime();
  }
  notifytime_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      notifytime, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pay.PayNotify.notifytime)
}

// required bytes createtime = 16;
inline bool PayNotify::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PayNotify::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PayNotify::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PayNotify::clear_createtime() {
  createtime_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_createtime();
}
inline const ::std::string& PayNotify::createtime() const {
  // @@protoc_insertion_point(field_get:pay.PayNotify.createtime)
  return createtime_.Get();
}
inline void PayNotify::set_createtime(const ::std::string& value) {
  set_has_createtime();
  createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pay.PayNotify.createtime)
}
#if LANG_CXX11
inline void PayNotify::set_createtime(::std::string&& value) {
  set_has_createtime();
  createtime_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:pay.PayNotify.createtime)
}
#endif
inline void PayNotify::set_createtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_createtime();
  createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pay.PayNotify.createtime)
}
inline void PayNotify::set_createtime(const void* value,
    size_t size) {
  set_has_createtime();
  createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pay.PayNotify.createtime)
}
inline ::std::string* PayNotify::mutable_createtime() {
  set_has_createtime();
  // @@protoc_insertion_point(field_mutable:pay.PayNotify.createtime)
  return createtime_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PayNotify::release_createtime() {
  // @@protoc_insertion_point(field_release:pay.PayNotify.createtime)
  if (!has_createtime()) {
    return NULL;
  }
  clear_has_createtime();
  return createtime_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void PayNotify::set_allocated_createtime(::std::string* createtime) {
  if (createtime != NULL) {
    set_has_createtime();
  } else {
    clear_has_createtime();
  }
  createtime_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createtime,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pay.PayNotify.createtime)
}
inline ::std::string* PayNotify::unsafe_arena_release_createtime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pay.PayNotify.createtime)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_createtime();
  return createtime_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PayNotify::unsafe_arena_set_allocated_createtime(
    ::std::string* createtime) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (createtime != NULL) {
    set_has_createtime();
  } else {
    clear_has_createtime();
  }
  createtime_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      createtime, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pay.PayNotify.createtime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace pay

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Pay_2eproto
