// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Pay.proto

#include "Pay.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace pay {
class PayNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PayNotify>
      _instance;
} _PayNotify_default_instance_;
}  // namespace pay
namespace protobuf_Pay_2eproto {
static void InitDefaultsPayNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pay::_PayNotify_default_instance_;
    new (ptr) ::pay::PayNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pay::PayNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PayNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPayNotify}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PayNotify.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, chargecash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, chargetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, goodsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, platid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, ordernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, receipt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, notifytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pay::PayNotify, createtime_),
  0,
  6,
  7,
  8,
  9,
  1,
  2,
  3,
  4,
  5,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::pay::PayNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pay::_PayNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Pay.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tPay.proto\022\003pay\"\304\001\n\tPayNotify\022\021\n\taccoun"
      "tid\030\001 \002(\014\022\022\n\nchargecash\030\002 \002(\002\022\022\n\ncharget"
      "ype\030\003 \002(\005\022\017\n\007goodsid\030\004 \002(\005\022\020\n\010serverid\030\013"
      " \002(\005\022\016\n\006platid\030\014 \002(\014\022\020\n\010ordernum\030\r \002(\014\022\017"
      "\n\007receipt\030\016 \002(\014\022\022\n\nnotifytime\030\017 \002(\014\022\022\n\nc"
      "reatetime\030\020 \002(\014B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 220);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Pay.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Pay_2eproto
namespace pay {

// ===================================================================

void PayNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PayNotify::kAccountidFieldNumber;
const int PayNotify::kChargecashFieldNumber;
const int PayNotify::kChargetypeFieldNumber;
const int PayNotify::kGoodsidFieldNumber;
const int PayNotify::kServeridFieldNumber;
const int PayNotify::kPlatidFieldNumber;
const int PayNotify::kOrdernumFieldNumber;
const int PayNotify::kReceiptFieldNumber;
const int PayNotify::kNotifytimeFieldNumber;
const int PayNotify::kCreatetimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PayNotify::PayNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Pay_2eproto::scc_info_PayNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pay.PayNotify)
}
PayNotify::PayNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_Pay_2eproto::scc_info_PayNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pay.PayNotify)
}
PayNotify::PayNotify(const PayNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_accountid()) {
    accountid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountid(),
      GetArenaNoVirtual());
  }
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platid()) {
    platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platid(),
      GetArenaNoVirtual());
  }
  ordernum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ordernum()) {
    ordernum_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordernum(),
      GetArenaNoVirtual());
  }
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_receipt()) {
    receipt_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt(),
      GetArenaNoVirtual());
  }
  notifytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_notifytime()) {
    notifytime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notifytime(),
      GetArenaNoVirtual());
  }
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_createtime()) {
    createtime_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime(),
      GetArenaNoVirtual());
  }
  ::memcpy(&chargecash_, &from.chargecash_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&chargecash_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:pay.PayNotify)
}

void PayNotify::SharedCtor() {
  accountid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordernum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chargecash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&chargecash_)) + sizeof(serverid_));
}

PayNotify::~PayNotify() {
  // @@protoc_insertion_point(destructor:pay.PayNotify)
  SharedDtor();
}

void PayNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  accountid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordernum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notifytime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PayNotify::ArenaDtor(void* object) {
  PayNotify* _this = reinterpret_cast< PayNotify* >(object);
  (void)_this;
}
void PayNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PayNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PayNotify::descriptor() {
  ::protobuf_Pay_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Pay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PayNotify& PayNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Pay_2eproto::scc_info_PayNotify.base);
  return *internal_default_instance();
}


void PayNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:pay.PayNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      accountid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      platid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ordernum_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      receipt_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      notifytime_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      createtime_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&chargecash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chargetype_) -
        reinterpret_cast<char*>(&chargecash_)) + sizeof(chargetype_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&goodsid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&serverid_) -
        reinterpret_cast<char*>(&goodsid_)) + sizeof(serverid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PayNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pay.PayNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_accountid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float chargecash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_chargecash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &chargecash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 chargetype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_chargetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chargetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 goodsid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_goodsid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 serverid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes platid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ordernum = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ordernum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes receipt = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_receipt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes notifytime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_notifytime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes createtime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_createtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pay.PayNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pay.PayNotify)
  return false;
#undef DO_
}

void PayNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pay.PayNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->accountid(), output);
  }

  // required float chargecash = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->chargecash(), output);
  }

  // required int32 chargetype = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chargetype(), output);
  }

  // required int32 goodsid = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->goodsid(), output);
  }

  // required int32 serverid = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->serverid(), output);
  }

  // required bytes platid = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->platid(), output);
  }

  // required bytes ordernum = 13;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->ordernum(), output);
  }

  // required bytes receipt = 14;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->receipt(), output);
  }

  // required bytes notifytime = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->notifytime(), output);
  }

  // required bytes createtime = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->createtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pay.PayNotify)
}

::google::protobuf::uint8* PayNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pay.PayNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->accountid(), target);
  }

  // required float chargecash = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->chargecash(), target);
  }

  // required int32 chargetype = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chargetype(), target);
  }

  // required int32 goodsid = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->goodsid(), target);
  }

  // required int32 serverid = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->serverid(), target);
  }

  // required bytes platid = 12;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->platid(), target);
  }

  // required bytes ordernum = 13;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->ordernum(), target);
  }

  // required bytes receipt = 14;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->receipt(), target);
  }

  // required bytes notifytime = 15;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->notifytime(), target);
  }

  // required bytes createtime = 16;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->createtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pay.PayNotify)
  return target;
}

size_t PayNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pay.PayNotify)
  size_t total_size = 0;

  if (has_accountid()) {
    // required bytes accountid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->accountid());
  }

  if (has_platid()) {
    // required bytes platid = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());
  }

  if (has_ordernum()) {
    // required bytes ordernum = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ordernum());
  }

  if (has_receipt()) {
    // required bytes receipt = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->receipt());
  }

  if (has_notifytime()) {
    // required bytes notifytime = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->notifytime());
  }

  if (has_createtime()) {
    // required bytes createtime = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->createtime());
  }

  if (has_chargecash()) {
    // required float chargecash = 2;
    total_size += 1 + 4;
  }

  if (has_chargetype()) {
    // required int32 chargetype = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chargetype());
  }

  if (has_goodsid()) {
    // required int32 goodsid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->goodsid());
  }

  if (has_serverid()) {
    // required int32 serverid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  return total_size;
}
size_t PayNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pay.PayNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required bytes accountid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->accountid());

    // required bytes platid = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());

    // required bytes ordernum = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ordernum());

    // required bytes receipt = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->receipt());

    // required bytes notifytime = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->notifytime());

    // required bytes createtime = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->createtime());

    // required float chargecash = 2;
    total_size += 1 + 4;

    // required int32 chargetype = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chargetype());

    // required int32 goodsid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->goodsid());

    // required int32 serverid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PayNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pay.PayNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PayNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PayNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pay.PayNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pay.PayNotify)
    MergeFrom(*source);
  }
}

void PayNotify::MergeFrom(const PayNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pay.PayNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_accountid(from.accountid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_platid(from.platid());
    }
    if (cached_has_bits & 0x00000004u) {
      set_ordernum(from.ordernum());
    }
    if (cached_has_bits & 0x00000008u) {
      set_receipt(from.receipt());
    }
    if (cached_has_bits & 0x00000010u) {
      set_notifytime(from.notifytime());
    }
    if (cached_has_bits & 0x00000020u) {
      set_createtime(from.createtime());
    }
    if (cached_has_bits & 0x00000040u) {
      chargecash_ = from.chargecash_;
    }
    if (cached_has_bits & 0x00000080u) {
      chargetype_ = from.chargetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      goodsid_ = from.goodsid_;
    }
    if (cached_has_bits & 0x00000200u) {
      serverid_ = from.serverid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PayNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pay.PayNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayNotify::CopyFrom(const PayNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pay.PayNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;
  return true;
}

void PayNotify::Swap(PayNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PayNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PayNotify::UnsafeArenaSwap(PayNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PayNotify::InternalSwap(PayNotify* other) {
  using std::swap;
  accountid_.Swap(&other->accountid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platid_.Swap(&other->platid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ordernum_.Swap(&other->ordernum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receipt_.Swap(&other->receipt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  notifytime_.Swap(&other->notifytime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  createtime_.Swap(&other->createtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(chargecash_, other->chargecash_);
  swap(chargetype_, other->chargetype_);
  swap(goodsid_, other->goodsid_);
  swap(serverid_, other->serverid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PayNotify::GetMetadata() const {
  protobuf_Pay_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Pay_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pay
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pay::PayNotify* Arena::CreateMaybeMessage< ::pay::PayNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pay::PayNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
