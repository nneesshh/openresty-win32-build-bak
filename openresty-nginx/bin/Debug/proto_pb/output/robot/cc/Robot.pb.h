// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Robot.proto

#ifndef PROTOBUF_INCLUDED_Robot_2eproto
#define PROTOBUF_INCLUDED_Robot_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Robot_2eproto 

namespace protobuf_Robot_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Robot_2eproto
namespace robot {
class RobotJoinService;
class RobotJoinServiceDefaultTypeInternal;
extern RobotJoinServiceDefaultTypeInternal _RobotJoinService_default_instance_;
class RobotJoinService_RobotJoinRequest;
class RobotJoinService_RobotJoinRequestDefaultTypeInternal;
extern RobotJoinService_RobotJoinRequestDefaultTypeInternal _RobotJoinService_RobotJoinRequest_default_instance_;
class RobotJoinService_RobotJoinResponse;
class RobotJoinService_RobotJoinResponseDefaultTypeInternal;
extern RobotJoinService_RobotJoinResponseDefaultTypeInternal _RobotJoinService_RobotJoinResponse_default_instance_;
}  // namespace robot
namespace google {
namespace protobuf {
template<> ::robot::RobotJoinService* Arena::CreateMaybeMessage<::robot::RobotJoinService>(Arena*);
template<> ::robot::RobotJoinService_RobotJoinRequest* Arena::CreateMaybeMessage<::robot::RobotJoinService_RobotJoinRequest>(Arena*);
template<> ::robot::RobotJoinService_RobotJoinResponse* Arena::CreateMaybeMessage<::robot::RobotJoinService_RobotJoinResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace robot {

enum RobotJoinService_ROBOT_CMD {
  RobotJoinService_ROBOT_CMD_JOIN = 1,
  RobotJoinService_ROBOT_CMD_SET_SCORE = 2
};
bool RobotJoinService_ROBOT_CMD_IsValid(int value);
const RobotJoinService_ROBOT_CMD RobotJoinService_ROBOT_CMD_ROBOT_CMD_MIN = RobotJoinService_ROBOT_CMD_JOIN;
const RobotJoinService_ROBOT_CMD RobotJoinService_ROBOT_CMD_ROBOT_CMD_MAX = RobotJoinService_ROBOT_CMD_SET_SCORE;
const int RobotJoinService_ROBOT_CMD_ROBOT_CMD_ARRAYSIZE = RobotJoinService_ROBOT_CMD_ROBOT_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotJoinService_ROBOT_CMD_descriptor();
inline const ::std::string& RobotJoinService_ROBOT_CMD_Name(RobotJoinService_ROBOT_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotJoinService_ROBOT_CMD_descriptor(), value);
}
inline bool RobotJoinService_ROBOT_CMD_Parse(
    const ::std::string& name, RobotJoinService_ROBOT_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotJoinService_ROBOT_CMD>(
    RobotJoinService_ROBOT_CMD_descriptor(), name, value);
}
// ===================================================================

class RobotJoinService_RobotJoinRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:robot.RobotJoinService.RobotJoinRequest) */ {
 public:
  RobotJoinService_RobotJoinRequest();
  virtual ~RobotJoinService_RobotJoinRequest();

  RobotJoinService_RobotJoinRequest(const RobotJoinService_RobotJoinRequest& from);

  inline RobotJoinService_RobotJoinRequest& operator=(const RobotJoinService_RobotJoinRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotJoinService_RobotJoinRequest(RobotJoinService_RobotJoinRequest&& from) noexcept
    : RobotJoinService_RobotJoinRequest() {
    *this = ::std::move(from);
  }

  inline RobotJoinService_RobotJoinRequest& operator=(RobotJoinService_RobotJoinRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotJoinService_RobotJoinRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotJoinService_RobotJoinRequest* internal_default_instance() {
    return reinterpret_cast<const RobotJoinService_RobotJoinRequest*>(
               &_RobotJoinService_RobotJoinRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(RobotJoinService_RobotJoinRequest* other);
  void Swap(RobotJoinService_RobotJoinRequest* other);
  friend void swap(RobotJoinService_RobotJoinRequest& a, RobotJoinService_RobotJoinRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotJoinService_RobotJoinRequest* New() const final {
    return CreateMaybeMessage<RobotJoinService_RobotJoinRequest>(NULL);
  }

  RobotJoinService_RobotJoinRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotJoinService_RobotJoinRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotJoinService_RobotJoinRequest& from);
  void MergeFrom(const RobotJoinService_RobotJoinRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotJoinService_RobotJoinRequest* other);
  protected:
  explicit RobotJoinService_RobotJoinRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 init_level = 2;
  bool has_init_level() const;
  void clear_init_level();
  static const int kInitLevelFieldNumber = 2;
  ::google::protobuf::int32 init_level() const;
  void set_init_level(::google::protobuf::int32 value);

  // required .robot.RobotJoinService.ROBOT_CMD cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::robot::RobotJoinService_ROBOT_CMD cmd() const;
  void set_cmd(::robot::RobotJoinService_ROBOT_CMD value);

  // @@protoc_insertion_point(class_scope:robot.RobotJoinService.RobotJoinRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_init_level();
  void clear_has_init_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 init_level_;
  int cmd_;
  friend struct ::protobuf_Robot_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RobotJoinService_RobotJoinResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:robot.RobotJoinService.RobotJoinResponse) */ {
 public:
  RobotJoinService_RobotJoinResponse();
  virtual ~RobotJoinService_RobotJoinResponse();

  RobotJoinService_RobotJoinResponse(const RobotJoinService_RobotJoinResponse& from);

  inline RobotJoinService_RobotJoinResponse& operator=(const RobotJoinService_RobotJoinResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotJoinService_RobotJoinResponse(RobotJoinService_RobotJoinResponse&& from) noexcept
    : RobotJoinService_RobotJoinResponse() {
    *this = ::std::move(from);
  }

  inline RobotJoinService_RobotJoinResponse& operator=(RobotJoinService_RobotJoinResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotJoinService_RobotJoinResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotJoinService_RobotJoinResponse* internal_default_instance() {
    return reinterpret_cast<const RobotJoinService_RobotJoinResponse*>(
               &_RobotJoinService_RobotJoinResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(RobotJoinService_RobotJoinResponse* other);
  void Swap(RobotJoinService_RobotJoinResponse* other);
  friend void swap(RobotJoinService_RobotJoinResponse& a, RobotJoinService_RobotJoinResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotJoinService_RobotJoinResponse* New() const final {
    return CreateMaybeMessage<RobotJoinService_RobotJoinResponse>(NULL);
  }

  RobotJoinService_RobotJoinResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotJoinService_RobotJoinResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotJoinService_RobotJoinResponse& from);
  void MergeFrom(const RobotJoinService_RobotJoinResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotJoinService_RobotJoinResponse* other);
  protected:
  explicit RobotJoinService_RobotJoinResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:robot.RobotJoinService.RobotJoinResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_Robot_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RobotJoinService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:robot.RobotJoinService) */ {
 public:
  RobotJoinService();
  virtual ~RobotJoinService();

  RobotJoinService(const RobotJoinService& from);

  inline RobotJoinService& operator=(const RobotJoinService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotJoinService(RobotJoinService&& from) noexcept
    : RobotJoinService() {
    *this = ::std::move(from);
  }

  inline RobotJoinService& operator=(RobotJoinService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotJoinService& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotJoinService* internal_default_instance() {
    return reinterpret_cast<const RobotJoinService*>(
               &_RobotJoinService_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(RobotJoinService* other);
  void Swap(RobotJoinService* other);
  friend void swap(RobotJoinService& a, RobotJoinService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotJoinService* New() const final {
    return CreateMaybeMessage<RobotJoinService>(NULL);
  }

  RobotJoinService* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotJoinService>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotJoinService& from);
  void MergeFrom(const RobotJoinService& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotJoinService* other);
  protected:
  explicit RobotJoinService(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RobotJoinService_RobotJoinRequest RobotJoinRequest;
  typedef RobotJoinService_RobotJoinResponse RobotJoinResponse;

  typedef RobotJoinService_ROBOT_CMD ROBOT_CMD;
  static const ROBOT_CMD JOIN =
    RobotJoinService_ROBOT_CMD_JOIN;
  static const ROBOT_CMD SET_SCORE =
    RobotJoinService_ROBOT_CMD_SET_SCORE;
  static inline bool ROBOT_CMD_IsValid(int value) {
    return RobotJoinService_ROBOT_CMD_IsValid(value);
  }
  static const ROBOT_CMD ROBOT_CMD_MIN =
    RobotJoinService_ROBOT_CMD_ROBOT_CMD_MIN;
  static const ROBOT_CMD ROBOT_CMD_MAX =
    RobotJoinService_ROBOT_CMD_ROBOT_CMD_MAX;
  static const int ROBOT_CMD_ARRAYSIZE =
    RobotJoinService_ROBOT_CMD_ROBOT_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ROBOT_CMD_descriptor() {
    return RobotJoinService_ROBOT_CMD_descriptor();
  }
  static inline const ::std::string& ROBOT_CMD_Name(ROBOT_CMD value) {
    return RobotJoinService_ROBOT_CMD_Name(value);
  }
  static inline bool ROBOT_CMD_Parse(const ::std::string& name,
      ROBOT_CMD* value) {
    return RobotJoinService_ROBOT_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .robot.RobotJoinService.RobotJoinRequest req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  private:
  const ::robot::RobotJoinService_RobotJoinRequest& _internal_req() const;
  public:
  const ::robot::RobotJoinService_RobotJoinRequest& req() const;
  ::robot::RobotJoinService_RobotJoinRequest* release_req();
  ::robot::RobotJoinService_RobotJoinRequest* mutable_req();
  void set_allocated_req(::robot::RobotJoinService_RobotJoinRequest* req);
  void unsafe_arena_set_allocated_req(
      ::robot::RobotJoinService_RobotJoinRequest* req);
  ::robot::RobotJoinService_RobotJoinRequest* unsafe_arena_release_req();

  // optional .robot.RobotJoinService.RobotJoinResponse resp = 2;
  bool has_resp() const;
  void clear_resp();
  static const int kRespFieldNumber = 2;
  private:
  const ::robot::RobotJoinService_RobotJoinResponse& _internal_resp() const;
  public:
  const ::robot::RobotJoinService_RobotJoinResponse& resp() const;
  ::robot::RobotJoinService_RobotJoinResponse* release_resp();
  ::robot::RobotJoinService_RobotJoinResponse* mutable_resp();
  void set_allocated_resp(::robot::RobotJoinService_RobotJoinResponse* resp);
  void unsafe_arena_set_allocated_resp(
      ::robot::RobotJoinService_RobotJoinResponse* resp);
  ::robot::RobotJoinService_RobotJoinResponse* unsafe_arena_release_resp();

  // @@protoc_insertion_point(class_scope:robot.RobotJoinService)
 private:
  void set_has_req();
  void clear_has_req();
  void set_has_resp();
  void clear_has_resp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::robot::RobotJoinService_RobotJoinRequest* req_;
  ::robot::RobotJoinService_RobotJoinResponse* resp_;
  friend struct ::protobuf_Robot_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RobotJoinService_RobotJoinRequest

// required .robot.RobotJoinService.ROBOT_CMD cmd = 1;
inline bool RobotJoinService_RobotJoinRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotJoinService_RobotJoinRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotJoinService_RobotJoinRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotJoinService_RobotJoinRequest::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::robot::RobotJoinService_ROBOT_CMD RobotJoinService_RobotJoinRequest::cmd() const {
  // @@protoc_insertion_point(field_get:robot.RobotJoinService.RobotJoinRequest.cmd)
  return static_cast< ::robot::RobotJoinService_ROBOT_CMD >(cmd_);
}
inline void RobotJoinService_RobotJoinRequest::set_cmd(::robot::RobotJoinService_ROBOT_CMD value) {
  assert(::robot::RobotJoinService_ROBOT_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:robot.RobotJoinService.RobotJoinRequest.cmd)
}

// optional int32 init_level = 2;
inline bool RobotJoinService_RobotJoinRequest::has_init_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotJoinService_RobotJoinRequest::set_has_init_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotJoinService_RobotJoinRequest::clear_has_init_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotJoinService_RobotJoinRequest::clear_init_level() {
  init_level_ = 0;
  clear_has_init_level();
}
inline ::google::protobuf::int32 RobotJoinService_RobotJoinRequest::init_level() const {
  // @@protoc_insertion_point(field_get:robot.RobotJoinService.RobotJoinRequest.init_level)
  return init_level_;
}
inline void RobotJoinService_RobotJoinRequest::set_init_level(::google::protobuf::int32 value) {
  set_has_init_level();
  init_level_ = value;
  // @@protoc_insertion_point(field_set:robot.RobotJoinService.RobotJoinRequest.init_level)
}

// -------------------------------------------------------------------

// RobotJoinService_RobotJoinResponse

// required int32 result = 1;
inline bool RobotJoinService_RobotJoinResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotJoinService_RobotJoinResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotJoinService_RobotJoinResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotJoinService_RobotJoinResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 RobotJoinService_RobotJoinResponse::result() const {
  // @@protoc_insertion_point(field_get:robot.RobotJoinService.RobotJoinResponse.result)
  return result_;
}
inline void RobotJoinService_RobotJoinResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:robot.RobotJoinService.RobotJoinResponse.result)
}

// -------------------------------------------------------------------

// RobotJoinService

// optional .robot.RobotJoinService.RobotJoinRequest req = 1;
inline bool RobotJoinService::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotJoinService::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotJoinService::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotJoinService::clear_req() {
  if (req_ != NULL) req_->Clear();
  clear_has_req();
}
inline const ::robot::RobotJoinService_RobotJoinRequest& RobotJoinService::_internal_req() const {
  return *req_;
}
inline const ::robot::RobotJoinService_RobotJoinRequest& RobotJoinService::req() const {
  const ::robot::RobotJoinService_RobotJoinRequest* p = req_;
  // @@protoc_insertion_point(field_get:robot.RobotJoinService.req)
  return p != NULL ? *p : *reinterpret_cast<const ::robot::RobotJoinService_RobotJoinRequest*>(
      &::robot::_RobotJoinService_RobotJoinRequest_default_instance_);
}
inline ::robot::RobotJoinService_RobotJoinRequest* RobotJoinService::release_req() {
  // @@protoc_insertion_point(field_release:robot.RobotJoinService.req)
  clear_has_req();
  ::robot::RobotJoinService_RobotJoinRequest* temp = req_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  req_ = NULL;
  return temp;
}
inline ::robot::RobotJoinService_RobotJoinRequest* RobotJoinService::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_unsafe_arena_release:robot.RobotJoinService.req)
  clear_has_req();
  ::robot::RobotJoinService_RobotJoinRequest* temp = req_;
  req_ = NULL;
  return temp;
}
inline ::robot::RobotJoinService_RobotJoinRequest* RobotJoinService::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    auto* p = CreateMaybeMessage<::robot::RobotJoinService_RobotJoinRequest>(GetArenaNoVirtual());
    req_ = p;
  }
  // @@protoc_insertion_point(field_mutable:robot.RobotJoinService.req)
  return req_;
}
inline void RobotJoinService::set_allocated_req(::robot::RobotJoinService_RobotJoinRequest* req) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete req_;
  }
  if (req) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(req);
    if (message_arena != submessage_arena) {
      req = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    set_has_req();
  } else {
    clear_has_req();
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:robot.RobotJoinService.req)
}

// optional .robot.RobotJoinService.RobotJoinResponse resp = 2;
inline bool RobotJoinService::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotJoinService::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotJoinService::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotJoinService::clear_resp() {
  if (resp_ != NULL) resp_->Clear();
  clear_has_resp();
}
inline const ::robot::RobotJoinService_RobotJoinResponse& RobotJoinService::_internal_resp() const {
  return *resp_;
}
inline const ::robot::RobotJoinService_RobotJoinResponse& RobotJoinService::resp() const {
  const ::robot::RobotJoinService_RobotJoinResponse* p = resp_;
  // @@protoc_insertion_point(field_get:robot.RobotJoinService.resp)
  return p != NULL ? *p : *reinterpret_cast<const ::robot::RobotJoinService_RobotJoinResponse*>(
      &::robot::_RobotJoinService_RobotJoinResponse_default_instance_);
}
inline ::robot::RobotJoinService_RobotJoinResponse* RobotJoinService::release_resp() {
  // @@protoc_insertion_point(field_release:robot.RobotJoinService.resp)
  clear_has_resp();
  ::robot::RobotJoinService_RobotJoinResponse* temp = resp_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  resp_ = NULL;
  return temp;
}
inline ::robot::RobotJoinService_RobotJoinResponse* RobotJoinService::unsafe_arena_release_resp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:robot.RobotJoinService.resp)
  clear_has_resp();
  ::robot::RobotJoinService_RobotJoinResponse* temp = resp_;
  resp_ = NULL;
  return temp;
}
inline ::robot::RobotJoinService_RobotJoinResponse* RobotJoinService::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    auto* p = CreateMaybeMessage<::robot::RobotJoinService_RobotJoinResponse>(GetArenaNoVirtual());
    resp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:robot.RobotJoinService.resp)
  return resp_;
}
inline void RobotJoinService::set_allocated_resp(::robot::RobotJoinService_RobotJoinResponse* resp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete resp_;
  }
  if (resp) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(resp);
    if (message_arena != submessage_arena) {
      resp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp, submessage_arena);
    }
    set_has_resp();
  } else {
    clear_has_resp();
  }
  resp_ = resp;
  // @@protoc_insertion_point(field_set_allocated:robot.RobotJoinService.resp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace robot

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::robot::RobotJoinService_ROBOT_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::robot::RobotJoinService_ROBOT_CMD>() {
  return ::robot::RobotJoinService_ROBOT_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Robot_2eproto
