// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateSettings.proto

#ifndef PROTOBUF_INCLUDED_GateSettings_2eproto
#define PROTOBUF_INCLUDED_GateSettings_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_GateSettings_2eproto 

namespace protobuf_GateSettings_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_GateSettings_2eproto
namespace db {
class GateBanEntry;
class GateBanEntryDefaultTypeInternal;
extern GateBanEntryDefaultTypeInternal _GateBanEntry_default_instance_;
class GateCfgInnerServer;
class GateCfgInnerServerDefaultTypeInternal;
extern GateCfgInnerServerDefaultTypeInternal _GateCfgInnerServer_default_instance_;
class GateCfgWebservice;
class GateCfgWebserviceDefaultTypeInternal;
extern GateCfgWebserviceDefaultTypeInternal _GateCfgWebservice_default_instance_;
class proc_load_gate_ban_entry;
class proc_load_gate_ban_entryDefaultTypeInternal;
extern proc_load_gate_ban_entryDefaultTypeInternal _proc_load_gate_ban_entry_default_instance_;
class proc_load_gate_ban_entry_Parameter;
class proc_load_gate_ban_entry_ParameterDefaultTypeInternal;
extern proc_load_gate_ban_entry_ParameterDefaultTypeInternal _proc_load_gate_ban_entry_Parameter_default_instance_;
class proc_load_gate_ban_entry_ReturnRecord;
class proc_load_gate_ban_entry_ReturnRecordDefaultTypeInternal;
extern proc_load_gate_ban_entry_ReturnRecordDefaultTypeInternal _proc_load_gate_ban_entry_ReturnRecord_default_instance_;
class proc_load_gate_cfg_webservice;
class proc_load_gate_cfg_webserviceDefaultTypeInternal;
extern proc_load_gate_cfg_webserviceDefaultTypeInternal _proc_load_gate_cfg_webservice_default_instance_;
class proc_load_gate_cfg_webservice_Parameter;
class proc_load_gate_cfg_webservice_ParameterDefaultTypeInternal;
extern proc_load_gate_cfg_webservice_ParameterDefaultTypeInternal _proc_load_gate_cfg_webservice_Parameter_default_instance_;
class proc_load_gate_cfg_webservice_ReturnRecord;
class proc_load_gate_cfg_webservice_ReturnRecordDefaultTypeInternal;
extern proc_load_gate_cfg_webservice_ReturnRecordDefaultTypeInternal _proc_load_gate_cfg_webservice_ReturnRecord_default_instance_;
}  // namespace db
namespace google {
namespace protobuf {
template<> ::db::GateBanEntry* Arena::CreateMaybeMessage<::db::GateBanEntry>(Arena*);
template<> ::db::GateCfgInnerServer* Arena::CreateMaybeMessage<::db::GateCfgInnerServer>(Arena*);
template<> ::db::GateCfgWebservice* Arena::CreateMaybeMessage<::db::GateCfgWebservice>(Arena*);
template<> ::db::proc_load_gate_ban_entry* Arena::CreateMaybeMessage<::db::proc_load_gate_ban_entry>(Arena*);
template<> ::db::proc_load_gate_ban_entry_Parameter* Arena::CreateMaybeMessage<::db::proc_load_gate_ban_entry_Parameter>(Arena*);
template<> ::db::proc_load_gate_ban_entry_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_load_gate_ban_entry_ReturnRecord>(Arena*);
template<> ::db::proc_load_gate_cfg_webservice* Arena::CreateMaybeMessage<::db::proc_load_gate_cfg_webservice>(Arena*);
template<> ::db::proc_load_gate_cfg_webservice_Parameter* Arena::CreateMaybeMessage<::db::proc_load_gate_cfg_webservice_Parameter>(Arena*);
template<> ::db::proc_load_gate_cfg_webservice_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_load_gate_cfg_webservice_ReturnRecord>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace db {

// ===================================================================

class GateCfgWebservice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GateCfgWebservice) */ {
 public:
  GateCfgWebservice();
  virtual ~GateCfgWebservice();

  GateCfgWebservice(const GateCfgWebservice& from);

  inline GateCfgWebservice& operator=(const GateCfgWebservice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateCfgWebservice(GateCfgWebservice&& from) noexcept
    : GateCfgWebservice() {
    *this = ::std::move(from);
  }

  inline GateCfgWebservice& operator=(GateCfgWebservice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GateCfgWebservice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateCfgWebservice* internal_default_instance() {
    return reinterpret_cast<const GateCfgWebservice*>(
               &_GateCfgWebservice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(GateCfgWebservice* other);
  void Swap(GateCfgWebservice* other);
  friend void swap(GateCfgWebservice& a, GateCfgWebservice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateCfgWebservice* New() const final {
    return CreateMaybeMessage<GateCfgWebservice>(NULL);
  }

  GateCfgWebservice* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateCfgWebservice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateCfgWebservice& from);
  void MergeFrom(const GateCfgWebservice& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateCfgWebservice* other);
  protected:
  explicit GateCfgWebservice(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes sponsor_uid = 2;
  bool has_sponsor_uid() const;
  void clear_sponsor_uid();
  static const int kSponsorUidFieldNumber = 2;
  const ::std::string& sponsor_uid() const;
  void set_sponsor_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_sponsor_uid(::std::string&& value);
  #endif
  void set_sponsor_uid(const char* value);
  void set_sponsor_uid(const void* value, size_t size);
  ::std::string* mutable_sponsor_uid();
  ::std::string* release_sponsor_uid();
  void set_allocated_sponsor_uid(::std::string* sponsor_uid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_sponsor_uid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_sponsor_uid(
      ::std::string* sponsor_uid);

  // required bytes sponsor_desc = 3;
  bool has_sponsor_desc() const;
  void clear_sponsor_desc();
  static const int kSponsorDescFieldNumber = 3;
  const ::std::string& sponsor_desc() const;
  void set_sponsor_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_sponsor_desc(::std::string&& value);
  #endif
  void set_sponsor_desc(const char* value);
  void set_sponsor_desc(const void* value, size_t size);
  ::std::string* mutable_sponsor_desc();
  ::std::string* release_sponsor_desc();
  void set_allocated_sponsor_desc(::std::string* sponsor_desc);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_sponsor_desc();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_sponsor_desc(
      ::std::string* sponsor_desc);

  // required bytes platid = 4;
  bool has_platid() const;
  void clear_platid();
  static const int kPlatidFieldNumber = 4;
  const ::std::string& platid() const;
  void set_platid(const ::std::string& value);
  #if LANG_CXX11
  void set_platid(::std::string&& value);
  #endif
  void set_platid(const char* value);
  void set_platid(const void* value, size_t size);
  ::std::string* mutable_platid();
  ::std::string* release_platid();
  void set_allocated_platid(::std::string* platid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_platid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_platid(
      ::std::string* platid);

  // required bytes gameid = 5;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 5;
  const ::std::string& gameid() const;
  void set_gameid(const ::std::string& value);
  #if LANG_CXX11
  void set_gameid(::std::string&& value);
  #endif
  void set_gameid(const char* value);
  void set_gameid(const void* value, size_t size);
  ::std::string* mutable_gameid();
  ::std::string* release_gameid();
  void set_allocated_gameid(::std::string* gameid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_gameid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_gameid(
      ::std::string* gameid);

  // required bytes game_token = 6;
  bool has_game_token() const;
  void clear_game_token();
  static const int kGameTokenFieldNumber = 6;
  const ::std::string& game_token() const;
  void set_game_token(const ::std::string& value);
  #if LANG_CXX11
  void set_game_token(::std::string&& value);
  #endif
  void set_game_token(const char* value);
  void set_game_token(const void* value, size_t size);
  ::std::string* mutable_game_token();
  ::std::string* release_game_token();
  void set_allocated_game_token(::std::string* game_token);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_game_token();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_game_token(
      ::std::string* game_token);

  // required bytes auth_url = 7;
  bool has_auth_url() const;
  void clear_auth_url();
  static const int kAuthUrlFieldNumber = 7;
  const ::std::string& auth_url() const;
  void set_auth_url(const ::std::string& value);
  #if LANG_CXX11
  void set_auth_url(::std::string&& value);
  #endif
  void set_auth_url(const char* value);
  void set_auth_url(const void* value, size_t size);
  ::std::string* mutable_auth_url();
  ::std::string* release_auth_url();
  void set_allocated_auth_url(::std::string* auth_url);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_auth_url();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_auth_url(
      ::std::string* auth_url);

  // required int32 entryid = 1;
  bool has_entryid() const;
  void clear_entryid();
  static const int kEntryidFieldNumber = 1;
  ::google::protobuf::int32 entryid() const;
  void set_entryid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.GateCfgWebservice)
 private:
  void set_has_entryid();
  void clear_has_entryid();
  void set_has_sponsor_uid();
  void clear_has_sponsor_uid();
  void set_has_sponsor_desc();
  void clear_has_sponsor_desc();
  void set_has_platid();
  void clear_has_platid();
  void set_has_gameid();
  void clear_has_gameid();
  void set_has_game_token();
  void clear_has_game_token();
  void set_has_auth_url();
  void clear_has_auth_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sponsor_uid_;
  ::google::protobuf::internal::ArenaStringPtr sponsor_desc_;
  ::google::protobuf::internal::ArenaStringPtr platid_;
  ::google::protobuf::internal::ArenaStringPtr gameid_;
  ::google::protobuf::internal::ArenaStringPtr game_token_;
  ::google::protobuf::internal::ArenaStringPtr auth_url_;
  ::google::protobuf::int32 entryid_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_gate_cfg_webservice_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_gate_cfg_webservice.Parameter) */ {
 public:
  proc_load_gate_cfg_webservice_Parameter();
  virtual ~proc_load_gate_cfg_webservice_Parameter();

  proc_load_gate_cfg_webservice_Parameter(const proc_load_gate_cfg_webservice_Parameter& from);

  inline proc_load_gate_cfg_webservice_Parameter& operator=(const proc_load_gate_cfg_webservice_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_gate_cfg_webservice_Parameter(proc_load_gate_cfg_webservice_Parameter&& from) noexcept
    : proc_load_gate_cfg_webservice_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_load_gate_cfg_webservice_Parameter& operator=(proc_load_gate_cfg_webservice_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_gate_cfg_webservice_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_gate_cfg_webservice_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_load_gate_cfg_webservice_Parameter*>(
               &_proc_load_gate_cfg_webservice_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(proc_load_gate_cfg_webservice_Parameter* other);
  void Swap(proc_load_gate_cfg_webservice_Parameter* other);
  friend void swap(proc_load_gate_cfg_webservice_Parameter& a, proc_load_gate_cfg_webservice_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_gate_cfg_webservice_Parameter* New() const final {
    return CreateMaybeMessage<proc_load_gate_cfg_webservice_Parameter>(NULL);
  }

  proc_load_gate_cfg_webservice_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_gate_cfg_webservice_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_gate_cfg_webservice_Parameter& from);
  void MergeFrom(const proc_load_gate_cfg_webservice_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_gate_cfg_webservice_Parameter* other);
  protected:
  explicit proc_load_gate_cfg_webservice_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_load_gate_cfg_webservice.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_gate_cfg_webservice_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_gate_cfg_webservice.ReturnRecord) */ {
 public:
  proc_load_gate_cfg_webservice_ReturnRecord();
  virtual ~proc_load_gate_cfg_webservice_ReturnRecord();

  proc_load_gate_cfg_webservice_ReturnRecord(const proc_load_gate_cfg_webservice_ReturnRecord& from);

  inline proc_load_gate_cfg_webservice_ReturnRecord& operator=(const proc_load_gate_cfg_webservice_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_gate_cfg_webservice_ReturnRecord(proc_load_gate_cfg_webservice_ReturnRecord&& from) noexcept
    : proc_load_gate_cfg_webservice_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_load_gate_cfg_webservice_ReturnRecord& operator=(proc_load_gate_cfg_webservice_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_gate_cfg_webservice_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_gate_cfg_webservice_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_load_gate_cfg_webservice_ReturnRecord*>(
               &_proc_load_gate_cfg_webservice_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(proc_load_gate_cfg_webservice_ReturnRecord* other);
  void Swap(proc_load_gate_cfg_webservice_ReturnRecord* other);
  friend void swap(proc_load_gate_cfg_webservice_ReturnRecord& a, proc_load_gate_cfg_webservice_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_gate_cfg_webservice_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_load_gate_cfg_webservice_ReturnRecord>(NULL);
  }

  proc_load_gate_cfg_webservice_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_gate_cfg_webservice_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_gate_cfg_webservice_ReturnRecord& from);
  void MergeFrom(const proc_load_gate_cfg_webservice_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_gate_cfg_webservice_ReturnRecord* other);
  protected:
  explicit proc_load_gate_cfg_webservice_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.GateCfgWebservice cfg = 1;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 1;
  private:
  const ::db::GateCfgWebservice& _internal_cfg() const;
  public:
  const ::db::GateCfgWebservice& cfg() const;
  ::db::GateCfgWebservice* release_cfg();
  ::db::GateCfgWebservice* mutable_cfg();
  void set_allocated_cfg(::db::GateCfgWebservice* cfg);
  void unsafe_arena_set_allocated_cfg(
      ::db::GateCfgWebservice* cfg);
  ::db::GateCfgWebservice* unsafe_arena_release_cfg();

  // @@protoc_insertion_point(class_scope:db.proc_load_gate_cfg_webservice.ReturnRecord)
 private:
  void set_has_cfg();
  void clear_has_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::GateCfgWebservice* cfg_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_gate_cfg_webservice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_gate_cfg_webservice) */ {
 public:
  proc_load_gate_cfg_webservice();
  virtual ~proc_load_gate_cfg_webservice();

  proc_load_gate_cfg_webservice(const proc_load_gate_cfg_webservice& from);

  inline proc_load_gate_cfg_webservice& operator=(const proc_load_gate_cfg_webservice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_gate_cfg_webservice(proc_load_gate_cfg_webservice&& from) noexcept
    : proc_load_gate_cfg_webservice() {
    *this = ::std::move(from);
  }

  inline proc_load_gate_cfg_webservice& operator=(proc_load_gate_cfg_webservice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_gate_cfg_webservice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_gate_cfg_webservice* internal_default_instance() {
    return reinterpret_cast<const proc_load_gate_cfg_webservice*>(
               &_proc_load_gate_cfg_webservice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(proc_load_gate_cfg_webservice* other);
  void Swap(proc_load_gate_cfg_webservice* other);
  friend void swap(proc_load_gate_cfg_webservice& a, proc_load_gate_cfg_webservice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_gate_cfg_webservice* New() const final {
    return CreateMaybeMessage<proc_load_gate_cfg_webservice>(NULL);
  }

  proc_load_gate_cfg_webservice* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_gate_cfg_webservice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_gate_cfg_webservice& from);
  void MergeFrom(const proc_load_gate_cfg_webservice& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_gate_cfg_webservice* other);
  protected:
  explicit proc_load_gate_cfg_webservice(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_load_gate_cfg_webservice_Parameter Parameter;
  typedef proc_load_gate_cfg_webservice_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_load_gate_cfg_webservice.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_load_gate_cfg_webservice_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_cfg_webservice_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_load_gate_cfg_webservice_ReturnRecord& return_record_list(int index) const;
  ::db::proc_load_gate_cfg_webservice_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_cfg_webservice_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_load_gate_cfg_webservice.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_load_gate_cfg_webservice_Parameter& _internal_param() const;
  public:
  const ::db::proc_load_gate_cfg_webservice_Parameter& param() const;
  ::db::proc_load_gate_cfg_webservice_Parameter* release_param();
  ::db::proc_load_gate_cfg_webservice_Parameter* mutable_param();
  void set_allocated_param(::db::proc_load_gate_cfg_webservice_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_load_gate_cfg_webservice_Parameter* param);
  ::db::proc_load_gate_cfg_webservice_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_load_gate_cfg_webservice)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_cfg_webservice_ReturnRecord > return_record_list_;
  ::db::proc_load_gate_cfg_webservice_Parameter* param_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GateCfgInnerServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GateCfgInnerServer) */ {
 public:
  GateCfgInnerServer();
  virtual ~GateCfgInnerServer();

  GateCfgInnerServer(const GateCfgInnerServer& from);

  inline GateCfgInnerServer& operator=(const GateCfgInnerServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateCfgInnerServer(GateCfgInnerServer&& from) noexcept
    : GateCfgInnerServer() {
    *this = ::std::move(from);
  }

  inline GateCfgInnerServer& operator=(GateCfgInnerServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GateCfgInnerServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateCfgInnerServer* internal_default_instance() {
    return reinterpret_cast<const GateCfgInnerServer*>(
               &_GateCfgInnerServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(GateCfgInnerServer* other);
  void Swap(GateCfgInnerServer* other);
  friend void swap(GateCfgInnerServer& a, GateCfgInnerServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateCfgInnerServer* New() const final {
    return CreateMaybeMessage<GateCfgInnerServer>(NULL);
  }

  GateCfgInnerServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateCfgInnerServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateCfgInnerServer& from);
  void MergeFrom(const GateCfgInnerServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateCfgInnerServer* other);
  protected:
  explicit GateCfgInnerServer(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required bytes ip = 4;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ip();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ip(
      ::std::string* ip);

  // required bytes white_peerip = 7;
  bool has_white_peerip() const;
  void clear_white_peerip();
  static const int kWhitePeeripFieldNumber = 7;
  const ::std::string& white_peerip() const;
  void set_white_peerip(const ::std::string& value);
  #if LANG_CXX11
  void set_white_peerip(::std::string&& value);
  #endif
  void set_white_peerip(const char* value);
  void set_white_peerip(const void* value, size_t size);
  ::std::string* mutable_white_peerip();
  ::std::string* release_white_peerip();
  void set_allocated_white_peerip(::std::string* white_peerip);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_white_peerip();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_white_peerip(
      ::std::string* white_peerip);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 port = 5;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // required int32 visibility = 6;
  bool has_visibility() const;
  void clear_visibility();
  static const int kVisibilityFieldNumber = 6;
  ::google::protobuf::int32 visibility() const;
  void set_visibility(::google::protobuf::int32 value);

  // optional int32 enable = 11;
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 11;
  ::google::protobuf::int32 enable() const;
  void set_enable(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:db.GateCfgInnerServer)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();
  void set_has_visibility();
  void clear_has_visibility();
  void set_has_white_peerip();
  void clear_has_white_peerip();
  void set_has_enable();
  void clear_has_enable();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr white_peerip_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 visibility_;
  ::google::protobuf::int32 enable_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GateBanEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.GateBanEntry) */ {
 public:
  GateBanEntry();
  virtual ~GateBanEntry();

  GateBanEntry(const GateBanEntry& from);

  inline GateBanEntry& operator=(const GateBanEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GateBanEntry(GateBanEntry&& from) noexcept
    : GateBanEntry() {
    *this = ::std::move(from);
  }

  inline GateBanEntry& operator=(GateBanEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GateBanEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GateBanEntry* internal_default_instance() {
    return reinterpret_cast<const GateBanEntry*>(
               &_GateBanEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(GateBanEntry* other);
  void Swap(GateBanEntry* other);
  friend void swap(GateBanEntry& a, GateBanEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GateBanEntry* New() const final {
    return CreateMaybeMessage<GateBanEntry>(NULL);
  }

  GateBanEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GateBanEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GateBanEntry& from);
  void MergeFrom(const GateBanEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GateBanEntry* other);
  protected:
  explicit GateBanEntry(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes userid = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required bytes ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ip();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ip(
      ::std::string* ip);

  // required bytes ip_mask = 4;
  bool has_ip_mask() const;
  void clear_ip_mask();
  static const int kIpMaskFieldNumber = 4;
  const ::std::string& ip_mask() const;
  void set_ip_mask(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_mask(::std::string&& value);
  #endif
  void set_ip_mask(const char* value);
  void set_ip_mask(const void* value, size_t size);
  ::std::string* mutable_ip_mask();
  ::std::string* release_ip_mask();
  void set_allocated_ip_mask(::std::string* ip_mask);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ip_mask();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ip_mask(
      ::std::string* ip_mask);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required sfixed64 deadline = 11;
  bool has_deadline() const;
  void clear_deadline();
  static const int kDeadlineFieldNumber = 11;
  ::google::protobuf::int64 deadline() const;
  void set_deadline(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:db.GateBanEntry)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_userid();
  void clear_has_userid();
  void set_has_ip();
  void clear_has_ip();
  void set_has_ip_mask();
  void clear_has_ip_mask();
  void set_has_deadline();
  void clear_has_deadline();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ip_mask_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int64 deadline_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_gate_ban_entry_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_gate_ban_entry.Parameter) */ {
 public:
  proc_load_gate_ban_entry_Parameter();
  virtual ~proc_load_gate_ban_entry_Parameter();

  proc_load_gate_ban_entry_Parameter(const proc_load_gate_ban_entry_Parameter& from);

  inline proc_load_gate_ban_entry_Parameter& operator=(const proc_load_gate_ban_entry_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_gate_ban_entry_Parameter(proc_load_gate_ban_entry_Parameter&& from) noexcept
    : proc_load_gate_ban_entry_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_load_gate_ban_entry_Parameter& operator=(proc_load_gate_ban_entry_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_gate_ban_entry_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_gate_ban_entry_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_load_gate_ban_entry_Parameter*>(
               &_proc_load_gate_ban_entry_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(proc_load_gate_ban_entry_Parameter* other);
  void Swap(proc_load_gate_ban_entry_Parameter* other);
  friend void swap(proc_load_gate_ban_entry_Parameter& a, proc_load_gate_ban_entry_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_gate_ban_entry_Parameter* New() const final {
    return CreateMaybeMessage<proc_load_gate_ban_entry_Parameter>(NULL);
  }

  proc_load_gate_ban_entry_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_gate_ban_entry_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_gate_ban_entry_Parameter& from);
  void MergeFrom(const proc_load_gate_ban_entry_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_gate_ban_entry_Parameter* other);
  protected:
  explicit proc_load_gate_ban_entry_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_load_gate_ban_entry.Parameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_gate_ban_entry_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_gate_ban_entry.ReturnRecord) */ {
 public:
  proc_load_gate_ban_entry_ReturnRecord();
  virtual ~proc_load_gate_ban_entry_ReturnRecord();

  proc_load_gate_ban_entry_ReturnRecord(const proc_load_gate_ban_entry_ReturnRecord& from);

  inline proc_load_gate_ban_entry_ReturnRecord& operator=(const proc_load_gate_ban_entry_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_gate_ban_entry_ReturnRecord(proc_load_gate_ban_entry_ReturnRecord&& from) noexcept
    : proc_load_gate_ban_entry_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_load_gate_ban_entry_ReturnRecord& operator=(proc_load_gate_ban_entry_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_gate_ban_entry_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_gate_ban_entry_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_load_gate_ban_entry_ReturnRecord*>(
               &_proc_load_gate_ban_entry_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(proc_load_gate_ban_entry_ReturnRecord* other);
  void Swap(proc_load_gate_ban_entry_ReturnRecord* other);
  friend void swap(proc_load_gate_ban_entry_ReturnRecord& a, proc_load_gate_ban_entry_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_gate_ban_entry_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_load_gate_ban_entry_ReturnRecord>(NULL);
  }

  proc_load_gate_ban_entry_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_gate_ban_entry_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_gate_ban_entry_ReturnRecord& from);
  void MergeFrom(const proc_load_gate_ban_entry_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_gate_ban_entry_ReturnRecord* other);
  protected:
  explicit proc_load_gate_ban_entry_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.GateBanEntry entry = 1;
  bool has_entry() const;
  void clear_entry();
  static const int kEntryFieldNumber = 1;
  private:
  const ::db::GateBanEntry& _internal_entry() const;
  public:
  const ::db::GateBanEntry& entry() const;
  ::db::GateBanEntry* release_entry();
  ::db::GateBanEntry* mutable_entry();
  void set_allocated_entry(::db::GateBanEntry* entry);
  void unsafe_arena_set_allocated_entry(
      ::db::GateBanEntry* entry);
  ::db::GateBanEntry* unsafe_arena_release_entry();

  // @@protoc_insertion_point(class_scope:db.proc_load_gate_ban_entry.ReturnRecord)
 private:
  void set_has_entry();
  void clear_has_entry();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::GateBanEntry* entry_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_load_gate_ban_entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_load_gate_ban_entry) */ {
 public:
  proc_load_gate_ban_entry();
  virtual ~proc_load_gate_ban_entry();

  proc_load_gate_ban_entry(const proc_load_gate_ban_entry& from);

  inline proc_load_gate_ban_entry& operator=(const proc_load_gate_ban_entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_load_gate_ban_entry(proc_load_gate_ban_entry&& from) noexcept
    : proc_load_gate_ban_entry() {
    *this = ::std::move(from);
  }

  inline proc_load_gate_ban_entry& operator=(proc_load_gate_ban_entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_load_gate_ban_entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_load_gate_ban_entry* internal_default_instance() {
    return reinterpret_cast<const proc_load_gate_ban_entry*>(
               &_proc_load_gate_ban_entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(proc_load_gate_ban_entry* other);
  void Swap(proc_load_gate_ban_entry* other);
  friend void swap(proc_load_gate_ban_entry& a, proc_load_gate_ban_entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_load_gate_ban_entry* New() const final {
    return CreateMaybeMessage<proc_load_gate_ban_entry>(NULL);
  }

  proc_load_gate_ban_entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_load_gate_ban_entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_load_gate_ban_entry& from);
  void MergeFrom(const proc_load_gate_ban_entry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_load_gate_ban_entry* other);
  protected:
  explicit proc_load_gate_ban_entry(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_load_gate_ban_entry_Parameter Parameter;
  typedef proc_load_gate_ban_entry_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_load_gate_ban_entry.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_load_gate_ban_entry_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_ban_entry_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_load_gate_ban_entry_ReturnRecord& return_record_list(int index) const;
  ::db::proc_load_gate_ban_entry_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_ban_entry_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_load_gate_ban_entry.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_load_gate_ban_entry_Parameter& _internal_param() const;
  public:
  const ::db::proc_load_gate_ban_entry_Parameter& param() const;
  ::db::proc_load_gate_ban_entry_Parameter* release_param();
  ::db::proc_load_gate_ban_entry_Parameter* mutable_param();
  void set_allocated_param(::db::proc_load_gate_ban_entry_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_load_gate_ban_entry_Parameter* param);
  ::db::proc_load_gate_ban_entry_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_load_gate_ban_entry)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_ban_entry_ReturnRecord > return_record_list_;
  ::db::proc_load_gate_ban_entry_Parameter* param_;
  friend struct ::protobuf_GateSettings_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GateCfgWebservice

// required int32 entryid = 1;
inline bool GateCfgWebservice::has_entryid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GateCfgWebservice::set_has_entryid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GateCfgWebservice::clear_has_entryid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GateCfgWebservice::clear_entryid() {
  entryid_ = 0;
  clear_has_entryid();
}
inline ::google::protobuf::int32 GateCfgWebservice::entryid() const {
  // @@protoc_insertion_point(field_get:db.GateCfgWebservice.entryid)
  return entryid_;
}
inline void GateCfgWebservice::set_entryid(::google::protobuf::int32 value) {
  set_has_entryid();
  entryid_ = value;
  // @@protoc_insertion_point(field_set:db.GateCfgWebservice.entryid)
}

// required bytes sponsor_uid = 2;
inline bool GateCfgWebservice::has_sponsor_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateCfgWebservice::set_has_sponsor_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateCfgWebservice::clear_has_sponsor_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateCfgWebservice::clear_sponsor_uid() {
  sponsor_uid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_sponsor_uid();
}
inline const ::std::string& GateCfgWebservice::sponsor_uid() const {
  // @@protoc_insertion_point(field_get:db.GateCfgWebservice.sponsor_uid)
  return sponsor_uid_.Get();
}
inline void GateCfgWebservice::set_sponsor_uid(const ::std::string& value) {
  set_has_sponsor_uid();
  sponsor_uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgWebservice.sponsor_uid)
}
#if LANG_CXX11
inline void GateCfgWebservice::set_sponsor_uid(::std::string&& value) {
  set_has_sponsor_uid();
  sponsor_uid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgWebservice.sponsor_uid)
}
#endif
inline void GateCfgWebservice::set_sponsor_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sponsor_uid();
  sponsor_uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgWebservice.sponsor_uid)
}
inline void GateCfgWebservice::set_sponsor_uid(const void* value,
    size_t size) {
  set_has_sponsor_uid();
  sponsor_uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgWebservice.sponsor_uid)
}
inline ::std::string* GateCfgWebservice::mutable_sponsor_uid() {
  set_has_sponsor_uid();
  // @@protoc_insertion_point(field_mutable:db.GateCfgWebservice.sponsor_uid)
  return sponsor_uid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgWebservice::release_sponsor_uid() {
  // @@protoc_insertion_point(field_release:db.GateCfgWebservice.sponsor_uid)
  if (!has_sponsor_uid()) {
    return NULL;
  }
  clear_has_sponsor_uid();
  return sponsor_uid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgWebservice::set_allocated_sponsor_uid(::std::string* sponsor_uid) {
  if (sponsor_uid != NULL) {
    set_has_sponsor_uid();
  } else {
    clear_has_sponsor_uid();
  }
  sponsor_uid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sponsor_uid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgWebservice.sponsor_uid)
}
inline ::std::string* GateCfgWebservice::unsafe_arena_release_sponsor_uid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgWebservice.sponsor_uid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_sponsor_uid();
  return sponsor_uid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgWebservice::unsafe_arena_set_allocated_sponsor_uid(
    ::std::string* sponsor_uid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sponsor_uid != NULL) {
    set_has_sponsor_uid();
  } else {
    clear_has_sponsor_uid();
  }
  sponsor_uid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sponsor_uid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgWebservice.sponsor_uid)
}

// required bytes sponsor_desc = 3;
inline bool GateCfgWebservice::has_sponsor_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GateCfgWebservice::set_has_sponsor_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GateCfgWebservice::clear_has_sponsor_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GateCfgWebservice::clear_sponsor_desc() {
  sponsor_desc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_sponsor_desc();
}
inline const ::std::string& GateCfgWebservice::sponsor_desc() const {
  // @@protoc_insertion_point(field_get:db.GateCfgWebservice.sponsor_desc)
  return sponsor_desc_.Get();
}
inline void GateCfgWebservice::set_sponsor_desc(const ::std::string& value) {
  set_has_sponsor_desc();
  sponsor_desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgWebservice.sponsor_desc)
}
#if LANG_CXX11
inline void GateCfgWebservice::set_sponsor_desc(::std::string&& value) {
  set_has_sponsor_desc();
  sponsor_desc_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgWebservice.sponsor_desc)
}
#endif
inline void GateCfgWebservice::set_sponsor_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sponsor_desc();
  sponsor_desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgWebservice.sponsor_desc)
}
inline void GateCfgWebservice::set_sponsor_desc(const void* value,
    size_t size) {
  set_has_sponsor_desc();
  sponsor_desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgWebservice.sponsor_desc)
}
inline ::std::string* GateCfgWebservice::mutable_sponsor_desc() {
  set_has_sponsor_desc();
  // @@protoc_insertion_point(field_mutable:db.GateCfgWebservice.sponsor_desc)
  return sponsor_desc_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgWebservice::release_sponsor_desc() {
  // @@protoc_insertion_point(field_release:db.GateCfgWebservice.sponsor_desc)
  if (!has_sponsor_desc()) {
    return NULL;
  }
  clear_has_sponsor_desc();
  return sponsor_desc_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgWebservice::set_allocated_sponsor_desc(::std::string* sponsor_desc) {
  if (sponsor_desc != NULL) {
    set_has_sponsor_desc();
  } else {
    clear_has_sponsor_desc();
  }
  sponsor_desc_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sponsor_desc,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgWebservice.sponsor_desc)
}
inline ::std::string* GateCfgWebservice::unsafe_arena_release_sponsor_desc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgWebservice.sponsor_desc)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_sponsor_desc();
  return sponsor_desc_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgWebservice::unsafe_arena_set_allocated_sponsor_desc(
    ::std::string* sponsor_desc) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sponsor_desc != NULL) {
    set_has_sponsor_desc();
  } else {
    clear_has_sponsor_desc();
  }
  sponsor_desc_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sponsor_desc, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgWebservice.sponsor_desc)
}

// required bytes platid = 4;
inline bool GateCfgWebservice::has_platid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GateCfgWebservice::set_has_platid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GateCfgWebservice::clear_has_platid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GateCfgWebservice::clear_platid() {
  platid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_platid();
}
inline const ::std::string& GateCfgWebservice::platid() const {
  // @@protoc_insertion_point(field_get:db.GateCfgWebservice.platid)
  return platid_.Get();
}
inline void GateCfgWebservice::set_platid(const ::std::string& value) {
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgWebservice.platid)
}
#if LANG_CXX11
inline void GateCfgWebservice::set_platid(::std::string&& value) {
  set_has_platid();
  platid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgWebservice.platid)
}
#endif
inline void GateCfgWebservice::set_platid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgWebservice.platid)
}
inline void GateCfgWebservice::set_platid(const void* value,
    size_t size) {
  set_has_platid();
  platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgWebservice.platid)
}
inline ::std::string* GateCfgWebservice::mutable_platid() {
  set_has_platid();
  // @@protoc_insertion_point(field_mutable:db.GateCfgWebservice.platid)
  return platid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgWebservice::release_platid() {
  // @@protoc_insertion_point(field_release:db.GateCfgWebservice.platid)
  if (!has_platid()) {
    return NULL;
  }
  clear_has_platid();
  return platid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgWebservice::set_allocated_platid(::std::string* platid) {
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgWebservice.platid)
}
inline ::std::string* GateCfgWebservice::unsafe_arena_release_platid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgWebservice.platid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_platid();
  return platid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgWebservice::unsafe_arena_set_allocated_platid(
    ::std::string* platid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (platid != NULL) {
    set_has_platid();
  } else {
    clear_has_platid();
  }
  platid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      platid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgWebservice.platid)
}

// required bytes gameid = 5;
inline bool GateCfgWebservice::has_gameid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GateCfgWebservice::set_has_gameid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GateCfgWebservice::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GateCfgWebservice::clear_gameid() {
  gameid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_gameid();
}
inline const ::std::string& GateCfgWebservice::gameid() const {
  // @@protoc_insertion_point(field_get:db.GateCfgWebservice.gameid)
  return gameid_.Get();
}
inline void GateCfgWebservice::set_gameid(const ::std::string& value) {
  set_has_gameid();
  gameid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgWebservice.gameid)
}
#if LANG_CXX11
inline void GateCfgWebservice::set_gameid(::std::string&& value) {
  set_has_gameid();
  gameid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgWebservice.gameid)
}
#endif
inline void GateCfgWebservice::set_gameid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gameid();
  gameid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgWebservice.gameid)
}
inline void GateCfgWebservice::set_gameid(const void* value,
    size_t size) {
  set_has_gameid();
  gameid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgWebservice.gameid)
}
inline ::std::string* GateCfgWebservice::mutable_gameid() {
  set_has_gameid();
  // @@protoc_insertion_point(field_mutable:db.GateCfgWebservice.gameid)
  return gameid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgWebservice::release_gameid() {
  // @@protoc_insertion_point(field_release:db.GateCfgWebservice.gameid)
  if (!has_gameid()) {
    return NULL;
  }
  clear_has_gameid();
  return gameid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgWebservice::set_allocated_gameid(::std::string* gameid) {
  if (gameid != NULL) {
    set_has_gameid();
  } else {
    clear_has_gameid();
  }
  gameid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgWebservice.gameid)
}
inline ::std::string* GateCfgWebservice::unsafe_arena_release_gameid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgWebservice.gameid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_gameid();
  return gameid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgWebservice::unsafe_arena_set_allocated_gameid(
    ::std::string* gameid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (gameid != NULL) {
    set_has_gameid();
  } else {
    clear_has_gameid();
  }
  gameid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      gameid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgWebservice.gameid)
}

// required bytes game_token = 6;
inline bool GateCfgWebservice::has_game_token() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GateCfgWebservice::set_has_game_token() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GateCfgWebservice::clear_has_game_token() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GateCfgWebservice::clear_game_token() {
  game_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_game_token();
}
inline const ::std::string& GateCfgWebservice::game_token() const {
  // @@protoc_insertion_point(field_get:db.GateCfgWebservice.game_token)
  return game_token_.Get();
}
inline void GateCfgWebservice::set_game_token(const ::std::string& value) {
  set_has_game_token();
  game_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgWebservice.game_token)
}
#if LANG_CXX11
inline void GateCfgWebservice::set_game_token(::std::string&& value) {
  set_has_game_token();
  game_token_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgWebservice.game_token)
}
#endif
inline void GateCfgWebservice::set_game_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_token();
  game_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgWebservice.game_token)
}
inline void GateCfgWebservice::set_game_token(const void* value,
    size_t size) {
  set_has_game_token();
  game_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgWebservice.game_token)
}
inline ::std::string* GateCfgWebservice::mutable_game_token() {
  set_has_game_token();
  // @@protoc_insertion_point(field_mutable:db.GateCfgWebservice.game_token)
  return game_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgWebservice::release_game_token() {
  // @@protoc_insertion_point(field_release:db.GateCfgWebservice.game_token)
  if (!has_game_token()) {
    return NULL;
  }
  clear_has_game_token();
  return game_token_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgWebservice::set_allocated_game_token(::std::string* game_token) {
  if (game_token != NULL) {
    set_has_game_token();
  } else {
    clear_has_game_token();
  }
  game_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgWebservice.game_token)
}
inline ::std::string* GateCfgWebservice::unsafe_arena_release_game_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgWebservice.game_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_game_token();
  return game_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgWebservice::unsafe_arena_set_allocated_game_token(
    ::std::string* game_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (game_token != NULL) {
    set_has_game_token();
  } else {
    clear_has_game_token();
  }
  game_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      game_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgWebservice.game_token)
}

// required bytes auth_url = 7;
inline bool GateCfgWebservice::has_auth_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GateCfgWebservice::set_has_auth_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GateCfgWebservice::clear_has_auth_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GateCfgWebservice::clear_auth_url() {
  auth_url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_auth_url();
}
inline const ::std::string& GateCfgWebservice::auth_url() const {
  // @@protoc_insertion_point(field_get:db.GateCfgWebservice.auth_url)
  return auth_url_.Get();
}
inline void GateCfgWebservice::set_auth_url(const ::std::string& value) {
  set_has_auth_url();
  auth_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgWebservice.auth_url)
}
#if LANG_CXX11
inline void GateCfgWebservice::set_auth_url(::std::string&& value) {
  set_has_auth_url();
  auth_url_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgWebservice.auth_url)
}
#endif
inline void GateCfgWebservice::set_auth_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_auth_url();
  auth_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgWebservice.auth_url)
}
inline void GateCfgWebservice::set_auth_url(const void* value,
    size_t size) {
  set_has_auth_url();
  auth_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgWebservice.auth_url)
}
inline ::std::string* GateCfgWebservice::mutable_auth_url() {
  set_has_auth_url();
  // @@protoc_insertion_point(field_mutable:db.GateCfgWebservice.auth_url)
  return auth_url_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgWebservice::release_auth_url() {
  // @@protoc_insertion_point(field_release:db.GateCfgWebservice.auth_url)
  if (!has_auth_url()) {
    return NULL;
  }
  clear_has_auth_url();
  return auth_url_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgWebservice::set_allocated_auth_url(::std::string* auth_url) {
  if (auth_url != NULL) {
    set_has_auth_url();
  } else {
    clear_has_auth_url();
  }
  auth_url_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_url,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgWebservice.auth_url)
}
inline ::std::string* GateCfgWebservice::unsafe_arena_release_auth_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgWebservice.auth_url)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_auth_url();
  return auth_url_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgWebservice::unsafe_arena_set_allocated_auth_url(
    ::std::string* auth_url) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (auth_url != NULL) {
    set_has_auth_url();
  } else {
    clear_has_auth_url();
  }
  auth_url_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      auth_url, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgWebservice.auth_url)
}

// -------------------------------------------------------------------

// proc_load_gate_cfg_webservice_Parameter

// -------------------------------------------------------------------

// proc_load_gate_cfg_webservice_ReturnRecord

// required .db.GateCfgWebservice cfg = 1;
inline bool proc_load_gate_cfg_webservice_ReturnRecord::has_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_gate_cfg_webservice_ReturnRecord::set_has_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_gate_cfg_webservice_ReturnRecord::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_gate_cfg_webservice_ReturnRecord::clear_cfg() {
  if (cfg_ != NULL) cfg_->Clear();
  clear_has_cfg();
}
inline const ::db::GateCfgWebservice& proc_load_gate_cfg_webservice_ReturnRecord::_internal_cfg() const {
  return *cfg_;
}
inline const ::db::GateCfgWebservice& proc_load_gate_cfg_webservice_ReturnRecord::cfg() const {
  const ::db::GateCfgWebservice* p = cfg_;
  // @@protoc_insertion_point(field_get:db.proc_load_gate_cfg_webservice.ReturnRecord.cfg)
  return p != NULL ? *p : *reinterpret_cast<const ::db::GateCfgWebservice*>(
      &::db::_GateCfgWebservice_default_instance_);
}
inline ::db::GateCfgWebservice* proc_load_gate_cfg_webservice_ReturnRecord::release_cfg() {
  // @@protoc_insertion_point(field_release:db.proc_load_gate_cfg_webservice.ReturnRecord.cfg)
  clear_has_cfg();
  ::db::GateCfgWebservice* temp = cfg_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  cfg_ = NULL;
  return temp;
}
inline ::db::GateCfgWebservice* proc_load_gate_cfg_webservice_ReturnRecord::unsafe_arena_release_cfg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_gate_cfg_webservice.ReturnRecord.cfg)
  clear_has_cfg();
  ::db::GateCfgWebservice* temp = cfg_;
  cfg_ = NULL;
  return temp;
}
inline ::db::GateCfgWebservice* proc_load_gate_cfg_webservice_ReturnRecord::mutable_cfg() {
  set_has_cfg();
  if (cfg_ == NULL) {
    auto* p = CreateMaybeMessage<::db::GateCfgWebservice>(GetArenaNoVirtual());
    cfg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_gate_cfg_webservice.ReturnRecord.cfg)
  return cfg_;
}
inline void proc_load_gate_cfg_webservice_ReturnRecord::set_allocated_cfg(::db::GateCfgWebservice* cfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cfg_;
  }
  if (cfg) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(cfg);
    if (message_arena != submessage_arena) {
      cfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cfg, submessage_arena);
    }
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  cfg_ = cfg;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_gate_cfg_webservice.ReturnRecord.cfg)
}

// -------------------------------------------------------------------

// proc_load_gate_cfg_webservice

// optional .db.proc_load_gate_cfg_webservice.Parameter param = 1;
inline bool proc_load_gate_cfg_webservice::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_gate_cfg_webservice::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_gate_cfg_webservice::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_gate_cfg_webservice::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_load_gate_cfg_webservice_Parameter& proc_load_gate_cfg_webservice::_internal_param() const {
  return *param_;
}
inline const ::db::proc_load_gate_cfg_webservice_Parameter& proc_load_gate_cfg_webservice::param() const {
  const ::db::proc_load_gate_cfg_webservice_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_load_gate_cfg_webservice.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_load_gate_cfg_webservice_Parameter*>(
      &::db::_proc_load_gate_cfg_webservice_Parameter_default_instance_);
}
inline ::db::proc_load_gate_cfg_webservice_Parameter* proc_load_gate_cfg_webservice::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_load_gate_cfg_webservice.param)
  clear_has_param();
  ::db::proc_load_gate_cfg_webservice_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_gate_cfg_webservice_Parameter* proc_load_gate_cfg_webservice::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_gate_cfg_webservice.param)
  clear_has_param();
  ::db::proc_load_gate_cfg_webservice_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_gate_cfg_webservice_Parameter* proc_load_gate_cfg_webservice::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_load_gate_cfg_webservice_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_gate_cfg_webservice.param)
  return param_;
}
inline void proc_load_gate_cfg_webservice::set_allocated_param(::db::proc_load_gate_cfg_webservice_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_gate_cfg_webservice.param)
}

// repeated .db.proc_load_gate_cfg_webservice.ReturnRecord return_record_list = 2;
inline int proc_load_gate_cfg_webservice::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_load_gate_cfg_webservice::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_load_gate_cfg_webservice_ReturnRecord* proc_load_gate_cfg_webservice::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_load_gate_cfg_webservice.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_cfg_webservice_ReturnRecord >*
proc_load_gate_cfg_webservice::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_load_gate_cfg_webservice.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_load_gate_cfg_webservice_ReturnRecord& proc_load_gate_cfg_webservice::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_load_gate_cfg_webservice.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_load_gate_cfg_webservice_ReturnRecord* proc_load_gate_cfg_webservice::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_load_gate_cfg_webservice.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_cfg_webservice_ReturnRecord >&
proc_load_gate_cfg_webservice::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_load_gate_cfg_webservice.return_record_list)
  return return_record_list_;
}

// -------------------------------------------------------------------

// GateCfgInnerServer

// required int32 id = 1;
inline bool GateCfgInnerServer::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GateCfgInnerServer::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GateCfgInnerServer::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GateCfgInnerServer::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GateCfgInnerServer::id() const {
  // @@protoc_insertion_point(field_get:db.GateCfgInnerServer.id)
  return id_;
}
inline void GateCfgInnerServer::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.GateCfgInnerServer.id)
}

// required int32 type = 2;
inline bool GateCfgInnerServer::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GateCfgInnerServer::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GateCfgInnerServer::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GateCfgInnerServer::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GateCfgInnerServer::type() const {
  // @@protoc_insertion_point(field_get:db.GateCfgInnerServer.type)
  return type_;
}
inline void GateCfgInnerServer::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db.GateCfgInnerServer.type)
}

// required bytes name = 3;
inline bool GateCfgInnerServer::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateCfgInnerServer::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateCfgInnerServer::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateCfgInnerServer::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& GateCfgInnerServer::name() const {
  // @@protoc_insertion_point(field_get:db.GateCfgInnerServer.name)
  return name_.Get();
}
inline void GateCfgInnerServer::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgInnerServer.name)
}
#if LANG_CXX11
inline void GateCfgInnerServer::set_name(::std::string&& value) {
  set_has_name();
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgInnerServer.name)
}
#endif
inline void GateCfgInnerServer::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgInnerServer.name)
}
inline void GateCfgInnerServer::set_name(const void* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgInnerServer.name)
}
inline ::std::string* GateCfgInnerServer::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:db.GateCfgInnerServer.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgInnerServer::release_name() {
  // @@protoc_insertion_point(field_release:db.GateCfgInnerServer.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgInnerServer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgInnerServer.name)
}
inline ::std::string* GateCfgInnerServer::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgInnerServer.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgInnerServer::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgInnerServer.name)
}

// required bytes ip = 4;
inline bool GateCfgInnerServer::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GateCfgInnerServer::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GateCfgInnerServer::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GateCfgInnerServer::clear_ip() {
  ip_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_ip();
}
inline const ::std::string& GateCfgInnerServer::ip() const {
  // @@protoc_insertion_point(field_get:db.GateCfgInnerServer.ip)
  return ip_.Get();
}
inline void GateCfgInnerServer::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgInnerServer.ip)
}
#if LANG_CXX11
inline void GateCfgInnerServer::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgInnerServer.ip)
}
#endif
inline void GateCfgInnerServer::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgInnerServer.ip)
}
inline void GateCfgInnerServer::set_ip(const void* value,
    size_t size) {
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgInnerServer.ip)
}
inline ::std::string* GateCfgInnerServer::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:db.GateCfgInnerServer.ip)
  return ip_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgInnerServer::release_ip() {
  // @@protoc_insertion_point(field_release:db.GateCfgInnerServer.ip)
  if (!has_ip()) {
    return NULL;
  }
  clear_has_ip();
  return ip_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgInnerServer::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgInnerServer.ip)
}
inline ::std::string* GateCfgInnerServer::unsafe_arena_release_ip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgInnerServer.ip)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_ip();
  return ip_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgInnerServer::unsafe_arena_set_allocated_ip(
    ::std::string* ip) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ip, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgInnerServer.ip)
}

// required int32 port = 5;
inline bool GateCfgInnerServer::has_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GateCfgInnerServer::set_has_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GateCfgInnerServer::clear_has_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GateCfgInnerServer::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 GateCfgInnerServer::port() const {
  // @@protoc_insertion_point(field_get:db.GateCfgInnerServer.port)
  return port_;
}
inline void GateCfgInnerServer::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:db.GateCfgInnerServer.port)
}

// required int32 visibility = 6;
inline bool GateCfgInnerServer::has_visibility() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GateCfgInnerServer::set_has_visibility() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GateCfgInnerServer::clear_has_visibility() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GateCfgInnerServer::clear_visibility() {
  visibility_ = 0;
  clear_has_visibility();
}
inline ::google::protobuf::int32 GateCfgInnerServer::visibility() const {
  // @@protoc_insertion_point(field_get:db.GateCfgInnerServer.visibility)
  return visibility_;
}
inline void GateCfgInnerServer::set_visibility(::google::protobuf::int32 value) {
  set_has_visibility();
  visibility_ = value;
  // @@protoc_insertion_point(field_set:db.GateCfgInnerServer.visibility)
}

// required bytes white_peerip = 7;
inline bool GateCfgInnerServer::has_white_peerip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GateCfgInnerServer::set_has_white_peerip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GateCfgInnerServer::clear_has_white_peerip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GateCfgInnerServer::clear_white_peerip() {
  white_peerip_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_white_peerip();
}
inline const ::std::string& GateCfgInnerServer::white_peerip() const {
  // @@protoc_insertion_point(field_get:db.GateCfgInnerServer.white_peerip)
  return white_peerip_.Get();
}
inline void GateCfgInnerServer::set_white_peerip(const ::std::string& value) {
  set_has_white_peerip();
  white_peerip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateCfgInnerServer.white_peerip)
}
#if LANG_CXX11
inline void GateCfgInnerServer::set_white_peerip(::std::string&& value) {
  set_has_white_peerip();
  white_peerip_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateCfgInnerServer.white_peerip)
}
#endif
inline void GateCfgInnerServer::set_white_peerip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_white_peerip();
  white_peerip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateCfgInnerServer.white_peerip)
}
inline void GateCfgInnerServer::set_white_peerip(const void* value,
    size_t size) {
  set_has_white_peerip();
  white_peerip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateCfgInnerServer.white_peerip)
}
inline ::std::string* GateCfgInnerServer::mutable_white_peerip() {
  set_has_white_peerip();
  // @@protoc_insertion_point(field_mutable:db.GateCfgInnerServer.white_peerip)
  return white_peerip_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateCfgInnerServer::release_white_peerip() {
  // @@protoc_insertion_point(field_release:db.GateCfgInnerServer.white_peerip)
  if (!has_white_peerip()) {
    return NULL;
  }
  clear_has_white_peerip();
  return white_peerip_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateCfgInnerServer::set_allocated_white_peerip(::std::string* white_peerip) {
  if (white_peerip != NULL) {
    set_has_white_peerip();
  } else {
    clear_has_white_peerip();
  }
  white_peerip_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), white_peerip,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateCfgInnerServer.white_peerip)
}
inline ::std::string* GateCfgInnerServer::unsafe_arena_release_white_peerip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateCfgInnerServer.white_peerip)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_white_peerip();
  return white_peerip_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateCfgInnerServer::unsafe_arena_set_allocated_white_peerip(
    ::std::string* white_peerip) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (white_peerip != NULL) {
    set_has_white_peerip();
  } else {
    clear_has_white_peerip();
  }
  white_peerip_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      white_peerip, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateCfgInnerServer.white_peerip)
}

// optional int32 enable = 11;
inline bool GateCfgInnerServer::has_enable() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GateCfgInnerServer::set_has_enable() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GateCfgInnerServer::clear_has_enable() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GateCfgInnerServer::clear_enable() {
  enable_ = 0;
  clear_has_enable();
}
inline ::google::protobuf::int32 GateCfgInnerServer::enable() const {
  // @@protoc_insertion_point(field_get:db.GateCfgInnerServer.enable)
  return enable_;
}
inline void GateCfgInnerServer::set_enable(::google::protobuf::int32 value) {
  set_has_enable();
  enable_ = value;
  // @@protoc_insertion_point(field_set:db.GateCfgInnerServer.enable)
}

// -------------------------------------------------------------------

// GateBanEntry

// required int32 id = 1;
inline bool GateBanEntry::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GateBanEntry::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GateBanEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GateBanEntry::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GateBanEntry::id() const {
  // @@protoc_insertion_point(field_get:db.GateBanEntry.id)
  return id_;
}
inline void GateBanEntry::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:db.GateBanEntry.id)
}

// required bytes userid = 2;
inline bool GateBanEntry::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateBanEntry::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateBanEntry::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateBanEntry::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& GateBanEntry::userid() const {
  // @@protoc_insertion_point(field_get:db.GateBanEntry.userid)
  return userid_.Get();
}
inline void GateBanEntry::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateBanEntry.userid)
}
#if LANG_CXX11
inline void GateBanEntry::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateBanEntry.userid)
}
#endif
inline void GateBanEntry::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateBanEntry.userid)
}
inline void GateBanEntry::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateBanEntry.userid)
}
inline ::std::string* GateBanEntry::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.GateBanEntry.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateBanEntry::release_userid() {
  // @@protoc_insertion_point(field_release:db.GateBanEntry.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateBanEntry::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateBanEntry.userid)
}
inline ::std::string* GateBanEntry::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateBanEntry.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateBanEntry::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateBanEntry.userid)
}

// required bytes ip = 3;
inline bool GateBanEntry::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GateBanEntry::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GateBanEntry::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GateBanEntry::clear_ip() {
  ip_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_ip();
}
inline const ::std::string& GateBanEntry::ip() const {
  // @@protoc_insertion_point(field_get:db.GateBanEntry.ip)
  return ip_.Get();
}
inline void GateBanEntry::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateBanEntry.ip)
}
#if LANG_CXX11
inline void GateBanEntry::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateBanEntry.ip)
}
#endif
inline void GateBanEntry::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateBanEntry.ip)
}
inline void GateBanEntry::set_ip(const void* value,
    size_t size) {
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateBanEntry.ip)
}
inline ::std::string* GateBanEntry::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:db.GateBanEntry.ip)
  return ip_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateBanEntry::release_ip() {
  // @@protoc_insertion_point(field_release:db.GateBanEntry.ip)
  if (!has_ip()) {
    return NULL;
  }
  clear_has_ip();
  return ip_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateBanEntry::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateBanEntry.ip)
}
inline ::std::string* GateBanEntry::unsafe_arena_release_ip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateBanEntry.ip)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_ip();
  return ip_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateBanEntry::unsafe_arena_set_allocated_ip(
    ::std::string* ip) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ip, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateBanEntry.ip)
}

// required bytes ip_mask = 4;
inline bool GateBanEntry::has_ip_mask() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GateBanEntry::set_has_ip_mask() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GateBanEntry::clear_has_ip_mask() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GateBanEntry::clear_ip_mask() {
  ip_mask_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_ip_mask();
}
inline const ::std::string& GateBanEntry::ip_mask() const {
  // @@protoc_insertion_point(field_get:db.GateBanEntry.ip_mask)
  return ip_mask_.Get();
}
inline void GateBanEntry::set_ip_mask(const ::std::string& value) {
  set_has_ip_mask();
  ip_mask_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.GateBanEntry.ip_mask)
}
#if LANG_CXX11
inline void GateBanEntry::set_ip_mask(::std::string&& value) {
  set_has_ip_mask();
  ip_mask_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.GateBanEntry.ip_mask)
}
#endif
inline void GateBanEntry::set_ip_mask(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_mask();
  ip_mask_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.GateBanEntry.ip_mask)
}
inline void GateBanEntry::set_ip_mask(const void* value,
    size_t size) {
  set_has_ip_mask();
  ip_mask_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.GateBanEntry.ip_mask)
}
inline ::std::string* GateBanEntry::mutable_ip_mask() {
  set_has_ip_mask();
  // @@protoc_insertion_point(field_mutable:db.GateBanEntry.ip_mask)
  return ip_mask_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GateBanEntry::release_ip_mask() {
  // @@protoc_insertion_point(field_release:db.GateBanEntry.ip_mask)
  if (!has_ip_mask()) {
    return NULL;
  }
  clear_has_ip_mask();
  return ip_mask_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GateBanEntry::set_allocated_ip_mask(::std::string* ip_mask) {
  if (ip_mask != NULL) {
    set_has_ip_mask();
  } else {
    clear_has_ip_mask();
  }
  ip_mask_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_mask,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.GateBanEntry.ip_mask)
}
inline ::std::string* GateBanEntry::unsafe_arena_release_ip_mask() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.GateBanEntry.ip_mask)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_ip_mask();
  return ip_mask_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GateBanEntry::unsafe_arena_set_allocated_ip_mask(
    ::std::string* ip_mask) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ip_mask != NULL) {
    set_has_ip_mask();
  } else {
    clear_has_ip_mask();
  }
  ip_mask_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ip_mask, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.GateBanEntry.ip_mask)
}

// required sfixed64 deadline = 11;
inline bool GateBanEntry::has_deadline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GateBanEntry::set_has_deadline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GateBanEntry::clear_has_deadline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GateBanEntry::clear_deadline() {
  deadline_ = GOOGLE_LONGLONG(0);
  clear_has_deadline();
}
inline ::google::protobuf::int64 GateBanEntry::deadline() const {
  // @@protoc_insertion_point(field_get:db.GateBanEntry.deadline)
  return deadline_;
}
inline void GateBanEntry::set_deadline(::google::protobuf::int64 value) {
  set_has_deadline();
  deadline_ = value;
  // @@protoc_insertion_point(field_set:db.GateBanEntry.deadline)
}

// -------------------------------------------------------------------

// proc_load_gate_ban_entry_Parameter

// -------------------------------------------------------------------

// proc_load_gate_ban_entry_ReturnRecord

// required .db.GateBanEntry entry = 1;
inline bool proc_load_gate_ban_entry_ReturnRecord::has_entry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_gate_ban_entry_ReturnRecord::set_has_entry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_gate_ban_entry_ReturnRecord::clear_has_entry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_gate_ban_entry_ReturnRecord::clear_entry() {
  if (entry_ != NULL) entry_->Clear();
  clear_has_entry();
}
inline const ::db::GateBanEntry& proc_load_gate_ban_entry_ReturnRecord::_internal_entry() const {
  return *entry_;
}
inline const ::db::GateBanEntry& proc_load_gate_ban_entry_ReturnRecord::entry() const {
  const ::db::GateBanEntry* p = entry_;
  // @@protoc_insertion_point(field_get:db.proc_load_gate_ban_entry.ReturnRecord.entry)
  return p != NULL ? *p : *reinterpret_cast<const ::db::GateBanEntry*>(
      &::db::_GateBanEntry_default_instance_);
}
inline ::db::GateBanEntry* proc_load_gate_ban_entry_ReturnRecord::release_entry() {
  // @@protoc_insertion_point(field_release:db.proc_load_gate_ban_entry.ReturnRecord.entry)
  clear_has_entry();
  ::db::GateBanEntry* temp = entry_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  entry_ = NULL;
  return temp;
}
inline ::db::GateBanEntry* proc_load_gate_ban_entry_ReturnRecord::unsafe_arena_release_entry() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_gate_ban_entry.ReturnRecord.entry)
  clear_has_entry();
  ::db::GateBanEntry* temp = entry_;
  entry_ = NULL;
  return temp;
}
inline ::db::GateBanEntry* proc_load_gate_ban_entry_ReturnRecord::mutable_entry() {
  set_has_entry();
  if (entry_ == NULL) {
    auto* p = CreateMaybeMessage<::db::GateBanEntry>(GetArenaNoVirtual());
    entry_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_gate_ban_entry.ReturnRecord.entry)
  return entry_;
}
inline void proc_load_gate_ban_entry_ReturnRecord::set_allocated_entry(::db::GateBanEntry* entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete entry_;
  }
  if (entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(entry);
    if (message_arena != submessage_arena) {
      entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entry, submessage_arena);
    }
    set_has_entry();
  } else {
    clear_has_entry();
  }
  entry_ = entry;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_gate_ban_entry.ReturnRecord.entry)
}

// -------------------------------------------------------------------

// proc_load_gate_ban_entry

// optional .db.proc_load_gate_ban_entry.Parameter param = 1;
inline bool proc_load_gate_ban_entry::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_load_gate_ban_entry::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_load_gate_ban_entry::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_load_gate_ban_entry::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_load_gate_ban_entry_Parameter& proc_load_gate_ban_entry::_internal_param() const {
  return *param_;
}
inline const ::db::proc_load_gate_ban_entry_Parameter& proc_load_gate_ban_entry::param() const {
  const ::db::proc_load_gate_ban_entry_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_load_gate_ban_entry.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_load_gate_ban_entry_Parameter*>(
      &::db::_proc_load_gate_ban_entry_Parameter_default_instance_);
}
inline ::db::proc_load_gate_ban_entry_Parameter* proc_load_gate_ban_entry::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_load_gate_ban_entry.param)
  clear_has_param();
  ::db::proc_load_gate_ban_entry_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_gate_ban_entry_Parameter* proc_load_gate_ban_entry::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_load_gate_ban_entry.param)
  clear_has_param();
  ::db::proc_load_gate_ban_entry_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_load_gate_ban_entry_Parameter* proc_load_gate_ban_entry::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_load_gate_ban_entry_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_load_gate_ban_entry.param)
  return param_;
}
inline void proc_load_gate_ban_entry::set_allocated_param(::db::proc_load_gate_ban_entry_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_load_gate_ban_entry.param)
}

// repeated .db.proc_load_gate_ban_entry.ReturnRecord return_record_list = 2;
inline int proc_load_gate_ban_entry::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_load_gate_ban_entry::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_load_gate_ban_entry_ReturnRecord* proc_load_gate_ban_entry::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_load_gate_ban_entry.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_ban_entry_ReturnRecord >*
proc_load_gate_ban_entry::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_load_gate_ban_entry.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_load_gate_ban_entry_ReturnRecord& proc_load_gate_ban_entry::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_load_gate_ban_entry.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_load_gate_ban_entry_ReturnRecord* proc_load_gate_ban_entry::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_load_gate_ban_entry.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_load_gate_ban_entry_ReturnRecord >&
proc_load_gate_ban_entry::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_load_gate_ban_entry.return_record_list)
  return return_record_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_GateSettings_2eproto
