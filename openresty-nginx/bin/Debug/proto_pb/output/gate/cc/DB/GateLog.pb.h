// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateLog.proto

#ifndef PROTOBUF_INCLUDED_GateLog_2eproto
#define PROTOBUF_INCLUDED_GateLog_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_GateLog_2eproto 

namespace protobuf_GateLog_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_GateLog_2eproto
namespace db {
class LogOnline;
class LogOnlineDefaultTypeInternal;
extern LogOnlineDefaultTypeInternal _LogOnline_default_instance_;
class proc_gate_log_online;
class proc_gate_log_onlineDefaultTypeInternal;
extern proc_gate_log_onlineDefaultTypeInternal _proc_gate_log_online_default_instance_;
class proc_gate_log_online_Parameter;
class proc_gate_log_online_ParameterDefaultTypeInternal;
extern proc_gate_log_online_ParameterDefaultTypeInternal _proc_gate_log_online_Parameter_default_instance_;
class proc_gate_log_online_ReturnRecord;
class proc_gate_log_online_ReturnRecordDefaultTypeInternal;
extern proc_gate_log_online_ReturnRecordDefaultTypeInternal _proc_gate_log_online_ReturnRecord_default_instance_;
}  // namespace db
namespace google {
namespace protobuf {
template<> ::db::LogOnline* Arena::CreateMaybeMessage<::db::LogOnline>(Arena*);
template<> ::db::proc_gate_log_online* Arena::CreateMaybeMessage<::db::proc_gate_log_online>(Arena*);
template<> ::db::proc_gate_log_online_Parameter* Arena::CreateMaybeMessage<::db::proc_gate_log_online_Parameter>(Arena*);
template<> ::db::proc_gate_log_online_ReturnRecord* Arena::CreateMaybeMessage<::db::proc_gate_log_online_ReturnRecord>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace db {

enum LogOnline_ACTION_TYPE {
  LogOnline_ACTION_TYPE_ONLINE = 1,
  LogOnline_ACTION_TYPE_OFFLINE = 2,
  LogOnline_ACTION_TYPE_HEARTBEAT = 3
};
bool LogOnline_ACTION_TYPE_IsValid(int value);
const LogOnline_ACTION_TYPE LogOnline_ACTION_TYPE_ACTION_TYPE_MIN = LogOnline_ACTION_TYPE_ONLINE;
const LogOnline_ACTION_TYPE LogOnline_ACTION_TYPE_ACTION_TYPE_MAX = LogOnline_ACTION_TYPE_HEARTBEAT;
const int LogOnline_ACTION_TYPE_ACTION_TYPE_ARRAYSIZE = LogOnline_ACTION_TYPE_ACTION_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* LogOnline_ACTION_TYPE_descriptor();
inline const ::std::string& LogOnline_ACTION_TYPE_Name(LogOnline_ACTION_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    LogOnline_ACTION_TYPE_descriptor(), value);
}
inline bool LogOnline_ACTION_TYPE_Parse(
    const ::std::string& name, LogOnline_ACTION_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LogOnline_ACTION_TYPE>(
    LogOnline_ACTION_TYPE_descriptor(), name, value);
}
// ===================================================================

class LogOnline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.LogOnline) */ {
 public:
  LogOnline();
  virtual ~LogOnline();

  LogOnline(const LogOnline& from);

  inline LogOnline& operator=(const LogOnline& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogOnline(LogOnline&& from) noexcept
    : LogOnline() {
    *this = ::std::move(from);
  }

  inline LogOnline& operator=(LogOnline&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogOnline& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogOnline* internal_default_instance() {
    return reinterpret_cast<const LogOnline*>(
               &_LogOnline_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(LogOnline* other);
  void Swap(LogOnline* other);
  friend void swap(LogOnline& a, LogOnline& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogOnline* New() const final {
    return CreateMaybeMessage<LogOnline>(NULL);
  }

  LogOnline* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LogOnline>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LogOnline& from);
  void MergeFrom(const LogOnline& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LogOnline* other);
  protected:
  explicit LogOnline(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LogOnline_ACTION_TYPE ACTION_TYPE;
  static const ACTION_TYPE ONLINE =
    LogOnline_ACTION_TYPE_ONLINE;
  static const ACTION_TYPE OFFLINE =
    LogOnline_ACTION_TYPE_OFFLINE;
  static const ACTION_TYPE HEARTBEAT =
    LogOnline_ACTION_TYPE_HEARTBEAT;
  static inline bool ACTION_TYPE_IsValid(int value) {
    return LogOnline_ACTION_TYPE_IsValid(value);
  }
  static const ACTION_TYPE ACTION_TYPE_MIN =
    LogOnline_ACTION_TYPE_ACTION_TYPE_MIN;
  static const ACTION_TYPE ACTION_TYPE_MAX =
    LogOnline_ACTION_TYPE_ACTION_TYPE_MAX;
  static const int ACTION_TYPE_ARRAYSIZE =
    LogOnline_ACTION_TYPE_ACTION_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ACTION_TYPE_descriptor() {
    return LogOnline_ACTION_TYPE_descriptor();
  }
  static inline const ::std::string& ACTION_TYPE_Name(ACTION_TYPE value) {
    return LogOnline_ACTION_TYPE_Name(value);
  }
  static inline bool ACTION_TYPE_Parse(const ::std::string& name,
      ACTION_TYPE* value) {
    return LogOnline_ACTION_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required bytes userid = 5;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 5;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const void* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_userid();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_userid(
      ::std::string* userid);

  // required bytes nick = 6;
  bool has_nick() const;
  void clear_nick();
  static const int kNickFieldNumber = 6;
  const ::std::string& nick() const;
  void set_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_nick(::std::string&& value);
  #endif
  void set_nick(const char* value);
  void set_nick(const void* value, size_t size);
  ::std::string* mutable_nick();
  ::std::string* release_nick();
  void set_allocated_nick(::std::string* nick);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_nick();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_nick(
      ::std::string* nick);

  // required bytes ip = 7;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 7;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_ip();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_ip(
      ::std::string* ip);

  // required uint64 subid = 1;
  bool has_subid() const;
  void clear_subid();
  static const int kSubidFieldNumber = 1;
  ::google::protobuf::uint64 subid() const;
  void set_subid(::google::protobuf::uint64 value);

  // required sfixed64 action_time = 2;
  bool has_action_time() const;
  void clear_action_time();
  static const int kActionTimeFieldNumber = 2;
  ::google::protobuf::int64 action_time() const;
  void set_action_time(::google::protobuf::int64 value);

  // optional uint64 serverid = 11;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 11;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // required int32 entry_id = 4;
  bool has_entry_id() const;
  void clear_entry_id();
  static const int kEntryIdFieldNumber = 4;
  ::google::protobuf::int32 entry_id() const;
  void set_entry_id(::google::protobuf::int32 value);

  // optional int32 concurrent_users = 21;
  bool has_concurrent_users() const;
  void clear_concurrent_users();
  static const int kConcurrentUsersFieldNumber = 21;
  ::google::protobuf::int32 concurrent_users() const;
  void set_concurrent_users(::google::protobuf::int32 value);

  // required .db.LogOnline.ACTION_TYPE action_type = 3;
  bool has_action_type() const;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 3;
  ::db::LogOnline_ACTION_TYPE action_type() const;
  void set_action_type(::db::LogOnline_ACTION_TYPE value);

  // @@protoc_insertion_point(class_scope:db.LogOnline)
 private:
  void set_has_subid();
  void clear_has_subid();
  void set_has_action_time();
  void clear_has_action_time();
  void set_has_action_type();
  void clear_has_action_type();
  void set_has_entry_id();
  void clear_has_entry_id();
  void set_has_userid();
  void clear_has_userid();
  void set_has_nick();
  void clear_has_nick();
  void set_has_ip();
  void clear_has_ip();
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_concurrent_users();
  void clear_has_concurrent_users();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr nick_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 subid_;
  ::google::protobuf::int64 action_time_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::int32 entry_id_;
  ::google::protobuf::int32 concurrent_users_;
  int action_type_;
  friend struct ::protobuf_GateLog_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_gate_log_online_Parameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_gate_log_online.Parameter) */ {
 public:
  proc_gate_log_online_Parameter();
  virtual ~proc_gate_log_online_Parameter();

  proc_gate_log_online_Parameter(const proc_gate_log_online_Parameter& from);

  inline proc_gate_log_online_Parameter& operator=(const proc_gate_log_online_Parameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_gate_log_online_Parameter(proc_gate_log_online_Parameter&& from) noexcept
    : proc_gate_log_online_Parameter() {
    *this = ::std::move(from);
  }

  inline proc_gate_log_online_Parameter& operator=(proc_gate_log_online_Parameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_gate_log_online_Parameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_gate_log_online_Parameter* internal_default_instance() {
    return reinterpret_cast<const proc_gate_log_online_Parameter*>(
               &_proc_gate_log_online_Parameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(proc_gate_log_online_Parameter* other);
  void Swap(proc_gate_log_online_Parameter* other);
  friend void swap(proc_gate_log_online_Parameter& a, proc_gate_log_online_Parameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_gate_log_online_Parameter* New() const final {
    return CreateMaybeMessage<proc_gate_log_online_Parameter>(NULL);
  }

  proc_gate_log_online_Parameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_gate_log_online_Parameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_gate_log_online_Parameter& from);
  void MergeFrom(const proc_gate_log_online_Parameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_gate_log_online_Parameter* other);
  protected:
  explicit proc_gate_log_online_Parameter(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .db.LogOnline p_log = 1;
  bool has_p_log() const;
  void clear_p_log();
  static const int kPLogFieldNumber = 1;
  private:
  const ::db::LogOnline& _internal_p_log() const;
  public:
  const ::db::LogOnline& p_log() const;
  ::db::LogOnline* release_p_log();
  ::db::LogOnline* mutable_p_log();
  void set_allocated_p_log(::db::LogOnline* p_log);
  void unsafe_arena_set_allocated_p_log(
      ::db::LogOnline* p_log);
  ::db::LogOnline* unsafe_arena_release_p_log();

  // @@protoc_insertion_point(class_scope:db.proc_gate_log_online.Parameter)
 private:
  void set_has_p_log();
  void clear_has_p_log();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::db::LogOnline* p_log_;
  friend struct ::protobuf_GateLog_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_gate_log_online_ReturnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_gate_log_online.ReturnRecord) */ {
 public:
  proc_gate_log_online_ReturnRecord();
  virtual ~proc_gate_log_online_ReturnRecord();

  proc_gate_log_online_ReturnRecord(const proc_gate_log_online_ReturnRecord& from);

  inline proc_gate_log_online_ReturnRecord& operator=(const proc_gate_log_online_ReturnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_gate_log_online_ReturnRecord(proc_gate_log_online_ReturnRecord&& from) noexcept
    : proc_gate_log_online_ReturnRecord() {
    *this = ::std::move(from);
  }

  inline proc_gate_log_online_ReturnRecord& operator=(proc_gate_log_online_ReturnRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_gate_log_online_ReturnRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_gate_log_online_ReturnRecord* internal_default_instance() {
    return reinterpret_cast<const proc_gate_log_online_ReturnRecord*>(
               &_proc_gate_log_online_ReturnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(proc_gate_log_online_ReturnRecord* other);
  void Swap(proc_gate_log_online_ReturnRecord* other);
  friend void swap(proc_gate_log_online_ReturnRecord& a, proc_gate_log_online_ReturnRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_gate_log_online_ReturnRecord* New() const final {
    return CreateMaybeMessage<proc_gate_log_online_ReturnRecord>(NULL);
  }

  proc_gate_log_online_ReturnRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_gate_log_online_ReturnRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_gate_log_online_ReturnRecord& from);
  void MergeFrom(const proc_gate_log_online_ReturnRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_gate_log_online_ReturnRecord* other);
  protected:
  explicit proc_gate_log_online_ReturnRecord(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:db.proc_gate_log_online.ReturnRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_GateLog_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class proc_gate_log_online : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:db.proc_gate_log_online) */ {
 public:
  proc_gate_log_online();
  virtual ~proc_gate_log_online();

  proc_gate_log_online(const proc_gate_log_online& from);

  inline proc_gate_log_online& operator=(const proc_gate_log_online& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  proc_gate_log_online(proc_gate_log_online&& from) noexcept
    : proc_gate_log_online() {
    *this = ::std::move(from);
  }

  inline proc_gate_log_online& operator=(proc_gate_log_online&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const proc_gate_log_online& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const proc_gate_log_online* internal_default_instance() {
    return reinterpret_cast<const proc_gate_log_online*>(
               &_proc_gate_log_online_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(proc_gate_log_online* other);
  void Swap(proc_gate_log_online* other);
  friend void swap(proc_gate_log_online& a, proc_gate_log_online& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline proc_gate_log_online* New() const final {
    return CreateMaybeMessage<proc_gate_log_online>(NULL);
  }

  proc_gate_log_online* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<proc_gate_log_online>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const proc_gate_log_online& from);
  void MergeFrom(const proc_gate_log_online& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(proc_gate_log_online* other);
  protected:
  explicit proc_gate_log_online(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef proc_gate_log_online_Parameter Parameter;
  typedef proc_gate_log_online_ReturnRecord ReturnRecord;

  // accessors -------------------------------------------------------

  // repeated .db.proc_gate_log_online.ReturnRecord return_record_list = 2;
  int return_record_list_size() const;
  void clear_return_record_list();
  static const int kReturnRecordListFieldNumber = 2;
  ::db::proc_gate_log_online_ReturnRecord* mutable_return_record_list(int index);
  ::google::protobuf::RepeatedPtrField< ::db::proc_gate_log_online_ReturnRecord >*
      mutable_return_record_list();
  const ::db::proc_gate_log_online_ReturnRecord& return_record_list(int index) const;
  ::db::proc_gate_log_online_ReturnRecord* add_return_record_list();
  const ::google::protobuf::RepeatedPtrField< ::db::proc_gate_log_online_ReturnRecord >&
      return_record_list() const;

  // optional .db.proc_gate_log_online.Parameter param = 1;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  private:
  const ::db::proc_gate_log_online_Parameter& _internal_param() const;
  public:
  const ::db::proc_gate_log_online_Parameter& param() const;
  ::db::proc_gate_log_online_Parameter* release_param();
  ::db::proc_gate_log_online_Parameter* mutable_param();
  void set_allocated_param(::db::proc_gate_log_online_Parameter* param);
  void unsafe_arena_set_allocated_param(
      ::db::proc_gate_log_online_Parameter* param);
  ::db::proc_gate_log_online_Parameter* unsafe_arena_release_param();

  // @@protoc_insertion_point(class_scope:db.proc_gate_log_online)
 private:
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db::proc_gate_log_online_ReturnRecord > return_record_list_;
  ::db::proc_gate_log_online_Parameter* param_;
  friend struct ::protobuf_GateLog_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LogOnline

// required uint64 subid = 1;
inline bool LogOnline::has_subid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogOnline::set_has_subid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogOnline::clear_has_subid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogOnline::clear_subid() {
  subid_ = GOOGLE_ULONGLONG(0);
  clear_has_subid();
}
inline ::google::protobuf::uint64 LogOnline::subid() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.subid)
  return subid_;
}
inline void LogOnline::set_subid(::google::protobuf::uint64 value) {
  set_has_subid();
  subid_ = value;
  // @@protoc_insertion_point(field_set:db.LogOnline.subid)
}

// required sfixed64 action_time = 2;
inline bool LogOnline::has_action_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogOnline::set_has_action_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogOnline::clear_has_action_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogOnline::clear_action_time() {
  action_time_ = GOOGLE_LONGLONG(0);
  clear_has_action_time();
}
inline ::google::protobuf::int64 LogOnline::action_time() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.action_time)
  return action_time_;
}
inline void LogOnline::set_action_time(::google::protobuf::int64 value) {
  set_has_action_time();
  action_time_ = value;
  // @@protoc_insertion_point(field_set:db.LogOnline.action_time)
}

// required .db.LogOnline.ACTION_TYPE action_type = 3;
inline bool LogOnline::has_action_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LogOnline::set_has_action_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LogOnline::clear_has_action_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LogOnline::clear_action_type() {
  action_type_ = 1;
  clear_has_action_type();
}
inline ::db::LogOnline_ACTION_TYPE LogOnline::action_type() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.action_type)
  return static_cast< ::db::LogOnline_ACTION_TYPE >(action_type_);
}
inline void LogOnline::set_action_type(::db::LogOnline_ACTION_TYPE value) {
  assert(::db::LogOnline_ACTION_TYPE_IsValid(value));
  set_has_action_type();
  action_type_ = value;
  // @@protoc_insertion_point(field_set:db.LogOnline.action_type)
}

// required int32 entry_id = 4;
inline bool LogOnline::has_entry_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogOnline::set_has_entry_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogOnline::clear_has_entry_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogOnline::clear_entry_id() {
  entry_id_ = 0;
  clear_has_entry_id();
}
inline ::google::protobuf::int32 LogOnline::entry_id() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.entry_id)
  return entry_id_;
}
inline void LogOnline::set_entry_id(::google::protobuf::int32 value) {
  set_has_entry_id();
  entry_id_ = value;
  // @@protoc_insertion_point(field_set:db.LogOnline.entry_id)
}

// required bytes userid = 5;
inline bool LogOnline::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogOnline::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogOnline::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogOnline::clear_userid() {
  userid_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_userid();
}
inline const ::std::string& LogOnline::userid() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.userid)
  return userid_.Get();
}
inline void LogOnline::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.LogOnline.userid)
}
#if LANG_CXX11
inline void LogOnline::set_userid(::std::string&& value) {
  set_has_userid();
  userid_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.LogOnline.userid)
}
#endif
inline void LogOnline::set_userid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.LogOnline.userid)
}
inline void LogOnline::set_userid(const void* value,
    size_t size) {
  set_has_userid();
  userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.LogOnline.userid)
}
inline ::std::string* LogOnline::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:db.LogOnline.userid)
  return userid_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* LogOnline::release_userid() {
  // @@protoc_insertion_point(field_release:db.LogOnline.userid)
  if (!has_userid()) {
    return NULL;
  }
  clear_has_userid();
  return userid_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void LogOnline::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.LogOnline.userid)
}
inline ::std::string* LogOnline::unsafe_arena_release_userid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.LogOnline.userid)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_userid();
  return userid_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void LogOnline::unsafe_arena_set_allocated_userid(
    ::std::string* userid) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      userid, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.LogOnline.userid)
}

// required bytes nick = 6;
inline bool LogOnline::has_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogOnline::set_has_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogOnline::clear_has_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogOnline::clear_nick() {
  nick_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_nick();
}
inline const ::std::string& LogOnline::nick() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.nick)
  return nick_.Get();
}
inline void LogOnline::set_nick(const ::std::string& value) {
  set_has_nick();
  nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.LogOnline.nick)
}
#if LANG_CXX11
inline void LogOnline::set_nick(::std::string&& value) {
  set_has_nick();
  nick_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.LogOnline.nick)
}
#endif
inline void LogOnline::set_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nick();
  nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.LogOnline.nick)
}
inline void LogOnline::set_nick(const void* value,
    size_t size) {
  set_has_nick();
  nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.LogOnline.nick)
}
inline ::std::string* LogOnline::mutable_nick() {
  set_has_nick();
  // @@protoc_insertion_point(field_mutable:db.LogOnline.nick)
  return nick_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* LogOnline::release_nick() {
  // @@protoc_insertion_point(field_release:db.LogOnline.nick)
  if (!has_nick()) {
    return NULL;
  }
  clear_has_nick();
  return nick_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void LogOnline::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    set_has_nick();
  } else {
    clear_has_nick();
  }
  nick_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.LogOnline.nick)
}
inline ::std::string* LogOnline::unsafe_arena_release_nick() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.LogOnline.nick)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_nick();
  return nick_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void LogOnline::unsafe_arena_set_allocated_nick(
    ::std::string* nick) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (nick != NULL) {
    set_has_nick();
  } else {
    clear_has_nick();
  }
  nick_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      nick, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.LogOnline.nick)
}

// required bytes ip = 7;
inline bool LogOnline::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogOnline::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogOnline::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogOnline::clear_ip() {
  ip_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_ip();
}
inline const ::std::string& LogOnline::ip() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.ip)
  return ip_.Get();
}
inline void LogOnline::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:db.LogOnline.ip)
}
#if LANG_CXX11
inline void LogOnline::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:db.LogOnline.ip)
}
#endif
inline void LogOnline::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:db.LogOnline.ip)
}
inline void LogOnline::set_ip(const void* value,
    size_t size) {
  set_has_ip();
  ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:db.LogOnline.ip)
}
inline ::std::string* LogOnline::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:db.LogOnline.ip)
  return ip_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* LogOnline::release_ip() {
  // @@protoc_insertion_point(field_release:db.LogOnline.ip)
  if (!has_ip()) {
    return NULL;
  }
  clear_has_ip();
  return ip_.ReleaseNonDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void LogOnline::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:db.LogOnline.ip)
}
inline ::std::string* LogOnline::unsafe_arena_release_ip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.LogOnline.ip)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_ip();
  return ip_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void LogOnline::unsafe_arena_set_allocated_ip(
    ::std::string* ip) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ip, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.LogOnline.ip)
}

// optional uint64 serverid = 11;
inline bool LogOnline::has_serverid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogOnline::set_has_serverid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogOnline::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogOnline::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::uint64 LogOnline::serverid() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.serverid)
  return serverid_;
}
inline void LogOnline::set_serverid(::google::protobuf::uint64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:db.LogOnline.serverid)
}

// optional int32 concurrent_users = 21;
inline bool LogOnline::has_concurrent_users() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LogOnline::set_has_concurrent_users() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LogOnline::clear_has_concurrent_users() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LogOnline::clear_concurrent_users() {
  concurrent_users_ = 0;
  clear_has_concurrent_users();
}
inline ::google::protobuf::int32 LogOnline::concurrent_users() const {
  // @@protoc_insertion_point(field_get:db.LogOnline.concurrent_users)
  return concurrent_users_;
}
inline void LogOnline::set_concurrent_users(::google::protobuf::int32 value) {
  set_has_concurrent_users();
  concurrent_users_ = value;
  // @@protoc_insertion_point(field_set:db.LogOnline.concurrent_users)
}

// -------------------------------------------------------------------

// proc_gate_log_online_Parameter

// required .db.LogOnline p_log = 1;
inline bool proc_gate_log_online_Parameter::has_p_log() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_gate_log_online_Parameter::set_has_p_log() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_gate_log_online_Parameter::clear_has_p_log() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_gate_log_online_Parameter::clear_p_log() {
  if (p_log_ != NULL) p_log_->Clear();
  clear_has_p_log();
}
inline const ::db::LogOnline& proc_gate_log_online_Parameter::_internal_p_log() const {
  return *p_log_;
}
inline const ::db::LogOnline& proc_gate_log_online_Parameter::p_log() const {
  const ::db::LogOnline* p = p_log_;
  // @@protoc_insertion_point(field_get:db.proc_gate_log_online.Parameter.p_log)
  return p != NULL ? *p : *reinterpret_cast<const ::db::LogOnline*>(
      &::db::_LogOnline_default_instance_);
}
inline ::db::LogOnline* proc_gate_log_online_Parameter::release_p_log() {
  // @@protoc_insertion_point(field_release:db.proc_gate_log_online.Parameter.p_log)
  clear_has_p_log();
  ::db::LogOnline* temp = p_log_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  p_log_ = NULL;
  return temp;
}
inline ::db::LogOnline* proc_gate_log_online_Parameter::unsafe_arena_release_p_log() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_gate_log_online.Parameter.p_log)
  clear_has_p_log();
  ::db::LogOnline* temp = p_log_;
  p_log_ = NULL;
  return temp;
}
inline ::db::LogOnline* proc_gate_log_online_Parameter::mutable_p_log() {
  set_has_p_log();
  if (p_log_ == NULL) {
    auto* p = CreateMaybeMessage<::db::LogOnline>(GetArenaNoVirtual());
    p_log_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_gate_log_online.Parameter.p_log)
  return p_log_;
}
inline void proc_gate_log_online_Parameter::set_allocated_p_log(::db::LogOnline* p_log) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete p_log_;
  }
  if (p_log) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(p_log);
    if (message_arena != submessage_arena) {
      p_log = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, p_log, submessage_arena);
    }
    set_has_p_log();
  } else {
    clear_has_p_log();
  }
  p_log_ = p_log;
  // @@protoc_insertion_point(field_set_allocated:db.proc_gate_log_online.Parameter.p_log)
}

// -------------------------------------------------------------------

// proc_gate_log_online_ReturnRecord

// -------------------------------------------------------------------

// proc_gate_log_online

// optional .db.proc_gate_log_online.Parameter param = 1;
inline bool proc_gate_log_online::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proc_gate_log_online::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proc_gate_log_online::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proc_gate_log_online::clear_param() {
  if (param_ != NULL) param_->Clear();
  clear_has_param();
}
inline const ::db::proc_gate_log_online_Parameter& proc_gate_log_online::_internal_param() const {
  return *param_;
}
inline const ::db::proc_gate_log_online_Parameter& proc_gate_log_online::param() const {
  const ::db::proc_gate_log_online_Parameter* p = param_;
  // @@protoc_insertion_point(field_get:db.proc_gate_log_online.param)
  return p != NULL ? *p : *reinterpret_cast<const ::db::proc_gate_log_online_Parameter*>(
      &::db::_proc_gate_log_online_Parameter_default_instance_);
}
inline ::db::proc_gate_log_online_Parameter* proc_gate_log_online::release_param() {
  // @@protoc_insertion_point(field_release:db.proc_gate_log_online.param)
  clear_has_param();
  ::db::proc_gate_log_online_Parameter* temp = param_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  param_ = NULL;
  return temp;
}
inline ::db::proc_gate_log_online_Parameter* proc_gate_log_online::unsafe_arena_release_param() {
  // @@protoc_insertion_point(field_unsafe_arena_release:db.proc_gate_log_online.param)
  clear_has_param();
  ::db::proc_gate_log_online_Parameter* temp = param_;
  param_ = NULL;
  return temp;
}
inline ::db::proc_gate_log_online_Parameter* proc_gate_log_online::mutable_param() {
  set_has_param();
  if (param_ == NULL) {
    auto* p = CreateMaybeMessage<::db::proc_gate_log_online_Parameter>(GetArenaNoVirtual());
    param_ = p;
  }
  // @@protoc_insertion_point(field_mutable:db.proc_gate_log_online.param)
  return param_;
}
inline void proc_gate_log_online::set_allocated_param(::db::proc_gate_log_online_Parameter* param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete param_;
  }
  if (param) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(param);
    if (message_arena != submessage_arena) {
      param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, param, submessage_arena);
    }
    set_has_param();
  } else {
    clear_has_param();
  }
  param_ = param;
  // @@protoc_insertion_point(field_set_allocated:db.proc_gate_log_online.param)
}

// repeated .db.proc_gate_log_online.ReturnRecord return_record_list = 2;
inline int proc_gate_log_online::return_record_list_size() const {
  return return_record_list_.size();
}
inline void proc_gate_log_online::clear_return_record_list() {
  return_record_list_.Clear();
}
inline ::db::proc_gate_log_online_ReturnRecord* proc_gate_log_online::mutable_return_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:db.proc_gate_log_online.return_record_list)
  return return_record_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::db::proc_gate_log_online_ReturnRecord >*
proc_gate_log_online::mutable_return_record_list() {
  // @@protoc_insertion_point(field_mutable_list:db.proc_gate_log_online.return_record_list)
  return &return_record_list_;
}
inline const ::db::proc_gate_log_online_ReturnRecord& proc_gate_log_online::return_record_list(int index) const {
  // @@protoc_insertion_point(field_get:db.proc_gate_log_online.return_record_list)
  return return_record_list_.Get(index);
}
inline ::db::proc_gate_log_online_ReturnRecord* proc_gate_log_online::add_return_record_list() {
  // @@protoc_insertion_point(field_add:db.proc_gate_log_online.return_record_list)
  return return_record_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db::proc_gate_log_online_ReturnRecord >&
proc_gate_log_online::return_record_list() const {
  // @@protoc_insertion_point(field_list:db.proc_gate_log_online.return_record_list)
  return return_record_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace db

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::db::LogOnline_ACTION_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::db::LogOnline_ACTION_TYPE>() {
  return ::db::LogOnline_ACTION_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_GateLog_2eproto
