// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateAccount.proto

#include "GateAccount.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GateAccount_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateAccount_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_register_account_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateAccount_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_register_account_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateAccount_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_save_account_state_Parameter;
}  // namespace protobuf_GateAccount_2eproto
namespace db {
class GateAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateAccount>
      _instance;
} _GateAccount_default_instance_;
class proc_register_account_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_register_account_Parameter>
      _instance;
} _proc_register_account_Parameter_default_instance_;
class proc_register_account_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_register_account_ReturnRecord>
      _instance;
} _proc_register_account_ReturnRecord_default_instance_;
class proc_register_accountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_register_account>
      _instance;
} _proc_register_account_default_instance_;
class proc_save_account_state_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_save_account_state_Parameter>
      _instance;
} _proc_save_account_state_Parameter_default_instance_;
class proc_save_account_stateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_save_account_state>
      _instance;
} _proc_save_account_state_default_instance_;
class GateLogOnlineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateLogOnline>
      _instance;
} _GateLogOnline_default_instance_;
class GateCfgActiveCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateCfgActiveCode>
      _instance;
} _GateCfgActiveCode_default_instance_;
class GateActiveCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateActiveCode>
      _instance;
} _GateActiveCode_default_instance_;
}  // namespace db
namespace protobuf_GateAccount_2eproto {
static void InitDefaultsGateAccount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GateAccount_default_instance_;
    new (ptr) ::db::GateAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GateAccount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateAccount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateAccount}, {}};

static void InitDefaultsproc_register_account_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_register_account_Parameter_default_instance_;
    new (ptr) ::db::proc_register_account_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_register_account_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_register_account_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_register_account_Parameter}, {}};

static void InitDefaultsproc_register_account_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_register_account_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_register_account_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_register_account_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_register_account_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_register_account_ReturnRecord}, {}};

static void InitDefaultsproc_register_account() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_register_account_default_instance_;
    new (ptr) ::db::proc_register_account();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_register_account::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_register_account =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_register_account}, {
      &protobuf_GateAccount_2eproto::scc_info_proc_register_account_Parameter.base,
      &protobuf_GateAccount_2eproto::scc_info_proc_register_account_ReturnRecord.base,}};

static void InitDefaultsproc_save_account_state_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_save_account_state_Parameter_default_instance_;
    new (ptr) ::db::proc_save_account_state_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_save_account_state_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_save_account_state_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_save_account_state_Parameter}, {}};

static void InitDefaultsproc_save_account_state() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_save_account_state_default_instance_;
    new (ptr) ::db::proc_save_account_state();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_save_account_state::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_save_account_state =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_save_account_state}, {
      &protobuf_GateAccount_2eproto::scc_info_proc_save_account_state_Parameter.base,}};

static void InitDefaultsGateLogOnline() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GateLogOnline_default_instance_;
    new (ptr) ::db::GateLogOnline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GateLogOnline::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateLogOnline =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateLogOnline}, {}};

static void InitDefaultsGateCfgActiveCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GateCfgActiveCode_default_instance_;
    new (ptr) ::db::GateCfgActiveCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GateCfgActiveCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateCfgActiveCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateCfgActiveCode}, {}};

static void InitDefaultsGateActiveCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GateActiveCode_default_instance_;
    new (ptr) ::db::GateActiveCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GateActiveCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateActiveCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateActiveCode}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GateAccount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_register_account_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_register_account_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_register_account.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_save_account_state_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_save_account_state.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateLogOnline.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateCfgActiveCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateActiveCode.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, admin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, platid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, logintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateAccount, first_logintime_),
  0,
  1,
  2,
  3,
  6,
  7,
  4,
  5,
  9,
  8,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_admin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_platid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_Parameter, p_createtime_),
  0,
  1,
  2,
  3,
  6,
  7,
  4,
  5,
  9,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account_ReturnRecord, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_register_account, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_account_state_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_account_state_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_account_state_Parameter, p_userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_account_state_Parameter, p_state_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_account_state, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_account_state, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_save_account_state, param_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, admin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, platid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, ticketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, logintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateLogOnline, first_logintime_),
  0,
  1,
  2,
  3,
  6,
  7,
  4,
  5,
  9,
  8,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgActiveCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgActiveCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgActiveCode, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgActiveCode, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgActiveCode, begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgActiveCode, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgActiveCode, reward_typeid_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateActiveCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateActiveCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateActiveCode, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateActiveCode, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateActiveCode, active_time_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 19, sizeof(::db::GateAccount)},
  { 33, 48, sizeof(::db::proc_register_account_Parameter)},
  { 58, 64, sizeof(::db::proc_register_account_ReturnRecord)},
  { 65, 72, sizeof(::db::proc_register_account)},
  { 74, 81, sizeof(::db::proc_save_account_state_Parameter)},
  { 83, 89, sizeof(::db::proc_save_account_state)},
  { 90, 109, sizeof(::db::GateLogOnline)},
  { 123, 133, sizeof(::db::GateCfgActiveCode)},
  { 138, 146, sizeof(::db::GateActiveCode)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GateAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_register_account_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_register_account_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_register_account_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_save_account_state_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_save_account_state_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GateLogOnline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GateCfgActiveCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GateActiveCode_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GateAccount.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021GateAccount.proto\022\002db\"\370\001\n\013GateAccount\022"
      "\016\n\006userid\030\001 \002(\014\022\013\n\003pwd\030\002 \002(\014\022\014\n\004nick\030\003 \002"
      "(\014\022\r\n\005email\030\004 \002(\014\022\r\n\005level\030\005 \002(\005\022\r\n\005admi"
      "n\030\006 \002(\005\022\016\n\006platid\030\007 \002(\014\022\016\n\006gameid\030\010 \002(\014\022"
      "\r\n\005state\030\t \002(\005\022\022\n\ncreatetime\030\013 \002(\020\022\020\n\010ti"
      "cketid\030\025 \002(\005\022\020\n\010serverid\030\026 \002(\005\022\021\n\tlogint"
      "ime\030\027 \002(\020\022\027\n\017first_logintime\030\030 \002(\020\"\354\002\n\025p"
      "roc_register_account\0222\n\005param\030\001 \001(\0132#.db"
      ".proc_register_account.Parameter\022B\n\022retu"
      "rn_record_list\030\002 \003(\0132&.db.proc_register_"
      "account.ReturnRecord\032\272\001\n\tParameter\022\020\n\010p_"
      "userid\030\001 \002(\014\022\r\n\005p_pwd\030\002 \002(\014\022\016\n\006p_nick\030\003 "
      "\002(\014\022\017\n\007p_email\030\004 \002(\014\022\017\n\007p_level\030\005 \002(\005\022\017\n"
      "\007p_admin\030\006 \002(\005\022\020\n\010p_platid\030\007 \002(\014\022\020\n\010p_ga"
      "meid\030\010 \002(\014\022\017\n\007p_state\030\t \002(\005\022\024\n\014p_createt"
      "ime\030\n \002(\020\032\036\n\014ReturnRecord\022\016\n\006result\030\001 \002("
      "\005\"\177\n\027proc_save_account_state\0224\n\005param\030\001 "
      "\001(\0132%.db.proc_save_account_state.Paramet"
      "er\032.\n\tParameter\022\020\n\010p_userid\030\001 \002(\014\022\017\n\007p_s"
      "tate\030\002 \002(\005\"\372\001\n\rGateLogOnline\022\016\n\006userid\030\001"
      " \002(\014\022\013\n\003pwd\030\002 \002(\014\022\014\n\004nick\030\003 \002(\014\022\r\n\005email"
      "\030\004 \002(\014\022\r\n\005level\030\005 \002(\005\022\r\n\005admin\030\006 \002(\005\022\016\n\006"
      "platid\030\007 \002(\014\022\016\n\006gameid\030\010 \002(\014\022\r\n\005state\030\t "
      "\002(\005\022\022\n\ncreatetime\030\013 \002(\020\022\020\n\010ticketid\030\025 \002("
      "\005\022\020\n\010serverid\030\026 \002(\005\022\021\n\tlogintime\030\027 \002(\020\022\027"
      "\n\017first_logintime\030\030 \002(\020\"l\n\021GateCfgActive"
      "Code\022\014\n\004code\030\001 \002(\014\022\014\n\004desc\030\002 \002(\014\022\022\n\nbegi"
      "n_time\030\003 \002(\020\022\020\n\010end_time\030\004 \002(\020\022\025\n\rreward"
      "_typeid\030\005 \002(\004\"C\n\016GateActiveCode\022\014\n\004code\030"
      "\001 \002(\014\022\016\n\006userid\030\002 \002(\014\022\023\n\013active_time\030\003 \001"
      "(\020B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1207);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GateAccount.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GateAccount_2eproto
namespace db {

// ===================================================================

void GateAccount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateAccount::kUseridFieldNumber;
const int GateAccount::kPwdFieldNumber;
const int GateAccount::kNickFieldNumber;
const int GateAccount::kEmailFieldNumber;
const int GateAccount::kLevelFieldNumber;
const int GateAccount::kAdminFieldNumber;
const int GateAccount::kPlatidFieldNumber;
const int GateAccount::kGameidFieldNumber;
const int GateAccount::kStateFieldNumber;
const int GateAccount::kCreatetimeFieldNumber;
const int GateAccount::kTicketidFieldNumber;
const int GateAccount::kServeridFieldNumber;
const int GateAccount::kLogintimeFieldNumber;
const int GateAccount::kFirstLogintimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateAccount::GateAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_GateAccount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GateAccount)
}
GateAccount::GateAccount(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_GateAccount.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GateAccount)
}
GateAccount::GateAccount(const GateAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwd()) {
    pwd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email(),
      GetArenaNoVirtual());
  }
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platid()) {
    platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platid(),
      GetArenaNoVirtual());
  }
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid(),
      GetArenaNoVirtual());
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&first_logintime_) -
    reinterpret_cast<char*>(&level_)) + sizeof(first_logintime_));
  // @@protoc_insertion_point(copy_constructor:db.GateAccount)
}

void GateAccount::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_logintime_) -
      reinterpret_cast<char*>(&level_)) + sizeof(first_logintime_));
}

GateAccount::~GateAccount() {
  // @@protoc_insertion_point(destructor:db.GateAccount)
  SharedDtor();
}

void GateAccount::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateAccount::ArenaDtor(void* object) {
  GateAccount* _this = reinterpret_cast< GateAccount* >(object);
  (void)_this;
}
void GateAccount::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GateAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateAccount::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateAccount& GateAccount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_GateAccount.base);
  return *internal_default_instance();
}


void GateAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      pwd_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      email_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      platid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      gameid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&admin_) -
        reinterpret_cast<char*>(&level_)) + sizeof(admin_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&createtime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&first_logintime_) -
        reinterpret_cast<char*>(&createtime_)) + sizeof(first_logintime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GateAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GateAccount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes email = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 admin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_admin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &admin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes platid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes gameid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gameid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 createtime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ticketid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 serverid = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 logintime = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {
          set_has_logintime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 first_logintime = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {
          set_has_first_logintime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &first_logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GateAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GateAccount)
  return false;
#undef DO_
}

void GateAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pwd(), output);
  }

  // required bytes nick = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->nick(), output);
  }

  // required bytes email = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->email(), output);
  }

  // required int32 level = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // required int32 admin = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->admin(), output);
  }

  // required bytes platid = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->platid(), output);
  }

  // required bytes gameid = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->gameid(), output);
  }

  // required int32 state = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->state(), output);
  }

  // required sfixed64 createtime = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(11, this->createtime(), output);
  }

  // required int32 ticketid = 21;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->ticketid(), output);
  }

  // required int32 serverid = 22;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->serverid(), output);
  }

  // required sfixed64 logintime = 23;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(23, this->logintime(), output);
  }

  // required sfixed64 first_logintime = 24;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(24, this->first_logintime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GateAccount)
}

::google::protobuf::uint8* GateAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pwd(), target);
  }

  // required bytes nick = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->nick(), target);
  }

  // required bytes email = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->email(), target);
  }

  // required int32 level = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // required int32 admin = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->admin(), target);
  }

  // required bytes platid = 7;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->platid(), target);
  }

  // required bytes gameid = 8;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->gameid(), target);
  }

  // required int32 state = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->state(), target);
  }

  // required sfixed64 createtime = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(11, this->createtime(), target);
  }

  // required int32 ticketid = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->ticketid(), target);
  }

  // required int32 serverid = 22;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->serverid(), target);
  }

  // required sfixed64 logintime = 23;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(23, this->logintime(), target);
  }

  // required sfixed64 first_logintime = 24;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(24, this->first_logintime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GateAccount)
  return target;
}

size_t GateAccount::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GateAccount)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_pwd()) {
    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());
  }

  if (has_nick()) {
    // required bytes nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  if (has_email()) {
    // required bytes email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->email());
  }

  if (has_platid()) {
    // required bytes platid = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());
  }

  if (has_gameid()) {
    // required bytes gameid = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gameid());
  }

  if (has_level()) {
    // required int32 level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_admin()) {
    // required int32 admin = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->admin());
  }

  if (has_createtime()) {
    // required sfixed64 createtime = 11;
    total_size += 1 + 8;
  }

  if (has_state()) {
    // required int32 state = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_ticketid()) {
    // required int32 ticketid = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());
  }

  if (has_serverid()) {
    // required int32 serverid = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  if (has_logintime()) {
    // required sfixed64 logintime = 23;
    total_size += 2 + 8;
  }

  if (has_first_logintime()) {
    // required sfixed64 first_logintime = 24;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t GateAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GateAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00003fff) ^ 0x00003fff) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());

    // required bytes nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

    // required bytes email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->email());

    // required bytes platid = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());

    // required bytes gameid = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gameid());

    // required int32 level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 admin = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->admin());

    // required sfixed64 createtime = 11;
    total_size += 1 + 8;

    // required int32 state = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required int32 ticketid = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());

    // required int32 serverid = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());

    // required sfixed64 logintime = 23;
    total_size += 2 + 8;

    // required sfixed64 first_logintime = 24;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const GateAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GateAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GateAccount)
    MergeFrom(*source);
  }
}

void GateAccount::MergeFrom(const GateAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_pwd(from.pwd());
    }
    if (cached_has_bits & 0x00000004u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000008u) {
      set_email(from.email());
    }
    if (cached_has_bits & 0x00000010u) {
      set_platid(from.platid());
    }
    if (cached_has_bits & 0x00000020u) {
      set_gameid(from.gameid());
    }
    if (cached_has_bits & 0x00000040u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000080u) {
      admin_ = from.admin_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00000200u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000400u) {
      ticketid_ = from.ticketid_;
    }
    if (cached_has_bits & 0x00000800u) {
      serverid_ = from.serverid_;
    }
    if (cached_has_bits & 0x00001000u) {
      logintime_ = from.logintime_;
    }
    if (cached_has_bits & 0x00002000u) {
      first_logintime_ = from.first_logintime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GateAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateAccount::CopyFrom(const GateAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateAccount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003fff) != 0x00003fff) return false;
  return true;
}

void GateAccount::Swap(GateAccount* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GateAccount* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GateAccount::UnsafeArenaSwap(GateAccount* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GateAccount::InternalSwap(GateAccount* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pwd_.Swap(&other->pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platid_.Swap(&other->platid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gameid_.Swap(&other->gameid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  swap(admin_, other->admin_);
  swap(createtime_, other->createtime_);
  swap(state_, other->state_);
  swap(ticketid_, other->ticketid_);
  swap(serverid_, other->serverid_);
  swap(logintime_, other->logintime_);
  swap(first_logintime_, other->first_logintime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateAccount::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_register_account_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_register_account_Parameter::kPUseridFieldNumber;
const int proc_register_account_Parameter::kPPwdFieldNumber;
const int proc_register_account_Parameter::kPNickFieldNumber;
const int proc_register_account_Parameter::kPEmailFieldNumber;
const int proc_register_account_Parameter::kPLevelFieldNumber;
const int proc_register_account_Parameter::kPAdminFieldNumber;
const int proc_register_account_Parameter::kPPlatidFieldNumber;
const int proc_register_account_Parameter::kPGameidFieldNumber;
const int proc_register_account_Parameter::kPStateFieldNumber;
const int proc_register_account_Parameter::kPCreatetimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_register_account_Parameter::proc_register_account_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_proc_register_account_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_register_account.Parameter)
}
proc_register_account_Parameter::proc_register_account_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_register_account_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_register_account.Parameter)
}
proc_register_account_Parameter::proc_register_account_Parameter(const proc_register_account_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p_userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_userid()) {
    p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_userid(),
      GetArenaNoVirtual());
  }
  p_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_pwd()) {
    p_pwd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_pwd(),
      GetArenaNoVirtual());
  }
  p_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_nick()) {
    p_nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_nick(),
      GetArenaNoVirtual());
  }
  p_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_email()) {
    p_email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_email(),
      GetArenaNoVirtual());
  }
  p_platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_platid()) {
    p_platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_platid(),
      GetArenaNoVirtual());
  }
  p_gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_gameid()) {
    p_gameid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_gameid(),
      GetArenaNoVirtual());
  }
  ::memcpy(&p_level_, &from.p_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&p_state_) -
    reinterpret_cast<char*>(&p_level_)) + sizeof(p_state_));
  // @@protoc_insertion_point(copy_constructor:db.proc_register_account.Parameter)
}

void proc_register_account_Parameter::SharedCtor() {
  p_userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&p_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&p_state_) -
      reinterpret_cast<char*>(&p_level_)) + sizeof(p_state_));
}

proc_register_account_Parameter::~proc_register_account_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_register_account.Parameter)
  SharedDtor();
}

void proc_register_account_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  p_userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_platid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void proc_register_account_Parameter::ArenaDtor(void* object) {
  proc_register_account_Parameter* _this = reinterpret_cast< proc_register_account_Parameter* >(object);
  (void)_this;
}
void proc_register_account_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_register_account_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_register_account_Parameter::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_register_account_Parameter& proc_register_account_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_register_account_Parameter.base);
  return *internal_default_instance();
}


void proc_register_account_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_register_account.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      p_userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      p_pwd_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      p_nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      p_email_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      p_platid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      p_gameid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&p_level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&p_admin_) -
        reinterpret_cast<char*>(&p_level_)) + sizeof(p_admin_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&p_createtime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&p_state_) -
        reinterpret_cast<char*>(&p_createtime_)) + sizeof(p_state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_register_account_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_register_account.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes p_userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_pwd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_email = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_p_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p_admin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_p_admin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_admin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_platid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_platid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes p_gameid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_gameid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p_state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_p_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 p_createtime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_p_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &p_createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_register_account.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_register_account.Parameter)
  return false;
#undef DO_
}

void proc_register_account_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_register_account.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes p_userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->p_userid(), output);
  }

  // required bytes p_pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->p_pwd(), output);
  }

  // required bytes p_nick = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->p_nick(), output);
  }

  // required bytes p_email = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->p_email(), output);
  }

  // required int32 p_level = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->p_level(), output);
  }

  // required int32 p_admin = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->p_admin(), output);
  }

  // required bytes p_platid = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->p_platid(), output);
  }

  // required bytes p_gameid = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->p_gameid(), output);
  }

  // required int32 p_state = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->p_state(), output);
  }

  // required sfixed64 p_createtime = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->p_createtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_register_account.Parameter)
}

::google::protobuf::uint8* proc_register_account_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_register_account.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes p_userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->p_userid(), target);
  }

  // required bytes p_pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->p_pwd(), target);
  }

  // required bytes p_nick = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->p_nick(), target);
  }

  // required bytes p_email = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->p_email(), target);
  }

  // required int32 p_level = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->p_level(), target);
  }

  // required int32 p_admin = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->p_admin(), target);
  }

  // required bytes p_platid = 7;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->p_platid(), target);
  }

  // required bytes p_gameid = 8;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->p_gameid(), target);
  }

  // required int32 p_state = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->p_state(), target);
  }

  // required sfixed64 p_createtime = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->p_createtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_register_account.Parameter)
  return target;
}

size_t proc_register_account_Parameter::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.proc_register_account.Parameter)
  size_t total_size = 0;

  if (has_p_userid()) {
    // required bytes p_userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_userid());
  }

  if (has_p_pwd()) {
    // required bytes p_pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_pwd());
  }

  if (has_p_nick()) {
    // required bytes p_nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_nick());
  }

  if (has_p_email()) {
    // required bytes p_email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_email());
  }

  if (has_p_platid()) {
    // required bytes p_platid = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_platid());
  }

  if (has_p_gameid()) {
    // required bytes p_gameid = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_gameid());
  }

  if (has_p_level()) {
    // required int32 p_level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_level());
  }

  if (has_p_admin()) {
    // required int32 p_admin = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_admin());
  }

  if (has_p_createtime()) {
    // required sfixed64 p_createtime = 10;
    total_size += 1 + 8;
  }

  if (has_p_state()) {
    // required int32 p_state = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_state());
  }

  return total_size;
}
size_t proc_register_account_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_register_account.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required bytes p_userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_userid());

    // required bytes p_pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_pwd());

    // required bytes p_nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_nick());

    // required bytes p_email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_email());

    // required bytes p_platid = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_platid());

    // required bytes p_gameid = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_gameid());

    // required int32 p_level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_level());

    // required int32 p_admin = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_admin());

    // required sfixed64 p_createtime = 10;
    total_size += 1 + 8;

    // required int32 p_state = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_register_account_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_register_account.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_register_account_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_register_account_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_register_account.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_register_account.Parameter)
    MergeFrom(*source);
  }
}

void proc_register_account_Parameter::MergeFrom(const proc_register_account_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_register_account.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_p_userid(from.p_userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_p_pwd(from.p_pwd());
    }
    if (cached_has_bits & 0x00000004u) {
      set_p_nick(from.p_nick());
    }
    if (cached_has_bits & 0x00000008u) {
      set_p_email(from.p_email());
    }
    if (cached_has_bits & 0x00000010u) {
      set_p_platid(from.p_platid());
    }
    if (cached_has_bits & 0x00000020u) {
      set_p_gameid(from.p_gameid());
    }
    if (cached_has_bits & 0x00000040u) {
      p_level_ = from.p_level_;
    }
    if (cached_has_bits & 0x00000080u) {
      p_admin_ = from.p_admin_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      p_createtime_ = from.p_createtime_;
    }
    if (cached_has_bits & 0x00000200u) {
      p_state_ = from.p_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void proc_register_account_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_register_account.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_register_account_Parameter::CopyFrom(const proc_register_account_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_register_account.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_register_account_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;
  return true;
}

void proc_register_account_Parameter::Swap(proc_register_account_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_register_account_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_register_account_Parameter::UnsafeArenaSwap(proc_register_account_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_register_account_Parameter::InternalSwap(proc_register_account_Parameter* other) {
  using std::swap;
  p_userid_.Swap(&other->p_userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_pwd_.Swap(&other->p_pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_nick_.Swap(&other->p_nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_email_.Swap(&other->p_email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_platid_.Swap(&other->p_platid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  p_gameid_.Swap(&other->p_gameid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(p_level_, other->p_level_);
  swap(p_admin_, other->p_admin_);
  swap(p_createtime_, other->p_createtime_);
  swap(p_state_, other->p_state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_register_account_Parameter::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_register_account_ReturnRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_register_account_ReturnRecord::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_register_account_ReturnRecord::proc_register_account_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_proc_register_account_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_register_account.ReturnRecord)
}
proc_register_account_ReturnRecord::proc_register_account_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_register_account_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_register_account.ReturnRecord)
}
proc_register_account_ReturnRecord::proc_register_account_ReturnRecord(const proc_register_account_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:db.proc_register_account.ReturnRecord)
}

void proc_register_account_ReturnRecord::SharedCtor() {
  result_ = 0;
}

proc_register_account_ReturnRecord::~proc_register_account_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_register_account.ReturnRecord)
  SharedDtor();
}

void proc_register_account_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_register_account_ReturnRecord::ArenaDtor(void* object) {
  proc_register_account_ReturnRecord* _this = reinterpret_cast< proc_register_account_ReturnRecord* >(object);
  (void)_this;
}
void proc_register_account_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_register_account_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_register_account_ReturnRecord::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_register_account_ReturnRecord& proc_register_account_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_register_account_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_register_account_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_register_account.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_register_account_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_register_account.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_register_account.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_register_account.ReturnRecord)
  return false;
#undef DO_
}

void proc_register_account_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_register_account.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_register_account.ReturnRecord)
}

::google::protobuf::uint8* proc_register_account_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_register_account.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_register_account.ReturnRecord)
  return target;
}

size_t proc_register_account_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_register_account.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_register_account_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_register_account.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_register_account_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_register_account_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_register_account.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_register_account.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_register_account_ReturnRecord::MergeFrom(const proc_register_account_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_register_account.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void proc_register_account_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_register_account.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_register_account_ReturnRecord::CopyFrom(const proc_register_account_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_register_account.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_register_account_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void proc_register_account_ReturnRecord::Swap(proc_register_account_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_register_account_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_register_account_ReturnRecord::UnsafeArenaSwap(proc_register_account_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_register_account_ReturnRecord::InternalSwap(proc_register_account_ReturnRecord* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_register_account_ReturnRecord::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_register_account::InitAsDefaultInstance() {
  ::db::_proc_register_account_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_register_account_Parameter*>(
      ::db::proc_register_account_Parameter::internal_default_instance());
}
void proc_register_account::unsafe_arena_set_allocated_param(
    ::db::proc_register_account_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_register_account.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_register_account::kParamFieldNumber;
const int proc_register_account::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_register_account::proc_register_account()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_proc_register_account.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_register_account)
}
proc_register_account::proc_register_account(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_register_account.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_register_account)
}
proc_register_account::proc_register_account(const proc_register_account& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_register_account_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_register_account)
}

void proc_register_account::SharedCtor() {
  param_ = NULL;
}

proc_register_account::~proc_register_account() {
  // @@protoc_insertion_point(destructor:db.proc_register_account)
  SharedDtor();
}

void proc_register_account::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_register_account::ArenaDtor(void* object) {
  proc_register_account* _this = reinterpret_cast< proc_register_account* >(object);
  (void)_this;
}
void proc_register_account::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_register_account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_register_account::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_register_account& proc_register_account::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_register_account.base);
  return *internal_default_instance();
}


void proc_register_account::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_register_account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_register_account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_register_account)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_register_account.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_register_account.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_register_account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_register_account)
  return false;
#undef DO_
}

void proc_register_account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_register_account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_register_account.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_register_account.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_register_account)
}

::google::protobuf::uint8* proc_register_account::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_register_account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_register_account.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_register_account.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_register_account)
  return target;
}

size_t proc_register_account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_register_account)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_register_account.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_register_account.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_register_account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_register_account)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_register_account* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_register_account>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_register_account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_register_account)
    MergeFrom(*source);
  }
}

void proc_register_account::MergeFrom(const proc_register_account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_register_account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_register_account_Parameter::MergeFrom(from.param());
  }
}

void proc_register_account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_register_account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_register_account::CopyFrom(const proc_register_account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_register_account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_register_account::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_register_account::Swap(proc_register_account* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_register_account* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_register_account::UnsafeArenaSwap(proc_register_account* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_register_account::InternalSwap(proc_register_account* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_register_account::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_save_account_state_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_save_account_state_Parameter::kPUseridFieldNumber;
const int proc_save_account_state_Parameter::kPStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_save_account_state_Parameter::proc_save_account_state_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_proc_save_account_state_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_save_account_state.Parameter)
}
proc_save_account_state_Parameter::proc_save_account_state_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_save_account_state_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_save_account_state.Parameter)
}
proc_save_account_state_Parameter::proc_save_account_state_Parameter(const proc_save_account_state_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p_userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_p_userid()) {
    p_userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_userid(),
      GetArenaNoVirtual());
  }
  p_state_ = from.p_state_;
  // @@protoc_insertion_point(copy_constructor:db.proc_save_account_state.Parameter)
}

void proc_save_account_state_Parameter::SharedCtor() {
  p_userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_state_ = 0;
}

proc_save_account_state_Parameter::~proc_save_account_state_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_save_account_state.Parameter)
  SharedDtor();
}

void proc_save_account_state_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  p_userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void proc_save_account_state_Parameter::ArenaDtor(void* object) {
  proc_save_account_state_Parameter* _this = reinterpret_cast< proc_save_account_state_Parameter* >(object);
  (void)_this;
}
void proc_save_account_state_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_save_account_state_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_save_account_state_Parameter::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_save_account_state_Parameter& proc_save_account_state_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_save_account_state_Parameter.base);
  return *internal_default_instance();
}


void proc_save_account_state_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_save_account_state.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    p_userid_.ClearNonDefaultToEmpty();
  }
  p_state_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_save_account_state_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_save_account_state.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes p_userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_p_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_save_account_state.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_save_account_state.Parameter)
  return false;
#undef DO_
}

void proc_save_account_state_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_save_account_state.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes p_userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->p_userid(), output);
  }

  // required int32 p_state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->p_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_save_account_state.Parameter)
}

::google::protobuf::uint8* proc_save_account_state_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_save_account_state.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes p_userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->p_userid(), target);
  }

  // required int32 p_state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->p_state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_save_account_state.Parameter)
  return target;
}

size_t proc_save_account_state_Parameter::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.proc_save_account_state.Parameter)
  size_t total_size = 0;

  if (has_p_userid()) {
    // required bytes p_userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_userid());
  }

  if (has_p_state()) {
    // required int32 p_state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_state());
  }

  return total_size;
}
size_t proc_save_account_state_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_save_account_state.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes p_userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p_userid());

    // required int32 p_state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p_state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_save_account_state_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_save_account_state.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_save_account_state_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_save_account_state_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_save_account_state.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_save_account_state.Parameter)
    MergeFrom(*source);
  }
}

void proc_save_account_state_Parameter::MergeFrom(const proc_save_account_state_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_save_account_state.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_p_userid(from.p_userid());
    }
    if (cached_has_bits & 0x00000002u) {
      p_state_ = from.p_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void proc_save_account_state_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_save_account_state.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_save_account_state_Parameter::CopyFrom(const proc_save_account_state_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_save_account_state.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_save_account_state_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void proc_save_account_state_Parameter::Swap(proc_save_account_state_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_save_account_state_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_save_account_state_Parameter::UnsafeArenaSwap(proc_save_account_state_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_save_account_state_Parameter::InternalSwap(proc_save_account_state_Parameter* other) {
  using std::swap;
  p_userid_.Swap(&other->p_userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(p_state_, other->p_state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_save_account_state_Parameter::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_save_account_state::InitAsDefaultInstance() {
  ::db::_proc_save_account_state_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_save_account_state_Parameter*>(
      ::db::proc_save_account_state_Parameter::internal_default_instance());
}
void proc_save_account_state::unsafe_arena_set_allocated_param(
    ::db::proc_save_account_state_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_save_account_state.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_save_account_state::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_save_account_state::proc_save_account_state()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_proc_save_account_state.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_save_account_state)
}
proc_save_account_state::proc_save_account_state(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_save_account_state.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_save_account_state)
}
proc_save_account_state::proc_save_account_state(const proc_save_account_state& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_save_account_state_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_save_account_state)
}

void proc_save_account_state::SharedCtor() {
  param_ = NULL;
}

proc_save_account_state::~proc_save_account_state() {
  // @@protoc_insertion_point(destructor:db.proc_save_account_state)
  SharedDtor();
}

void proc_save_account_state::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_save_account_state::ArenaDtor(void* object) {
  proc_save_account_state* _this = reinterpret_cast< proc_save_account_state* >(object);
  (void)_this;
}
void proc_save_account_state::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_save_account_state::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_save_account_state::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_save_account_state& proc_save_account_state::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_proc_save_account_state.base);
  return *internal_default_instance();
}


void proc_save_account_state::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_save_account_state)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_save_account_state::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_save_account_state)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_save_account_state.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_save_account_state)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_save_account_state)
  return false;
#undef DO_
}

void proc_save_account_state::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_save_account_state)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_save_account_state.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_save_account_state)
}

::google::protobuf::uint8* proc_save_account_state::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_save_account_state)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_save_account_state.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_save_account_state)
  return target;
}

size_t proc_save_account_state::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_save_account_state)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .db.proc_save_account_state.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_save_account_state::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_save_account_state)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_save_account_state* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_save_account_state>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_save_account_state)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_save_account_state)
    MergeFrom(*source);
  }
}

void proc_save_account_state::MergeFrom(const proc_save_account_state& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_save_account_state)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param()) {
    mutable_param()->::db::proc_save_account_state_Parameter::MergeFrom(from.param());
  }
}

void proc_save_account_state::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_save_account_state)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_save_account_state::CopyFrom(const proc_save_account_state& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_save_account_state)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_save_account_state::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_save_account_state::Swap(proc_save_account_state* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_save_account_state* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_save_account_state::UnsafeArenaSwap(proc_save_account_state* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_save_account_state::InternalSwap(proc_save_account_state* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_save_account_state::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GateLogOnline::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateLogOnline::kUseridFieldNumber;
const int GateLogOnline::kPwdFieldNumber;
const int GateLogOnline::kNickFieldNumber;
const int GateLogOnline::kEmailFieldNumber;
const int GateLogOnline::kLevelFieldNumber;
const int GateLogOnline::kAdminFieldNumber;
const int GateLogOnline::kPlatidFieldNumber;
const int GateLogOnline::kGameidFieldNumber;
const int GateLogOnline::kStateFieldNumber;
const int GateLogOnline::kCreatetimeFieldNumber;
const int GateLogOnline::kTicketidFieldNumber;
const int GateLogOnline::kServeridFieldNumber;
const int GateLogOnline::kLogintimeFieldNumber;
const int GateLogOnline::kFirstLogintimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateLogOnline::GateLogOnline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_GateLogOnline.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GateLogOnline)
}
GateLogOnline::GateLogOnline(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_GateLogOnline.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GateLogOnline)
}
GateLogOnline::GateLogOnline(const GateLogOnline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwd()) {
    pwd_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email(),
      GetArenaNoVirtual());
  }
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platid()) {
    platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platid(),
      GetArenaNoVirtual());
  }
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid(),
      GetArenaNoVirtual());
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&first_logintime_) -
    reinterpret_cast<char*>(&level_)) + sizeof(first_logintime_));
  // @@protoc_insertion_point(copy_constructor:db.GateLogOnline)
}

void GateLogOnline::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_logintime_) -
      reinterpret_cast<char*>(&level_)) + sizeof(first_logintime_));
}

GateLogOnline::~GateLogOnline() {
  // @@protoc_insertion_point(destructor:db.GateLogOnline)
  SharedDtor();
}

void GateLogOnline::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateLogOnline::ArenaDtor(void* object) {
  GateLogOnline* _this = reinterpret_cast< GateLogOnline* >(object);
  (void)_this;
}
void GateLogOnline::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GateLogOnline::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateLogOnline::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateLogOnline& GateLogOnline::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_GateLogOnline.base);
  return *internal_default_instance();
}


void GateLogOnline::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GateLogOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      pwd_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      email_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      platid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      gameid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&admin_) -
        reinterpret_cast<char*>(&level_)) + sizeof(admin_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&createtime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&first_logintime_) -
        reinterpret_cast<char*>(&createtime_)) + sizeof(first_logintime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GateLogOnline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GateLogOnline)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes email = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 admin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_admin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &admin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes platid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes gameid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gameid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 createtime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ticketid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_ticketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 serverid = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 logintime = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {
          set_has_logintime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 first_logintime = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {
          set_has_first_logintime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &first_logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GateLogOnline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GateLogOnline)
  return false;
#undef DO_
}

void GateLogOnline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GateLogOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->userid(), output);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pwd(), output);
  }

  // required bytes nick = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->nick(), output);
  }

  // required bytes email = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->email(), output);
  }

  // required int32 level = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // required int32 admin = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->admin(), output);
  }

  // required bytes platid = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->platid(), output);
  }

  // required bytes gameid = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->gameid(), output);
  }

  // required int32 state = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->state(), output);
  }

  // required sfixed64 createtime = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(11, this->createtime(), output);
  }

  // required int32 ticketid = 21;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->ticketid(), output);
  }

  // required int32 serverid = 22;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->serverid(), output);
  }

  // required sfixed64 logintime = 23;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(23, this->logintime(), output);
  }

  // required sfixed64 first_logintime = 24;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(24, this->first_logintime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GateLogOnline)
}

::google::protobuf::uint8* GateLogOnline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GateLogOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->userid(), target);
  }

  // required bytes pwd = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pwd(), target);
  }

  // required bytes nick = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->nick(), target);
  }

  // required bytes email = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->email(), target);
  }

  // required int32 level = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // required int32 admin = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->admin(), target);
  }

  // required bytes platid = 7;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->platid(), target);
  }

  // required bytes gameid = 8;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->gameid(), target);
  }

  // required int32 state = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->state(), target);
  }

  // required sfixed64 createtime = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(11, this->createtime(), target);
  }

  // required int32 ticketid = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->ticketid(), target);
  }

  // required int32 serverid = 22;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->serverid(), target);
  }

  // required sfixed64 logintime = 23;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(23, this->logintime(), target);
  }

  // required sfixed64 first_logintime = 24;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(24, this->first_logintime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GateLogOnline)
  return target;
}

size_t GateLogOnline::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GateLogOnline)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_pwd()) {
    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());
  }

  if (has_nick()) {
    // required bytes nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  if (has_email()) {
    // required bytes email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->email());
  }

  if (has_platid()) {
    // required bytes platid = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());
  }

  if (has_gameid()) {
    // required bytes gameid = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gameid());
  }

  if (has_level()) {
    // required int32 level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_admin()) {
    // required int32 admin = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->admin());
  }

  if (has_createtime()) {
    // required sfixed64 createtime = 11;
    total_size += 1 + 8;
  }

  if (has_state()) {
    // required int32 state = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_ticketid()) {
    // required int32 ticketid = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());
  }

  if (has_serverid()) {
    // required int32 serverid = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  if (has_logintime()) {
    // required sfixed64 logintime = 23;
    total_size += 2 + 8;
  }

  if (has_first_logintime()) {
    // required sfixed64 first_logintime = 24;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t GateLogOnline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GateLogOnline)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00003fff) ^ 0x00003fff) == 0) {  // All required fields are present.
    // required bytes userid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required bytes pwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pwd());

    // required bytes nick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

    // required bytes email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->email());

    // required bytes platid = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());

    // required bytes gameid = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gameid());

    // required int32 level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 admin = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->admin());

    // required sfixed64 createtime = 11;
    total_size += 1 + 8;

    // required int32 state = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required int32 ticketid = 21;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticketid());

    // required int32 serverid = 22;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());

    // required sfixed64 logintime = 23;
    total_size += 2 + 8;

    // required sfixed64 first_logintime = 24;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateLogOnline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GateLogOnline)
  GOOGLE_DCHECK_NE(&from, this);
  const GateLogOnline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateLogOnline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GateLogOnline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GateLogOnline)
    MergeFrom(*source);
  }
}

void GateLogOnline::MergeFrom(const GateLogOnline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GateLogOnline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_pwd(from.pwd());
    }
    if (cached_has_bits & 0x00000004u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000008u) {
      set_email(from.email());
    }
    if (cached_has_bits & 0x00000010u) {
      set_platid(from.platid());
    }
    if (cached_has_bits & 0x00000020u) {
      set_gameid(from.gameid());
    }
    if (cached_has_bits & 0x00000040u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000080u) {
      admin_ = from.admin_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00000200u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000400u) {
      ticketid_ = from.ticketid_;
    }
    if (cached_has_bits & 0x00000800u) {
      serverid_ = from.serverid_;
    }
    if (cached_has_bits & 0x00001000u) {
      logintime_ = from.logintime_;
    }
    if (cached_has_bits & 0x00002000u) {
      first_logintime_ = from.first_logintime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GateLogOnline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GateLogOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateLogOnline::CopyFrom(const GateLogOnline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GateLogOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateLogOnline::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003fff) != 0x00003fff) return false;
  return true;
}

void GateLogOnline::Swap(GateLogOnline* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GateLogOnline* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GateLogOnline::UnsafeArenaSwap(GateLogOnline* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GateLogOnline::InternalSwap(GateLogOnline* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pwd_.Swap(&other->pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platid_.Swap(&other->platid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gameid_.Swap(&other->gameid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level_, other->level_);
  swap(admin_, other->admin_);
  swap(createtime_, other->createtime_);
  swap(state_, other->state_);
  swap(ticketid_, other->ticketid_);
  swap(serverid_, other->serverid_);
  swap(logintime_, other->logintime_);
  swap(first_logintime_, other->first_logintime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateLogOnline::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GateCfgActiveCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateCfgActiveCode::kCodeFieldNumber;
const int GateCfgActiveCode::kDescFieldNumber;
const int GateCfgActiveCode::kBeginTimeFieldNumber;
const int GateCfgActiveCode::kEndTimeFieldNumber;
const int GateCfgActiveCode::kRewardTypeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateCfgActiveCode::GateCfgActiveCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_GateCfgActiveCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GateCfgActiveCode)
}
GateCfgActiveCode::GateCfgActiveCode(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_GateCfgActiveCode.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GateCfgActiveCode)
}
GateCfgActiveCode::GateCfgActiveCode(const GateCfgActiveCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code(),
      GetArenaNoVirtual());
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc(),
      GetArenaNoVirtual());
  }
  ::memcpy(&begin_time_, &from.begin_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&reward_typeid_) -
    reinterpret_cast<char*>(&begin_time_)) + sizeof(reward_typeid_));
  // @@protoc_insertion_point(copy_constructor:db.GateCfgActiveCode)
}

void GateCfgActiveCode::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_typeid_) -
      reinterpret_cast<char*>(&begin_time_)) + sizeof(reward_typeid_));
}

GateCfgActiveCode::~GateCfgActiveCode() {
  // @@protoc_insertion_point(destructor:db.GateCfgActiveCode)
  SharedDtor();
}

void GateCfgActiveCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateCfgActiveCode::ArenaDtor(void* object) {
  GateCfgActiveCode* _this = reinterpret_cast< GateCfgActiveCode* >(object);
  (void)_this;
}
void GateCfgActiveCode::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GateCfgActiveCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateCfgActiveCode::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateCfgActiveCode& GateCfgActiveCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_GateCfgActiveCode.base);
  return *internal_default_instance();
}


void GateCfgActiveCode::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GateCfgActiveCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      code_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      desc_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&begin_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reward_typeid_) -
        reinterpret_cast<char*>(&begin_time_)) + sizeof(reward_typeid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GateCfgActiveCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GateCfgActiveCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 begin_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_begin_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 end_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 reward_typeid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_reward_typeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &reward_typeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GateCfgActiveCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GateCfgActiveCode)
  return false;
#undef DO_
}

void GateCfgActiveCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GateCfgActiveCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->code(), output);
  }

  // required bytes desc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->desc(), output);
  }

  // required sfixed64 begin_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->begin_time(), output);
  }

  // required sfixed64 end_time = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->end_time(), output);
  }

  // required uint64 reward_typeid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->reward_typeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GateCfgActiveCode)
}

::google::protobuf::uint8* GateCfgActiveCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GateCfgActiveCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes code = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->code(), target);
  }

  // required bytes desc = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  // required sfixed64 begin_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(3, this->begin_time(), target);
  }

  // required sfixed64 end_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->end_time(), target);
  }

  // required uint64 reward_typeid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->reward_typeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GateCfgActiveCode)
  return target;
}

size_t GateCfgActiveCode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GateCfgActiveCode)
  size_t total_size = 0;

  if (has_code()) {
    // required bytes code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());
  }

  if (has_desc()) {
    // required bytes desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  if (has_begin_time()) {
    // required sfixed64 begin_time = 3;
    total_size += 1 + 8;
  }

  if (has_end_time()) {
    // required sfixed64 end_time = 4;
    total_size += 1 + 8;
  }

  if (has_reward_typeid()) {
    // required uint64 reward_typeid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->reward_typeid());
  }

  return total_size;
}
size_t GateCfgActiveCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GateCfgActiveCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());

    // required bytes desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());

    // required sfixed64 begin_time = 3;
    total_size += 1 + 8;

    // required sfixed64 end_time = 4;
    total_size += 1 + 8;

    // required uint64 reward_typeid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->reward_typeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateCfgActiveCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GateCfgActiveCode)
  GOOGLE_DCHECK_NE(&from, this);
  const GateCfgActiveCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateCfgActiveCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GateCfgActiveCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GateCfgActiveCode)
    MergeFrom(*source);
  }
}

void GateCfgActiveCode::MergeFrom(const GateCfgActiveCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GateCfgActiveCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_code(from.code());
    }
    if (cached_has_bits & 0x00000002u) {
      set_desc(from.desc());
    }
    if (cached_has_bits & 0x00000004u) {
      begin_time_ = from.begin_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      reward_typeid_ = from.reward_typeid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GateCfgActiveCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GateCfgActiveCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateCfgActiveCode::CopyFrom(const GateCfgActiveCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GateCfgActiveCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateCfgActiveCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void GateCfgActiveCode::Swap(GateCfgActiveCode* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GateCfgActiveCode* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GateCfgActiveCode::UnsafeArenaSwap(GateCfgActiveCode* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GateCfgActiveCode::InternalSwap(GateCfgActiveCode* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(begin_time_, other->begin_time_);
  swap(end_time_, other->end_time_);
  swap(reward_typeid_, other->reward_typeid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateCfgActiveCode::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GateActiveCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateActiveCode::kCodeFieldNumber;
const int GateActiveCode::kUseridFieldNumber;
const int GateActiveCode::kActiveTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateActiveCode::GateActiveCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateAccount_2eproto::scc_info_GateActiveCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GateActiveCode)
}
GateActiveCode::GateActiveCode(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_GateActiveCode.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GateActiveCode)
}
GateActiveCode::GateActiveCode(const GateActiveCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code(),
      GetArenaNoVirtual());
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  active_time_ = from.active_time_;
  // @@protoc_insertion_point(copy_constructor:db.GateActiveCode)
}

void GateActiveCode::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_time_ = GOOGLE_LONGLONG(0);
}

GateActiveCode::~GateActiveCode() {
  // @@protoc_insertion_point(destructor:db.GateActiveCode)
  SharedDtor();
}

void GateActiveCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateActiveCode::ArenaDtor(void* object) {
  GateActiveCode* _this = reinterpret_cast< GateActiveCode* >(object);
  (void)_this;
}
void GateActiveCode::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GateActiveCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateActiveCode::descriptor() {
  ::protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateActiveCode& GateActiveCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateAccount_2eproto::scc_info_GateActiveCode.base);
  return *internal_default_instance();
}


void GateActiveCode::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GateActiveCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      code_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      userid_.ClearNonDefaultToEmpty();
    }
  }
  active_time_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GateActiveCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GateActiveCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sfixed64 active_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_active_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &active_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GateActiveCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GateActiveCode)
  return false;
#undef DO_
}

void GateActiveCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GateActiveCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->code(), output);
  }

  // required bytes userid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->userid(), output);
  }

  // optional sfixed64 active_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->active_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GateActiveCode)
}

::google::protobuf::uint8* GateActiveCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GateActiveCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes code = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->code(), target);
  }

  // required bytes userid = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->userid(), target);
  }

  // optional sfixed64 active_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(3, this->active_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GateActiveCode)
  return target;
}

size_t GateActiveCode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GateActiveCode)
  size_t total_size = 0;

  if (has_code()) {
    // required bytes code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());
  }

  if (has_userid()) {
    // required bytes userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  return total_size;
}
size_t GateActiveCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GateActiveCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->code());

    // required bytes userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional sfixed64 active_time = 3;
  if (has_active_time()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateActiveCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GateActiveCode)
  GOOGLE_DCHECK_NE(&from, this);
  const GateActiveCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateActiveCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GateActiveCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GateActiveCode)
    MergeFrom(*source);
  }
}

void GateActiveCode::MergeFrom(const GateActiveCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GateActiveCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_code(from.code());
    }
    if (cached_has_bits & 0x00000002u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000004u) {
      active_time_ = from.active_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GateActiveCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GateActiveCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateActiveCode::CopyFrom(const GateActiveCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GateActiveCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateActiveCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GateActiveCode::Swap(GateActiveCode* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GateActiveCode* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GateActiveCode::UnsafeArenaSwap(GateActiveCode* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GateActiveCode::InternalSwap(GateActiveCode* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(active_time_, other->active_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateActiveCode::GetMetadata() const {
  protobuf_GateAccount_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateAccount_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GateAccount* Arena::CreateMaybeMessage< ::db::GateAccount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GateAccount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_register_account_Parameter* Arena::CreateMaybeMessage< ::db::proc_register_account_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_register_account_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_register_account_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_register_account_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_register_account_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_register_account* Arena::CreateMaybeMessage< ::db::proc_register_account >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_register_account >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_save_account_state_Parameter* Arena::CreateMaybeMessage< ::db::proc_save_account_state_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_save_account_state_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_save_account_state* Arena::CreateMaybeMessage< ::db::proc_save_account_state >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_save_account_state >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GateLogOnline* Arena::CreateMaybeMessage< ::db::GateLogOnline >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GateLogOnline >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GateCfgActiveCode* Arena::CreateMaybeMessage< ::db::GateCfgActiveCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GateCfgActiveCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GateActiveCode* Arena::CreateMaybeMessage< ::db::GateActiveCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GateActiveCode >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
