// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateSettings.proto

#include "GateSettings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GateSettings_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateSettings_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GateBanEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateSettings_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GateCfgWebservice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateSettings_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_gate_ban_entry_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateSettings_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_gate_cfg_webservice_Parameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateSettings_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_gate_ban_entry_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateSettings_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_gate_cfg_webservice_ReturnRecord;
}  // namespace protobuf_GateSettings_2eproto
namespace db {
class GateCfgWebserviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateCfgWebservice>
      _instance;
} _GateCfgWebservice_default_instance_;
class proc_load_gate_cfg_webservice_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_gate_cfg_webservice_Parameter>
      _instance;
} _proc_load_gate_cfg_webservice_Parameter_default_instance_;
class proc_load_gate_cfg_webservice_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_gate_cfg_webservice_ReturnRecord>
      _instance;
} _proc_load_gate_cfg_webservice_ReturnRecord_default_instance_;
class proc_load_gate_cfg_webserviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_gate_cfg_webservice>
      _instance;
} _proc_load_gate_cfg_webservice_default_instance_;
class GateCfgInnerServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateCfgInnerServer>
      _instance;
} _GateCfgInnerServer_default_instance_;
class GateBanEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateBanEntry>
      _instance;
} _GateBanEntry_default_instance_;
class proc_load_gate_ban_entry_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_gate_ban_entry_Parameter>
      _instance;
} _proc_load_gate_ban_entry_Parameter_default_instance_;
class proc_load_gate_ban_entry_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_gate_ban_entry_ReturnRecord>
      _instance;
} _proc_load_gate_ban_entry_ReturnRecord_default_instance_;
class proc_load_gate_ban_entryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_load_gate_ban_entry>
      _instance;
} _proc_load_gate_ban_entry_default_instance_;
}  // namespace db
namespace protobuf_GateSettings_2eproto {
static void InitDefaultsGateCfgWebservice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GateCfgWebservice_default_instance_;
    new (ptr) ::db::GateCfgWebservice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GateCfgWebservice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateCfgWebservice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateCfgWebservice}, {}};

static void InitDefaultsproc_load_gate_cfg_webservice_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_gate_cfg_webservice_Parameter_default_instance_;
    new (ptr) ::db::proc_load_gate_cfg_webservice_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_gate_cfg_webservice_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_gate_cfg_webservice_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_load_gate_cfg_webservice_Parameter}, {}};

static void InitDefaultsproc_load_gate_cfg_webservice_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_gate_cfg_webservice_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_load_gate_cfg_webservice_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_gate_cfg_webservice_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_gate_cfg_webservice_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_load_gate_cfg_webservice_ReturnRecord}, {
      &protobuf_GateSettings_2eproto::scc_info_GateCfgWebservice.base,}};

static void InitDefaultsproc_load_gate_cfg_webservice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_gate_cfg_webservice_default_instance_;
    new (ptr) ::db::proc_load_gate_cfg_webservice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_gate_cfg_webservice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_load_gate_cfg_webservice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_load_gate_cfg_webservice}, {
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice_Parameter.base,
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice_ReturnRecord.base,}};

static void InitDefaultsGateCfgInnerServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GateCfgInnerServer_default_instance_;
    new (ptr) ::db::GateCfgInnerServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GateCfgInnerServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateCfgInnerServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateCfgInnerServer}, {}};

static void InitDefaultsGateBanEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_GateBanEntry_default_instance_;
    new (ptr) ::db::GateBanEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::GateBanEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GateBanEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGateBanEntry}, {}};

static void InitDefaultsproc_load_gate_ban_entry_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_gate_ban_entry_Parameter_default_instance_;
    new (ptr) ::db::proc_load_gate_ban_entry_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_gate_ban_entry_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_load_gate_ban_entry_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_load_gate_ban_entry_Parameter}, {}};

static void InitDefaultsproc_load_gate_ban_entry_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_gate_ban_entry_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_load_gate_ban_entry_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_gate_ban_entry_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_load_gate_ban_entry_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_load_gate_ban_entry_ReturnRecord}, {
      &protobuf_GateSettings_2eproto::scc_info_GateBanEntry.base,}};

static void InitDefaultsproc_load_gate_ban_entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_load_gate_ban_entry_default_instance_;
    new (ptr) ::db::proc_load_gate_ban_entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_load_gate_ban_entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_load_gate_ban_entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_load_gate_ban_entry}, {
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry_Parameter.base,
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry_ReturnRecord.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GateCfgWebservice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_gate_cfg_webservice_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_gate_cfg_webservice_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_gate_cfg_webservice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateCfgInnerServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GateBanEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_gate_ban_entry_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_gate_ban_entry_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_load_gate_ban_entry.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, entryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, sponsor_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, sponsor_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, platid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, game_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgWebservice, auth_url_),
  6,
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice_ReturnRecord, cfg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_cfg_webservice, return_record_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, white_peerip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateCfgInnerServer, enable_),
  3,
  4,
  0,
  1,
  5,
  6,
  2,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateBanEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateBanEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateBanEntry, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateBanEntry, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateBanEntry, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateBanEntry, ip_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::GateBanEntry, deadline_),
  3,
  0,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry_ReturnRecord, entry_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_load_gate_ban_entry, return_record_list_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::db::GateCfgWebservice)},
  { 19, 24, sizeof(::db::proc_load_gate_cfg_webservice_Parameter)},
  { 24, 30, sizeof(::db::proc_load_gate_cfg_webservice_ReturnRecord)},
  { 31, 38, sizeof(::db::proc_load_gate_cfg_webservice)},
  { 40, 53, sizeof(::db::GateCfgInnerServer)},
  { 61, 71, sizeof(::db::GateBanEntry)},
  { 76, 81, sizeof(::db::proc_load_gate_ban_entry_Parameter)},
  { 81, 87, sizeof(::db::proc_load_gate_ban_entry_ReturnRecord)},
  { 88, 95, sizeof(::db::proc_load_gate_ban_entry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GateCfgWebservice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_gate_cfg_webservice_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_gate_cfg_webservice_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_gate_cfg_webservice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GateCfgInnerServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_GateBanEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_gate_ban_entry_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_gate_ban_entry_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_load_gate_ban_entry_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GateSettings.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022GateSettings.proto\022\002db\"\225\001\n\021GateCfgWebs"
      "ervice\022\017\n\007entryid\030\001 \002(\005\022\023\n\013sponsor_uid\030\002"
      " \002(\014\022\024\n\014sponsor_desc\030\003 \002(\014\022\016\n\006platid\030\004 \002"
      "(\014\022\016\n\006gameid\030\005 \002(\014\022\022\n\ngame_token\030\006 \002(\014\022\020"
      "\n\010auth_url\030\007 \002(\014\"\350\001\n\035proc_load_gate_cfg_"
      "webservice\022:\n\005param\030\001 \001(\0132+.db.proc_load"
      "_gate_cfg_webservice.Parameter\022J\n\022return"
      "_record_list\030\002 \003(\0132..db.proc_load_gate_c"
      "fg_webservice.ReturnRecord\032\013\n\tParameter\032"
      "2\n\014ReturnRecord\022\"\n\003cfg\030\001 \002(\0132\025.db.GateCf"
      "gWebservice\"\220\001\n\022GateCfgInnerServer\022\n\n\002id"
      "\030\001 \002(\005\022\014\n\004type\030\002 \002(\005\022\014\n\004name\030\003 \002(\014\022\n\n\002ip"
      "\030\004 \002(\014\022\014\n\004port\030\005 \002(\005\022\022\n\nvisibility\030\006 \002(\005"
      "\022\024\n\014white_peerip\030\007 \002(\014\022\016\n\006enable\030\013 \001(\005\"Y"
      "\n\014GateBanEntry\022\n\n\002id\030\001 \002(\005\022\016\n\006userid\030\002 \002"
      "(\014\022\n\n\002ip\030\003 \002(\014\022\017\n\007ip_mask\030\004 \002(\014\022\020\n\010deadl"
      "ine\030\013 \002(\020\"\326\001\n\030proc_load_gate_ban_entry\0225"
      "\n\005param\030\001 \001(\0132&.db.proc_load_gate_ban_en"
      "try.Parameter\022E\n\022return_record_list\030\002 \003("
      "\0132).db.proc_load_gate_ban_entry.ReturnRe"
      "cord\032\013\n\tParameter\032/\n\014ReturnRecord\022\037\n\005ent"
      "ry\030\001 \002(\0132\020.db.GateBanEntryB\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 871);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GateSettings.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GateSettings_2eproto
namespace db {

// ===================================================================

void GateCfgWebservice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateCfgWebservice::kEntryidFieldNumber;
const int GateCfgWebservice::kSponsorUidFieldNumber;
const int GateCfgWebservice::kSponsorDescFieldNumber;
const int GateCfgWebservice::kPlatidFieldNumber;
const int GateCfgWebservice::kGameidFieldNumber;
const int GateCfgWebservice::kGameTokenFieldNumber;
const int GateCfgWebservice::kAuthUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateCfgWebservice::GateCfgWebservice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_GateCfgWebservice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GateCfgWebservice)
}
GateCfgWebservice::GateCfgWebservice(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_GateCfgWebservice.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GateCfgWebservice)
}
GateCfgWebservice::GateCfgWebservice(const GateCfgWebservice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sponsor_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sponsor_uid()) {
    sponsor_uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sponsor_uid(),
      GetArenaNoVirtual());
  }
  sponsor_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sponsor_desc()) {
    sponsor_desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sponsor_desc(),
      GetArenaNoVirtual());
  }
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platid()) {
    platid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platid(),
      GetArenaNoVirtual());
  }
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid(),
      GetArenaNoVirtual());
  }
  game_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_token()) {
    game_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_token(),
      GetArenaNoVirtual());
  }
  auth_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_auth_url()) {
    auth_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_url(),
      GetArenaNoVirtual());
  }
  entryid_ = from.entryid_;
  // @@protoc_insertion_point(copy_constructor:db.GateCfgWebservice)
}

void GateCfgWebservice::SharedCtor() {
  sponsor_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sponsor_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entryid_ = 0;
}

GateCfgWebservice::~GateCfgWebservice() {
  // @@protoc_insertion_point(destructor:db.GateCfgWebservice)
  SharedDtor();
}

void GateCfgWebservice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  sponsor_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sponsor_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateCfgWebservice::ArenaDtor(void* object) {
  GateCfgWebservice* _this = reinterpret_cast< GateCfgWebservice* >(object);
  (void)_this;
}
void GateCfgWebservice::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GateCfgWebservice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateCfgWebservice::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateCfgWebservice& GateCfgWebservice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_GateCfgWebservice.base);
  return *internal_default_instance();
}


void GateCfgWebservice::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GateCfgWebservice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      sponsor_uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sponsor_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      platid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      gameid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      game_token_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      auth_url_.ClearNonDefaultToEmpty();
    }
  }
  entryid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GateCfgWebservice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GateCfgWebservice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 entryid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entryid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes sponsor_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sponsor_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes sponsor_desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sponsor_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes platid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes gameid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gameid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes game_token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_game_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes auth_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_auth_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GateCfgWebservice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GateCfgWebservice)
  return false;
#undef DO_
}

void GateCfgWebservice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GateCfgWebservice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 entryid = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entryid(), output);
  }

  // required bytes sponsor_uid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sponsor_uid(), output);
  }

  // required bytes sponsor_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sponsor_desc(), output);
  }

  // required bytes platid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->platid(), output);
  }

  // required bytes gameid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->gameid(), output);
  }

  // required bytes game_token = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->game_token(), output);
  }

  // required bytes auth_url = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->auth_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GateCfgWebservice)
}

::google::protobuf::uint8* GateCfgWebservice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GateCfgWebservice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 entryid = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entryid(), target);
  }

  // required bytes sponsor_uid = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sponsor_uid(), target);
  }

  // required bytes sponsor_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sponsor_desc(), target);
  }

  // required bytes platid = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->platid(), target);
  }

  // required bytes gameid = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->gameid(), target);
  }

  // required bytes game_token = 6;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->game_token(), target);
  }

  // required bytes auth_url = 7;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->auth_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GateCfgWebservice)
  return target;
}

size_t GateCfgWebservice::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GateCfgWebservice)
  size_t total_size = 0;

  if (has_sponsor_uid()) {
    // required bytes sponsor_uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sponsor_uid());
  }

  if (has_sponsor_desc()) {
    // required bytes sponsor_desc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sponsor_desc());
  }

  if (has_platid()) {
    // required bytes platid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());
  }

  if (has_gameid()) {
    // required bytes gameid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gameid());
  }

  if (has_game_token()) {
    // required bytes game_token = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->game_token());
  }

  if (has_auth_url()) {
    // required bytes auth_url = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->auth_url());
  }

  if (has_entryid()) {
    // required int32 entryid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entryid());
  }

  return total_size;
}
size_t GateCfgWebservice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GateCfgWebservice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required bytes sponsor_uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sponsor_uid());

    // required bytes sponsor_desc = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sponsor_desc());

    // required bytes platid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platid());

    // required bytes gameid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gameid());

    // required bytes game_token = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->game_token());

    // required bytes auth_url = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->auth_url());

    // required int32 entryid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entryid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateCfgWebservice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GateCfgWebservice)
  GOOGLE_DCHECK_NE(&from, this);
  const GateCfgWebservice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateCfgWebservice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GateCfgWebservice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GateCfgWebservice)
    MergeFrom(*source);
  }
}

void GateCfgWebservice::MergeFrom(const GateCfgWebservice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GateCfgWebservice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_sponsor_uid(from.sponsor_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_sponsor_desc(from.sponsor_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      set_platid(from.platid());
    }
    if (cached_has_bits & 0x00000008u) {
      set_gameid(from.gameid());
    }
    if (cached_has_bits & 0x00000010u) {
      set_game_token(from.game_token());
    }
    if (cached_has_bits & 0x00000020u) {
      set_auth_url(from.auth_url());
    }
    if (cached_has_bits & 0x00000040u) {
      entryid_ = from.entryid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GateCfgWebservice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GateCfgWebservice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateCfgWebservice::CopyFrom(const GateCfgWebservice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GateCfgWebservice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateCfgWebservice::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void GateCfgWebservice::Swap(GateCfgWebservice* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GateCfgWebservice* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GateCfgWebservice::UnsafeArenaSwap(GateCfgWebservice* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GateCfgWebservice::InternalSwap(GateCfgWebservice* other) {
  using std::swap;
  sponsor_uid_.Swap(&other->sponsor_uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sponsor_desc_.Swap(&other->sponsor_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platid_.Swap(&other->platid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gameid_.Swap(&other->gameid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_token_.Swap(&other->game_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  auth_url_.Swap(&other->auth_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entryid_, other->entryid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateCfgWebservice::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_gate_cfg_webservice_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_gate_cfg_webservice_Parameter::proc_load_gate_cfg_webservice_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_gate_cfg_webservice.Parameter)
}
proc_load_gate_cfg_webservice_Parameter::proc_load_gate_cfg_webservice_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_gate_cfg_webservice.Parameter)
}
proc_load_gate_cfg_webservice_Parameter::proc_load_gate_cfg_webservice_Parameter(const proc_load_gate_cfg_webservice_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_load_gate_cfg_webservice.Parameter)
}

void proc_load_gate_cfg_webservice_Parameter::SharedCtor() {
}

proc_load_gate_cfg_webservice_Parameter::~proc_load_gate_cfg_webservice_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_load_gate_cfg_webservice.Parameter)
  SharedDtor();
}

void proc_load_gate_cfg_webservice_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_load_gate_cfg_webservice_Parameter::ArenaDtor(void* object) {
  proc_load_gate_cfg_webservice_Parameter* _this = reinterpret_cast< proc_load_gate_cfg_webservice_Parameter* >(object);
  (void)_this;
}
void proc_load_gate_cfg_webservice_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_gate_cfg_webservice_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_gate_cfg_webservice_Parameter::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_gate_cfg_webservice_Parameter& proc_load_gate_cfg_webservice_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice_Parameter.base);
  return *internal_default_instance();
}


void proc_load_gate_cfg_webservice_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_gate_cfg_webservice.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_gate_cfg_webservice_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_gate_cfg_webservice.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_gate_cfg_webservice.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_gate_cfg_webservice.Parameter)
  return false;
#undef DO_
}

void proc_load_gate_cfg_webservice_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_gate_cfg_webservice.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_gate_cfg_webservice.Parameter)
}

::google::protobuf::uint8* proc_load_gate_cfg_webservice_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_gate_cfg_webservice.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_gate_cfg_webservice.Parameter)
  return target;
}

size_t proc_load_gate_cfg_webservice_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_gate_cfg_webservice.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_gate_cfg_webservice_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_gate_cfg_webservice.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_gate_cfg_webservice_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_gate_cfg_webservice_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_gate_cfg_webservice.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_gate_cfg_webservice.Parameter)
    MergeFrom(*source);
  }
}

void proc_load_gate_cfg_webservice_Parameter::MergeFrom(const proc_load_gate_cfg_webservice_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_gate_cfg_webservice.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_load_gate_cfg_webservice_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_gate_cfg_webservice.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_gate_cfg_webservice_Parameter::CopyFrom(const proc_load_gate_cfg_webservice_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_gate_cfg_webservice.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_gate_cfg_webservice_Parameter::IsInitialized() const {
  return true;
}

void proc_load_gate_cfg_webservice_Parameter::Swap(proc_load_gate_cfg_webservice_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_gate_cfg_webservice_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_gate_cfg_webservice_Parameter::UnsafeArenaSwap(proc_load_gate_cfg_webservice_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_gate_cfg_webservice_Parameter::InternalSwap(proc_load_gate_cfg_webservice_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_gate_cfg_webservice_Parameter::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_gate_cfg_webservice_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_load_gate_cfg_webservice_ReturnRecord_default_instance_._instance.get_mutable()->cfg_ = const_cast< ::db::GateCfgWebservice*>(
      ::db::GateCfgWebservice::internal_default_instance());
}
void proc_load_gate_cfg_webservice_ReturnRecord::unsafe_arena_set_allocated_cfg(
    ::db::GateCfgWebservice* cfg) {
  if (GetArenaNoVirtual() == NULL) {
    delete cfg_;
  }
  cfg_ = cfg;
  if (cfg) {
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_gate_cfg_webservice.ReturnRecord.cfg)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_gate_cfg_webservice_ReturnRecord::kCfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_gate_cfg_webservice_ReturnRecord::proc_load_gate_cfg_webservice_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_gate_cfg_webservice.ReturnRecord)
}
proc_load_gate_cfg_webservice_ReturnRecord::proc_load_gate_cfg_webservice_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_gate_cfg_webservice.ReturnRecord)
}
proc_load_gate_cfg_webservice_ReturnRecord::proc_load_gate_cfg_webservice_ReturnRecord(const proc_load_gate_cfg_webservice_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cfg()) {
    cfg_ = new ::db::GateCfgWebservice(*from.cfg_);
  } else {
    cfg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_gate_cfg_webservice.ReturnRecord)
}

void proc_load_gate_cfg_webservice_ReturnRecord::SharedCtor() {
  cfg_ = NULL;
}

proc_load_gate_cfg_webservice_ReturnRecord::~proc_load_gate_cfg_webservice_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_load_gate_cfg_webservice.ReturnRecord)
  SharedDtor();
}

void proc_load_gate_cfg_webservice_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete cfg_;
}

void proc_load_gate_cfg_webservice_ReturnRecord::ArenaDtor(void* object) {
  proc_load_gate_cfg_webservice_ReturnRecord* _this = reinterpret_cast< proc_load_gate_cfg_webservice_ReturnRecord* >(object);
  (void)_this;
}
void proc_load_gate_cfg_webservice_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_gate_cfg_webservice_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_gate_cfg_webservice_ReturnRecord::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_gate_cfg_webservice_ReturnRecord& proc_load_gate_cfg_webservice_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_load_gate_cfg_webservice_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(cfg_ != NULL);
    cfg_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_gate_cfg_webservice_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.GateCfgWebservice cfg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_gate_cfg_webservice.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_gate_cfg_webservice.ReturnRecord)
  return false;
#undef DO_
}

void proc_load_gate_cfg_webservice_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GateCfgWebservice cfg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cfg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_gate_cfg_webservice.ReturnRecord)
}

::google::protobuf::uint8* proc_load_gate_cfg_webservice_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GateCfgWebservice cfg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cfg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_gate_cfg_webservice.ReturnRecord)
  return target;
}

size_t proc_load_gate_cfg_webservice_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.GateCfgWebservice cfg = 1;
  if (has_cfg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cfg_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_gate_cfg_webservice_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_gate_cfg_webservice_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_gate_cfg_webservice_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_gate_cfg_webservice.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_gate_cfg_webservice.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_load_gate_cfg_webservice_ReturnRecord::MergeFrom(const proc_load_gate_cfg_webservice_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cfg()) {
    mutable_cfg()->::db::GateCfgWebservice::MergeFrom(from.cfg());
  }
}

void proc_load_gate_cfg_webservice_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_gate_cfg_webservice_ReturnRecord::CopyFrom(const proc_load_gate_cfg_webservice_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_gate_cfg_webservice.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_gate_cfg_webservice_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_cfg()) {
    if (!this->cfg_->IsInitialized()) return false;
  }
  return true;
}

void proc_load_gate_cfg_webservice_ReturnRecord::Swap(proc_load_gate_cfg_webservice_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_gate_cfg_webservice_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_gate_cfg_webservice_ReturnRecord::UnsafeArenaSwap(proc_load_gate_cfg_webservice_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_gate_cfg_webservice_ReturnRecord::InternalSwap(proc_load_gate_cfg_webservice_ReturnRecord* other) {
  using std::swap;
  swap(cfg_, other->cfg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_gate_cfg_webservice_ReturnRecord::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_gate_cfg_webservice::InitAsDefaultInstance() {
  ::db::_proc_load_gate_cfg_webservice_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_load_gate_cfg_webservice_Parameter*>(
      ::db::proc_load_gate_cfg_webservice_Parameter::internal_default_instance());
}
void proc_load_gate_cfg_webservice::unsafe_arena_set_allocated_param(
    ::db::proc_load_gate_cfg_webservice_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_gate_cfg_webservice.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_gate_cfg_webservice::kParamFieldNumber;
const int proc_load_gate_cfg_webservice::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_gate_cfg_webservice::proc_load_gate_cfg_webservice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_gate_cfg_webservice)
}
proc_load_gate_cfg_webservice::proc_load_gate_cfg_webservice(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_gate_cfg_webservice)
}
proc_load_gate_cfg_webservice::proc_load_gate_cfg_webservice(const proc_load_gate_cfg_webservice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_load_gate_cfg_webservice_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_gate_cfg_webservice)
}

void proc_load_gate_cfg_webservice::SharedCtor() {
  param_ = NULL;
}

proc_load_gate_cfg_webservice::~proc_load_gate_cfg_webservice() {
  // @@protoc_insertion_point(destructor:db.proc_load_gate_cfg_webservice)
  SharedDtor();
}

void proc_load_gate_cfg_webservice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_load_gate_cfg_webservice::ArenaDtor(void* object) {
  proc_load_gate_cfg_webservice* _this = reinterpret_cast< proc_load_gate_cfg_webservice* >(object);
  (void)_this;
}
void proc_load_gate_cfg_webservice::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_gate_cfg_webservice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_gate_cfg_webservice::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_gate_cfg_webservice& proc_load_gate_cfg_webservice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_cfg_webservice.base);
  return *internal_default_instance();
}


void proc_load_gate_cfg_webservice::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_gate_cfg_webservice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_gate_cfg_webservice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_gate_cfg_webservice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_load_gate_cfg_webservice.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_load_gate_cfg_webservice.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_gate_cfg_webservice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_gate_cfg_webservice)
  return false;
#undef DO_
}

void proc_load_gate_cfg_webservice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_gate_cfg_webservice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_gate_cfg_webservice.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_load_gate_cfg_webservice.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_gate_cfg_webservice)
}

::google::protobuf::uint8* proc_load_gate_cfg_webservice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_gate_cfg_webservice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_gate_cfg_webservice.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_load_gate_cfg_webservice.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_gate_cfg_webservice)
  return target;
}

size_t proc_load_gate_cfg_webservice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_gate_cfg_webservice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_load_gate_cfg_webservice.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_load_gate_cfg_webservice.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_gate_cfg_webservice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_gate_cfg_webservice)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_gate_cfg_webservice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_gate_cfg_webservice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_gate_cfg_webservice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_gate_cfg_webservice)
    MergeFrom(*source);
  }
}

void proc_load_gate_cfg_webservice::MergeFrom(const proc_load_gate_cfg_webservice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_gate_cfg_webservice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_load_gate_cfg_webservice_Parameter::MergeFrom(from.param());
  }
}

void proc_load_gate_cfg_webservice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_gate_cfg_webservice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_gate_cfg_webservice::CopyFrom(const proc_load_gate_cfg_webservice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_gate_cfg_webservice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_gate_cfg_webservice::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_load_gate_cfg_webservice::Swap(proc_load_gate_cfg_webservice* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_gate_cfg_webservice* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_gate_cfg_webservice::UnsafeArenaSwap(proc_load_gate_cfg_webservice* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_gate_cfg_webservice::InternalSwap(proc_load_gate_cfg_webservice* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_gate_cfg_webservice::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GateCfgInnerServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateCfgInnerServer::kIdFieldNumber;
const int GateCfgInnerServer::kTypeFieldNumber;
const int GateCfgInnerServer::kNameFieldNumber;
const int GateCfgInnerServer::kIpFieldNumber;
const int GateCfgInnerServer::kPortFieldNumber;
const int GateCfgInnerServer::kVisibilityFieldNumber;
const int GateCfgInnerServer::kWhitePeeripFieldNumber;
const int GateCfgInnerServer::kEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateCfgInnerServer::GateCfgInnerServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_GateCfgInnerServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GateCfgInnerServer)
}
GateCfgInnerServer::GateCfgInnerServer(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_GateCfgInnerServer.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GateCfgInnerServer)
}
GateCfgInnerServer::GateCfgInnerServer(const GateCfgInnerServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip(),
      GetArenaNoVirtual());
  }
  white_peerip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_white_peerip()) {
    white_peerip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.white_peerip(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&id_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:db.GateCfgInnerServer)
}

void GateCfgInnerServer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  white_peerip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&id_)) + sizeof(enable_));
}

GateCfgInnerServer::~GateCfgInnerServer() {
  // @@protoc_insertion_point(destructor:db.GateCfgInnerServer)
  SharedDtor();
}

void GateCfgInnerServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  white_peerip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateCfgInnerServer::ArenaDtor(void* object) {
  GateCfgInnerServer* _this = reinterpret_cast< GateCfgInnerServer* >(object);
  (void)_this;
}
void GateCfgInnerServer::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GateCfgInnerServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateCfgInnerServer::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateCfgInnerServer& GateCfgInnerServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_GateCfgInnerServer.base);
  return *internal_default_instance();
}


void GateCfgInnerServer::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GateCfgInnerServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ip_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      white_peerip_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enable_) -
        reinterpret_cast<char*>(&id_)) + sizeof(enable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GateCfgInnerServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GateCfgInnerServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 visibility = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes white_peerip = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_white_peerip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 enable = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_enable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GateCfgInnerServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GateCfgInnerServer)
  return false;
#undef DO_
}

void GateCfgInnerServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GateCfgInnerServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // required bytes ip = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ip(), output);
  }

  // required int32 port = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->port(), output);
  }

  // required int32 visibility = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->visibility(), output);
  }

  // required bytes white_peerip = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->white_peerip(), output);
  }

  // optional int32 enable = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->enable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GateCfgInnerServer)
}

::google::protobuf::uint8* GateCfgInnerServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GateCfgInnerServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // required bytes ip = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ip(), target);
  }

  // required int32 port = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->port(), target);
  }

  // required int32 visibility = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->visibility(), target);
  }

  // required bytes white_peerip = 7;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->white_peerip(), target);
  }

  // optional int32 enable = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->enable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GateCfgInnerServer)
  return target;
}

size_t GateCfgInnerServer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GateCfgInnerServer)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_ip()) {
    // required bytes ip = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  if (has_white_peerip()) {
    // required bytes white_peerip = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->white_peerip());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_port()) {
    // required int32 port = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  if (has_visibility()) {
    // required int32 visibility = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->visibility());
  }

  return total_size;
}
size_t GateCfgInnerServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GateCfgInnerServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required bytes name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required bytes ip = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());

    // required bytes white_peerip = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->white_peerip());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required int32 port = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());

    // required int32 visibility = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->visibility());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 enable = 11;
  if (has_enable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateCfgInnerServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GateCfgInnerServer)
  GOOGLE_DCHECK_NE(&from, this);
  const GateCfgInnerServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateCfgInnerServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GateCfgInnerServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GateCfgInnerServer)
    MergeFrom(*source);
  }
}

void GateCfgInnerServer::MergeFrom(const GateCfgInnerServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GateCfgInnerServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000002u) {
      set_ip(from.ip());
    }
    if (cached_has_bits & 0x00000004u) {
      set_white_peerip(from.white_peerip());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      port_ = from.port_;
    }
    if (cached_has_bits & 0x00000040u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000080u) {
      enable_ = from.enable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GateCfgInnerServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GateCfgInnerServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateCfgInnerServer::CopyFrom(const GateCfgInnerServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GateCfgInnerServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateCfgInnerServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void GateCfgInnerServer::Swap(GateCfgInnerServer* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GateCfgInnerServer* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GateCfgInnerServer::UnsafeArenaSwap(GateCfgInnerServer* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GateCfgInnerServer::InternalSwap(GateCfgInnerServer* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  white_peerip_.Swap(&other->white_peerip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(port_, other->port_);
  swap(visibility_, other->visibility_);
  swap(enable_, other->enable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateCfgInnerServer::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GateBanEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateBanEntry::kIdFieldNumber;
const int GateBanEntry::kUseridFieldNumber;
const int GateBanEntry::kIpFieldNumber;
const int GateBanEntry::kIpMaskFieldNumber;
const int GateBanEntry::kDeadlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateBanEntry::GateBanEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_GateBanEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.GateBanEntry)
}
GateBanEntry::GateBanEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_GateBanEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.GateBanEntry)
}
GateBanEntry::GateBanEntry(const GateBanEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip(),
      GetArenaNoVirtual());
  }
  ip_mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_mask()) {
    ip_mask_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_mask(),
      GetArenaNoVirtual());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&deadline_) -
    reinterpret_cast<char*>(&id_)) + sizeof(deadline_));
  // @@protoc_insertion_point(copy_constructor:db.GateBanEntry)
}

void GateBanEntry::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deadline_) -
      reinterpret_cast<char*>(&id_)) + sizeof(deadline_));
}

GateBanEntry::~GateBanEntry() {
  // @@protoc_insertion_point(destructor:db.GateBanEntry)
  SharedDtor();
}

void GateBanEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_mask_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateBanEntry::ArenaDtor(void* object) {
  GateBanEntry* _this = reinterpret_cast< GateBanEntry* >(object);
  (void)_this;
}
void GateBanEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GateBanEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateBanEntry::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateBanEntry& GateBanEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_GateBanEntry.base);
  return *internal_default_instance();
}


void GateBanEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:db.GateBanEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ip_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ip_mask_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&deadline_) -
        reinterpret_cast<char*>(&id_)) + sizeof(deadline_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GateBanEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.GateBanEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ip_mask = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 deadline = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_deadline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &deadline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.GateBanEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.GateBanEntry)
  return false;
#undef DO_
}

void GateBanEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.GateBanEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bytes userid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->userid(), output);
  }

  // required bytes ip = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ip(), output);
  }

  // required bytes ip_mask = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ip_mask(), output);
  }

  // required sfixed64 deadline = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(11, this->deadline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.GateBanEntry)
}

::google::protobuf::uint8* GateBanEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.GateBanEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bytes userid = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->userid(), target);
  }

  // required bytes ip = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ip(), target);
  }

  // required bytes ip_mask = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ip_mask(), target);
  }

  // required sfixed64 deadline = 11;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(11, this->deadline(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.GateBanEntry)
  return target;
}

size_t GateBanEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.GateBanEntry)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_ip()) {
    // required bytes ip = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  if (has_ip_mask()) {
    // required bytes ip_mask = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip_mask());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_deadline()) {
    // required sfixed64 deadline = 11;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t GateBanEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.GateBanEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes userid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required bytes ip = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());

    // required bytes ip_mask = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip_mask());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required sfixed64 deadline = 11;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateBanEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.GateBanEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const GateBanEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateBanEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.GateBanEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.GateBanEntry)
    MergeFrom(*source);
  }
}

void GateBanEntry::MergeFrom(const GateBanEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.GateBanEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_ip(from.ip());
    }
    if (cached_has_bits & 0x00000004u) {
      set_ip_mask(from.ip_mask());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      deadline_ = from.deadline_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GateBanEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.GateBanEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateBanEntry::CopyFrom(const GateBanEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.GateBanEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateBanEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void GateBanEntry::Swap(GateBanEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GateBanEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GateBanEntry::UnsafeArenaSwap(GateBanEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GateBanEntry::InternalSwap(GateBanEntry* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_mask_.Swap(&other->ip_mask_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(deadline_, other->deadline_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateBanEntry::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_gate_ban_entry_Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_gate_ban_entry_Parameter::proc_load_gate_ban_entry_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_gate_ban_entry.Parameter)
}
proc_load_gate_ban_entry_Parameter::proc_load_gate_ban_entry_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_gate_ban_entry.Parameter)
}
proc_load_gate_ban_entry_Parameter::proc_load_gate_ban_entry_Parameter(const proc_load_gate_ban_entry_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_load_gate_ban_entry.Parameter)
}

void proc_load_gate_ban_entry_Parameter::SharedCtor() {
}

proc_load_gate_ban_entry_Parameter::~proc_load_gate_ban_entry_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_load_gate_ban_entry.Parameter)
  SharedDtor();
}

void proc_load_gate_ban_entry_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_load_gate_ban_entry_Parameter::ArenaDtor(void* object) {
  proc_load_gate_ban_entry_Parameter* _this = reinterpret_cast< proc_load_gate_ban_entry_Parameter* >(object);
  (void)_this;
}
void proc_load_gate_ban_entry_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_gate_ban_entry_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_gate_ban_entry_Parameter::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_gate_ban_entry_Parameter& proc_load_gate_ban_entry_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry_Parameter.base);
  return *internal_default_instance();
}


void proc_load_gate_ban_entry_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_gate_ban_entry.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_gate_ban_entry_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_gate_ban_entry.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_gate_ban_entry.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_gate_ban_entry.Parameter)
  return false;
#undef DO_
}

void proc_load_gate_ban_entry_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_gate_ban_entry.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_gate_ban_entry.Parameter)
}

::google::protobuf::uint8* proc_load_gate_ban_entry_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_gate_ban_entry.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_gate_ban_entry.Parameter)
  return target;
}

size_t proc_load_gate_ban_entry_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_gate_ban_entry.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_gate_ban_entry_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_gate_ban_entry.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_gate_ban_entry_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_gate_ban_entry_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_gate_ban_entry.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_gate_ban_entry.Parameter)
    MergeFrom(*source);
  }
}

void proc_load_gate_ban_entry_Parameter::MergeFrom(const proc_load_gate_ban_entry_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_gate_ban_entry.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_load_gate_ban_entry_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_gate_ban_entry.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_gate_ban_entry_Parameter::CopyFrom(const proc_load_gate_ban_entry_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_gate_ban_entry.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_gate_ban_entry_Parameter::IsInitialized() const {
  return true;
}

void proc_load_gate_ban_entry_Parameter::Swap(proc_load_gate_ban_entry_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_gate_ban_entry_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_gate_ban_entry_Parameter::UnsafeArenaSwap(proc_load_gate_ban_entry_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_gate_ban_entry_Parameter::InternalSwap(proc_load_gate_ban_entry_Parameter* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_gate_ban_entry_Parameter::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_gate_ban_entry_ReturnRecord::InitAsDefaultInstance() {
  ::db::_proc_load_gate_ban_entry_ReturnRecord_default_instance_._instance.get_mutable()->entry_ = const_cast< ::db::GateBanEntry*>(
      ::db::GateBanEntry::internal_default_instance());
}
void proc_load_gate_ban_entry_ReturnRecord::unsafe_arena_set_allocated_entry(
    ::db::GateBanEntry* entry) {
  if (GetArenaNoVirtual() == NULL) {
    delete entry_;
  }
  entry_ = entry;
  if (entry) {
    set_has_entry();
  } else {
    clear_has_entry();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_gate_ban_entry.ReturnRecord.entry)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_gate_ban_entry_ReturnRecord::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_gate_ban_entry_ReturnRecord::proc_load_gate_ban_entry_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_gate_ban_entry.ReturnRecord)
}
proc_load_gate_ban_entry_ReturnRecord::proc_load_gate_ban_entry_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_gate_ban_entry.ReturnRecord)
}
proc_load_gate_ban_entry_ReturnRecord::proc_load_gate_ban_entry_ReturnRecord(const proc_load_gate_ban_entry_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entry()) {
    entry_ = new ::db::GateBanEntry(*from.entry_);
  } else {
    entry_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_gate_ban_entry.ReturnRecord)
}

void proc_load_gate_ban_entry_ReturnRecord::SharedCtor() {
  entry_ = NULL;
}

proc_load_gate_ban_entry_ReturnRecord::~proc_load_gate_ban_entry_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_load_gate_ban_entry.ReturnRecord)
  SharedDtor();
}

void proc_load_gate_ban_entry_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete entry_;
}

void proc_load_gate_ban_entry_ReturnRecord::ArenaDtor(void* object) {
  proc_load_gate_ban_entry_ReturnRecord* _this = reinterpret_cast< proc_load_gate_ban_entry_ReturnRecord* >(object);
  (void)_this;
}
void proc_load_gate_ban_entry_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_gate_ban_entry_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_gate_ban_entry_ReturnRecord::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_gate_ban_entry_ReturnRecord& proc_load_gate_ban_entry_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_load_gate_ban_entry_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_gate_ban_entry.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(entry_ != NULL);
    entry_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_gate_ban_entry_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_gate_ban_entry.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.GateBanEntry entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_gate_ban_entry.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_gate_ban_entry.ReturnRecord)
  return false;
#undef DO_
}

void proc_load_gate_ban_entry_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_gate_ban_entry.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GateBanEntry entry = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_entry(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_gate_ban_entry.ReturnRecord)
}

::google::protobuf::uint8* proc_load_gate_ban_entry_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_gate_ban_entry.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.GateBanEntry entry = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_entry(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_gate_ban_entry.ReturnRecord)
  return target;
}

size_t proc_load_gate_ban_entry_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_gate_ban_entry.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.GateBanEntry entry = 1;
  if (has_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entry_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_gate_ban_entry_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_gate_ban_entry.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_gate_ban_entry_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_gate_ban_entry_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_gate_ban_entry.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_gate_ban_entry.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_load_gate_ban_entry_ReturnRecord::MergeFrom(const proc_load_gate_ban_entry_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_gate_ban_entry.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entry()) {
    mutable_entry()->::db::GateBanEntry::MergeFrom(from.entry());
  }
}

void proc_load_gate_ban_entry_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_gate_ban_entry.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_gate_ban_entry_ReturnRecord::CopyFrom(const proc_load_gate_ban_entry_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_gate_ban_entry.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_gate_ban_entry_ReturnRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_entry()) {
    if (!this->entry_->IsInitialized()) return false;
  }
  return true;
}

void proc_load_gate_ban_entry_ReturnRecord::Swap(proc_load_gate_ban_entry_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_gate_ban_entry_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_gate_ban_entry_ReturnRecord::UnsafeArenaSwap(proc_load_gate_ban_entry_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_gate_ban_entry_ReturnRecord::InternalSwap(proc_load_gate_ban_entry_ReturnRecord* other) {
  using std::swap;
  swap(entry_, other->entry_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_gate_ban_entry_ReturnRecord::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_load_gate_ban_entry::InitAsDefaultInstance() {
  ::db::_proc_load_gate_ban_entry_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_load_gate_ban_entry_Parameter*>(
      ::db::proc_load_gate_ban_entry_Parameter::internal_default_instance());
}
void proc_load_gate_ban_entry::unsafe_arena_set_allocated_param(
    ::db::proc_load_gate_ban_entry_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_load_gate_ban_entry.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_load_gate_ban_entry::kParamFieldNumber;
const int proc_load_gate_ban_entry::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_load_gate_ban_entry::proc_load_gate_ban_entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_load_gate_ban_entry)
}
proc_load_gate_ban_entry::proc_load_gate_ban_entry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_load_gate_ban_entry)
}
proc_load_gate_ban_entry::proc_load_gate_ban_entry(const proc_load_gate_ban_entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_load_gate_ban_entry_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_load_gate_ban_entry)
}

void proc_load_gate_ban_entry::SharedCtor() {
  param_ = NULL;
}

proc_load_gate_ban_entry::~proc_load_gate_ban_entry() {
  // @@protoc_insertion_point(destructor:db.proc_load_gate_ban_entry)
  SharedDtor();
}

void proc_load_gate_ban_entry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_load_gate_ban_entry::ArenaDtor(void* object) {
  proc_load_gate_ban_entry* _this = reinterpret_cast< proc_load_gate_ban_entry* >(object);
  (void)_this;
}
void proc_load_gate_ban_entry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_load_gate_ban_entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_load_gate_ban_entry::descriptor() {
  ::protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_load_gate_ban_entry& proc_load_gate_ban_entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateSettings_2eproto::scc_info_proc_load_gate_ban_entry.base);
  return *internal_default_instance();
}


void proc_load_gate_ban_entry::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_load_gate_ban_entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_load_gate_ban_entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_load_gate_ban_entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_load_gate_ban_entry.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_load_gate_ban_entry.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_load_gate_ban_entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_load_gate_ban_entry)
  return false;
#undef DO_
}

void proc_load_gate_ban_entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_load_gate_ban_entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_gate_ban_entry.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_load_gate_ban_entry.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_load_gate_ban_entry)
}

::google::protobuf::uint8* proc_load_gate_ban_entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_load_gate_ban_entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_load_gate_ban_entry.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_load_gate_ban_entry.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_load_gate_ban_entry)
  return target;
}

size_t proc_load_gate_ban_entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_load_gate_ban_entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_load_gate_ban_entry.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_load_gate_ban_entry.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_load_gate_ban_entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_load_gate_ban_entry)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_load_gate_ban_entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_load_gate_ban_entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_load_gate_ban_entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_load_gate_ban_entry)
    MergeFrom(*source);
  }
}

void proc_load_gate_ban_entry::MergeFrom(const proc_load_gate_ban_entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_load_gate_ban_entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_load_gate_ban_entry_Parameter::MergeFrom(from.param());
  }
}

void proc_load_gate_ban_entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_load_gate_ban_entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_load_gate_ban_entry::CopyFrom(const proc_load_gate_ban_entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_load_gate_ban_entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_load_gate_ban_entry::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->return_record_list())) return false;
  return true;
}

void proc_load_gate_ban_entry::Swap(proc_load_gate_ban_entry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_load_gate_ban_entry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_load_gate_ban_entry::UnsafeArenaSwap(proc_load_gate_ban_entry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_load_gate_ban_entry::InternalSwap(proc_load_gate_ban_entry* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_load_gate_ban_entry::GetMetadata() const {
  protobuf_GateSettings_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateSettings_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GateCfgWebservice* Arena::CreateMaybeMessage< ::db::GateCfgWebservice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GateCfgWebservice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_gate_cfg_webservice_Parameter* Arena::CreateMaybeMessage< ::db::proc_load_gate_cfg_webservice_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_gate_cfg_webservice_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_gate_cfg_webservice_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_load_gate_cfg_webservice_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_gate_cfg_webservice_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_gate_cfg_webservice* Arena::CreateMaybeMessage< ::db::proc_load_gate_cfg_webservice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_gate_cfg_webservice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GateCfgInnerServer* Arena::CreateMaybeMessage< ::db::GateCfgInnerServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GateCfgInnerServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::GateBanEntry* Arena::CreateMaybeMessage< ::db::GateBanEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::GateBanEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_gate_ban_entry_Parameter* Arena::CreateMaybeMessage< ::db::proc_load_gate_ban_entry_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_gate_ban_entry_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_gate_ban_entry_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_load_gate_ban_entry_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_gate_ban_entry_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_load_gate_ban_entry* Arena::CreateMaybeMessage< ::db::proc_load_gate_ban_entry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_load_gate_ban_entry >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
