// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateLog.proto

#include "GateLog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GateLog_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateLog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogOnline;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateLog_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_proc_gate_log_online_ReturnRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateLog_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_proc_gate_log_online_Parameter;
}  // namespace protobuf_GateLog_2eproto
namespace db {
class LogOnlineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogOnline>
      _instance;
} _LogOnline_default_instance_;
class proc_gate_log_online_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_gate_log_online_Parameter>
      _instance;
} _proc_gate_log_online_Parameter_default_instance_;
class proc_gate_log_online_ReturnRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_gate_log_online_ReturnRecord>
      _instance;
} _proc_gate_log_online_ReturnRecord_default_instance_;
class proc_gate_log_onlineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<proc_gate_log_online>
      _instance;
} _proc_gate_log_online_default_instance_;
}  // namespace db
namespace protobuf_GateLog_2eproto {
static void InitDefaultsLogOnline() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_LogOnline_default_instance_;
    new (ptr) ::db::LogOnline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::LogOnline::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogOnline =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogOnline}, {}};

static void InitDefaultsproc_gate_log_online_Parameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_gate_log_online_Parameter_default_instance_;
    new (ptr) ::db::proc_gate_log_online_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_gate_log_online_Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_proc_gate_log_online_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproc_gate_log_online_Parameter}, {
      &protobuf_GateLog_2eproto::scc_info_LogOnline.base,}};

static void InitDefaultsproc_gate_log_online_ReturnRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_gate_log_online_ReturnRecord_default_instance_;
    new (ptr) ::db::proc_gate_log_online_ReturnRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_gate_log_online_ReturnRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_proc_gate_log_online_ReturnRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproc_gate_log_online_ReturnRecord}, {}};

static void InitDefaultsproc_gate_log_online() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::db::_proc_gate_log_online_default_instance_;
    new (ptr) ::db::proc_gate_log_online();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::db::proc_gate_log_online::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_proc_gate_log_online =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsproc_gate_log_online}, {
      &protobuf_GateLog_2eproto::scc_info_proc_gate_log_online_Parameter.base,
      &protobuf_GateLog_2eproto::scc_info_proc_gate_log_online_ReturnRecord.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LogOnline.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_gate_log_online_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_gate_log_online_ReturnRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_proc_gate_log_online.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, subid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, action_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, action_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, entry_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::LogOnline, concurrent_users_),
  3,
  4,
  8,
  6,
  0,
  1,
  2,
  5,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online_Parameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online_Parameter, p_log_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online_ReturnRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online_ReturnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::db::proc_gate_log_online, return_record_list_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::db::LogOnline)},
  { 23, 29, sizeof(::db::proc_gate_log_online_Parameter)},
  { 30, 35, sizeof(::db::proc_gate_log_online_ReturnRecord)},
  { 35, 42, sizeof(::db::proc_gate_log_online)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_LogOnline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_gate_log_online_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_gate_log_online_ReturnRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::db::_proc_gate_log_online_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GateLog.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rGateLog.proto\022\002db\"\376\001\n\tLogOnline\022\r\n\005sub"
      "id\030\001 \002(\004\022\023\n\013action_time\030\002 \002(\020\022.\n\013action_"
      "type\030\003 \002(\0162\031.db.LogOnline.ACTION_TYPE\022\020\n"
      "\010entry_id\030\004 \002(\005\022\016\n\006userid\030\005 \002(\014\022\014\n\004nick\030"
      "\006 \002(\014\022\n\n\002ip\030\007 \002(\014\022\020\n\010serverid\030\013 \001(\004\022\030\n\020c"
      "oncurrent_users\030\025 \001(\005\"5\n\013ACTION_TYPE\022\n\n\006"
      "ONLINE\020\001\022\013\n\007OFFLINE\020\002\022\r\n\tHEARTBEAT\020\003\"\307\001\n"
      "\024proc_gate_log_online\0221\n\005param\030\001 \001(\0132\".d"
      "b.proc_gate_log_online.Parameter\022A\n\022retu"
      "rn_record_list\030\002 \003(\0132%.db.proc_gate_log_"
      "online.ReturnRecord\032)\n\tParameter\022\034\n\005p_lo"
      "g\030\001 \002(\0132\r.db.LogOnline\032\016\n\014ReturnRecordB\003"
      "\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 483);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GateLog.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GateLog_2eproto
namespace db {
const ::google::protobuf::EnumDescriptor* LogOnline_ACTION_TYPE_descriptor() {
  protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GateLog_2eproto::file_level_enum_descriptors[0];
}
bool LogOnline_ACTION_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogOnline_ACTION_TYPE LogOnline::ONLINE;
const LogOnline_ACTION_TYPE LogOnline::OFFLINE;
const LogOnline_ACTION_TYPE LogOnline::HEARTBEAT;
const LogOnline_ACTION_TYPE LogOnline::ACTION_TYPE_MIN;
const LogOnline_ACTION_TYPE LogOnline::ACTION_TYPE_MAX;
const int LogOnline::ACTION_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LogOnline::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogOnline::kSubidFieldNumber;
const int LogOnline::kActionTimeFieldNumber;
const int LogOnline::kActionTypeFieldNumber;
const int LogOnline::kEntryIdFieldNumber;
const int LogOnline::kUseridFieldNumber;
const int LogOnline::kNickFieldNumber;
const int LogOnline::kIpFieldNumber;
const int LogOnline::kServeridFieldNumber;
const int LogOnline::kConcurrentUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogOnline::LogOnline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateLog_2eproto::scc_info_LogOnline.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.LogOnline)
}
LogOnline::LogOnline(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateLog_2eproto::scc_info_LogOnline.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.LogOnline)
}
LogOnline::LogOnline(const LogOnline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userid()) {
    userid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip(),
      GetArenaNoVirtual());
  }
  ::memcpy(&subid_, &from.subid_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_type_) -
    reinterpret_cast<char*>(&subid_)) + sizeof(action_type_));
  // @@protoc_insertion_point(copy_constructor:db.LogOnline)
}

void LogOnline::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&subid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&concurrent_users_) -
      reinterpret_cast<char*>(&subid_)) + sizeof(concurrent_users_));
  action_type_ = 1;
}

LogOnline::~LogOnline() {
  // @@protoc_insertion_point(destructor:db.LogOnline)
  SharedDtor();
}

void LogOnline::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogOnline::ArenaDtor(void* object) {
  LogOnline* _this = reinterpret_cast< LogOnline* >(object);
  (void)_this;
}
void LogOnline::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void LogOnline::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogOnline::descriptor() {
  ::protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogOnline& LogOnline::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateLog_2eproto::scc_info_LogOnline.base);
  return *internal_default_instance();
}


void LogOnline::Clear() {
// @@protoc_insertion_point(message_clear_start:db.LogOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      nick_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ip_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&subid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&concurrent_users_) -
        reinterpret_cast<char*>(&subid_)) + sizeof(concurrent_users_));
  }
  action_type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogOnline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.LogOnline)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 subid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_subid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sfixed64 action_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_action_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &action_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .db.LogOnline.ACTION_TYPE action_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::db::LogOnline_ACTION_TYPE_IsValid(value)) {
            set_action_type(static_cast< ::db::LogOnline_ACTION_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 entry_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_entry_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entry_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes userid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_userid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes nick = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ip = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 serverid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 concurrent_users = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_concurrent_users();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &concurrent_users_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.LogOnline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.LogOnline)
  return false;
#undef DO_
}

void LogOnline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.LogOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 subid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->subid(), output);
  }

  // required sfixed64 action_time = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->action_time(), output);
  }

  // required .db.LogOnline.ACTION_TYPE action_type = 3;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->action_type(), output);
  }

  // required int32 entry_id = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->entry_id(), output);
  }

  // required bytes userid = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->userid(), output);
  }

  // required bytes nick = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->nick(), output);
  }

  // required bytes ip = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->ip(), output);
  }

  // optional uint64 serverid = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->serverid(), output);
  }

  // optional int32 concurrent_users = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->concurrent_users(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.LogOnline)
}

::google::protobuf::uint8* LogOnline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.LogOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 subid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->subid(), target);
  }

  // required sfixed64 action_time = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->action_time(), target);
  }

  // required .db.LogOnline.ACTION_TYPE action_type = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->action_type(), target);
  }

  // required int32 entry_id = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->entry_id(), target);
  }

  // required bytes userid = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->userid(), target);
  }

  // required bytes nick = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->nick(), target);
  }

  // required bytes ip = 7;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->ip(), target);
  }

  // optional uint64 serverid = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->serverid(), target);
  }

  // optional int32 concurrent_users = 21;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->concurrent_users(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.LogOnline)
  return target;
}

size_t LogOnline::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:db.LogOnline)
  size_t total_size = 0;

  if (has_userid()) {
    // required bytes userid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());
  }

  if (has_nick()) {
    // required bytes nick = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  if (has_ip()) {
    // required bytes ip = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  if (has_subid()) {
    // required uint64 subid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->subid());
  }

  if (has_action_time()) {
    // required sfixed64 action_time = 2;
    total_size += 1 + 8;
  }

  if (has_entry_id()) {
    // required int32 entry_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entry_id());
  }

  if (has_action_type()) {
    // required .db.LogOnline.ACTION_TYPE action_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());
  }

  return total_size;
}
size_t LogOnline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.LogOnline)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000015f) ^ 0x0000015f) == 0) {  // All required fields are present.
    // required bytes userid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->userid());

    // required bytes nick = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());

    // required bytes ip = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());

    // required uint64 subid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->subid());

    // required sfixed64 action_time = 2;
    total_size += 1 + 8;

    // required int32 entry_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entry_id());

    // required .db.LogOnline.ACTION_TYPE action_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint64 serverid = 11;
  if (has_serverid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // optional int32 concurrent_users = 21;
  if (has_concurrent_users()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->concurrent_users());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogOnline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.LogOnline)
  GOOGLE_DCHECK_NE(&from, this);
  const LogOnline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogOnline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.LogOnline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.LogOnline)
    MergeFrom(*source);
  }
}

void LogOnline::MergeFrom(const LogOnline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.LogOnline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_userid(from.userid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000004u) {
      set_ip(from.ip());
    }
    if (cached_has_bits & 0x00000008u) {
      subid_ = from.subid_;
    }
    if (cached_has_bits & 0x00000010u) {
      action_time_ = from.action_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      serverid_ = from.serverid_;
    }
    if (cached_has_bits & 0x00000040u) {
      entry_id_ = from.entry_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      concurrent_users_ = from.concurrent_users_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_action_type(from.action_type());
  }
}

void LogOnline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.LogOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogOnline::CopyFrom(const LogOnline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.LogOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogOnline::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000015f) != 0x0000015f) return false;
  return true;
}

void LogOnline::Swap(LogOnline* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    LogOnline* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void LogOnline::UnsafeArenaSwap(LogOnline* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void LogOnline::InternalSwap(LogOnline* other) {
  using std::swap;
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(subid_, other->subid_);
  swap(action_time_, other->action_time_);
  swap(serverid_, other->serverid_);
  swap(entry_id_, other->entry_id_);
  swap(concurrent_users_, other->concurrent_users_);
  swap(action_type_, other->action_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogOnline::GetMetadata() const {
  protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_gate_log_online_Parameter::InitAsDefaultInstance() {
  ::db::_proc_gate_log_online_Parameter_default_instance_._instance.get_mutable()->p_log_ = const_cast< ::db::LogOnline*>(
      ::db::LogOnline::internal_default_instance());
}
void proc_gate_log_online_Parameter::unsafe_arena_set_allocated_p_log(
    ::db::LogOnline* p_log) {
  if (GetArenaNoVirtual() == NULL) {
    delete p_log_;
  }
  p_log_ = p_log;
  if (p_log) {
    set_has_p_log();
  } else {
    clear_has_p_log();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_gate_log_online.Parameter.p_log)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_gate_log_online_Parameter::kPLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_gate_log_online_Parameter::proc_gate_log_online_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateLog_2eproto::scc_info_proc_gate_log_online_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_gate_log_online.Parameter)
}
proc_gate_log_online_Parameter::proc_gate_log_online_Parameter(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateLog_2eproto::scc_info_proc_gate_log_online_Parameter.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_gate_log_online.Parameter)
}
proc_gate_log_online_Parameter::proc_gate_log_online_Parameter(const proc_gate_log_online_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_p_log()) {
    p_log_ = new ::db::LogOnline(*from.p_log_);
  } else {
    p_log_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_gate_log_online.Parameter)
}

void proc_gate_log_online_Parameter::SharedCtor() {
  p_log_ = NULL;
}

proc_gate_log_online_Parameter::~proc_gate_log_online_Parameter() {
  // @@protoc_insertion_point(destructor:db.proc_gate_log_online.Parameter)
  SharedDtor();
}

void proc_gate_log_online_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete p_log_;
}

void proc_gate_log_online_Parameter::ArenaDtor(void* object) {
  proc_gate_log_online_Parameter* _this = reinterpret_cast< proc_gate_log_online_Parameter* >(object);
  (void)_this;
}
void proc_gate_log_online_Parameter::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_gate_log_online_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_gate_log_online_Parameter::descriptor() {
  ::protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_gate_log_online_Parameter& proc_gate_log_online_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateLog_2eproto::scc_info_proc_gate_log_online_Parameter.base);
  return *internal_default_instance();
}


void proc_gate_log_online_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_gate_log_online.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(p_log_ != NULL);
    p_log_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_gate_log_online_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_gate_log_online.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .db.LogOnline p_log = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_gate_log_online.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_gate_log_online.Parameter)
  return false;
#undef DO_
}

void proc_gate_log_online_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_gate_log_online.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.LogOnline p_log = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p_log(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_gate_log_online.Parameter)
}

::google::protobuf::uint8* proc_gate_log_online_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_gate_log_online.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .db.LogOnline p_log = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p_log(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_gate_log_online.Parameter)
  return target;
}

size_t proc_gate_log_online_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_gate_log_online.Parameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .db.LogOnline p_log = 1;
  if (has_p_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p_log_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_gate_log_online_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_gate_log_online.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_gate_log_online_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_gate_log_online_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_gate_log_online.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_gate_log_online.Parameter)
    MergeFrom(*source);
  }
}

void proc_gate_log_online_Parameter::MergeFrom(const proc_gate_log_online_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_gate_log_online.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_p_log()) {
    mutable_p_log()->::db::LogOnline::MergeFrom(from.p_log());
  }
}

void proc_gate_log_online_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_gate_log_online.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_gate_log_online_Parameter::CopyFrom(const proc_gate_log_online_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_gate_log_online.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_gate_log_online_Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_p_log()) {
    if (!this->p_log_->IsInitialized()) return false;
  }
  return true;
}

void proc_gate_log_online_Parameter::Swap(proc_gate_log_online_Parameter* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_gate_log_online_Parameter* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_gate_log_online_Parameter::UnsafeArenaSwap(proc_gate_log_online_Parameter* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_gate_log_online_Parameter::InternalSwap(proc_gate_log_online_Parameter* other) {
  using std::swap;
  swap(p_log_, other->p_log_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_gate_log_online_Parameter::GetMetadata() const {
  protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_gate_log_online_ReturnRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_gate_log_online_ReturnRecord::proc_gate_log_online_ReturnRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateLog_2eproto::scc_info_proc_gate_log_online_ReturnRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_gate_log_online.ReturnRecord)
}
proc_gate_log_online_ReturnRecord::proc_gate_log_online_ReturnRecord(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateLog_2eproto::scc_info_proc_gate_log_online_ReturnRecord.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_gate_log_online.ReturnRecord)
}
proc_gate_log_online_ReturnRecord::proc_gate_log_online_ReturnRecord(const proc_gate_log_online_ReturnRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:db.proc_gate_log_online.ReturnRecord)
}

void proc_gate_log_online_ReturnRecord::SharedCtor() {
}

proc_gate_log_online_ReturnRecord::~proc_gate_log_online_ReturnRecord() {
  // @@protoc_insertion_point(destructor:db.proc_gate_log_online.ReturnRecord)
  SharedDtor();
}

void proc_gate_log_online_ReturnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void proc_gate_log_online_ReturnRecord::ArenaDtor(void* object) {
  proc_gate_log_online_ReturnRecord* _this = reinterpret_cast< proc_gate_log_online_ReturnRecord* >(object);
  (void)_this;
}
void proc_gate_log_online_ReturnRecord::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_gate_log_online_ReturnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_gate_log_online_ReturnRecord::descriptor() {
  ::protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_gate_log_online_ReturnRecord& proc_gate_log_online_ReturnRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateLog_2eproto::scc_info_proc_gate_log_online_ReturnRecord.base);
  return *internal_default_instance();
}


void proc_gate_log_online_ReturnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_gate_log_online.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_gate_log_online_ReturnRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_gate_log_online.ReturnRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_gate_log_online.ReturnRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_gate_log_online.ReturnRecord)
  return false;
#undef DO_
}

void proc_gate_log_online_ReturnRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_gate_log_online.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_gate_log_online.ReturnRecord)
}

::google::protobuf::uint8* proc_gate_log_online_ReturnRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_gate_log_online.ReturnRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_gate_log_online.ReturnRecord)
  return target;
}

size_t proc_gate_log_online_ReturnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_gate_log_online.ReturnRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_gate_log_online_ReturnRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_gate_log_online.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_gate_log_online_ReturnRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_gate_log_online_ReturnRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_gate_log_online.ReturnRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_gate_log_online.ReturnRecord)
    MergeFrom(*source);
  }
}

void proc_gate_log_online_ReturnRecord::MergeFrom(const proc_gate_log_online_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_gate_log_online.ReturnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void proc_gate_log_online_ReturnRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_gate_log_online.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_gate_log_online_ReturnRecord::CopyFrom(const proc_gate_log_online_ReturnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_gate_log_online.ReturnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_gate_log_online_ReturnRecord::IsInitialized() const {
  return true;
}

void proc_gate_log_online_ReturnRecord::Swap(proc_gate_log_online_ReturnRecord* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_gate_log_online_ReturnRecord* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_gate_log_online_ReturnRecord::UnsafeArenaSwap(proc_gate_log_online_ReturnRecord* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_gate_log_online_ReturnRecord::InternalSwap(proc_gate_log_online_ReturnRecord* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_gate_log_online_ReturnRecord::GetMetadata() const {
  protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void proc_gate_log_online::InitAsDefaultInstance() {
  ::db::_proc_gate_log_online_default_instance_._instance.get_mutable()->param_ = const_cast< ::db::proc_gate_log_online_Parameter*>(
      ::db::proc_gate_log_online_Parameter::internal_default_instance());
}
void proc_gate_log_online::unsafe_arena_set_allocated_param(
    ::db::proc_gate_log_online_Parameter* param) {
  if (GetArenaNoVirtual() == NULL) {
    delete param_;
  }
  param_ = param;
  if (param) {
    set_has_param();
  } else {
    clear_has_param();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:db.proc_gate_log_online.param)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int proc_gate_log_online::kParamFieldNumber;
const int proc_gate_log_online::kReturnRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

proc_gate_log_online::proc_gate_log_online()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateLog_2eproto::scc_info_proc_gate_log_online.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:db.proc_gate_log_online)
}
proc_gate_log_online::proc_gate_log_online(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  return_record_list_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateLog_2eproto::scc_info_proc_gate_log_online.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:db.proc_gate_log_online)
}
proc_gate_log_online::proc_gate_log_online(const proc_gate_log_online& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      return_record_list_(from.return_record_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_param()) {
    param_ = new ::db::proc_gate_log_online_Parameter(*from.param_);
  } else {
    param_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:db.proc_gate_log_online)
}

void proc_gate_log_online::SharedCtor() {
  param_ = NULL;
}

proc_gate_log_online::~proc_gate_log_online() {
  // @@protoc_insertion_point(destructor:db.proc_gate_log_online)
  SharedDtor();
}

void proc_gate_log_online::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete param_;
}

void proc_gate_log_online::ArenaDtor(void* object) {
  proc_gate_log_online* _this = reinterpret_cast< proc_gate_log_online* >(object);
  (void)_this;
}
void proc_gate_log_online::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void proc_gate_log_online::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* proc_gate_log_online::descriptor() {
  ::protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateLog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const proc_gate_log_online& proc_gate_log_online::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateLog_2eproto::scc_info_proc_gate_log_online.base);
  return *internal_default_instance();
}


void proc_gate_log_online::Clear() {
// @@protoc_insertion_point(message_clear_start:db.proc_gate_log_online)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_record_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(param_ != NULL);
    param_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool proc_gate_log_online::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:db.proc_gate_log_online)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .db.proc_gate_log_online.Parameter param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .db.proc_gate_log_online.ReturnRecord return_record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_return_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:db.proc_gate_log_online)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:db.proc_gate_log_online)
  return false;
#undef DO_
}

void proc_gate_log_online::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:db.proc_gate_log_online)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_gate_log_online.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_param(), output);
  }

  // repeated .db.proc_gate_log_online.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->return_record_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:db.proc_gate_log_online)
}

::google::protobuf::uint8* proc_gate_log_online::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:db.proc_gate_log_online)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .db.proc_gate_log_online.Parameter param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_param(), deterministic, target);
  }

  // repeated .db.proc_gate_log_online.ReturnRecord return_record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->return_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->return_record_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:db.proc_gate_log_online)
  return target;
}

size_t proc_gate_log_online::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:db.proc_gate_log_online)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .db.proc_gate_log_online.ReturnRecord return_record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->return_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->return_record_list(static_cast<int>(i)));
    }
  }

  // optional .db.proc_gate_log_online.Parameter param = 1;
  if (has_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proc_gate_log_online::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:db.proc_gate_log_online)
  GOOGLE_DCHECK_NE(&from, this);
  const proc_gate_log_online* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const proc_gate_log_online>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:db.proc_gate_log_online)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:db.proc_gate_log_online)
    MergeFrom(*source);
  }
}

void proc_gate_log_online::MergeFrom(const proc_gate_log_online& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:db.proc_gate_log_online)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  return_record_list_.MergeFrom(from.return_record_list_);
  if (from.has_param()) {
    mutable_param()->::db::proc_gate_log_online_Parameter::MergeFrom(from.param());
  }
}

void proc_gate_log_online::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:db.proc_gate_log_online)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proc_gate_log_online::CopyFrom(const proc_gate_log_online& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:db.proc_gate_log_online)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proc_gate_log_online::IsInitialized() const {
  if (has_param()) {
    if (!this->param_->IsInitialized()) return false;
  }
  return true;
}

void proc_gate_log_online::Swap(proc_gate_log_online* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    proc_gate_log_online* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void proc_gate_log_online::UnsafeArenaSwap(proc_gate_log_online* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void proc_gate_log_online::InternalSwap(proc_gate_log_online* other) {
  using std::swap;
  CastToBase(&return_record_list_)->InternalSwap(CastToBase(&other->return_record_list_));
  swap(param_, other->param_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata proc_gate_log_online::GetMetadata() const {
  protobuf_GateLog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateLog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace db
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::LogOnline* Arena::CreateMaybeMessage< ::db::LogOnline >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::LogOnline >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_gate_log_online_Parameter* Arena::CreateMaybeMessage< ::db::proc_gate_log_online_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_gate_log_online_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_gate_log_online_ReturnRecord* Arena::CreateMaybeMessage< ::db::proc_gate_log_online_ReturnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_gate_log_online_ReturnRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::db::proc_gate_log_online* Arena::CreateMaybeMessage< ::db::proc_gate_log_online >(Arena* arena) {
  return Arena::CreateMessageInternal< ::db::proc_gate_log_online >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
