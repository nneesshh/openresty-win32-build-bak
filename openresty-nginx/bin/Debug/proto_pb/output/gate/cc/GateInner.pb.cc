// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GateInner.proto

#include "GateInner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GateInner_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateInner_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlayerJoinService_JoinRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateInner_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlayerJoinService_JoinResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateInner_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlayerQuitService_QuitRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateInner_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlayerQuitService_QuitResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateInner_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegisterNativeClientService_RegisterRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GateInner_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegisterNativeClientService_RegisterResponse;
}  // namespace protobuf_GateInner_2eproto
namespace protobuf_Gate_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Gate_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameServer;
}  // namespace protobuf_Gate_2eproto
namespace gate {
class GateShakeHandNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GateShakeHandNotify>
      _instance;
} _GateShakeHandNotify_default_instance_;
class PlayerJoinService_JoinRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerJoinService_JoinRequest>
      _instance;
} _PlayerJoinService_JoinRequest_default_instance_;
class PlayerJoinService_JoinResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerJoinService_JoinResponse>
      _instance;
} _PlayerJoinService_JoinResponse_default_instance_;
class PlayerJoinServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerJoinService>
      _instance;
} _PlayerJoinService_default_instance_;
class PlayerQuitService_QuitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerQuitService_QuitRequest>
      _instance;
} _PlayerQuitService_QuitRequest_default_instance_;
class PlayerQuitService_QuitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerQuitService_QuitResponse>
      _instance;
} _PlayerQuitService_QuitResponse_default_instance_;
class PlayerQuitServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerQuitService>
      _instance;
} _PlayerQuitService_default_instance_;
class RegisterNativeClientService_RegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterNativeClientService_RegisterRequest>
      _instance;
} _RegisterNativeClientService_RegisterRequest_default_instance_;
class RegisterNativeClientService_RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterNativeClientService_RegisterResponse>
      _instance;
} _RegisterNativeClientService_RegisterResponse_default_instance_;
class RegisterNativeClientServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterNativeClientService>
      _instance;
} _RegisterNativeClientService_default_instance_;
class KeepAliveNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeepAliveNotify>
      _instance;
} _KeepAliveNotify_default_instance_;
}  // namespace gate
namespace protobuf_GateInner_2eproto {
static void InitDefaultsGateShakeHandNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_GateShakeHandNotify_default_instance_;
    new (ptr) ::gate::GateShakeHandNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::GateShakeHandNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GateShakeHandNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGateShakeHandNotify}, {
      &protobuf_Gate_2eproto::scc_info_GameServer.base,}};

static void InitDefaultsPlayerJoinService_JoinRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_PlayerJoinService_JoinRequest_default_instance_;
    new (ptr) ::gate::PlayerJoinService_JoinRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::PlayerJoinService_JoinRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerJoinService_JoinRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerJoinService_JoinRequest}, {}};

static void InitDefaultsPlayerJoinService_JoinResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_PlayerJoinService_JoinResponse_default_instance_;
    new (ptr) ::gate::PlayerJoinService_JoinResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::PlayerJoinService_JoinResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerJoinService_JoinResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerJoinService_JoinResponse}, {}};

static void InitDefaultsPlayerJoinService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_PlayerJoinService_default_instance_;
    new (ptr) ::gate::PlayerJoinService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::PlayerJoinService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PlayerJoinService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPlayerJoinService}, {
      &protobuf_GateInner_2eproto::scc_info_PlayerJoinService_JoinRequest.base,
      &protobuf_GateInner_2eproto::scc_info_PlayerJoinService_JoinResponse.base,}};

static void InitDefaultsPlayerQuitService_QuitRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_PlayerQuitService_QuitRequest_default_instance_;
    new (ptr) ::gate::PlayerQuitService_QuitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::PlayerQuitService_QuitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerQuitService_QuitRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerQuitService_QuitRequest}, {}};

static void InitDefaultsPlayerQuitService_QuitResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_PlayerQuitService_QuitResponse_default_instance_;
    new (ptr) ::gate::PlayerQuitService_QuitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::PlayerQuitService_QuitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerQuitService_QuitResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerQuitService_QuitResponse}, {}};

static void InitDefaultsPlayerQuitService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_PlayerQuitService_default_instance_;
    new (ptr) ::gate::PlayerQuitService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::PlayerQuitService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PlayerQuitService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPlayerQuitService}, {
      &protobuf_GateInner_2eproto::scc_info_PlayerQuitService_QuitRequest.base,
      &protobuf_GateInner_2eproto::scc_info_PlayerQuitService_QuitResponse.base,}};

static void InitDefaultsRegisterNativeClientService_RegisterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_RegisterNativeClientService_RegisterRequest_default_instance_;
    new (ptr) ::gate::RegisterNativeClientService_RegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::RegisterNativeClientService_RegisterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterNativeClientService_RegisterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterNativeClientService_RegisterRequest}, {}};

static void InitDefaultsRegisterNativeClientService_RegisterResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_RegisterNativeClientService_RegisterResponse_default_instance_;
    new (ptr) ::gate::RegisterNativeClientService_RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::RegisterNativeClientService_RegisterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterNativeClientService_RegisterResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterNativeClientService_RegisterResponse}, {}};

static void InitDefaultsRegisterNativeClientService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_RegisterNativeClientService_default_instance_;
    new (ptr) ::gate::RegisterNativeClientService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::RegisterNativeClientService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RegisterNativeClientService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRegisterNativeClientService}, {
      &protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService_RegisterRequest.base,
      &protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService_RegisterResponse.base,}};

static void InitDefaultsKeepAliveNotify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gate::_KeepAliveNotify_default_instance_;
    new (ptr) ::gate::KeepAliveNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gate::KeepAliveNotify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeepAliveNotify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeepAliveNotify}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GateShakeHandNotify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerJoinService_JoinRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerJoinService_JoinResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerJoinService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerQuitService_QuitRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerQuitService_QuitResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerQuitService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterNativeClientService_RegisterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterNativeClientService_RegisterResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterNativeClientService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeepAliveNotify.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::GateShakeHandNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::GateShakeHandNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::GateShakeHandNotify, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::GateShakeHandNotify, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::GateShakeHandNotify, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::GateShakeHandNotify, gate_desc_),
  3,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinRequest, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinRequest, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinRequest, gameserverid_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService_JoinResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerJoinService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService_QuitRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService_QuitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService_QuitRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService_QuitRequest, nick_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService_QuitResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService_QuitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService_QuitResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::PlayerQuitService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService_RegisterRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService_RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService_RegisterRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService_RegisterRequest, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService_RegisterResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService_RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::RegisterNativeClientService, resp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::KeepAliveNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::KeepAliveNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gate::KeepAliveNotify, serverid_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::gate::GateShakeHandNotify)},
  { 13, 22, sizeof(::gate::PlayerJoinService_JoinRequest)},
  { 26, 32, sizeof(::gate::PlayerJoinService_JoinResponse)},
  { 33, 40, sizeof(::gate::PlayerJoinService)},
  { 42, 49, sizeof(::gate::PlayerQuitService_QuitRequest)},
  { 51, 57, sizeof(::gate::PlayerQuitService_QuitResponse)},
  { 58, 65, sizeof(::gate::PlayerQuitService)},
  { 67, 74, sizeof(::gate::RegisterNativeClientService_RegisterRequest)},
  { 76, 81, sizeof(::gate::RegisterNativeClientService_RegisterResponse)},
  { 81, 88, sizeof(::gate::RegisterNativeClientService)},
  { 90, 96, sizeof(::gate::KeepAliveNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_GateShakeHandNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_PlayerJoinService_JoinRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_PlayerJoinService_JoinResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_PlayerJoinService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_PlayerQuitService_QuitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_PlayerQuitService_QuitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_PlayerQuitService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_RegisterNativeClientService_RegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_RegisterNativeClientService_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_RegisterNativeClientService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gate::_KeepAliveNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GateInner.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017GateInner.proto\022\004gate\032\nGate.proto\"\302\001\n\023"
      "GateShakeHandNotify\0229\n\003cmd\030\001 \002(\0162,.gate."
      "GateShakeHandNotify.SHAKE_HAND_COMMAND\022 "
      "\n\006server\030\002 \001(\0132\020.gate.GameServer\022\016\n\006gate"
      "id\030\013 \001(\r\022\021\n\tgate_desc\030\014 \001(\014\"+\n\022SHAKE_HAN"
      "D_COMMAND\022\010\n\004INIT\020\001\022\013\n\007CONFIRM\020\002\"\247\002\n\021Pla"
      "yerJoinService\0220\n\003req\030\001 \001(\0132#.gate.Playe"
      "rJoinService.JoinRequest\0222\n\004resp\030\002 \001(\0132$"
      ".gate.PlayerJoinService.JoinResponse\032N\n\013"
      "JoinRequest\022\013\n\003uid\030\001 \002(\014\022\014\n\004nick\030\002 \001(\014\022\016"
      "\n\006gateid\030\013 \001(\r\022\024\n\014gameserverid\030\014 \001(\r\032>\n\014"
      "JoinResponse\022.\n\006result\030\001 \002(\0162\036.gate.Play"
      "erJoinService.RESULT\"\034\n\006RESULT\022\006\n\002OK\020\000\022\n"
      "\n\006FAILED\020\001\"\201\002\n\021PlayerQuitService\0220\n\003req\030"
      "\001 \001(\0132#.gate.PlayerQuitService.QuitReque"
      "st\0222\n\004resp\030\002 \001(\0132$.gate.PlayerQuitServic"
      "e.QuitResponse\032(\n\013QuitRequest\022\013\n\003uid\030\001 \002"
      "(\014\022\014\n\004nick\030\002 \001(\014\032>\n\014QuitResponse\022.\n\006resu"
      "lt\030\001 \002(\0162\036.gate.PlayerQuitService.RESULT"
      "\"\034\n\006RESULT\022\006\n\002OK\020\000\022\n\n\006FAILED\020\001\"\340\001\n\033Regis"
      "terNativeClientService\022>\n\003req\030\001 \001(\01321.ga"
      "te.RegisterNativeClientService.RegisterR"
      "equest\022@\n\004resp\030\002 \001(\01322.gate.RegisterNati"
      "veClientService.RegisterResponse\032+\n\017Regi"
      "sterRequest\022\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \002(\014\032\022\n"
      "\020RegisterResponse\"#\n\017KeepAliveNotify\022\020\n\010"
      "serverid\030\001 \001(\005*j\n\021INNER_SERVER_TYPE\022\035\n\031I"
      "NNER_SERVER_TYPE_UNKNOWN\020\000\022\032\n\026INNER_SERV"
      "ER_TYPE_GAME\020\001\022\032\n\026INNER_SERVER_TYPE_CHAT"
      "\020\002*\250\001\n\027INNER_SERVER_VISIBILITY\022#\n\037INNER_"
      "SERVER_VISIBILITY_UNKNOWN\020\000\022\"\n\036INNER_SER"
      "VER_VISIBILITY_NORMAL\020\001\022 \n\034INNER_SERVER_"
      "VISIBILITY_TEST\020\002\022\"\n\036INNER_SERVER_VISIBI"
      "LITY_REVIEW\020\003B\003\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1338);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GateInner.proto", &protobuf_RegisterTypes);
  ::protobuf_Gate_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GateInner_2eproto
namespace gate {
const ::google::protobuf::EnumDescriptor* GateShakeHandNotify_SHAKE_HAND_COMMAND_descriptor() {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GateInner_2eproto::file_level_enum_descriptors[0];
}
bool GateShakeHandNotify_SHAKE_HAND_COMMAND_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GateShakeHandNotify_SHAKE_HAND_COMMAND GateShakeHandNotify::INIT;
const GateShakeHandNotify_SHAKE_HAND_COMMAND GateShakeHandNotify::CONFIRM;
const GateShakeHandNotify_SHAKE_HAND_COMMAND GateShakeHandNotify::SHAKE_HAND_COMMAND_MIN;
const GateShakeHandNotify_SHAKE_HAND_COMMAND GateShakeHandNotify::SHAKE_HAND_COMMAND_MAX;
const int GateShakeHandNotify::SHAKE_HAND_COMMAND_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerJoinService_RESULT_descriptor() {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GateInner_2eproto::file_level_enum_descriptors[1];
}
bool PlayerJoinService_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerJoinService_RESULT PlayerJoinService::OK;
const PlayerJoinService_RESULT PlayerJoinService::FAILED;
const PlayerJoinService_RESULT PlayerJoinService::RESULT_MIN;
const PlayerJoinService_RESULT PlayerJoinService::RESULT_MAX;
const int PlayerJoinService::RESULT_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerQuitService_RESULT_descriptor() {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GateInner_2eproto::file_level_enum_descriptors[2];
}
bool PlayerQuitService_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerQuitService_RESULT PlayerQuitService::OK;
const PlayerQuitService_RESULT PlayerQuitService::FAILED;
const PlayerQuitService_RESULT PlayerQuitService::RESULT_MIN;
const PlayerQuitService_RESULT PlayerQuitService::RESULT_MAX;
const int PlayerQuitService::RESULT_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* INNER_SERVER_TYPE_descriptor() {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GateInner_2eproto::file_level_enum_descriptors[3];
}
bool INNER_SERVER_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* INNER_SERVER_VISIBILITY_descriptor() {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GateInner_2eproto::file_level_enum_descriptors[4];
}
bool INNER_SERVER_VISIBILITY_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GateShakeHandNotify::InitAsDefaultInstance() {
  ::gate::_GateShakeHandNotify_default_instance_._instance.get_mutable()->server_ = const_cast< ::gate::GameServer*>(
      ::gate::GameServer::internal_default_instance());
}
void GateShakeHandNotify::unsafe_arena_set_allocated_server(
    ::gate::GameServer* server) {
  if (GetArenaNoVirtual() == NULL) {
    delete server_;
  }
  server_ = server;
  if (server) {
    set_has_server();
  } else {
    clear_has_server();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gate.GateShakeHandNotify.server)
}
void GateShakeHandNotify::clear_server() {
  if (server_ != NULL) server_->Clear();
  clear_has_server();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateShakeHandNotify::kCmdFieldNumber;
const int GateShakeHandNotify::kServerFieldNumber;
const int GateShakeHandNotify::kGateidFieldNumber;
const int GateShakeHandNotify::kGateDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateShakeHandNotify::GateShakeHandNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_GateShakeHandNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.GateShakeHandNotify)
}
GateShakeHandNotify::GateShakeHandNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_GateShakeHandNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.GateShakeHandNotify)
}
GateShakeHandNotify::GateShakeHandNotify(const GateShakeHandNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gate_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gate_desc()) {
    gate_desc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gate_desc(),
      GetArenaNoVirtual());
  }
  if (from.has_server()) {
    server_ = new ::gate::GameServer(*from.server_);
  } else {
    server_ = NULL;
  }
  ::memcpy(&gateid_, &from.gateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&gateid_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:gate.GateShakeHandNotify)
}

void GateShakeHandNotify::SharedCtor() {
  gate_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&server_)) + sizeof(gateid_));
  cmd_ = 1;
}

GateShakeHandNotify::~GateShakeHandNotify() {
  // @@protoc_insertion_point(destructor:gate.GateShakeHandNotify)
  SharedDtor();
}

void GateShakeHandNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  gate_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete server_;
}

void GateShakeHandNotify::ArenaDtor(void* object) {
  GateShakeHandNotify* _this = reinterpret_cast< GateShakeHandNotify* >(object);
  (void)_this;
}
void GateShakeHandNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GateShakeHandNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GateShakeHandNotify::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateShakeHandNotify& GateShakeHandNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_GateShakeHandNotify.base);
  return *internal_default_instance();
}


void GateShakeHandNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.GateShakeHandNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      gate_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(server_ != NULL);
      server_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    gateid_ = 0u;
    cmd_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GateShakeHandNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.GateShakeHandNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .gate.GateShakeHandNotify.SHAKE_HAND_COMMAND cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gate::GateShakeHandNotify_SHAKE_HAND_COMMAND_IsValid(value)) {
            set_cmd(static_cast< ::gate::GateShakeHandNotify_SHAKE_HAND_COMMAND >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .gate.GameServer server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gateid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_gateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gate_desc = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gate_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.GateShakeHandNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.GateShakeHandNotify)
  return false;
#undef DO_
}

void GateShakeHandNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.GateShakeHandNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gate.GateShakeHandNotify.SHAKE_HAND_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional .gate.GameServer server = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_server(), output);
  }

  // optional uint32 gateid = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->gateid(), output);
  }

  // optional bytes gate_desc = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->gate_desc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.GateShakeHandNotify)
}

::google::protobuf::uint8* GateShakeHandNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.GateShakeHandNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gate.GateShakeHandNotify.SHAKE_HAND_COMMAND cmd = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional .gate.GameServer server = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_server(), deterministic, target);
  }

  // optional uint32 gateid = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->gateid(), target);
  }

  // optional bytes gate_desc = 12;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->gate_desc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.GateShakeHandNotify)
  return target;
}

size_t GateShakeHandNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.GateShakeHandNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .gate.GateShakeHandNotify.SHAKE_HAND_COMMAND cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes gate_desc = 12;
    if (has_gate_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gate_desc());
    }

    // optional .gate.GameServer server = 2;
    if (has_server()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_);
    }

    // optional uint32 gateid = 11;
    if (has_gateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gateid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GateShakeHandNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.GateShakeHandNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GateShakeHandNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateShakeHandNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.GateShakeHandNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.GateShakeHandNotify)
    MergeFrom(*source);
  }
}

void GateShakeHandNotify::MergeFrom(const GateShakeHandNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.GateShakeHandNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_gate_desc(from.gate_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_server()->::gate::GameServer::MergeFrom(from.server());
    }
    if (cached_has_bits & 0x00000004u) {
      gateid_ = from.gateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      cmd_ = from.cmd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GateShakeHandNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.GateShakeHandNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateShakeHandNotify::CopyFrom(const GateShakeHandNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.GateShakeHandNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateShakeHandNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_server()) {
    if (!this->server_->IsInitialized()) return false;
  }
  return true;
}

void GateShakeHandNotify::Swap(GateShakeHandNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GateShakeHandNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GateShakeHandNotify::UnsafeArenaSwap(GateShakeHandNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GateShakeHandNotify::InternalSwap(GateShakeHandNotify* other) {
  using std::swap;
  gate_desc_.Swap(&other->gate_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(server_, other->server_);
  swap(gateid_, other->gateid_);
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GateShakeHandNotify::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerJoinService_JoinRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerJoinService_JoinRequest::kUidFieldNumber;
const int PlayerJoinService_JoinRequest::kNickFieldNumber;
const int PlayerJoinService_JoinRequest::kGateidFieldNumber;
const int PlayerJoinService_JoinRequest::kGameserveridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerJoinService_JoinRequest::PlayerJoinService_JoinRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_PlayerJoinService_JoinRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.PlayerJoinService.JoinRequest)
}
PlayerJoinService_JoinRequest::PlayerJoinService_JoinRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerJoinService_JoinRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.PlayerJoinService.JoinRequest)
}
PlayerJoinService_JoinRequest::PlayerJoinService_JoinRequest(const PlayerJoinService_JoinRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  ::memcpy(&gateid_, &from.gateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameserverid_) -
    reinterpret_cast<char*>(&gateid_)) + sizeof(gameserverid_));
  // @@protoc_insertion_point(copy_constructor:gate.PlayerJoinService.JoinRequest)
}

void PlayerJoinService_JoinRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameserverid_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(gameserverid_));
}

PlayerJoinService_JoinRequest::~PlayerJoinService_JoinRequest() {
  // @@protoc_insertion_point(destructor:gate.PlayerJoinService.JoinRequest)
  SharedDtor();
}

void PlayerJoinService_JoinRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerJoinService_JoinRequest::ArenaDtor(void* object) {
  PlayerJoinService_JoinRequest* _this = reinterpret_cast< PlayerJoinService_JoinRequest* >(object);
  (void)_this;
}
void PlayerJoinService_JoinRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerJoinService_JoinRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerJoinService_JoinRequest::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerJoinService_JoinRequest& PlayerJoinService_JoinRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerJoinService_JoinRequest.base);
  return *internal_default_instance();
}


void PlayerJoinService_JoinRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.PlayerJoinService.JoinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      nick_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&gateid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gameserverid_) -
        reinterpret_cast<char*>(&gateid_)) + sizeof(gameserverid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerJoinService_JoinRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.PlayerJoinService.JoinRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gateid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_gateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gameserverid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_gameserverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.PlayerJoinService.JoinRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.PlayerJoinService.JoinRequest)
  return false;
#undef DO_
}

void PlayerJoinService_JoinRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.PlayerJoinService.JoinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uid(), output);
  }

  // optional bytes nick = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nick(), output);
  }

  // optional uint32 gateid = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->gateid(), output);
  }

  // optional uint32 gameserverid = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->gameserverid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.PlayerJoinService.JoinRequest)
}

::google::protobuf::uint8* PlayerJoinService_JoinRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.PlayerJoinService.JoinRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uid(), target);
  }

  // optional bytes nick = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nick(), target);
  }

  // optional uint32 gateid = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->gateid(), target);
  }

  // optional uint32 gameserverid = 12;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->gameserverid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.PlayerJoinService.JoinRequest)
  return target;
}

size_t PlayerJoinService_JoinRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.PlayerJoinService.JoinRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional bytes nick = 2;
    if (has_nick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nick());
    }

    // optional uint32 gateid = 11;
    if (has_gateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gateid());
    }

    // optional uint32 gameserverid = 12;
    if (has_gameserverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gameserverid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerJoinService_JoinRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.PlayerJoinService.JoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerJoinService_JoinRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerJoinService_JoinRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.PlayerJoinService.JoinRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.PlayerJoinService.JoinRequest)
    MergeFrom(*source);
  }
}

void PlayerJoinService_JoinRequest::MergeFrom(const PlayerJoinService_JoinRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.PlayerJoinService.JoinRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_uid(from.uid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_nick(from.nick());
    }
    if (cached_has_bits & 0x00000004u) {
      gateid_ = from.gateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      gameserverid_ = from.gameserverid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerJoinService_JoinRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.PlayerJoinService.JoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerJoinService_JoinRequest::CopyFrom(const PlayerJoinService_JoinRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.PlayerJoinService.JoinRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerJoinService_JoinRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayerJoinService_JoinRequest::Swap(PlayerJoinService_JoinRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerJoinService_JoinRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerJoinService_JoinRequest::UnsafeArenaSwap(PlayerJoinService_JoinRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerJoinService_JoinRequest::InternalSwap(PlayerJoinService_JoinRequest* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gateid_, other->gateid_);
  swap(gameserverid_, other->gameserverid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerJoinService_JoinRequest::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerJoinService_JoinResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerJoinService_JoinResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerJoinService_JoinResponse::PlayerJoinService_JoinResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_PlayerJoinService_JoinResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.PlayerJoinService.JoinResponse)
}
PlayerJoinService_JoinResponse::PlayerJoinService_JoinResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerJoinService_JoinResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.PlayerJoinService.JoinResponse)
}
PlayerJoinService_JoinResponse::PlayerJoinService_JoinResponse(const PlayerJoinService_JoinResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:gate.PlayerJoinService.JoinResponse)
}

void PlayerJoinService_JoinResponse::SharedCtor() {
  result_ = 0;
}

PlayerJoinService_JoinResponse::~PlayerJoinService_JoinResponse() {
  // @@protoc_insertion_point(destructor:gate.PlayerJoinService.JoinResponse)
  SharedDtor();
}

void PlayerJoinService_JoinResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PlayerJoinService_JoinResponse::ArenaDtor(void* object) {
  PlayerJoinService_JoinResponse* _this = reinterpret_cast< PlayerJoinService_JoinResponse* >(object);
  (void)_this;
}
void PlayerJoinService_JoinResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerJoinService_JoinResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerJoinService_JoinResponse::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerJoinService_JoinResponse& PlayerJoinService_JoinResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerJoinService_JoinResponse.base);
  return *internal_default_instance();
}


void PlayerJoinService_JoinResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.PlayerJoinService.JoinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerJoinService_JoinResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.PlayerJoinService.JoinResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .gate.PlayerJoinService.RESULT result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gate::PlayerJoinService_RESULT_IsValid(value)) {
            set_result(static_cast< ::gate::PlayerJoinService_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.PlayerJoinService.JoinResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.PlayerJoinService.JoinResponse)
  return false;
#undef DO_
}

void PlayerJoinService_JoinResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.PlayerJoinService.JoinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gate.PlayerJoinService.RESULT result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.PlayerJoinService.JoinResponse)
}

::google::protobuf::uint8* PlayerJoinService_JoinResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.PlayerJoinService.JoinResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gate.PlayerJoinService.RESULT result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.PlayerJoinService.JoinResponse)
  return target;
}

size_t PlayerJoinService_JoinResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.PlayerJoinService.JoinResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .gate.PlayerJoinService.RESULT result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerJoinService_JoinResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.PlayerJoinService.JoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerJoinService_JoinResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerJoinService_JoinResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.PlayerJoinService.JoinResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.PlayerJoinService.JoinResponse)
    MergeFrom(*source);
  }
}

void PlayerJoinService_JoinResponse::MergeFrom(const PlayerJoinService_JoinResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.PlayerJoinService.JoinResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void PlayerJoinService_JoinResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.PlayerJoinService.JoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerJoinService_JoinResponse::CopyFrom(const PlayerJoinService_JoinResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.PlayerJoinService.JoinResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerJoinService_JoinResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayerJoinService_JoinResponse::Swap(PlayerJoinService_JoinResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerJoinService_JoinResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerJoinService_JoinResponse::UnsafeArenaSwap(PlayerJoinService_JoinResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerJoinService_JoinResponse::InternalSwap(PlayerJoinService_JoinResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerJoinService_JoinResponse::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerJoinService::InitAsDefaultInstance() {
  ::gate::_PlayerJoinService_default_instance_._instance.get_mutable()->req_ = const_cast< ::gate::PlayerJoinService_JoinRequest*>(
      ::gate::PlayerJoinService_JoinRequest::internal_default_instance());
  ::gate::_PlayerJoinService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::gate::PlayerJoinService_JoinResponse*>(
      ::gate::PlayerJoinService_JoinResponse::internal_default_instance());
}
void PlayerJoinService::unsafe_arena_set_allocated_req(
    ::gate::PlayerJoinService_JoinRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gate.PlayerJoinService.req)
}
void PlayerJoinService::unsafe_arena_set_allocated_resp(
    ::gate::PlayerJoinService_JoinResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gate.PlayerJoinService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerJoinService::kReqFieldNumber;
const int PlayerJoinService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerJoinService::PlayerJoinService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_PlayerJoinService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.PlayerJoinService)
}
PlayerJoinService::PlayerJoinService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerJoinService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.PlayerJoinService)
}
PlayerJoinService::PlayerJoinService(const PlayerJoinService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::gate::PlayerJoinService_JoinRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::gate::PlayerJoinService_JoinResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gate.PlayerJoinService)
}

void PlayerJoinService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

PlayerJoinService::~PlayerJoinService() {
  // @@protoc_insertion_point(destructor:gate.PlayerJoinService)
  SharedDtor();
}

void PlayerJoinService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void PlayerJoinService::ArenaDtor(void* object) {
  PlayerJoinService* _this = reinterpret_cast< PlayerJoinService* >(object);
  (void)_this;
}
void PlayerJoinService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerJoinService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerJoinService::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerJoinService& PlayerJoinService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerJoinService.base);
  return *internal_default_instance();
}


void PlayerJoinService::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.PlayerJoinService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerJoinService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.PlayerJoinService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gate.PlayerJoinService.JoinRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .gate.PlayerJoinService.JoinResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.PlayerJoinService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.PlayerJoinService)
  return false;
#undef DO_
}

void PlayerJoinService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.PlayerJoinService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .gate.PlayerJoinService.JoinRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .gate.PlayerJoinService.JoinResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.PlayerJoinService)
}

::google::protobuf::uint8* PlayerJoinService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.PlayerJoinService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .gate.PlayerJoinService.JoinRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .gate.PlayerJoinService.JoinResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.PlayerJoinService)
  return target;
}

size_t PlayerJoinService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.PlayerJoinService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .gate.PlayerJoinService.JoinRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .gate.PlayerJoinService.JoinResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerJoinService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.PlayerJoinService)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerJoinService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerJoinService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.PlayerJoinService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.PlayerJoinService)
    MergeFrom(*source);
  }
}

void PlayerJoinService::MergeFrom(const PlayerJoinService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.PlayerJoinService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::gate::PlayerJoinService_JoinRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::gate::PlayerJoinService_JoinResponse::MergeFrom(from.resp());
    }
  }
}

void PlayerJoinService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.PlayerJoinService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerJoinService::CopyFrom(const PlayerJoinService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.PlayerJoinService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerJoinService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void PlayerJoinService::Swap(PlayerJoinService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerJoinService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerJoinService::UnsafeArenaSwap(PlayerJoinService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerJoinService::InternalSwap(PlayerJoinService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerJoinService::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerQuitService_QuitRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerQuitService_QuitRequest::kUidFieldNumber;
const int PlayerQuitService_QuitRequest::kNickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerQuitService_QuitRequest::PlayerQuitService_QuitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_PlayerQuitService_QuitRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.PlayerQuitService.QuitRequest)
}
PlayerQuitService_QuitRequest::PlayerQuitService_QuitRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerQuitService_QuitRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.PlayerQuitService.QuitRequest)
}
PlayerQuitService_QuitRequest::PlayerQuitService_QuitRequest(const PlayerQuitService_QuitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid(),
      GetArenaNoVirtual());
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:gate.PlayerQuitService.QuitRequest)
}

void PlayerQuitService_QuitRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerQuitService_QuitRequest::~PlayerQuitService_QuitRequest() {
  // @@protoc_insertion_point(destructor:gate.PlayerQuitService.QuitRequest)
  SharedDtor();
}

void PlayerQuitService_QuitRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerQuitService_QuitRequest::ArenaDtor(void* object) {
  PlayerQuitService_QuitRequest* _this = reinterpret_cast< PlayerQuitService_QuitRequest* >(object);
  (void)_this;
}
void PlayerQuitService_QuitRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerQuitService_QuitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerQuitService_QuitRequest::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerQuitService_QuitRequest& PlayerQuitService_QuitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerQuitService_QuitRequest.base);
  return *internal_default_instance();
}


void PlayerQuitService_QuitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.PlayerQuitService.QuitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      nick_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerQuitService_QuitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.PlayerQuitService.QuitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.PlayerQuitService.QuitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.PlayerQuitService.QuitRequest)
  return false;
#undef DO_
}

void PlayerQuitService_QuitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.PlayerQuitService.QuitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uid(), output);
  }

  // optional bytes nick = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nick(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.PlayerQuitService.QuitRequest)
}

::google::protobuf::uint8* PlayerQuitService_QuitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.PlayerQuitService.QuitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes uid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uid(), target);
  }

  // optional bytes nick = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nick(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.PlayerQuitService.QuitRequest)
  return target;
}

size_t PlayerQuitService_QuitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.PlayerQuitService.QuitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());
  }
  // optional bytes nick = 2;
  if (has_nick()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nick());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerQuitService_QuitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.PlayerQuitService.QuitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerQuitService_QuitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerQuitService_QuitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.PlayerQuitService.QuitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.PlayerQuitService.QuitRequest)
    MergeFrom(*source);
  }
}

void PlayerQuitService_QuitRequest::MergeFrom(const PlayerQuitService_QuitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.PlayerQuitService.QuitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_uid(from.uid());
    }
    if (cached_has_bits & 0x00000002u) {
      set_nick(from.nick());
    }
  }
}

void PlayerQuitService_QuitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.PlayerQuitService.QuitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerQuitService_QuitRequest::CopyFrom(const PlayerQuitService_QuitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.PlayerQuitService.QuitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerQuitService_QuitRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayerQuitService_QuitRequest::Swap(PlayerQuitService_QuitRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerQuitService_QuitRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerQuitService_QuitRequest::UnsafeArenaSwap(PlayerQuitService_QuitRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerQuitService_QuitRequest::InternalSwap(PlayerQuitService_QuitRequest* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_.Swap(&other->nick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerQuitService_QuitRequest::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerQuitService_QuitResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerQuitService_QuitResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerQuitService_QuitResponse::PlayerQuitService_QuitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_PlayerQuitService_QuitResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.PlayerQuitService.QuitResponse)
}
PlayerQuitService_QuitResponse::PlayerQuitService_QuitResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerQuitService_QuitResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.PlayerQuitService.QuitResponse)
}
PlayerQuitService_QuitResponse::PlayerQuitService_QuitResponse(const PlayerQuitService_QuitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:gate.PlayerQuitService.QuitResponse)
}

void PlayerQuitService_QuitResponse::SharedCtor() {
  result_ = 0;
}

PlayerQuitService_QuitResponse::~PlayerQuitService_QuitResponse() {
  // @@protoc_insertion_point(destructor:gate.PlayerQuitService.QuitResponse)
  SharedDtor();
}

void PlayerQuitService_QuitResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void PlayerQuitService_QuitResponse::ArenaDtor(void* object) {
  PlayerQuitService_QuitResponse* _this = reinterpret_cast< PlayerQuitService_QuitResponse* >(object);
  (void)_this;
}
void PlayerQuitService_QuitResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerQuitService_QuitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerQuitService_QuitResponse::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerQuitService_QuitResponse& PlayerQuitService_QuitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerQuitService_QuitResponse.base);
  return *internal_default_instance();
}


void PlayerQuitService_QuitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.PlayerQuitService.QuitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerQuitService_QuitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.PlayerQuitService.QuitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .gate.PlayerQuitService.RESULT result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gate::PlayerQuitService_RESULT_IsValid(value)) {
            set_result(static_cast< ::gate::PlayerQuitService_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.PlayerQuitService.QuitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.PlayerQuitService.QuitResponse)
  return false;
#undef DO_
}

void PlayerQuitService_QuitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.PlayerQuitService.QuitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gate.PlayerQuitService.RESULT result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.PlayerQuitService.QuitResponse)
}

::google::protobuf::uint8* PlayerQuitService_QuitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.PlayerQuitService.QuitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gate.PlayerQuitService.RESULT result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.PlayerQuitService.QuitResponse)
  return target;
}

size_t PlayerQuitService_QuitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.PlayerQuitService.QuitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .gate.PlayerQuitService.RESULT result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerQuitService_QuitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.PlayerQuitService.QuitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerQuitService_QuitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerQuitService_QuitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.PlayerQuitService.QuitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.PlayerQuitService.QuitResponse)
    MergeFrom(*source);
  }
}

void PlayerQuitService_QuitResponse::MergeFrom(const PlayerQuitService_QuitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.PlayerQuitService.QuitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void PlayerQuitService_QuitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.PlayerQuitService.QuitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerQuitService_QuitResponse::CopyFrom(const PlayerQuitService_QuitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.PlayerQuitService.QuitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerQuitService_QuitResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayerQuitService_QuitResponse::Swap(PlayerQuitService_QuitResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerQuitService_QuitResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerQuitService_QuitResponse::UnsafeArenaSwap(PlayerQuitService_QuitResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerQuitService_QuitResponse::InternalSwap(PlayerQuitService_QuitResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerQuitService_QuitResponse::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerQuitService::InitAsDefaultInstance() {
  ::gate::_PlayerQuitService_default_instance_._instance.get_mutable()->req_ = const_cast< ::gate::PlayerQuitService_QuitRequest*>(
      ::gate::PlayerQuitService_QuitRequest::internal_default_instance());
  ::gate::_PlayerQuitService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::gate::PlayerQuitService_QuitResponse*>(
      ::gate::PlayerQuitService_QuitResponse::internal_default_instance());
}
void PlayerQuitService::unsafe_arena_set_allocated_req(
    ::gate::PlayerQuitService_QuitRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gate.PlayerQuitService.req)
}
void PlayerQuitService::unsafe_arena_set_allocated_resp(
    ::gate::PlayerQuitService_QuitResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gate.PlayerQuitService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerQuitService::kReqFieldNumber;
const int PlayerQuitService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerQuitService::PlayerQuitService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_PlayerQuitService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.PlayerQuitService)
}
PlayerQuitService::PlayerQuitService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerQuitService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.PlayerQuitService)
}
PlayerQuitService::PlayerQuitService(const PlayerQuitService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::gate::PlayerQuitService_QuitRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::gate::PlayerQuitService_QuitResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gate.PlayerQuitService)
}

void PlayerQuitService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

PlayerQuitService::~PlayerQuitService() {
  // @@protoc_insertion_point(destructor:gate.PlayerQuitService)
  SharedDtor();
}

void PlayerQuitService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void PlayerQuitService::ArenaDtor(void* object) {
  PlayerQuitService* _this = reinterpret_cast< PlayerQuitService* >(object);
  (void)_this;
}
void PlayerQuitService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerQuitService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerQuitService::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerQuitService& PlayerQuitService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_PlayerQuitService.base);
  return *internal_default_instance();
}


void PlayerQuitService::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.PlayerQuitService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerQuitService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.PlayerQuitService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gate.PlayerQuitService.QuitRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .gate.PlayerQuitService.QuitResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.PlayerQuitService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.PlayerQuitService)
  return false;
#undef DO_
}

void PlayerQuitService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.PlayerQuitService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .gate.PlayerQuitService.QuitRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .gate.PlayerQuitService.QuitResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.PlayerQuitService)
}

::google::protobuf::uint8* PlayerQuitService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.PlayerQuitService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .gate.PlayerQuitService.QuitRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .gate.PlayerQuitService.QuitResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.PlayerQuitService)
  return target;
}

size_t PlayerQuitService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.PlayerQuitService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .gate.PlayerQuitService.QuitRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .gate.PlayerQuitService.QuitResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerQuitService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.PlayerQuitService)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerQuitService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerQuitService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.PlayerQuitService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.PlayerQuitService)
    MergeFrom(*source);
  }
}

void PlayerQuitService::MergeFrom(const PlayerQuitService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.PlayerQuitService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::gate::PlayerQuitService_QuitRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::gate::PlayerQuitService_QuitResponse::MergeFrom(from.resp());
    }
  }
}

void PlayerQuitService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.PlayerQuitService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerQuitService::CopyFrom(const PlayerQuitService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.PlayerQuitService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerQuitService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void PlayerQuitService::Swap(PlayerQuitService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerQuitService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PlayerQuitService::UnsafeArenaSwap(PlayerQuitService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerQuitService::InternalSwap(PlayerQuitService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerQuitService::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterNativeClientService_RegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterNativeClientService_RegisterRequest::kIdFieldNumber;
const int RegisterNativeClientService_RegisterRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterNativeClientService_RegisterRequest::RegisterNativeClientService_RegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService_RegisterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.RegisterNativeClientService.RegisterRequest)
}
RegisterNativeClientService_RegisterRequest::RegisterNativeClientService_RegisterRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService_RegisterRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.RegisterNativeClientService.RegisterRequest)
}
RegisterNativeClientService_RegisterRequest::RegisterNativeClientService_RegisterRequest(const RegisterNativeClientService_RegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:gate.RegisterNativeClientService.RegisterRequest)
}

void RegisterNativeClientService_RegisterRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

RegisterNativeClientService_RegisterRequest::~RegisterNativeClientService_RegisterRequest() {
  // @@protoc_insertion_point(destructor:gate.RegisterNativeClientService.RegisterRequest)
  SharedDtor();
}

void RegisterNativeClientService_RegisterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterNativeClientService_RegisterRequest::ArenaDtor(void* object) {
  RegisterNativeClientService_RegisterRequest* _this = reinterpret_cast< RegisterNativeClientService_RegisterRequest* >(object);
  (void)_this;
}
void RegisterNativeClientService_RegisterRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterNativeClientService_RegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterNativeClientService_RegisterRequest::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterNativeClientService_RegisterRequest& RegisterNativeClientService_RegisterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService_RegisterRequest.base);
  return *internal_default_instance();
}


void RegisterNativeClientService_RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.RegisterNativeClientService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmpty();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterNativeClientService_RegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.RegisterNativeClientService.RegisterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.RegisterNativeClientService.RegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.RegisterNativeClientService.RegisterRequest)
  return false;
#undef DO_
}

void RegisterNativeClientService_RegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.RegisterNativeClientService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.RegisterNativeClientService.RegisterRequest)
}

::google::protobuf::uint8* RegisterNativeClientService_RegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.RegisterNativeClientService.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bytes name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.RegisterNativeClientService.RegisterRequest)
  return target;
}

size_t RegisterNativeClientService_RegisterRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:gate.RegisterNativeClientService.RegisterRequest)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t RegisterNativeClientService_RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.RegisterNativeClientService.RegisterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterNativeClientService_RegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.RegisterNativeClientService.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterNativeClientService_RegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterNativeClientService_RegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.RegisterNativeClientService.RegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.RegisterNativeClientService.RegisterRequest)
    MergeFrom(*source);
  }
}

void RegisterNativeClientService_RegisterRequest::MergeFrom(const RegisterNativeClientService_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.RegisterNativeClientService.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_name(from.name());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RegisterNativeClientService_RegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.RegisterNativeClientService.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterNativeClientService_RegisterRequest::CopyFrom(const RegisterNativeClientService_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.RegisterNativeClientService.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterNativeClientService_RegisterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RegisterNativeClientService_RegisterRequest::Swap(RegisterNativeClientService_RegisterRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterNativeClientService_RegisterRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterNativeClientService_RegisterRequest::UnsafeArenaSwap(RegisterNativeClientService_RegisterRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterNativeClientService_RegisterRequest::InternalSwap(RegisterNativeClientService_RegisterRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterNativeClientService_RegisterRequest::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterNativeClientService_RegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterNativeClientService_RegisterResponse::RegisterNativeClientService_RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService_RegisterResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.RegisterNativeClientService.RegisterResponse)
}
RegisterNativeClientService_RegisterResponse::RegisterNativeClientService_RegisterResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService_RegisterResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.RegisterNativeClientService.RegisterResponse)
}
RegisterNativeClientService_RegisterResponse::RegisterNativeClientService_RegisterResponse(const RegisterNativeClientService_RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gate.RegisterNativeClientService.RegisterResponse)
}

void RegisterNativeClientService_RegisterResponse::SharedCtor() {
}

RegisterNativeClientService_RegisterResponse::~RegisterNativeClientService_RegisterResponse() {
  // @@protoc_insertion_point(destructor:gate.RegisterNativeClientService.RegisterResponse)
  SharedDtor();
}

void RegisterNativeClientService_RegisterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void RegisterNativeClientService_RegisterResponse::ArenaDtor(void* object) {
  RegisterNativeClientService_RegisterResponse* _this = reinterpret_cast< RegisterNativeClientService_RegisterResponse* >(object);
  (void)_this;
}
void RegisterNativeClientService_RegisterResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterNativeClientService_RegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterNativeClientService_RegisterResponse::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterNativeClientService_RegisterResponse& RegisterNativeClientService_RegisterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService_RegisterResponse.base);
  return *internal_default_instance();
}


void RegisterNativeClientService_RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.RegisterNativeClientService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterNativeClientService_RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.RegisterNativeClientService.RegisterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gate.RegisterNativeClientService.RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.RegisterNativeClientService.RegisterResponse)
  return false;
#undef DO_
}

void RegisterNativeClientService_RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.RegisterNativeClientService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.RegisterNativeClientService.RegisterResponse)
}

::google::protobuf::uint8* RegisterNativeClientService_RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.RegisterNativeClientService.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.RegisterNativeClientService.RegisterResponse)
  return target;
}

size_t RegisterNativeClientService_RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.RegisterNativeClientService.RegisterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterNativeClientService_RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.RegisterNativeClientService.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterNativeClientService_RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterNativeClientService_RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.RegisterNativeClientService.RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.RegisterNativeClientService.RegisterResponse)
    MergeFrom(*source);
  }
}

void RegisterNativeClientService_RegisterResponse::MergeFrom(const RegisterNativeClientService_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.RegisterNativeClientService.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RegisterNativeClientService_RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.RegisterNativeClientService.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterNativeClientService_RegisterResponse::CopyFrom(const RegisterNativeClientService_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.RegisterNativeClientService.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterNativeClientService_RegisterResponse::IsInitialized() const {
  return true;
}

void RegisterNativeClientService_RegisterResponse::Swap(RegisterNativeClientService_RegisterResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterNativeClientService_RegisterResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterNativeClientService_RegisterResponse::UnsafeArenaSwap(RegisterNativeClientService_RegisterResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterNativeClientService_RegisterResponse::InternalSwap(RegisterNativeClientService_RegisterResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterNativeClientService_RegisterResponse::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterNativeClientService::InitAsDefaultInstance() {
  ::gate::_RegisterNativeClientService_default_instance_._instance.get_mutable()->req_ = const_cast< ::gate::RegisterNativeClientService_RegisterRequest*>(
      ::gate::RegisterNativeClientService_RegisterRequest::internal_default_instance());
  ::gate::_RegisterNativeClientService_default_instance_._instance.get_mutable()->resp_ = const_cast< ::gate::RegisterNativeClientService_RegisterResponse*>(
      ::gate::RegisterNativeClientService_RegisterResponse::internal_default_instance());
}
void RegisterNativeClientService::unsafe_arena_set_allocated_req(
    ::gate::RegisterNativeClientService_RegisterRequest* req) {
  if (GetArenaNoVirtual() == NULL) {
    delete req_;
  }
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gate.RegisterNativeClientService.req)
}
void RegisterNativeClientService::unsafe_arena_set_allocated_resp(
    ::gate::RegisterNativeClientService_RegisterResponse* resp) {
  if (GetArenaNoVirtual() == NULL) {
    delete resp_;
  }
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gate.RegisterNativeClientService.resp)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterNativeClientService::kReqFieldNumber;
const int RegisterNativeClientService::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterNativeClientService::RegisterNativeClientService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.RegisterNativeClientService)
}
RegisterNativeClientService::RegisterNativeClientService(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.RegisterNativeClientService)
}
RegisterNativeClientService::RegisterNativeClientService(const RegisterNativeClientService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::gate::RegisterNativeClientService_RegisterRequest(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_resp()) {
    resp_ = new ::gate::RegisterNativeClientService_RegisterResponse(*from.resp_);
  } else {
    resp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gate.RegisterNativeClientService)
}

void RegisterNativeClientService::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resp_) -
      reinterpret_cast<char*>(&req_)) + sizeof(resp_));
}

RegisterNativeClientService::~RegisterNativeClientService() {
  // @@protoc_insertion_point(destructor:gate.RegisterNativeClientService)
  SharedDtor();
}

void RegisterNativeClientService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete resp_;
}

void RegisterNativeClientService::ArenaDtor(void* object) {
  RegisterNativeClientService* _this = reinterpret_cast< RegisterNativeClientService* >(object);
  (void)_this;
}
void RegisterNativeClientService::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterNativeClientService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterNativeClientService::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterNativeClientService& RegisterNativeClientService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_RegisterNativeClientService.base);
  return *internal_default_instance();
}


void RegisterNativeClientService::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.RegisterNativeClientService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resp_ != NULL);
      resp_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterNativeClientService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.RegisterNativeClientService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gate.RegisterNativeClientService.RegisterRequest req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .gate.RegisterNativeClientService.RegisterResponse resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.RegisterNativeClientService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.RegisterNativeClientService)
  return false;
#undef DO_
}

void RegisterNativeClientService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.RegisterNativeClientService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .gate.RegisterNativeClientService.RegisterRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_req(), output);
  }

  // optional .gate.RegisterNativeClientService.RegisterResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_resp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.RegisterNativeClientService)
}

::google::protobuf::uint8* RegisterNativeClientService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.RegisterNativeClientService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .gate.RegisterNativeClientService.RegisterRequest req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_req(), deterministic, target);
  }

  // optional .gate.RegisterNativeClientService.RegisterResponse resp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_resp(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.RegisterNativeClientService)
  return target;
}

size_t RegisterNativeClientService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.RegisterNativeClientService)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .gate.RegisterNativeClientService.RegisterRequest req = 1;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *req_);
    }

    // optional .gate.RegisterNativeClientService.RegisterResponse resp = 2;
    if (has_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *resp_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterNativeClientService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.RegisterNativeClientService)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterNativeClientService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterNativeClientService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.RegisterNativeClientService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.RegisterNativeClientService)
    MergeFrom(*source);
  }
}

void RegisterNativeClientService::MergeFrom(const RegisterNativeClientService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.RegisterNativeClientService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::gate::RegisterNativeClientService_RegisterRequest::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resp()->::gate::RegisterNativeClientService_RegisterResponse::MergeFrom(from.resp());
    }
  }
}

void RegisterNativeClientService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.RegisterNativeClientService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterNativeClientService::CopyFrom(const RegisterNativeClientService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.RegisterNativeClientService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterNativeClientService::IsInitialized() const {
  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void RegisterNativeClientService::Swap(RegisterNativeClientService* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterNativeClientService* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterNativeClientService::UnsafeArenaSwap(RegisterNativeClientService* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterNativeClientService::InternalSwap(RegisterNativeClientService* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(resp_, other->resp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterNativeClientService::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeepAliveNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeepAliveNotify::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeepAliveNotify::KeepAliveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GateInner_2eproto::scc_info_KeepAliveNotify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gate.KeepAliveNotify)
}
KeepAliveNotify::KeepAliveNotify(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_KeepAliveNotify.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gate.KeepAliveNotify)
}
KeepAliveNotify::KeepAliveNotify(const KeepAliveNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:gate.KeepAliveNotify)
}

void KeepAliveNotify::SharedCtor() {
  serverid_ = 0;
}

KeepAliveNotify::~KeepAliveNotify() {
  // @@protoc_insertion_point(destructor:gate.KeepAliveNotify)
  SharedDtor();
}

void KeepAliveNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void KeepAliveNotify::ArenaDtor(void* object) {
  KeepAliveNotify* _this = reinterpret_cast< KeepAliveNotify* >(object);
  (void)_this;
}
void KeepAliveNotify::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void KeepAliveNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeepAliveNotify::descriptor() {
  ::protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeepAliveNotify& KeepAliveNotify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GateInner_2eproto::scc_info_KeepAliveNotify.base);
  return *internal_default_instance();
}


void KeepAliveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:gate.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serverid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeepAliveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gate.KeepAliveNotify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gate.KeepAliveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gate.KeepAliveNotify)
  return false;
#undef DO_
}

void KeepAliveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gate.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 serverid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gate.KeepAliveNotify)
}

::google::protobuf::uint8* KeepAliveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gate.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 serverid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gate.KeepAliveNotify)
  return target;
}

size_t KeepAliveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gate.KeepAliveNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 serverid = 1;
  if (has_serverid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeepAliveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gate.KeepAliveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAliveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeepAliveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gate.KeepAliveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gate.KeepAliveNotify)
    MergeFrom(*source);
  }
}

void KeepAliveNotify::MergeFrom(const KeepAliveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gate.KeepAliveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_serverid()) {
    set_serverid(from.serverid());
  }
}

void KeepAliveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gate.KeepAliveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAliveNotify::CopyFrom(const KeepAliveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gate.KeepAliveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAliveNotify::IsInitialized() const {
  return true;
}

void KeepAliveNotify::Swap(KeepAliveNotify* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    KeepAliveNotify* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void KeepAliveNotify::UnsafeArenaSwap(KeepAliveNotify* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void KeepAliveNotify::InternalSwap(KeepAliveNotify* other) {
  using std::swap;
  swap(serverid_, other->serverid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeepAliveNotify::GetMetadata() const {
  protobuf_GateInner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GateInner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gate
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::GateShakeHandNotify* Arena::CreateMaybeMessage< ::gate::GateShakeHandNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::GateShakeHandNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::PlayerJoinService_JoinRequest* Arena::CreateMaybeMessage< ::gate::PlayerJoinService_JoinRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::PlayerJoinService_JoinRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::PlayerJoinService_JoinResponse* Arena::CreateMaybeMessage< ::gate::PlayerJoinService_JoinResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::PlayerJoinService_JoinResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::PlayerJoinService* Arena::CreateMaybeMessage< ::gate::PlayerJoinService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::PlayerJoinService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::PlayerQuitService_QuitRequest* Arena::CreateMaybeMessage< ::gate::PlayerQuitService_QuitRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::PlayerQuitService_QuitRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::PlayerQuitService_QuitResponse* Arena::CreateMaybeMessage< ::gate::PlayerQuitService_QuitResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::PlayerQuitService_QuitResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::PlayerQuitService* Arena::CreateMaybeMessage< ::gate::PlayerQuitService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::PlayerQuitService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::RegisterNativeClientService_RegisterRequest* Arena::CreateMaybeMessage< ::gate::RegisterNativeClientService_RegisterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::RegisterNativeClientService_RegisterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::RegisterNativeClientService_RegisterResponse* Arena::CreateMaybeMessage< ::gate::RegisterNativeClientService_RegisterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::RegisterNativeClientService_RegisterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::RegisterNativeClientService* Arena::CreateMaybeMessage< ::gate::RegisterNativeClientService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::RegisterNativeClientService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gate::KeepAliveNotify* Arena::CreateMaybeMessage< ::gate::KeepAliveNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gate::KeepAliveNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
