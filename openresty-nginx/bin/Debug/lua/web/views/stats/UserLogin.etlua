@model IEnumerable<MyUmb.Oss.Web.UI.Models.OssStatsLogin>
@using MyUmb.Utility;

<!-- render body -->
<div class="row">
    <!-- menu name -->
    <div class="col-xs-10">
        <h1> 登录统计 </h1>
    </div>
    <!-- data table -->
    <div class="col-xs-10">
        <div class="box box-primary">
            <table class="table table-bordered table-hover dataTable" role="grid">
                <thead>
                    <tr role="row">
                        <th>
                            @Html.DisplayNameFor(model => model.day)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.accumulate_user)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.new_user)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @{
                                    var day = item.day.ToDate();
                                }
                                @day
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.accumulate_user)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.new_user)
                            </td>
                            <!--
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                            </td>
                            -->
                        </tr>}
                </tbody>
            </table>
        </div>
    </div>
    <!-- line chart 2 -->
    <div class="col-xs-10">
        <!-- LINE CHART -->
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">每日新增用户数</h3>
                <!-- tools
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
                -->
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="lineChart2" style="height:250px"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
    <!-- line chart -->
    <div class="col-xs-10">
        <!-- LINE CHART -->
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">累积用户数+新增用户数</h3>
                <!-- tools
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
                -->
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="lineChart" style="height:250px"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>

</div>
<!-- /.row -->

<style type="text/css">
    .line-legend li span{
        width: 1em;
        height: 1em;
        display: inline-block;
        margin-right: 5px;
    }
    .line-legend {
        list-style: none;
    }
</style>

@section Scripts {
    <!-- page script -->
    <script>
        $(function () {
            /* ChartJS
             * -------
             * Here we will create a few charts using ChartJS
             */

            //--------------
            //- AREA CHART -
            //--------------

            var areaChartData = {
                labels: [
                     @foreach (var item in Model)
                    {
                         var day = item.day.ToDate();
                         <text>'@day',</text>
                    }
                ],
                datasets: [
                    {
                        label: 'Electronics',
                        fillColor: 'rgba(210, 214, 222, 1)',
                        strokeColor: 'rgba(210, 214, 222, 1)',
                        pointColor: 'rgba(210, 214, 222, 1)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: [
                             @foreach (var item in Model)
                            {
                                 var num = item.accumulate_user;
                                 <text>@num,</text>
                            }
                        ]
                    },
                    {
                        label: 'Digital Goods',
                        fillColor: 'rgba(60,141,188,0.9)',
                        strokeColor: 'rgba(60,141,188,0.8)',
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data: [
                             @foreach (var item in Model)
                            {
                                 var num = item.new_user;
                                 <text>@num,</text>
                            }
                        ]
                    }
                ]
            }

            var areaChartData2 = {
                labels: [
                     @foreach (var item in Model)
                    {
                         var day = item.day.ToDate();
                         <text>'@day',</text>
                    }
                ],
                datasets: [
                     {
                        label: 'Digital Goods',
                        fillColor: 'rgba(60,141,188,0.9)',
                        strokeColor: 'rgba(60,141,188,0.8)',
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data: [
                             @foreach (var item in Model)
                            {
                                 var num = item.new_user;
                                 <text>@num,</text>
                            }
                        ]
                    }
                ]
            }

            var areaChartOptions = {
                //Boolean - If we should show the scale at all
                showScale: true,
                //Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines: false,
                //String - Colour of the grid lines
                scaleGridLineColor: 'rgba(0,0,0,.05)',
                //Number - Width of the grid lines
                scaleGridLineWidth: 1,
                //Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,
                //Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines: true,
                //Boolean - Whether the line is curved between points
                bezierCurve: true,
                //Number - Tension of the bezier curve between points
                bezierCurveTension: 0.3,
                //Boolean - Whether to show a dot for each point
                pointDot: false,
                //Number - Radius of each point dot in pixels
                pointDotRadius: 4,
                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth: 1,
                //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius: 20,
                //Boolean - Whether to show a stroke for datasets
                datasetStroke: true,
                //Number - Pixel width of dataset stroke
                datasetStrokeWidth: 2,
                //Boolean - Whether to fill the dataset with a color
                datasetFill: true,
                //String - A legend template
                legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
                //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: true,
                //Boolean - whether to make the chart responsive to window resizing
                responsive: true
            }

            //-------------
            //- LINE CHART -
            //--------------
            {
                var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
                var lineChart = new Chart(lineChartCanvas)
                var lineChartOptions = areaChartOptions
                lineChartOptions.datasetFill = false
                lineChart.Line(areaChartData, lineChartOptions)
            }

            //-------------
            //- LINE CHART -
            //--------------
            {
                var lineChartCanvas2 = $('#lineChart2').get(0).getContext('2d')
                var lineChart2 = new Chart(lineChartCanvas2)
                var lineChartOptions2 = areaChartOptions
                lineChartOptions2.datasetFill = false
                lineChart2.Line(areaChartData2, lineChartOptions)
            }

        })
    </script>
}